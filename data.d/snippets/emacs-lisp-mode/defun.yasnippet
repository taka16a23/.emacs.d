# -*- mode: snippet -*-
# name: defun
# key: (defun
# condition: (not (at-string|comment-p))
#contributor : Yuuki Arisawa
# --
(defun ${1:`(save-excursion
  (let ((re "(def\\\\(un\\\\|var\\\\)[ \t\n]*\\\\([a-z0-9]*[:-]\\\\)"))
    (cond
     ((or
       (re-search-backward re nil t)
       (re-search-forward  re nil t))
      (match-string 2))
     (t "FUNC"))))`$2} (${3:ARGS}) `(insert ";[" (format-time-string "%Y/%m/%d") "]")`
  "${3:$(mapconcat 'upcase (split-string (replace-regexp-in-string "&[a-z]+" "" yas/text)) " \n")}"
  ${4:(interactive${6: "${7:p$(yas/choose-value '("*" "^" "@""a""b""B""c""C""d""D""e""f""F""G""i""k""K""m""M""n""N""p""P""r""s""S""U""v""x""X""z""Z"))}"})}$0