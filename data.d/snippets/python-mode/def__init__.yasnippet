# -*- mode: snippet -*-
# name: definit
# key: definit
# condition: (not (py:at-string|comment-p))
# expand-env: ((yas/indent-line 'fixed) (yas/wrap-around-region 'nil))
# --
def __init__(self, ${3:${4:${5:*args}${6:, ${7:**kwargs}}}}):
    \"\"\"
    ${3:$
    (let* ((indent
            (concat \"\n\" (make-string (current-column) 32)))
           (args 
            (mapconcat
             \'(lambda (x)
                (if (not (string= (nth 0 x) \"\"))
                    (concat \"- \" (char-to-string 96) (nth 0 x)
                            (char-to-string 96) \":\")))
             (mapcar
              \'(lambda (x)
                 (mapcar
                  (lambda (x)
                    (replace-regexp-in-string \"*\" \"\"
                     (replace-regexp-in-string \"^[[:blank:]]*\" \"\" x))) x))
              (mapcar \'(lambda (x) (split-string x \"=\"))
                      (split-string yas-text \",\")))
             indent)))
      (if (string= args \"\")
          (make-string 3 34)
        (mapconcat
         \'identity
         (list \"\" \"@Arguments:\" args (make-string 3 34))
         indent)))
    }
    ${3:$
    (mapconcat
     \'(lambda (x)
        (if (not (string= (nth 0 x) \"\"))
            (concat \"self._\" (nth 0 x) \" = \" (nth 0 x))))
     (mapcar
      \'(lambda (x)
         (mapcar
          \'(lambda (x)
             (replace-regexp-in-string \"*\" \"\"
              (replace-regexp-in-string \"^[[:blank:]]*\" \"\" x)))
          x))
      (mapcar \'(lambda (x) (split-string x \"=\"))
              (split-string yas-text \",\")))
     (concat \"\n\" (make-string (current-column) 32)))
    }
    $0
