# -*- mode: snippet -*-
# name: defcustom
# key: (defcustom
# condition: (not (at-string|comment-p))
# --
(defcustom ${1:`(save-excursion
  (let ((re "(defcustom[ \t\n]*\\\\([a-z0-9]*[:-]\\\\)"))
    (cond
     ((or
       (re-search-backward re nil t)
       (re-search-forward  re nil t))
      (match-string 1))
     (t "name"))))`${3:varname}} ${4:standard}
  "${5:Document}"
  :type '${6:TYPE$$(yas/choose-value '("string"
                                       "integer"
                                       "boolean"
                                       "float"
                                       "vector"
                                       "hook"
                                       "sexp"
                                       "command"
                                       "number"
                                       "symbol"
                                       "face"))}
  :group '${7:`(save-excursion
   (let ((re "(defgroup[ \t\n]+\\\\([^\s\n\t]+\\\\)"))
     (cond ((or (re-search-backward re nil t)
            (re-search-forward  re nil t))
            (match-string 1))
           (t "group-name"))))`}