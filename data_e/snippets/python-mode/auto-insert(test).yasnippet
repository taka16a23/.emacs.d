# -*- mode: snippet -*-
# name: test(auto-insert)
# key: test_auto-insert
# expand-env: ((yas/indent-line 'fixed) (yas/wrap-around-region 'nil))
# 末尾の`'は"Local Variables"用。改頁前には"\n"を入れること。fileの読込を早くする。
# 'r' charactor before the first triple-quote for doctest
# don't want escape sequences - e.g '\n'
# --
`(progn (view-mode -1) (flycheck-mode -1))`#!/usr/bin/env python
# -*- coding: utf-8 -*-

# $Id$    
# $Revision$
# $Date$    
# $Author$  
# $LastChangedBy$
# $LastChangedDate$

r"""Name: `(file-name-nondirectory (buffer-file-name))`

['skipTest', ]

['assertAlmostEqual', 'assertAlmostEquals', 'assertApproximates',
 'assertDictContainsSubset', 'assertDictEqual', 'assertEndsWith', 'assertEqual',
 'assertEquals', 'assertFalse', 'assertGreater', 'assertGreaterEqual',
 'assertIdentical', 'assertIn', 'assertIs', 'assertIsInstance', 'assertIsNone',
 'assertIsNot', 'assertIsNotInstance', 'assertIsNotNone', 'assertItemsEqual',
 'assertLess', 'assertLessEqual', 'assertListEqual', 'assertMethodsMatch',
 'assertMultiLineEqual', 'assertNotAlmostEqual', 'assertNotAlmostEquals',
 'assertNotApproximates', 'assertNotEndsWith', 'assertNotEqual',
 'assertNotEquals', 'assertNotIdentical', 'assertNotIn', 'assertNotIsInstance',
 'assertNotRegexpMatches', 'assertNotStartsWith', 'assertRaises',
 'assertRaisesRegexp', 'assertRegexpMatches', 'assertSequenceEqual',
 'assertSetEqual', 'assertStartsWith', 'assertTrue', 'assertTupleEqual', ]

['failIf', 'failIfAlmostEqual', 'failIfApproximates', 'failIfEndsWith',
 'failIfEqual', 'failIfIdentical', 'failIfIn', 'failIfIs', 'failIfIsInstance',
 'failIfStartsWith', 'failUnless', 'failUnlessAlmostEqual',
 'failUnlessApproximates', 'failUnlessEndsWith', 'failUnlessEqual',
 'failUnlessIdentical', 'failUnlessIn', 'failUnlessIs', 'failUnlessIsInstance',
 'failUnlessMethodsMatch', 'failUnlessRaises', 'failUnlessRaisesRegexp',
 'failUnlessStartsWith', 'failureException', ]
 
"""
from mocker import *
$0


class Test$1(MockerTestCase):
    @classmethod
    def setUpClass(cls):
        pass
        
    def setUp(self):
        self.mocker.replay()

    def tearDown(self):
        pass

    @classmethod
    def tearDownClass(cls, ):
        pass


# For Emacs
# Local Variables:
# coding: utf-8
# End:
# `(file-name-nondirectory (buffer-file-name))` ends here
