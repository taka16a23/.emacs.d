# -*- mode: snippet -*-
# name: __cmp__(self, other):
# key: defcmp
# condition: (and (not (py:at-string|comment-p)) (not (equal (this-command-keys-vector) [32])))
# expand-env: ((yas/indent-line 'fixed) (yas/wrap-around-region 'nil))
# __cmp__( self, other)
# 拡張比較 (__lt__, __gt__, __le__, __eq__, __ne__, __ge__)
# が定義されていない場合、比較演算によって呼び出されます。
# self < other である場合には負の値、 self == other ならばゼロ、self > other
# であれば正の値を返さなければなりません。演算 __cmp__() 、__eq__() および
# __ne__() がいずれも定義されていない場合、クラスインスタンスはオブジェクトの
# アイデンティティ (``アドレス'') で比較されます。自作の比較演算をサポートす
# るオブジェクトや、辞書のキーとして使えるオブジェクトを生成するには、
# __hash__() に関する記述を参照してください。 (注意: __cmp__() が例外を伝播し
# ないという制限は Python 1.5 から除去されました。)
# --
def __cmp__(self, other):
    """
    self < other return -1
    self > other return 1
    self == other return 0
    """
    return ${1:0}

