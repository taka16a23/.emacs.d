../../20-2-5/ja/だけに発見: .htaccess
diff -x'*.html' -u ../../20-2-5/ja/Makefile.in ./Makefile.in
--- ../../20-2-5/ja/Makefile.in	2004-04-26 11:16:00.000000000 +0900
+++ ./Makefile.in	2004-04-26 11:17:00.000000000 +0900
@@ -1,103 +1,139 @@
-# Makefile for the   GNU Emacs Lisp Reference Manual.
-#
-# 11 August 1990
-
-# Redefine `TEX' if `tex' does not invoke plain TeX. For example:
-# TEX=platex
-
-TEX=tex
-MAKE=make
-SHELL=/bin/sh
-INSTALL_INFO = install-info
+# Makefile for the GNU Emacs Lisp Reference Manual.
+
+# Copyright (C) 1990,1991,1992,1993,1994,1995,1996,1998,1999,2000,2001,2003
+#  Free Software Foundation, Inc.
+
+# This file is part of GNU Emacs.
 
-# Where the TeX macros are kept:
-texmacrodir = /usr/local/lib/tex/macros
+# GNU Emacs is free software; you can redistribute it and/or modify
+# it under the terms of the GNU General Public License as published by
+# the Free Software Foundation; either version 2, or (at your option)
+# any later version.
+
+# GNU Emacs is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+# GNU General Public License for more details.
+
+# You should have received a copy of the GNU General Public License
+# along with GNU Emacs; see the file COPYING.  If not, write to
+# the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
+# Boston, MA 02111-1307, USA.
 
 # Standard configure variables.
-prefix = @prefix@
-infodir = @infodir@
+srcdir = @srcdir@
 
-# The name of the manual:
+# Tell make where to find source files; this is needed for the makefiles.
+VPATH=@srcdir@
+
+infodir = $(srcdir)/../info
 
-VERSION=2.5
-manual = elisp-manual-20-$(VERSION)
+TEXI2DVI = texi2dvi
+SHELL = /bin/sh
+INSTALL_INFO = install-info
+MAKEINFO = makeinfo
 
-# Uncomment this line for permuted index.
-# permuted_index = 1 
+# The name of the manual:
+VERSION=2.9
+manual = elisp-manual-21-$(VERSION)
 
 # List of all the texinfo files in the manual:
 
-srcs = elisp.texi back.texi \
-  abbrevs.texi advice.texi anti.texi backups.texi locals.texi buffers.texi \
-  calendar.texi commands.texi compile.texi control.texi customize.texi \
-  debugging.texi display.texi edebug.texi errors.texi eval.texi files.texi \
-  frames.texi functions.texi help.texi hooks.texi \
-  internals.texi intro.texi keymaps.texi lists.texi \
-  loading.texi macros.texi maps.texi markers.texi \
-  minibuf.texi modes.texi nonascii.texi numbers.texi objects.texi \
-  os.texi positions.texi processes.texi searching.texi \
-  sequences.texi streams.texi strings.texi symbols.texi \
-  syntax.texi text.texi tips.texi variables.texi \
-  windows.texi \
-  index.unperm index.perm
+srcs = \
+  $(srcdir)/abbrevs.texi \
+  $(srcdir)/advice.texi \
+  $(srcdir)/anti.texi \
+  $(srcdir)/back.texi \
+  $(srcdir)/backups.texi \
+  $(srcdir)/buffers.texi \
+  $(srcdir)/calendar.texi \
+  $(srcdir)/commands.texi \
+  $(srcdir)/compile.texi \
+  $(srcdir)/control.texi \
+  $(srcdir)/customize.texi \
+  $(srcdir)/debugging.texi \
+  $(srcdir)/display.texi \
+  $(srcdir)/edebug.texi \
+  $(srcdir)/elisp.texi \
+  $(srcdir)/errors.texi \
+  $(srcdir)/eval.texi \
+  $(srcdir)/files.texi \
+  $(srcdir)/frames.texi \
+  $(srcdir)/functions.texi \
+  $(srcdir)/hash.texi \
+  $(srcdir)/help.texi \
+  $(srcdir)/hooks.texi \
+  $(srcdir)/internals.texi \
+  $(srcdir)/intro.texi \
+  $(srcdir)/keymaps.texi \
+  $(srcdir)/lists.texi \
+  $(srcdir)/loading.texi \
+  $(srcdir)/locals.texi \
+  $(srcdir)/macros.texi \
+  $(srcdir)/maps.texi \
+  $(srcdir)/markers.texi \
+  $(srcdir)/minibuf.texi \
+  $(srcdir)/modes.texi \
+  $(srcdir)/nonascii.texi \
+  $(srcdir)/numbers.texi \
+  $(srcdir)/objects.texi \
+  $(srcdir)/os.texi \
+  $(srcdir)/positions.texi \
+  $(srcdir)/processes.texi \
+  $(srcdir)/searching.texi \
+  $(srcdir)/sequences.texi \
+  $(srcdir)/streams.texi \
+  $(srcdir)/strings.texi \
+  $(srcdir)/symbols.texi \
+  $(srcdir)/syntax.texi \
+  $(srcdir)/text.texi \
+  $(srcdir)/tips.texi \
+  $(srcdir)/variables.texi \
+  $(srcdir)/windows.texi \
+  $(srcdir)/index.texi \
+  $(srcdir)/gpl.texi \
+  $(srcdir)/doclicense.texi
+
 
-.PHONY: elisp.dvi clean
+.PHONY: clean
 
 # The info file is named `elisp'.
+info: $(infodir)/elisp
+
+$(infodir)/elisp: $(srcs)
+	$(MAKEINFO) -I. -I$(srcdir) $(srcdir)/elisp.texi -o $(infodir)/elisp
 
-elisp: $(srcs) index.texi
-	rm -f elisp-*
-	makeinfo elisp.texi
-
-elisp.dvi: $(srcs) index.texi
-	# Avoid losing old contents of aux file entirely.
-	-mv elisp.aux elisp.oaux
-	# First shot to define xrefs:
-	$(TEX) elisp.texi
-	if [ a${permuted_index} != a ]; \
-	then \
-	  ./permute-index; \
-	  mv permuted.fns elisp.fns; \
-	  texindex elisp.tp; \
-	else \
-	  texindex elisp.??; \
-	fi
-	$(TEX) elisp.texi
-
-index.texi:
-	if [ a${permuted_index} != a ]; \
-	then \
-	  ln -s index.perm index.texi; \
-	else \
-	  ln -s index.unperm index.texi; \
-	fi
+elisp.dvi: $(srcs)
+	$(TEXI2DVI) -I $(srcdir) $(srcdir)/elisp.texi
 
 install: elisp
-	./mkinstalldirs $(infodir)
+	$(srcdir)/mkinstalldirs $(infodir)
 	cp elisp elisp-* $(infodir)
-	${INSTALL_INFO} --dir-file=${infodir}/dir --info-file=${infodir}/elisp
-
-installall: install
-	install -c texinfo.tex $(texmacrodir)
+	${INSTALL_INFO} --info-dir=${infodir} ${infodir}/elisp
 
 clean:
 	rm -f *.toc *.aux *.log *.cp *.cps *.fn *.fns *.tp *.tps \
               *.vr *.vrs *.pg *.pgs *.ky *.kys
-	rm -f make.out core 
-	rm -f index.texi
+	rm -f make.out core
+
+distclean: clean
 
 maintainer-clean: clean
-	rm -f elisp elisp-*
+	rm -f elisp elisp-* elisp.dvi elisp.oaux
 
-dist:
+dist: elisp elisp.dvi
 	-rm -rf temp
 	-mkdir temp
 	-mkdir temp/$(manual)
-	-ln README configure.in configure Makefile.in permute-index $(srcs) \
- texinfo.tex elisp.dvi elisp.aux elisp.??s elisp elisp-[0-9] elisp-[0-9][0-9] \
+	-ln $(srcdir)/README $(srcdir)/configure.in $(srcdir)/configure \
+ $(srcdir)/Makefile.in $(srcs) \
+ $(srcdir)/../man/texinfo.tex \
+ elisp.dvi elisp.aux elisp.??s elisp elisp-[0-9] elisp-[0-9][0-9] \
  temp/$(manual)
 	-(cd temp/$(manual); rm -f mkinstalldirs)
-	cp mkinstalldirs temp/$(manual)
+	cp $(srcdir)/mkinstalldirs temp/$(manual)
 	(cd temp/$(manual); rm -f *~)
 	(cd temp; tar chf - $(manual)) | gzip > $(manual).tar.gz
 	-rm -rf temp
+
+# arch-tag: f5a1a94d-62e1-4460-a2d1-f02e538ab554
diff -x'*.html' -u ../../20-2-5/ja/README ./README
--- ../../20-2-5/ja/README	2004-04-26 11:16:00.000000000 +0900
+++ ./README	2004-04-26 11:17:00.000000000 +0900
@@ -1,4 +1,4 @@
-README for Edition 2.5 of the Emacs Lisp Reference Manual.
+README for Edition 2.8 of the Emacs Lisp Reference Manual.
 
 * This directory contains the texinfo source files for the Reference
 Manual, make-permuted-index, and the latest version of texinfo.tex,
@@ -11,11 +11,11 @@
 newsgroup gnu.emacs.help.
 
 * The Emacs Lisp Reference Manual is quite large.  It totals around
-900 pages in smallbook format; the info files total almost two
-megabytes.
+980 pages in smallbook format; the info files total almost
+2.5 megabytes.
 
 * You can format this manual either for Info or for printing hardcopy
-using TeX.  
+using TeX.
 
 * You can buy nicely printed copies from the Free Software Foundation.
 For info, send mail to gnu@gnu.org or phone 617-542-5942.  Buying a
@@ -37,11 +37,13 @@
 To create a DVI file with a sorted index, execute the following
 commands in the shell:
 
+% ./configure
 % make index.texi
 % make elisp.dvi
 
 *** To create a DVI file with a permuted index, you may experiment
-with `make-permuted-index'.  
+with `make-permuted-index'.
 
 ** To make an Info file, you need to install Texinfo, then run
-`make elisp'.  To install the Info files, run `make install'.
+`./configure' and `make info'.  To install the Info files, run
+`make install'.
diff -x'*.html' -u ../../20-2-5/ja/abbrevs.texi ./abbrevs.texi
--- ../../20-2-5/ja/abbrevs.texi	2004-04-26 06:02:06.000000000 +0900
+++ ./abbrevs.texi	2004-04-26 06:02:46.000000000 +0900
@@ -1,11 +1,12 @@
 @c -*-texinfo-*-
 @c This is part of the GNU Emacs Lisp Reference Manual.
-@c Copyright (C) 1990, 1991, 1992, 1993, 1994 Free Software Foundation, Inc. 
+@c Copyright (C) 1990, 1991, 1992, 1993, 1994, 1999 
+@c   Free Software Foundation, Inc. 
 @c See the file elisp.texi for copying conditions.
 @setfilename ../info/abbrevs
 @node Abbrevs, Processes, Syntax Tables, Top
-@c @chapter Abbrevs And Abbrev Expansion
-@chapter 略語と略語の展開
+@c @chapter Abbrevs and Abbrev Expansion
+@chapter 略語と略語の展開 @emph{(2003/10/30)}
 @c @cindex abbrev
 @c @cindex abbrev table
 @cindex 略語
@@ -15,7 +16,7 @@
 @c expanded to a longer string.  The user can insert the abbrev string and
 @c find it replaced automatically with the expansion of the abbrev.  This
 @c saves typing.
-@dfn{略語}（abbrev）とは、より長い文字列へ展開される文字の列のことです。
+@dfn{略語}(abbrev) とは、より長い文字列へ展開される文字の列のことです。
 ユーザーが略語の文字列を挿入すると、その展開形に自動的に置換されます。
 これにより打鍵量を省けます。
 
@@ -23,9 +24,9 @@
 @c table}.  Each buffer has a local abbrev table, but normally all buffers
 @c in the same major mode share one abbrev table.  There is also a global
 @c abbrev table.  Normally both are used.
-現在有効な略語の集まりは、@dfn{略語表}（abbrev table）に記録されています。
+現在有効な略語の集まりは、@dfn{略語表}(abbrev table) に記録されています。
 各バッファにはローカルな略語表がありますが、
-通常、同じメジャーモードのすべてのバッファは1つの略語表を共有します。
+通常、同じメジャーモードのすべてのバッファは 1 つの略語表を共有します。
 グローバルな略語表もあります。
 通常、両方を使います。
 
@@ -44,7 +45,7 @@
 その値は展開形であり、その関数定義は展開を行うフック関数です。
 その属性リストのセルには略語を展開した回数である利用回数が入ります。
 それらのシンボルは、通常のオブジェクト配列にはインターンされませんから、
-Lisp式を読み取った結果には、それらはけっして現れません。
+Lisp 式を読み取った結果には、それらはけっして現れません。
 実際、略語を扱うコード以外では、それらはけっして使われません。
 したがって、それらをかなり非標準的に使っても安全です。
 @xref{Creating Symbols}。
@@ -66,11 +67,11 @@
 @node Abbrev Mode, Abbrev Tables, Abbrevs, Abbrevs
 @comment  node-name,  next,  previous,  up
 @c @section Setting Up Abbrev Mode    
-@section 略語（abbrev）モードの設定
+@section 略語 (abbrev) モードの設定 @emph{(2003/10/30)}
 
 @c   Abbrev mode is a minor mode controlled by the value of the variable
 @c @code{abbrev-mode}.
-略語（abbrev）モードは、変数@code{abbrev-mode}の値で制御される
+略語 (abbrev) モードは、変数@code{abbrev-mode}の値で制御される
 マイナモードです。
 
 @defvar abbrev-mode
@@ -97,7 +98,7 @@
 
 @node Abbrev Tables, Defining Abbrevs, Abbrev Mode, Abbrevs
 @c @section Abbrev Tables
-@section 略語表
+@section 略語表 @emph{(2003/10/30)}
 
 @c   This section describes how to create and manipulate abbrev tables.
 本節では、略語表の作成方法と扱い方について述べます。
@@ -107,14 +108,14 @@
 @c containing no symbols.  It is a vector filled with zeros.
 この関数は、新たな空の略語表、つまり、
 シンボルを含まないオブジェクト配列を作成して返す。
-ベクトルはゼロで埋められる。
+この値はゼロで埋められたベクトルである。
 @end defun
 
 @defun clear-abbrev-table table
 @c This function undefines all the abbrevs in abbrev table @var{table},
-@c leaving it empty.  The function returns @code{nil}.
+@c leaving it empty.  It always returns @code{nil}.
 この関数は、略語表@var{table}内のすべての略語を未定義にして略語表を空にする。
-関数は@code{nil}を返す。
+関数はいつも@code{nil}を返す。
 @end defun
 
 @defun define-abbrev-table tabname definitions
@@ -123,7 +124,7 @@
 @c in the table according to @var{definitions}, a list of elements of the
 @c form @code{(@var{abbrevname} @var{expansion} @var{hook}
 @c @var{usecount})}.  The return value is always @code{nil}.
-この関数は、@var{tabname}（シンボル）を略語表の名前として定義する。
+この関数は、@var{tabname}(シンボル) を略語表の名前として定義する。
 つまり、この変数としての値は略語表になる。
 @var{definitions}に従って略語表に略語を定義する。
 ここで、@var{definitions}は
@@ -152,7 +153,7 @@
 @c @code{define-abbrev-table} that would define @var{name} exactly as it
 @c is currently defined.
 @var{human}が@code{nil}以外であると、この記述は人間向けである。
-さもなければ、この記述はLisp式、つまり、
+さもなければ、この記述は Lisp 式、つまり、
 @var{name}の現在の定義どおりに@var{name}を定義するような
 @code{define-abbrev-table}の呼び出しである。
 @end defun
@@ -160,7 +161,7 @@
 @node Defining Abbrevs, Abbrev Files, Abbrev Tables, Abbrevs
 @comment  node-name,  next,  previous,  up
 @c @section Defining Abbrevs
-@section 略語を定義する
+@section 略語を定義する @emph{(2003/10/30)}
 
 @c   These functions define an abbrev in a specified abbrev table.
 @c @code{define-abbrev} is the low-level basic function, while
@@ -180,7 +181,7 @@
 この関数は、ユーザーからの情報に基づいて
 略語表@var{table}に略語を追加する。
 引数@var{type}は、この略語の種類を英語で表した文字列である
-（典型的には、@code{"global"}や@code{"mode-specific"}。）
+(典型的には、@code{"global"}や@code{"mode-specific"}。)
 この文字列はユーザーへのプロンプトに使われる。
 引数@var{arg}は、展開形の単語数である。
 
@@ -191,14 +192,19 @@
 既存の略語を再定義することをユーザーが拒否したときには@code{nil}である。
 @end defun
 
-@defun define-abbrev table name expansion hook
+@defun define-abbrev table name expansion &optional hook count
 @c This function defines an abbrev named @var{name}, in @var{table}, to
-@c expand to @var{expansion} and call @var{hook}.  The return value is a
-@c symbol that represents the abbrev inside Emacs; its name is @var{name}.
-この関数は、略語表@var{table}において、
-略語@var{name}を@var{expansion}に展開するように定義し、
-@var{hook}を呼び出すように定義する。
-戻り値は、Emacs内部で略語を表現するシンボルを返すが、
+@c expand to @var{expansion} and call @var{hook}.  The value of
+@c @var{count}, if specified, initializes the abbrev's usage-count.  If
+@c @var{count} is not specified or @code{nil}, the use count is initialized
+@c to zero.  The return value is a symbol that represents the abbrev inside
+@c Emacs; its name is @var{name}.
+@c この関数は、略語が定義されている表 (引数@var{table}) において、
+略語 (@var{name}) を@var{expansion}に展開し，@var{hook}を呼び出すように定義する。
+また，オプションである@var{count}の値は abbrev での展開回数の初期値となる．指定
+されなければ 0 となる．
+
+戻り値は、 Emacs 内部で略語を表現するシンボルを返すが、
 その名前は@var{name}である。
 
 @c The argument @var{name} should be a string.  The argument
@@ -207,7 +213,7 @@
 @c @code{nil}, then the abbreviation ``expands'' solely by running
 @c @var{hook}.
 引数@var{name}は文字列であること。
-引数@var{expansion}は、普通は、目的の展開形（文字列）であるが、
+引数@var{expansion}は、普通は、目的の展開形 (文字列) であるが、
 略語を未定義にするには@code{nil}である。
 これが文字列でも@code{nil}でもなければ、
 略語を『展開する』ときには@var{hook}だけを実行する。
@@ -223,7 +229,7 @@
 ポイントは@var{expansion}の直後に置かれる。
 
 @c The use count of the abbrev is initialized to zero.
-略語の利用回数は0に初期化される。
+略語の利用回数は 0 に初期化される。
 @end defun
 
 @defopt only-global-abbrevs
@@ -242,7 +248,7 @@
 
 @node Abbrev Files, Abbrev Expansion, Defining Abbrevs, Abbrevs
 @c @section Saving Abbrevs in Files
-@section 略語をファイルに保存する
+@section 略語をファイルに保存する @emph{(2003/10/30)}
 
 @c   A file of saved abbrev definitions is actually a file of Lisp code.
 @c The abbrevs are saved in the form of a Lisp program to define the same
@@ -250,9 +256,9 @@
 @c with @code{load} (@pxref{How Programs Do Loading}).  However, the
 @c function @code{quietly-read-abbrev-file} is provided as a more
 @c convenient interface.
-略語定義を保存したファイルは、実際には、Lispコードのファイルです。
-略語は、同じ内容の同じ略語表を定義するLispプログラムの形で保存されます。
-したがって、ファイルは@code{load}（@pxref{How Programs Do Loading}）で
+略語定義を保存したファイルは、実際には、 Lisp コードのファイルです。
+略語は、同じ内容の同じ略語表を定義する Lisp プログラムの形で保存されます。
+したがって、ファイルは@code{load}(@pxref{How Programs Do Loading}) で
 ロードできます。
 しかし、関数@code{quietly-read-abbrev-file}がより便利なインターフェイスを
 提供します。
@@ -268,14 +274,15 @@
 これは、略語を読み込んだり保存するデフォルトのファイル名である。
 @end defopt
 
-@defun quietly-read-abbrev-file filename
+@defun quietly-read-abbrev-file &optional filename
 @c This function reads abbrev definitions from a file named @var{filename},
 @c previously written with @code{write-abbrev-file}.  If @var{filename} is
-@c @code{nil}, the file specified in @code{abbrev-file-name} is used.
-@c @code{save-abbrevs} is set to @code{t} so that changes will be saved.
+@c omitted or @code{nil}, the file specified in @code{abbrev-file-name} is
+@c used.  @code{save-abbrevs} is set to @code{t} so that changes will be
+@c saved.
 この関数は、@code{write-abbrev-file}で書いておいた
 ファイル@var{filename}から、略語定義を読み取る。
-@var{filename}が@code{nil}であると、
+@var{filename}が省略されるか，@code{nil}であると、
 @code{abbrev-file-name}で指定されるファイルを使う。
 @code{save-abbrevs}に@code{t}を設定して、変更は保存されるようにする。
 
@@ -289,7 +296,7 @@
 @c save abbrevs when files are saved.  @code{abbrev-file-name} specifies
 @c the file to save the abbrevs in.
 @code{save-abbrev}が@code{nil}以外の値であると、
-Emacsはファイルを保存するときに略語も保存する。
+Emacs はファイルを保存するときに略語も保存する。
 @code{abbrev-file-name}が略語を保存するファイルを指定する。
 @end defopt
 
@@ -299,23 +306,26 @@
 @c save your abbrevs.
 略語を定義したり変更すると、この変数は@code{nil}以外に設定される。
 これは、読者の略語を保存する機会を与えるために、
-Emacsのさまざまなコマンドに対するフラグとして働く。
+Emacs のさまざまなコマンドに対するフラグとして働く。
 @end defvar
 
-@c @deffn Command write-abbrev-file filename
-@deffn コマンド write-abbrev-file filename
+@c @deffn Command write-abbrev-file &optional filename
+@deffn コマンド write-abbrev-file &optional filename
 @c Save all abbrev definitions, in all abbrev tables, in the file
 @c @var{filename}, in the form of a Lisp program that when loaded will
-@c define the same abbrevs.  This function returns @code{nil}.
-ロードすると同じ略語を定義するようなLispプログラムの形で、
+@c define the same abbrevs.  If @var{filename} is @code{nil} or omitted,
+@c @code{abbrev-file-name} is used.  This function returns @code{nil}.
+ロードすると同じ略語を定義するような Lisp プログラムの形で、
 ファイル@var{filename}にすべての略語表のすべての略語定義を保存する。
-この関数は@code{nil}を返す。
+もしファイル名 (@var{filename}) が省略されるか nil であると，
+@code{abbrev-file-name}で設定したファイルに保存される．
+また，この関数は@code{nil}を返す。
 @end deffn
 
 @node Abbrev Expansion, Standard Abbrev Tables, Abbrev Files, Abbrevs
 @comment  node-name,  next,  previous,  up
 @c @section Looking Up and Expanding Abbreviations
-@section 略語の探索と展開
+@section 略語の探索と展開 @emph{(2003/10/30)}
 
 @c   Abbrevs are usually expanded by certain interactive commands,
 @c including @code{self-insert-command}.  This section describes the
@@ -335,7 +345,7 @@
 @c abbrev table.
 この関数は、名前@var{abbrev}の略語を表すシンボルを返す。
 そのような略語が定義されていなければ、戻り値は@code{nil}である。
-省略可能な第2引数@var{table}は、探索対象の略語表である。
+省略可能な第 2 引数@var{table}は、探索対象の略語表である。
 @var{table}が@code{nil}であると、
 この関数は、まずカレントバッファのローカルな略語表を試し、
 つぎにグローバルな略語表を試す。
@@ -347,7 +357,7 @@
 @c argument @var{table} specifies the abbrev table to use, as in
 @c @code{abbrev-symbol}.
 この関数は、@var{abbrev}が
-（カレントバッファで使用される略語表での定義どおりに）
+(カレントバッファで使用される略語表での定義どおりに)
 展開されるであろう文字列を返す。
 省略可能な引数@var{table}は、@code{abbrev-symbol}と同様に、
 使用する略語表を指定する。
@@ -355,13 +365,18 @@
 
 @c @deffn Command expand-abbrev
 @deffn コマンド expand-abbrev
-@c This command expands the abbrev before point, if any.
-@c If point does not follow an abbrev, this command does nothing.
-@c The command returns @code{t} if it did expansion, @code{nil} otherwise.
+@c This command expands the abbrev before point, if any.  If point does not
+@c follow an abbrev, this command does nothing.  The command returns the
+@c abbrev symbol if it did expansion, @code{nil} otherwise.
 このコマンドは、ポイントのまえの略語をあれば展開する。
 略語の直後にポイントがない場合、このコマンドはなにもしない。
-このコマンドは、展開を行えば@code{t}を返し、
+このコマンドは、展開を行えば展開前の文字を返し、
 さもなければ@code{nil}を返す。
+
+@c If the abbrev symbol has a hook function which is a symbol whose
+@c @code{no-self-insert} property is non-@code{nil}, and if the hook
+@c function returns @code{nil} as its value, then @code{expand-abbrev}
+@c returns @code{nil} even though expansion did occur.
 @end deffn
 
 @c @deffn Command abbrev-prefix-mark &optional arg
@@ -373,7 +388,7 @@
 現在のポイント位置を略語の開始位置としてマークする。
 つぎに@code{expand-abbrev}を呼び出すと、
 通常どおりにポイントのまえの単語を使うかわりに、
-ここから（その時点での）ポイントまでのテキストを略語として展開する。
+ここから (その時点での) ポイントまでのテキストを略語として展開する。
 @end deffn
 
 @defopt abbrev-all-caps
@@ -395,7 +410,7 @@
 @c also set by @code{abbrev-prefix-mark}.
 これは、@code{expand-abbrev}がつぎに展開する略語の開始位置として使う
 バッファ内位置である。
-（@code{nil}であると、そのかわりにポイントのまえの単語を使う意味である。）
+(@code{nil}であると、そのかわりにポイントのまえの単語を使う意味である。)
 @code{expand-abbrev}が呼び出されるたびに、
 @code{abbrev-start-location}は@code{nil}に設定される。
 この変数は、@code{abbrev-prefix-mark}でも設定される。
@@ -418,10 +433,10 @@
 @c @code{unexpand-abbrev} command (@pxref{Expanding Abbrevs,, Expanding
 @c Abbrevs, emacs, The GNU Emacs Manual}).
 これは、もっとも最近に略語展開された@code{abbrev-symbol}
-（略語を表すシンボル）である。
+(略語を表すシンボル) である。
 この情報は、コマンド@code{unexpand-abbrev}向けに
 @code{expand-abbrev}が残す
-（@pxref{Expanding Abbrevs,, 略語展開の制御, emacs, GNU Emacs マニュアル}）
+(@pxref{Expanding Abbrevs,, 略語展開の制御, emacs, GNU Emacs マニュアル})
 。
 @end defvar
 
@@ -439,7 +454,7 @@
 @c after case conversion (if any).  Its value is @code{nil} if the abbrev
 @c has already been unexpanded.  This contains information left by
 @c @code{expand-abbrev} for the sake of the @code{unexpand-abbrev} command.
-これは、もっとも最近に略語展開したときの（あれば）大文字小文字変換後の
+これは、もっとも最近に略語展開したときの (あれば) 大文字小文字変換後の
 展開形のテキストである。
 略語展開を取り消すと、この値は@code{nil}である。
 これは、コマンド@code{unexpand-abbrev}向けに
@@ -458,6 +473,11 @@
 ノーマルフックなので、フック関数は引数を受け取らない。
 しかし、バッファでポイントのまえを調べることで
 展開すべき略語をみつけることができる。
+@c Running the hook is the first thing that @code{expand-abbrev} does, and
+@c so a hook function can be used to change the current abbrev table before
+@c abbrev lookup happens.
+また，このフックは@code{expand-abbrev}が実行する最初の処理であるため，展開される
+語を探す前に現在の展開表を変更することもできる．
 @end defvar
 
 @c   The following sample code shows a simple use of
@@ -481,7 +501,7 @@
 @c ;; @r{user entered some other character, this function asks whether}
 @c ;; @r{expansion should continue.}
 ;; @r{ユーザーが略語を空白で終えると、この関数はなにもしない}
-;; @r{（つまり、略語を展開できるように戻る）}
+;; @r{(つまり、略語を展開できるように戻る)}
 ;; @r{ユーザーがその他の文字を入力したら、}
 ;; @r{この関数は展開するかどうかを問い合わせる}
 
@@ -489,7 +509,7 @@
 @c ;; @r{@code{nil} (because of the @code{not} function), but that is}
 @c ;; @r{acceptable; the return value has no effect on expansion.}
 ;; @r{ユーザーがプロンプトに@kbd{y}で答えたら、}
-;; @r{（関数@code{not}を使っているので）この関数は@code{nil}を返すが}
+;; @r{(関数@code{not}を使っているので) この関数は@code{nil}を返すが}
 ;; @r{問題ない。戻り値は展開には影響しない}
 
 (defun query-if-not-space ()
@@ -501,11 +521,11 @@
 @node Standard Abbrev Tables,  , Abbrev Expansion, Abbrevs
 @comment  node-name,  next,  previous,  up
 @c @section Standard Abbrev Tables
-@section 標準の略語表
+@section 標準の略語表 @emph{(2003/10/30)}
 
 @c   Here we list the variables that hold the abbrev tables for the
 @c preloaded major modes of Emacs.
-Emacsにあらかじめロードされるメジャーモード向けの
+Emacs にあらかじめロードされるメジャーモード向けの
 略語表を保持する変数一覧を示します。
 
 @defvar global-abbrev-table
@@ -523,23 +543,24 @@
 @c The value of this buffer-local variable is the (mode-specific)
 @c abbreviation table of the current buffer.
 このバッファローカルな変数の値は
-カレントバッファの（モード固有の）略語表である。
+カレントバッファの (モード固有の) 略語表である。
 @end defvar
 
 @defvar fundamental-mode-abbrev-table
 @c This is the local abbrev table used in Fundamental mode; in other words,
 @c it is the local abbrev table in all buffers in Fundamental mode.
-これは、基本（fundamental）モードで使われるローカルな略語表である。
-いいかえれば、基本（fundamental）モードであるすべてのバッファの
+これは、基本 (fundamental) モードで使われるローカルな略語表である。
+いいかえれば、基本 (fundamental) モードであるすべてのバッファの
 ローカルな略語表である。
 @end defvar
 
 @defvar text-mode-abbrev-table
 @c This is the local abbrev table used in Text mode.
-これは、テキスト（text）モードで使われるローカルな略語表である。
+これは、テキスト (text) モードで使われるローカルな略語表である。
 @end defvar
 
 @defvar lisp-mode-abbrev-table
 @c This is the local abbrev table used in Lisp mode and Emacs Lisp mode.
-これは、lispモードとemacs-lispモードで使われるローカルな略語表である。
+これは、 lisp モードと emacs-lisp モードで使われるローカルな略語表である。
 @end defvar
+
diff -x'*.html' -u ../../20-2-5/ja/advice.texi ./advice.texi
--- ../../20-2-5/ja/advice.texi	2004-04-26 06:01:48.000000000 +0900
+++ ./advice.texi	2004-04-26 06:02:30.000000000 +0900
@@ -1,12 +1,12 @@
 @c -*-texinfo-*-
 @c This is part of the GNU Emacs Lisp Reference Manual.
-@c Copyright (C) 1998 Free Software Foundation, Inc. 
+@c Copyright (C) 1998, 1999 Free Software Foundation, Inc. 
 @c See the file elisp.texi for copying conditions.
 @setfilename ../info/advising
 @node Advising Functions, Debugging, Byte Compilation, Top
 @c @chapter Advising Emacs Lisp Functions
 @c @cindex advising functions
-@chapter Emacs Lisp関数のアドバイス
+@chapter Emacs Lisp関数のアドバイス @emph{(2003/10/30)}
 @cindex アドバイス、関数
 
 @c   The @dfn{advice} feature lets you add to the existing definition of a
@@ -21,15 +21,18 @@
 @c @cindex piece of advice
 @cindex アドバイス断片
 @c   Each function can have multiple @dfn{pieces of advice}, separately
-@c defined.  Each defined piece of advice can be enabled or disabled
-@c explicitly.  The enabled pieces of advice for any given function
-@c actually take effect when you @dfn{activate} advice for that function, or when
-@c that function is subsequently defined or redefined.
+@c defined.  Each defined piece of advice can be @dfn{enabled} or
+@c disabled explicitly.  All the enabled pieces of advice for any given
+@c function actually take effect when you @dfn{activate} advice for that
+@c function, or when you define or redefine the function.  Note that
+@c enabling a piece of advice and activating advice for a function
+@c are not the same thing.
 各関数は、個別に定義した複数の@dfn{アドバイス断片}を持てます。
-それぞれのアドバイス断片は、明示的に有効にしたり無効にできます。
-任意の関数の有効にしたアドバイス断片が実際にその効果を発揮するのは、
+それぞれのアドバイス断片は、明示的に@dfn{有効}にしたり無効にできます。
+任意の関数で有効にされたすべてのアドバイス断片が実際にその効果を発揮するのは、
 当該関数のアドバイスを@dfn{活性にした}ときか
-当該関数をのちに定義したり再定義したときです。
+当該関数を定義したり再定義したときです。ここで、アドバイス断片を「有効にする
+こと」と「活性にすること」は同じことでないので注意が必要です。
 
 @c   @strong{Usage Note:} Advice is useful for altering the behavior of
 @c existing calls to an existing function.  If you want the new behavior
@@ -57,16 +60,17 @@
 
 @node Simple Advice
 @c @section A Simple Advice Example
-@section 単純なアドバイスの例
+@section 単純なアドバイスの例 @emph{(2003/10/30)}
 
 @c   The command @code{next-line} moves point down vertically one or more
 @c lines; it is the standard binding of @kbd{C-n}.  When used on the last
 @c line of the buffer, this command inserts a newline to create a line to
-@c move to (if @code{next-line-add-newlines} is non-@code{nil}).
+@c move to if @code{next-line-add-newlines} is non-@code{nil} (its default
+@c is @code{nil}.)
 コマンド@code{next-line}は、ポイントを垂直に複数行移動します。
 標準バインドは@kbd{C-n}です。
 バッファの最終行で使うと、
-（@code{next-line-add-newlines}が@code{nil}以外の場合）
+@code{next-line-add-newlines}が@code{nil}以外の場合(デフォルトは@code{nil})
 このコマンドは行を作るために改行を挿入し、その行に移動します。
 
 @c   Suppose you wanted to add a similar feature to @code{previous-line},
@@ -156,7 +160,7 @@
 
 @node Defining Advice
 @c @section Defining Advice
-@section アドバイス定義
+@section アドバイス定義 @emph{(2003/10/30)}
 @c @cindex defining advice
 @c @cindex advice, defining
 @cindex 定義、アドバイス
@@ -306,12 +310,12 @@
 
 @c @cindex forward advice
 @cindex 未定義のアドバイス（forward advice）
-@c This flag has no effect if @var{function} itself is not defined yet (a
+@c This flag has no immediate effect if @var{function} itself is not defined yet (a
 @c situation known as @dfn{forward advice}), because it is impossible to
 @c activate an undefined function's advice.  However, defining
 @c @var{function} will automatically activate its advice.
 @var{function}が未定義（@dfn{未定義のアドバイス}（forward advice）と呼ぶ状況）
-であるとこのフラグにはなんの効果もない。
+であるとこのフラグがすぐに効果を表すことはない。
 というのは、未定義関数のアドバイスは活性にできないからである。
 しかし、@var{function}を定義するとそのアドバイスは自動的に活性にされる。
 
@@ -351,7 +355,7 @@
 この@code{defadvice}をコンパイルしたりマクロ展開したときに、
 @var{function}に対するアドバイスを活性にする。
 これにより現在のアドバイスの状態に応じたアドバイス定義をコンパイルし、
-必要に応じて使われるようになる。
+必要に応じて使われるようになる。@xref{Preactivation}。
 
 @c This is useful only if this @code{defadvice} is byte-compiled.
 この@code{defadvice}をバイトコンパイルする場合にのみ意味を持つ。
@@ -397,9 +401,21 @@
 アドバイスが使用するすべてのサブルーティンは、
 バイトコンパイラがマクロを展開するときに必要になる。
 
+@c @deffn Command ad-unadvise function
+@deffn コマンド ad-unadvise function
+@c This command deletes the advice from @var{function}.
+このコマンドは@var{function}からアドバイスを削除する。
+@end deffn
+
+@c @deffn Command ad-unadvise-all
+@deffn コマンド ad-unadvise-all
+@c This command deletes all pieces of advice from all functions.
+このコマンドはすべての関数からすべてのアドバイス断片を削除する。
+@end deffn
+
 @node Around-Advice
 @c @section Around-Advice
-@section 包囲アドバイス
+@section 包囲アドバイス @emph{(2003/10/30)}
 
 @c   Around-advice lets you ``wrap'' a Lisp expression ``around'' the
 @c original function definition.  You specify where the original function
@@ -441,11 +457,22 @@
 @c pieces of around-advice).
 包囲アドバイスで@code{ad-do-it}を用いなければ、関数の元定義を実行しません。
 これは、元定義を完全に無効にする手段です。
-（さらに、内側の包囲アドバイス断片も無効にする。）
+（さらに、内側の包囲アドバイス断片も無効にする）
+
+@c If the around-advice uses @code{ad-do-it} more than once, the original
+@c definition is run at each place.  In this way, around-advice can execute
+@c the original definition (and lower-positioned pieces of around-advice)
+@c several times.  Another way to do that is by using @code{ad-do-it}
+@c inside of a loop.
+もし包囲アドバイスが@code{ad-do-it}を1つ以上用いていれば、関数の元定義
+がそれぞれの場所で実行される。これにより、包囲アドバイスは元の関数(と
+その中の関数に含まれる包囲アドバイス断片)を何度も実行できる。このよう
+に、元の関数を複数回実行するには、ループの中で@code{ad-do-it}を用いて
+も可能である。
 
 @node Computed Advice
 @c @section Computed Advice
-@section 計算アドバイス
+@section 計算アドバイス @emph{(2003/10/30)}
 
 @c The macro @code{defadvice} resembles @code{defun} in that the code for
 @c the advice, and all other information about it, are explicitly stated in
@@ -485,12 +512,16 @@
 @c to put the new piece of advice.  The value of @var{position} can either
 @c be @code{first}, @code{last}, or a number (counting from 0 at the
 @c beginning of the list).  Numbers outside the range are mapped to the
-@c closest extreme position.
+@c beginning or the end of the range, whichever is closer.  The
+@c @var{position} value is ignored when redefining an existing piece of
+@c advice.
 @var{function}に指定したクラス@var{class}のアドバイス断片がすでにあると、
 @var{position}は新しいアドバイス断片をリストのどこに置くかを指定する。
 @var{position}の値は、@code{first}、@code{last}、あるいは、
 （リストの先頭を0から数えた）数である。
-範囲外の数は先頭か末尾のどちらか近いほうになる。
+範囲外の数はその範囲の先頭か末尾のどちらか近いほうになる。また、
+@var{position}の値はすでに存在するアドバイス断片を再定義した時には無視
+される。
 
 @c If @var{function} already has a piece of @var{advice} with the same
 @c name, then the position argument is ignored and the old advice is
@@ -501,7 +532,7 @@
 
 @node Activation of Advice
 @c @section Activation of Advice
-@section アドバイスの活性化
+@section アドバイスの活性化 @emph{(2003/10/30)}
 @c @cindex activating advice
 @c @cindex advice, activating
 @cindex アドバイスの活性化
@@ -559,15 +590,6 @@
 このコマンドは@var{function}に対するアドバイスを活性にする。
 @end deffn
 
-@c To activate advice for a function whose advice is already active is not
-@c a no-op.  It is a useful operation which puts into effect any changes in
-@c that function's advice since the previous activation of advice for that
-@c function.
-関数のアドバイスがすでに活性になっているアドバイスを
-活性にしても意味があります。
-当該関数のアドバイスを活性にしたあとでアドバイスを変更した場合、
-その変更が効果を持つようにする操作になります。
-
 @c @deffn Command ad-deactivate function
 @deffn コマンド ad-deactivate function
 @c This command deactivates the advice for @var{function}.
@@ -578,18 +600,22 @@
 @cindex 不活性化、アドバイス
 @end deffn
 
-@c @deffn Command ad-activate-all &optional compile
-@deffn コマンド ad-activate-all &optional compile
-@c This command activates the advice for all functions.
-このコマンドはすべての関数に対するアドバイスを活性にする。
-@end deffn
-
 @c @deffn Command ad-deactivate-all
 @deffn コマンド ad-deactivate-all
 @c This command deactivates the advice for all functions.
 このコマンドはすべての関数に対するアドバイスを不活性にする。
 @end deffn
 
+@c @deffn Command ad-update-all &optional compile
+@deffn コマンド ad-update-all &optional compile
+@c This command activates the advice for all functions
+@c whose advice is already activated.  This is useful
+@c if you change the advice of some functions.
+このコマンドは、すでにアドバイスが活性になっているすべて
+の関数のアドバイスを活性化させる。いくつかの関数のアドバイスを変更した
+時に役に立つ。
+@end deffn
+
 @c @deffn Command ad-activate-regexp regexp &optional compile
 @deffn コマンド ad-activate-regexp regexp &optional compile
 @c This command activates all pieces of advice whose names match
@@ -634,8 +660,8 @@
 @c @deffn Command ad-start-advice
 @deffn コマンド ad-start-advice
 @c Turn on automatic advice activation when a function is defined or
-@c redefined.  If you turn on this mode, then advice really does
-@c take effect immediately when defined.
+@c redefined.  If you turn on this mode, then advice takes effect
+@c immediately when defined.
 関数を定義したり再定義したときにアドバイスを自動的に活性にする。
 このモードをオンにすると、アドバイスを定義するとただちに効果を持つようになる。
 @end deffn
@@ -651,7 +677,30 @@
 @c This variable controls whether to compile the combined definition
 @c that results from activating advice for a function.
 この変数は、関数に対するアドバイスを活性にした結果作られる
-結合定義をコンパイルするかどうか制御する。
+結合定義をコンパイルするかどうか制御します。
+
+@c A value of @code{always} specifies to compile unconditionally.
+@c A value of @code{nil} specifies never compile the advice.
+値が@code{always}であれば、無条件にコンパイルします。@code{nil}であれば
+常にコンパイルしない。
+
+@c A value of @code{maybe} specifies to compile if the byte-compiler is
+@c already loaded.  A value of @code{like-original} specifies to compile
+@c the advice if the original definition of the advised function is
+@c compiled or a built-in function.
+値が@code{maybe}であれば、バイトコンパイラがすでに読み込まれていればコ
+ンパイルを行う。値が@code{like-original}であれば、アドバイスされる関数
+の元定義がコンパイルされていたり、組み込み関数(built-in function)であ
+れば、コンパイルを行う。
+
+@c This variable takes effect only if the @var{compile} argument of
+@c @code{ad-activate} (or any of the above functions) was supplied as
+@c @code{nil}.  If that argument is non-@code{nil}, that means
+@c to compile the advice regardless.
+この変数は@code{ad-activate}(あるいは他の上記にあげた関数)の
+@var{compile}引数が@code{nil}の場合のみ有効になります。もしその引数が
+@code{nil}でなければ、そのアドバイスがこの変数の値に関わらずコンパイル
+されます。
 @end defopt
 
 @c   If the advised definition was constructed during ``preactivation''
@@ -665,7 +714,7 @@
 
 @node Enabling Advice
 @c @section Enabling and Disabling Advice
-@section アドバイスの有効化と無効化
+@section アドバイスの有効化と無効化 @emph{(2003/10/30)}
 @c @cindex enabling advice
 @c @cindex advice, enabling and disabling
 @c @cindex disabling advice
@@ -743,7 +792,7 @@
 
 @node Preactivation
 @c @section Preactivation
-@section 予約活性
+@section 予約活性 @emph{(2003/10/30)}
 @c @cindex preactivating advice
 @c @cindex advice, preactivating
 @cindex 予約活性、アドバイス
@@ -851,7 +900,7 @@
 
 @node Argument Access in Advice
 @c @section Argument Access in Advice
-@section アドバイスからの引数の参照
+@section アドバイスからの引数の参照 @emph{(2003/10/30)}
 
 @c   The simplest way to access the arguments of an advised function in the
 @c body of a piece of advice is to use the same names that the function
@@ -990,7 +1039,7 @@
 
 @node Subr Arguments
 @c @section Definition of Subr Argument Lists
-@section subr引数リストの定義
+@section subr引数リストの定義 @emph{(2003/10/30)}
 
 @c   When the advice facility constructs the combined definition, it needs
 @c to know the argument list of the original function.  This is not always
@@ -1029,13 +1078,14 @@
 
 @node Combined Definition
 @c @section The Combined Definition
-@section 結合定義
+@section 結合定義 @emph{(2003/10/30)}
 
-@c   Suppose that a function has @var{n} pieces of before-advice, @var{m}
-@c pieces of around-advice and @var{k} pieces of after-advice.  Assuming no
-@c piece of advice is protected, the combined definition produced to
-@c implement the advice for a function looks like this:
-関数には、@var{n}個の事前アドバイス（before-advice）、
+@c   Suppose that a function has @var{n} pieces of before-advice
+@c (numbered from 0 through @var{n}@minus{}1), @var{m} pieces of
+@c around-advice and @var{k} pieces of after-advice.  Assuming no piece
+@c of advice is protected, the combined definition produced to implement
+@c the advice for a function looks like this:
+関数には、@var{n}個(0から@var{n}@minus{}1として数えられる)の事前アドバイス（before-advice）、
 @var{m}個の包囲アドバイス（around-advice）、
 @var{k}個の事後アドバイス（after-advice）があるとします。
 保護したアドバイス断片はないと仮定すると、
@@ -1048,20 +1098,20 @@
   (let (ad-return-value)
     @r{before-0-body-form}...
          ....
-    @r{before-@var{n}-1-body-form}...
+    @r{before-@var{n}@minus{}1-body-form}...
     @r{around-0-body-form}...
        @r{around-1-body-form}...
              ....
-          @r{around-@var{m}-1-body-form}...
+          @r{around-@var{m}@minus{}1-body-form}...
              (setq ad-return-value
                    @r{apply original definition to @var{arglist}})
-          @r{other-around-@var{m}-1-body-form}...
+          @r{end-of-around-@var{m}@minus{}1-body-form}...
              ....
-       @r{other-around-1-body-form}...
-    @r{other-around-0-body-form}...
+       @r{end-of-around-1-body-form}...
+    @r{end-of-around-0-body-form}...
     @r{after-0-body-form}...
           ....
-    @r{after-@var{k}-1-body-form}...
+    @r{after-@var{k}@minus{}1-body-form}...
     ad-return-value))
 @end example
 
@@ -1072,13 +1122,13 @@
 
 @c The interactive form is present if the original function or some piece
 @c of advice specifies one.  When an interactive primitive function is
-@c advised, a special method is used: to call the primitive with
+@c advised, advice uses a special method: it calls the primitive with
 @c @code{call-interactively} so that it will read its own arguments.
 @c In this case, the advice cannot access the arguments.
 元関数やアドバイス断片のどれかに対話宣言があれば、
 対話宣言フォームが入ります。
 対話的な基本関数をアドバイスした場合には、
-特別な方法を使います。
+アドバイスは特別な方法を使います。
 つまり、基本関数を@code{call-interactively}で呼び出して、
 基本関数自身が引数を読み取るようにします。
 この場合、アドバイスからは引数を参照できません。
diff -x'*.html' -u ../../20-2-5/ja/backups.texi ./backups.texi
--- ../../20-2-5/ja/backups.texi	2004-04-26 06:01:54.000000000 +0900
+++ ./backups.texi	2004-04-26 06:02:36.000000000 +0900
@@ -1,11 +1,12 @@
 @c -*-texinfo-*-
 @c This is part of the GNU Emacs Lisp Reference Manual.
-@c Copyright (C) 1990, 1991, 1992, 1993, 1994, 1995 Free Software Foundation, Inc. 
+@c Copyright (C) 1990, 1991, 1992, 1993, 1994, 1995, 1999
+@c   Free Software Foundation, Inc. 
 @c See the file elisp.texi for copying conditions.
 @setfilename ../info/backups
 @node Backups and Auto-Saving, Buffers, Files, Top
 @c @chapter Backups and Auto-Saving
-@chapter バックアップと自動保存
+@chapter バックアップと自動保存 @emph{(2003/10/30)}
 
 @c   Backup files and auto-save files are two methods by which Emacs tries
 @c to protect the user from the consequences of crashes or of the user's
@@ -28,7 +29,7 @@
 
 @node Backup Files
 @c @section Backup Files
-@section バックアップファイル
+@section バックアップファイル @emph{(2003/10/30)}
 @c @cindex backup file
 @cindex バックアップファイル
 
@@ -78,7 +79,7 @@
 
 @node Making Backups
 @c @subsection Making Backup Files
-@subsection バックアップファイルの作成
+@subsection バックアップファイルの作成 @emph{(2003/10/30)}
 
 @defun backup-buffer
 @c   This function makes a backup of the file visited by the current
@@ -94,7 +95,7 @@
 @c been backed up on account of this buffer.  If it is non-@code{nil}, then
 @c the backup file has been written.  Otherwise, the file should be backed
 @c up when it is next saved (if backups are enabled).  This is a
-@c permanent local; @code{kill-local-variables} does not alter it.
+@c permanent local; @code{kill-all-local-variables} does not alter it.
 このバッファローカルな変数は、
 当該バッファのもとで当該バッファのファイルの
 バックアップを作成済みかどうかを表す。
@@ -102,7 +103,7 @@
 さもなければ、（バックアップがオンになっていれば）つぎに保存するときに
 ファイルのバックアップを作成するべきであることを表す。
 これは恒久的にバッファローカルであり、
-@code{kill-local-variables}によって変更されない。
+@code{kill-all-local-variables}によって変更されない。
 @end defvar
 
 @defopt make-backup-files
@@ -117,13 +118,13 @@
 @c The following example shows how to change the @code{make-backup-files}
 @c variable only in the Rmail buffers and not elsewhere.  Setting it
 @c @code{nil} stops Emacs from making backups of these files, which may
-@c save disk space.  (You would put this code in your @file{.emacs} file.)
+@c save disk space.  (You would put this code in your init file.)
 つぎの例は、rmailのバッファでのみ変数@code{make-backup-files}を
 変更する方法である。
 この変数を@code{nil}にすると、
 Emacsはそれらのファイルのバックアップを作成しなくなり、
 ディスクスペースの節約になる。
-（このコードを読者のファイル@file{.emacs}に入れてもよい。）
+（このコードを読者の設定ファイルに入れてもよい。）
 
 @smallexample
 @group
@@ -149,15 +150,14 @@
 さもなければ、本節の他の変数が、
 バックアップするかどうかやバックアップ方法を指定する。
 
-@c The default value is this:
-デフォルト値はつぎのとおりである。
-
-@example
-(lambda (name)
-  (or (< (length name) 5)
-      (not (string-equal "/tmp/"
-                         (substring name 0 5)))))
-@end example
+@findex normal-backup-enable-predicate
+@c The default value is @code{normal-backup-enable-predicate}, which checks
+@c for files in @code{temporary-file-directory} and
+@c @code{small-temporary-file-directory}.
+この変数のデフォルト値は@code{normal-backup-enable-predicate}であり、
+@code{temporary-file-directory} や
+@code{small-temporary-file-directory} にあるファイルを確認し、バックアッ
+プを行う。
 @end defvar
 
 @defvar backup-inhibited
@@ -184,9 +184,70 @@
 かわりに、@code{make-backup-files}に設定するべきである。
 @end defvar
 
+@defvar backup-directory-alist
+@tindex backup-directory-alist
+@c This variable's value is an alist of filename patterns and backup
+@c directory names.  Each element looks like
+これはファイル名の正規表現とバックアップディレクトリの連想リストである。
+それぞれの要素は以下のようになる。
+@smallexample
+(@var{regexp} . @var{directory})
+@end smallexample
+
+@noindent
+@c Backups of files with names matching @var{regexp} will be made in
+@c @var{directory}.  @var{directory} may be relative or absolute.  If it is
+@c absolute, so that all matching files are backed up into the same
+@c directory, the file names in this directory will be the full name of the
+@c file backed up with all directory separators changed to @samp{!} to
+@c prevent clashes.  This will not work correctly if your filesystem
+@c truncates the resulting name.
+@var{regexp}に一致した名前を持つファイルのバックアップは
+@var{directory}に保存される。@var{directory}が相対パスか絶対パスである。
+絶対パスであれば、ある@var{regexp}に一致したファイルのバックアップはす
+べて同じディレクトリにできる。そして、そのバックアップファイルの名前は
+衝突を防ぐために、ディレクトリの区切り文字を@samp{!}に変えたフルパスに
+なる。この方法はファイルシステムがファイル名を短縮して与える場合にはう
+まく動作しないだろう。
+
+@c For the common case of all backups going into one directory, the alist
+@c should contain a single element pairing @samp{"."} with the appropriate
+@c directory name.
+すべてのバックアップが1つのディレクトリにできるようにするには、
+@samp{"."}と適切なディレクトリのペアを持つ連想リストであればよい。
+
+@c If this variable is @code{nil}, or it fails to match a filename, the
+@c backup is made in the original file's directory.
+この変数が@code{nil}かファイル名に一致しなかった場合には、バックアップ
+ファイルは元ファイルと同じディレクトリにできる。
+
+@c On MS-DOS filesystems without long names this variable is always
+@c ignored.
+この変数は、MS-DOSのように長いファイル名に対応していないシステムでは無
+視される。
+@end defvar
+
+@defvar make-backup-file-name-function
+@tindex make-backup-file-name-function
+@c This variable's value is a function to use for making backups instead of
+@c the default @code{make-backup-file-name}.  A value of nil gives the
+@c default @code{make-backup-file-name} behaviour.
+この変数の値は関数名である。この関数はバックアップファイル名を作る関数
+であり、デフォルト関数 @code{make-backup-file-name} のかわりに使われる。
+nilであれば、@code{make-backup-file-name} と同じことになる。
+
+@c This could be buffer-local to do something special for specific
+@c files.  If you define it, you may need to change
+@c @code{backup-file-name-p} and @code{file-name-sans-versions} too.
+ある種のファイルでは特別な処理ができるように、この変数はバッファローカ
+ルになっている。もしこれを設定した場合には、@code{backup-file-name-p}
+や @code{file-name-sans-versions} の変更も必要となる場合がある。
+@end defvar
+
+
 @node Rename or Copy
 @c @subsection Backup by Renaming or by Copying?
-@subsection 改名によるバックアップかコピーによるバックアップか
+@subsection 改名によるバックアップかコピーによるバックアップか @emph{(2003/10/30)}
 @c @cindex backup files, how to make them
 @cindex バックアップファイルの作成方法
 @cindex 作成方法、バックアップファイル
@@ -288,9 +349,30 @@
 というのは、その変数が@code{nil}以外の場合にコピーを用いるからである。
 @end defvar
 
+@defvar backup-by-copying-when-privileged-mismatch
+@c This variable, if non-@code{nil}, specifies the same behavior as
+@c @code{backup-by-copying-when-mismatch}, but only for certain user-id
+@c values: namely, those less than or equal to a certain number.  You set
+@c this variable to that number.
+この変数が@code{nil}でなければ、
+@code{backup-by-copying-when-mismatch} と同じ動作になる。ただし、ある
+ユーザIDの値、すなわちある数以下のIDの場合に限られる。この変数には数整
+数を指定する。
+
+@c Thus, if you set @code{backup-by-copying-when-privileged-mismatch}
+@c to 0, backup by copying is done for the superuser only,
+@c when necessary to prevent a change in the owner of the file.
+そうして、@code{backup-by-copying-when-privileged-mismatch} に0を設定
+すると、コピーによるバックアップはスーパーユーザで、ファイルの所有者の
+変更を破棄する必要がある時にのみ、コピーによるバックアップが行われる。
+
+@c The default is 200.
+デフォルトは200である。
+@end defvar
+
 @node Numbered Backups
 @c @subsection Making and Deleting Numbered Backup Files
-@subsection 番号付きバックアップファイルの作成と削除
+@subsection 番号付きバックアップファイルの作成と削除 @emph{(2003/10/30)}
 
 @c   If a file's name is @file{foo}, the names of its numbered backup
 @c versions are @file{foo.~@var{v}~}, for various integers @var{v}, like
@@ -368,14 +450,15 @@
 どの番号のバックアップを削除すべきかを決定する責任があるが、
 それ自身はそれらを削除しない。
 
-@tindex delete-old-versions
 @defopt delete-old-versions
-@c If this variable is non-@code{nil}, then saving a file deletes excess
-@c backup versions silently.  Otherwise, it asks the user whether to delete
-@c them.
-この変数が@code{nil}以外であると、
-ファイルを保存すると黙って範囲外のバックアップを削除する。
-さもなければ、それを削除するかどうかユーザーに問い合わせる。
+@c If this variable is @code{t}, then saving a file deletes excess
+@c backup versions silently.  If it is @code{nil}, that means
+@c to ask for confirmation before deleting excess backups.
+@c Otherwise, they are not deleted at all.
+この変数が@code{t}であると、
+ファイルを保存すると黙って範囲外のバックアップを削除する。@code{nil}
+であれば、それを削除するかどうかユーザーに問い合わせる。さもなければ、
+すべて削除されない。
 @end defopt
 
 @defopt dired-kept-versions
@@ -392,7 +475,7 @@
 
 @node Backup Names
 @c @subsection Naming Backup Files
-@subsection バックアップファイルの命名方法
+@subsection バックアップファイルの命名方法 @emph{(2003/10/30)}
 
 @c   The functions in this section are documented mainly because you can
 @c customize the naming conventions for backup files by redefining them.
@@ -429,7 +512,7 @@
 (defun backup-file-name-p (file)
   "Return non-nil if FILE is a backup file \
 name (numeric or not)..."
-  (string-match "~$" file))
+  (string-match "~\\'" file))
 @end group
 @end smallexample
 
@@ -465,7 +548,7 @@
 @smallexample
 @group
 (defun make-backup-file-name (file)
-  "Create the non-numeric backup file name for FILE@enddots{}"
+  "Create the non-numeric backup file name for FILE..."
   (concat file "~"))
 @end group
 @end smallexample
@@ -556,7 +639,7 @@
 
 @node Auto-Saving
 @c @section Auto-Saving
-@section 自動保存
+@section 自動保存 @emph{(2003/10/30)}
 @c @cindex auto-saving
 @cindex 自動保存
 
@@ -591,16 +674,17 @@
 @example
 @group
 buffer-auto-save-file-name
-=> "/xcssun/users/rms/lewis/#files.texi#"
+     @result{} "/xcssun/users/rms/lewis/#backups.texi#"
 @end group
 @end example
 @end defvar
 
 @c @deffn Command auto-save-mode arg
 @deffn コマンド auto-save-mode arg
+@deffn Command auto-save-mode arg
 @c When used interactively without an argument, this command is a toggle
 @c switch: it turns on auto-saving of the current buffer if it is off, and
-@c vice-versa.  With an argument @var{arg}, the command turns auto-saving
+@c vice versa.  With an argument @var{arg}, the command turns auto-saving
 @c on if the value of @var{arg} is @code{t}, a nonempty list, or a positive
 @c integer.  Otherwise, it turns auto-saving off.
 引数なしに対話的に呼ばれると、
@@ -615,28 +699,28 @@
 
 @defun auto-save-file-name-p filename
 @c This function returns a non-@code{nil} value if @var{filename} is a
-@c string that could be the name of an auto-save file.  It works based on
-@c knowledge of the naming convention for auto-save files: a name that
+@c string that could be the name of an auto-save file.  It assumes
+@c the usual naming convention for auto-save files: a name that
 @c begins and ends with hash marks (@samp{#}) is a possible auto-save file
 @c name.  The argument @var{filename} should not contain a directory part.
-この関数は、@var{filename}が自動保存ファイルの名前でありえれば、
+この関数は、@var{filename}が自動保存ファイルの名前であるならば、
 @code{nil}以外を返す。
-この関数は自動保存ファイルの名前の慣習に基づいて動作する。
-名前がハッシュマーク（@samp{#}）で始まりかつ終っていれば、
-自動保存ファイルの名前である可能性がある。
-引数@var{filename}にはディレクトリ部分を含まないこと。
+この関数は自動保存ファイルの通常の名前の慣習を仮定する。
+つまり、名前がハッシュマーク（@samp{#}）で始まりかつ終っていれば、
+自動保存ファイルの名前である可能性があると判断する。
+ただし、引数@var{filename}にはディレクトリ部分を含まないこと。
 
 @example
 @group
 (make-auto-save-file-name)
-     @result{} "/xcssun/users/rms/lewis/#files.texi#"
+     @result{} "/xcssun/users/rms/lewis/#backups.texi#"
 @end group
 @group
-(auto-save-file-name-p "#files.texi#")
+(auto-save-file-name-p "#backups.texi#")
      @result{} 0
 @end group
 @group
-(auto-save-file-name-p "files.texi")
+(auto-save-file-name-p "backups.texi")
      @result{} nil
 @end group
 @end example
@@ -664,15 +748,16 @@
 
 @defun make-auto-save-file-name
 @c This function returns the file name to use for auto-saving the current
-@c buffer.  This is just the file name with hash marks (@samp{#}) appended
-@c and prepended to it.  This function does not look at the variable
-@c @code{auto-save-visited-file-name} (described below); you should check
-@c that before calling this function.
+@c buffer.  This is just the file name with hash marks (@samp{#}) prepended
+@c and appended to it.  This function does not look at the variable
+@c @code{auto-save-visited-file-name} (described below); callers of this
+@c function should check that variable first.
 この関数は、カレントバッファの自動保存に使うファイル名を返す。
 その名前は、単にファイル名の前後にハッシュマーク（@samp{#}）を
 付加するだけである。
 この関数は変数@code{auto-save-visited-file-name}（下記参照）を
-調べないため、読者はこの関数を呼び出すまえにその変数を検査しておくこと。
+調べない。そのため、この関数を呼び出すような関数は、まずその変数を検査
+しておくべきである。
 
 @example
 @group
@@ -722,12 +807,13 @@
 通常、この変数は@code{nil}であり、自動保存ファイルには
 @code{make-auto-save-file-name}で作成した別の名前がある。
 
-@c When you change the value of this variable, the value does not take
-@c effect until the next time auto-save mode is reenabled in any given
-@c buffer.  If auto-save mode is already enabled, auto-saves continue to go
-@c in the same file name until @code{auto-save-mode} is called again.
-この変数の値を変更しても、
-バッファの自動保存をつぎにオンにするまで、この値は効果を発揮しない。
+@c When you change the value of this variable, the new value does not take
+@c effect in an existing buffer until the next time auto-save mode is
+@c reenabled in it.  If auto-save mode is already enabled, auto-saves
+@c continue to go in the same file name until @code{auto-save-mode} is
+@c called again.
+この変数の値を変更しても、すでにあるバッファでは、
+バッファの自動保存をつぎにオンにするまで、新しい値は効果を発揮しない。
 自動保存がすでにオンであると、
 @code{auto-save-mode}を再度呼び出すまでは、
 同じファイルの名前に自動保存し続ける。
@@ -750,26 +836,33 @@
 @end defun
 
 @defopt auto-save-interval
-@c The value of this variable is the number of characters that Emacs
-@c reads from the keyboard between auto-saves.  Each time this many more
-@c characters are read, auto-saving is done for all buffers in which it is
+@c The value of this variable specifies how often to do auto-saving, in
+@c terms of number of input events.  Each time this many additional input
+@c events are read, Emacs does auto-saving for all buffers in which that is
 @c enabled.
 この変数の値は、つぎの自動保存までに
 Emacsがキーボードから読み取る文字の個数である。
-これだけの文字を読み取ると、自動保存をオンにしてあるすべてのバッファを
+これだけの文字を読み取るたびに、自動保存をオンにしてあるすべてのバッファを
 自動保存する。
 @end defopt
 
 @defopt auto-save-timeout
 @c The value of this variable is the number of seconds of idle time that
 @c should cause auto-saving.  Each time the user pauses for this long,
-@c Emacs auto-saves any buffers that need it.  (Actually, the specified
-@c timeout is multiplied by a factor depending on the size of the current
-@c buffer.)
+@c Emacs does auto-saving for all buffers in which that is enabled.  (If
+@c the current buffer is large, the specified timeout is multiplied by a
+@c factor that increases as the size increases; for a million-byte
+@c buffer, the factor is almost 4.)
 この変数の値は、自動保存を引き起こすまでのなにもしていない期間の秒数である。
 この時間だけユーザーがなにもしないと、
-Emacsは自動保存する必要があるバッファを自動保存する。
-（実際には、カレントバッファの大きさに依存した係数を指定時間に掛ける。）
+Emacsは自動保存する必要があるすべてのバッファを自動保存する。
+（カレントバッファが大きい場合には、指定した時間にサイズに依存した係数
+を掛ける。これは100万バイトでおよそ4である）。
+
+@c If the value is zero or nil, then auto-saving is not done as a result
+@c of idleness, only after a certain number of input events
+@c as specified by @code{auto-save-interval}.
+この変数が0かnilの場合には、なにもしていなくても自動保存はさ
 @end defopt
 
 @defvar auto-save-hook
@@ -843,7 +936,7 @@
 
 @defvar buffer-saved-size
 @c The value of this buffer-local variable is the length of the current
-@c buffer as of the last time it was read in, saved, or auto-saved.  This is
+@c buffer, when it was last read in, saved, or auto-saved.  This is
 @c used to detect a substantial decrease in size, and turn off auto-saving
 @c in response.
 このバッファローカルな変数の値は、
@@ -851,15 +944,17 @@
 カレントバッファの長さである。
 サイズの大幅な変更を検知すると自動保存をオフにするために使われる。
 
-@c If it is @minus{}1, that means auto-saving is temporarily shut off in this
-@c buffer due to a substantial deletion.  Explicitly saving the buffer
-@c stores a positive value in this variable, thus reenabling auto-saving.
-@c Turning auto-save mode off or on also alters this variable.
+@c If it is @minus{}1, that means auto-saving is temporarily shut off in
+@c this buffer due to a substantial decrease in size.  Explicitly saving
+@c the buffer stores a positive value in this variable, thus reenabling
+@c auto-saving.  Turning auto-save mode off or on also updates this
+@c variable, so that the substantial decrease in size is forgotten.
 この変数が@minus{}1であると、
-大幅に削除したために一時的に自動保存をオフにしたことを意味する。
+大幅にサイズが減少したために一時的に自動保存をオフにしたことを意味する。
 明示的にバッファを保存すると、この変数に正の値が保存され、
 自動保存が再度オンになる。
-自動保存をオフにしたりオンにしても、この変数が変更される。
+自動保存をオフにしたりオンにしても、この変数が変更される。つまり、大幅
+なサイズ減少の情報は消えてしまうことになる。
 @end defvar
 
 @defvar auto-save-list-file-name
@@ -876,26 +971,39 @@
 1行目は訪問しているファイルの名前を与え（訪問していなければ空）、
 2行目は自動保存ファイルの名前を与える。
 
-@c If Emacs exits normally, it deletes this file.  If Emacs crashes, you
+@c When Emacs exits normally, it deletes this file; if Emacs crashes, you
 @c can look in the file to find all the auto-save files that might contain
 @c work that was otherwise lost.  The @code{recover-session} command uses
-@c these files.
-Emacsが正常に終ると、このファイルは削除される。
-Emacsがクラッシュしたら、失われてしまう作業内容を含んでいるかもしれない
-自動保存ファイルを探すために読者はこのファイルを調べられる。
-コマンド@code{recover-session}はこれらのファイルを使う。
-
-@c The default name for this file is in your home directory and starts with
-@c @samp{.saves-}.  It also contains the Emacs process @sc{id} and the host
-@c name.
+@c this file to find them.
+Emacsが正常に終ると、このファイルは削除される。Emacsがクラッシュしたら、
+失われてしまう作業内容を含んでいるかもしれない自動保存ファイルを探すた
+めに読者はこのファイルを調べられる。コマンド@code{recover-session}は作
+業中だったファイルを探すために、このファイルを使う。
+
+@c The default name for this file specifies your home directory and starts
+@c with @samp{.saves-}.  It also contains the Emacs process @sc{id} and the
+@c host name.
 このファイルのデフォルト名は、
 読者のホームディレクトリにあり@samp{.saves-}で始まる。
 さらに、Emacsのプロセス@sc{id}とホスト名も含む。
 @end defvar
 
+@defvar auto-save-list-file-prefix
+@tindex auto-save-list-file-prefix
+@c After Emacs reads your init file, it initializes
+@c @code{auto-save-list-file-name} (if you have not already set it
+@c non- @code{nil}) based on this prefix, adding the host name and process
+@c ID.  If you set this to @code{nil} in your init file, then Emacs does
+@c not initialize @code{auto-save-list-file-name}.
+Emacsが初期化ファイルを読み込んだ後に、@code{auto-save-list-file-name}
+(すでに@code{nil}以外を設定していなければ)、この変数を基にホスト名やプ
+ロセスIDを加えて初期化される。初期化ファイルでこの変数に@code{nil}を設
+定すると、Emacsは@code{auto-save-list-file-name}を初期化しない。
+@end defvar
+
 @node Reverting
 @c @section Reverting
-@section 復元
+@section 復元 @emph{(2003/10/30)}
 
 @c   If you have made extensive changes to a file and then change your mind
 @c about them, you can get rid of them by reading in the previous version
@@ -955,23 +1063,28 @@
 @end deffn
 
 @c You can customize how @code{revert-buffer} does its work by setting
-@c these variables---typically, as buffer-local variables.
-以下の変数を典型的にはバッファローカルな変数として設定することで
+@c the variables described in the rest of this section.
+この節の残りで述べる変数を設定することで、
 @code{revert-buffer}の動作をカスタマイズできます。
 
 @defvar revert-without-query
 @c This variable holds a list of files that should be reverted without
-@c query.  The value is a list of regular expressions.  If a file name
-@c matches one of these regular expressions, then @code{revert-buffer}
-@c reverts the file without asking the user for confirmation, if the file
-@c has changed on disk and the buffer is not modified.
+@c query.  The value is a list of regular expressions.  If the visited file
+@c name matches one of these regular expressions, and the file has changed
+@c on disk but the buffer is not modified, then @code{revert-buffer}
+@c reverts the file without asking the user for confirmation.
 この変数は、問い合わせずに復元すべきファイルのリストを保持する。
 値は、正規表現のリストである。
-ファイル名がこれらの正規表現の1つに一致すると、
+訪問中のファイル名がこれらの正規表現の1つに一致すると、
 ディスク上のファイルが変更されていて当該バッファが未変更であれば、
 @code{revert-buffer}はユーザーに確認せずに当該ファイルを復元する。
 @end defvar
 
+@c   Some major modes customize @code{revert-buffer} by making
+@c buffer-local bindings for these variables:
+あるメジャーモードは これらの関数をバッファローカルで設定することで
+、@code{revert-buffer}をカスタマイズしています。
+
 @defvar revert-buffer-function
 @c The value of this variable is the function to use to revert this buffer.
 @c If non-@code{nil}, it is called as a function with no arguments to do
@@ -983,16 +1096,17 @@
 
 @c Modes such as Dired mode, in which the text being edited does not
 @c consist of a file's contents but can be regenerated in some other
-@c fashion, give this variable a buffer-local value that is a function to
+@c fashion, can give this variable a buffer-local value that is a function to
 @c regenerate the contents.
 diredモードなどのモードでは、
 編集中のテキストはファイルの内容ではなく
 別の方法で再生成されたものなので、
-この変数のバッファローカルな値には内容を再生成する関数を指定すること。
+この変数のバッファローカルな値には内容を再生成する関数を指定することが
+できます。
 @end defvar
 
 @defvar revert-buffer-insert-file-contents-function
-@c The value of this variable, if non-@code{nil}, is the function to use to
+@c The value of this variable, if non-@code{nil}, specifies the function to use to
 @c insert the updated contents when reverting this buffer.  The function
 @c receives two arguments: first the file name to use; second, @code{t} if
 @c the user has asked to read the auto-save file.
@@ -1002,31 +1116,31 @@
 第1引数は、使用するファイル名である。
 第2引数は、ユーザーが自動保存ファイルを
 読むように指示していると@code{t}である。
+
+@c The reason for a mode to set this variable instead of
+@c @code{revert-buffer-function}  is to avoid duplicating or replacing the
+@c rest of what @code{revert-buffer} does: asking for confirmation,
+@c clearing the undo list, deciding the proper major mode, and running the
+@c hooks listed below.
+あるモードでこの変数を@code{revert-buffer-function}のかわりに設定する
+のは、@code{revert-buffer}が行う処理の残りが重複したり置き換わってしま
+うのを避けるためである。つまり、アンドゥ情報を消去する場合や適当なメ
+ジャーモードを決定する場合、以下で述べるフックを走らせる場合に確認を行
+う。
 @end defvar
 
 @defvar before-revert-hook
-@c This normal hook is run by @code{revert-buffer} before actually
+@c This normal hook is run by @code{revert-buffer} before
 @c inserting the modified contents---but only if
 @c @code{revert-buffer-function} is @code{nil}.
 このノーマルフックは、@code{revert-buffer-function}が@code{nil}である
-場合にのみ、変更内容を実際に挿入するまえに@code{revert-buffer}が実行する。
-
-@c Font Lock mode uses this hook to record that the buffer contents are no
-@c longer fontified.
-フォントロック（font-lock）モードはこのフックを使って、
-バッファ内容をこれ以上強調表示しないことを記録する。
+場合にのみ、変更内容を挿入するまえに@code{revert-buffer}が実行する。
 @end defvar
 
 @defvar after-revert-hook
-@c This normal hook is run by @code{revert-buffer} after actually inserting
+@c This normal hook is run by @code{revert-buffer} after inserting
 @c the modified contents---but only if @code{revert-buffer-function} is
 @c @code{nil}.
 このノーマルフックは、@code{revert-buffer-function}が@code{nil}である
-場合にのみ、変更内容を実際に挿入したあとに@code{revert-buffer}が実行する。
-
-@c Font Lock mode uses this hook to recompute the fonts for the updated
-@c buffer contents.
-フォントロック（font-lock）モードはこのフックを使って、
-更新されたバッファ内容に対するフォントを再計算する。
+場合にのみ、変更内容を挿入したあとに@code{revert-buffer}が実行する。
 @end defvar
-
diff -x'*.html' -u ../../20-2-5/ja/buffers.texi ./buffers.texi
--- ../../20-2-5/ja/buffers.texi	2004-04-26 06:01:48.000000000 +0900
+++ ./buffers.texi	2004-04-26 06:02:30.000000000 +0900
@@ -1,18 +1,19 @@
 @c -*-texinfo-*-
 @c This is part of the GNU Emacs Lisp Reference Manual.
-@c Copyright (C) 1990, 1991, 1992, 1993, 1994, 1995, 1998 Free Software Foundation, Inc. 
+@c Copyright (C) 1990, 1991, 1992, 1993, 1994, 1995, 1998, 1999
+@c   Free Software Foundation, Inc. 
 @c See the file elisp.texi for copying conditions.
 @setfilename ../info/buffers
 @node Buffers, Windows, Backups and Auto-Saving, Top
 @c @chapter Buffers
-@chapter バッファ
+@chapter バッファ @emph{(2003/10/30)}
 @c @cindex buffer
 @cindex バッファ
 
 @c   A @dfn{buffer} is a Lisp object containing text to be edited.  Buffers
 @c are used to hold the contents of files that are being visited; there may
 @c also be buffers that are not visiting files.  While several buffers may
-@c exist at one time, exactly one buffer is designated the @dfn{current
+@c exist at one time, only one buffer is designated the @dfn{current
 @c buffer} at any time.  Most editing commands act on the contents of the
 @c current buffer.  Each buffer, including the current buffer, may or may
 @c not be displayed in any windows.
@@ -21,7 +22,7 @@
 バッファは、訪問しているファイルのテキストを保持するために使われますが、
 ファイルを訪問していないバッファもあります。
 一度に複数のバッファが存在してかまいませんが、
-ある時点ではたった1つのバッファが@dfn{カレントバッファ}
+ある時点では1つのバッファだけが@dfn{カレントバッファ}
 （current buffer）として区別されます。
 ほとんどの編集コマンドは、カレントバッファの内容に作用します。
 カレントバッファを含む各バッファは、ウィンドウに表示されることも
@@ -30,7 +31,7 @@
 @menu
 * Buffer Basics::       What is a buffer?
 * Current Buffer::      Designating a buffer as current
-                          so primitives will access its contents.
+                          so that primitives will access its contents.
 * Buffer Names::        Accessing and changing buffer names.
 * Buffer File Name::    The buffer file name indicates which file is visited.
 * Buffer Modification:: A buffer is @dfn{modified} if it needs to be saved.
@@ -41,39 +42,39 @@
 * Creating Buffers::    Functions that create buffers.
 * Killing Buffers::     Buffers exist until explicitly killed.
 * Indirect Buffers::    An indirect buffer shares text with some other buffer.
+* Buffer Gap::          The gap in the buffer.
 @end menu
 
 @node Buffer Basics
 @comment  node-name,  next,  previous,  up
 @c @section Buffer Basics
-@section バッファの基本
+@section バッファの基本 @emph{(2003/10/30)}
 
-@ifinfo
+@ifnottex
 @c   A @dfn{buffer} is a Lisp object containing text to be edited.  Buffers
 @c are used to hold the contents of files that are being visited; there may
-@c also be buffers that are not visiting files.  While several buffers may
-@c exist at one time, exactly one buffer is designated the @dfn{current
+@c also be buffers that are not visiting files.  Although several buffers
+@c normally exist, only one buffer is designated the @dfn{current
 @c buffer} at any time.  Most editing commands act on the contents of the
 @c current buffer.  Each buffer, including the current buffer, may or may
 @c not be displayed in any windows.
 @dfn{バッファ}（buffer）は、編集するテキストを収めている
 Lispオブジェクトです。
 バッファは、訪問しているファイルのテキストを保持するために使われますが、
-ファイルを訪問していないバッファもあります。
-一度に複数のバッファが存在してかまいませんが、
-ある時点ではたった1つのバッファが@dfn{カレントバッファ}
-（current buffer）として区別されます。
+ファイルを訪問していないバッファもあります。複数のバッファは普通に存在
+できますが、常に一つのバッファだけが@dfn{カレントバッファ}(current
+buffer)となります。
 ほとんどの編集コマンドは、カレントバッファの内容に作用します。
 カレントバッファを含む各バッファは、ウィンドウに表示されることも
 されないこともあります。
-@end ifinfo
+@end ifnottex
 
 @c   Buffers in Emacs editing are objects that have distinct names and hold
 @c text that can be edited.  Buffers appear to Lisp programs as a special
 @c data type.  You can think of the contents of a buffer as a string that
 @c you can extend; insertions and deletions may occur in any part of the
 @c buffer.  @xref{Text}.
-Emacsの編集においてバッファとは、
+@c Emacsの編集においてバッファとは、
 異なる名前を持ち編集可能なテキストを保持するオブジェクトです。
 バッファは、Lispプログラムには特別なデータ型として見えます。
 バッファの内容は拡張可能な文字列であると考えることができます。
@@ -126,7 +127,7 @@
 
 @node Current Buffer
 @c @section The Current Buffer
-@section カレントバッファ
+@section カレントバッファ @emph{(2003/10/30)}
 @c @cindex selecting a buffer
 @c @cindex changing to another buffer
 @c @cindex current buffer
@@ -144,7 +145,7 @@
 @c always so: a Lisp program can temporarily designate any buffer as
 @c current in order to operate on its contents, without changing what is
 @c displayed on the screen.
-一般に、Emacsセッションには多くのバッファがあります。
+@c 一般に、Emacsセッションには多くのバッファがあります。
 いつの時点でも、それらの1つを@dfn{カレントバッファ}
 （current buffer）として区別します。
 バッファ内のテキストを検査したり変更する基本関数は
@@ -170,7 +171,7 @@
 @c Emacs reads a command is the buffer that the command will apply to.
 @c (@xref{Command Loop}.)  Therefore, @code{set-buffer} is not the way to
 @c switch visibly to a different buffer so that the user can edit it.  For
-@c this, you must use the functions described in @ref{Displaying Buffers}.
+@c that, you must use the functions described in @ref{Displaying Buffers}.
 編集コマンドがエディタコマンドループへ戻ると、
 コマンドループは、混乱を避けるために、選択されているウィンドウに
 表示されているバッファをカレントバッファとします。
@@ -181,10 +182,10 @@
 ユーザーが編集できるように別のバッファへ切り替える方法にはなりません。
 これには、@ref{Displaying Buffers}で述べている関数を使う必要があります。
 
-@c   However, Lisp functions that change to a different current buffer
+@c   @strong{Note:} Lisp functions that change to a different current buffer
 @c should not depend on the command loop to set it back afterwards.
 @c Editing commands written in Emacs Lisp can be called from other programs
-@c as well as from the command loop.  It is convenient for the caller if
+@c as well as from the command loop; it is convenient for the caller if
 @c the subroutine does not change which buffer is current (unless, of
 @c course, that is the subroutine's purpose).  Therefore, you should
 @c normally use @code{set-buffer} within a @code{save-current-buffer} or
@@ -264,10 +265,10 @@
 始めにカレントバッファであったバッファが、
 変数束縛が解除されるときにはつねにカレントバッファであるようにします。
 
-@c   It is not reliable to change the current buffer back with
-@c @code{set-buffer}, because that won't do the job if a quit happens while
-@c the wrong buffer is current.  Here is what @emph{not} to do:
-@code{set-buffer}でもとのカレントバッファに戻すのでは信頼性がありません。
+@c   Do not rely on using @code{set-buffer} to change the current buffer
+@c back, because that won't do the job if a quit happens while the wrong
+@c buffer is current.  Here is what @emph{not} to do:
+@code{set-buffer}でカレントバッファに戻すことを期待してはいけません。
 正しくないバッファがカレントバッファであるときに
 中断が起きると戻せないからです。
 しては@emph{いけない}ことをつぎに示します。
@@ -310,12 +311,11 @@
 @end defun
 
 @defun set-buffer buffer-or-name
-@c This function makes @var{buffer-or-name} the current buffer.  It does
-@c not display the buffer in the currently selected window or in any other
-@c window, so the user cannot necessarily see the buffer.  But Lisp
-@c programs can in any case work on it.
+@c This function makes @var{buffer-or-name} the current buffer.  This does
+@c not display the buffer in any window, so the user cannot necessarily see
+@c the buffer.  But Lisp programs will now operate on it.
 この関数は、@var{buffer-or-name}をカレントバッファにする。
-この関数は現在選択されているウィンドウやその他のウィンドウに
+この関数はどのウィンドウにも
 当該バッファを表示しないので、ユーザーが当該バッファを見られるとは限らない。
 しかし、Lispプログラムはいずれにしても当該バッファを操作できる。
 
@@ -327,7 +327,6 @@
 @end defun
 
 @defspec save-current-buffer body...
-@tindex save-current-buffer
 @c The @code{save-current-buffer} macro saves the identity of the current
 @c buffer, evaluates the @var{body} forms, and finally restores that buffer
 @c as current.  The return value is the value of the last form in
@@ -352,7 +351,6 @@
 @end defspec
 
 @defmac with-current-buffer buffer body...
-@tindex with-current-buffer
 @c The @code{with-current-buffer} macro saves the identity of the current
 @c buffer, makes @var{buffer} current, evaluates the @var{body} forms, and
 @c finally restores the buffer.  The return value is the value of the last
@@ -368,7 +366,6 @@
 @end defmac
 
 @defmac with-temp-buffer body...
-@tindex with-temp-buffer
 @c The @code{with-temp-buffer} macro evaluates the @var{body} forms
 @c with a temporary buffer as the current buffer.  It saves the identity of
 @c the current buffer, creates a temporary buffer and makes it current,
@@ -400,7 +397,7 @@
 
 @node Buffer Names
 @c @section Buffer Names
-@section バッファ名
+@section バッファ名 @emph{(2003/10/30)}
 @c @cindex buffer names
 @cindex バッファ名
 
@@ -481,12 +478,14 @@
 @c already in use.  However, if @var{unique} is non-@code{nil}, it modifies
 @c @var{newname} to make a name that is not in use.  Interactively, you can
 @c make @var{unique} non-@code{nil} with a numeric prefix argument.
+@c (This is how the command @code{rename-uniquely} is implemented.)
 通常、@var{newname}がすでに使われていると、
 @code{rename-buffer}はエラーを通知する。
 しかし、@var{unique}が@code{nil}以外であると、
 @var{newname}を未使用な名前に修正する。
 対話的に呼び出した場合、数値前置引数を指定すると
-@var{unique}は@code{nil}以外になる。
+@var{unique}は@code{nil}以外になる。(このように@code{rename-uniquely}
+は実行されるのです)
 
 @c One application of this command is to rename the @samp{*shell*} buffer
 @c to some other name, thus making it possible to create a second shell
@@ -500,13 +499,13 @@
 @c This function returns the buffer specified by @var{buffer-or-name}.
 @c If @var{buffer-or-name} is a string and there is no buffer with that
 @c name, the value is @code{nil}.  If @var{buffer-or-name} is a buffer, it
-@c is returned as given.  (That is not very useful, so the argument is usually 
-@c a name.)  For example:
+@c is returned as given; that is not very useful, so the argument is usually 
+@c a name.  For example:
 この関数は、@var{buffer-or-name}で指定したバッファを返す。
 @var{buffer-or-name}が文字列であり、
 そのような名前のバッファが存在しなければ@code{nil}を返す。
 @var{buffer-or-name}がバッファであればそれ自身を返す。
-（これは有用ではないので、普通、引数は名前である。）
+これは有用ではないので、普通、引数は名前である。
 例を示す。
 
 @example
@@ -529,7 +528,7 @@
 @end defun
 
 @c Emacs 19 feature
-@defun generate-new-buffer-name starting-name
+@defun generate-new-buffer-name starting-name &rest ignore
 @c This function returns a name that would be unique for a new buffer---but
 @c does not create the buffer.  It starts with @var{starting-name}, and
 @c produces a name not currently in use for any buffer by appending a
@@ -539,6 +538,32 @@
 @samp{<@dots{}>}で囲った数を追加することで、
 どのバッファでも現在使っていない名前を作成する。
 
+@c If the optional second argument @var{ignore} is non-@code{nil}, it
+@c should be a string; it makes a difference if it is a name in the
+@c sequence of names to be tried.  That name will be considered acceptable,
+@c if it is tried, even if a buffer with that name exists.  Thus, if
+@c buffers named @samp{foo}, @samp{foo<2>}, @samp{foo<3>} and @samp{foo<4>}
+@c exist,
+2番目のオプション引数@var{ignore}が@code{nil}でなければ、文字列を与え
+る必要がある。一意な名前を探す時に、@var{ignore}で設定した名前があると
+動作が異なってくる。指定した名前がたとえ既に存在しているバッファの名前
+であったとしても、一意な名前と認識するのである。例えば、@samp{foo},
+@samp{foo<2>}, @samp{foo<3>} and @samp{foo<4>} という名前のバッファが
+あるとすると、
+
+@example
+(generate-new-buffer-name "foo")
+     @result{} "foo<5>"
+(generate-new-buffer-name "foo" "foo<3>")
+     @result{} "foo<3>"
+(generate-new-buffer-name "foo" "foo<6>")
+     @result{} "foo<5>"
+@end example
+
+のように、@samp{foo<3>}というバッファが既に存在していても、
+@var{ignore} で設定すると、一意なバッファ名として@samp{foo<3>} が返っ
+てくるのである。
+
 @c See the related function @code{generate-new-buffer} in @ref{Creating
 @c Buffers}.
 @ref{Creating Buffers}の関連する関数@code{generate-new-buffer}を参照。
@@ -546,7 +571,7 @@
 
 @node Buffer File Name
 @c @section Buffer File Name
-@section バッファファイル名
+@section バッファファイル名 @emph{(2003/10/30)}
 @c @cindex visited file
 @c @cindex buffer file name
 @c @cindex file name of buffer
@@ -593,12 +618,13 @@
 @defvar buffer-file-name
 @c This buffer-local variable contains the name of the file being visited
 @c in the current buffer, or @code{nil} if it is not visiting a file.  It
-@c is a permanent local, unaffected by @code{kill-local-variables}.
+@c is a permanent local variable, unaffected by
+@c @code{kill-all-local-variables}.
 このバッファローカルな変数は、
 カレントバッファで訪問しているファイルの名前を保持する。
 あるいは、ファイルを訪問していなければ@code{nil}である。
-これは恒久的にバッファローカルであり、
-@code{kill-local-variables}に影響されない。
+これは恒久的にバッファローカルな変数であり、
+@code{kill-all-local-variables}に影響されない。
 
 @example
 @group
@@ -621,12 +647,12 @@
 @defvar buffer-file-truename
 @c This buffer-local variable holds the truename of the file visited in the
 @c current buffer, or @code{nil} if no file is visited.  It is a permanent
-@c local, unaffected by @code{kill-local-variables}.  @xref{Truenames}.
+@c local, unaffected by @code{kill-all-local-variables}.  @xref{Truenames}.
 このバッファローカルな変数は、
 カレントバッファで訪問しているファイルの実名を保持する。
 あるいは、ファイルを訪問していなければ@code{nil}である。
 これは恒久的にバッファローカルであり、
-@code{kill-local-variables}に影響されない。
+@code{kill-all-local-variables}に影響されない。
 @pxref{Truenames}。
 @end defvar
 
@@ -634,13 +660,13 @@
 @c This buffer-local variable holds the file number and directory device
 @c number of the file visited in the current buffer, or @code{nil} if no
 @c file or a nonexistent file is visited.  It is a permanent local,
-@c unaffected by @code{kill-local-variables}.
+@c unaffected by @code{kill-all-local-variables}.
 このバッファローカルな変数は、
 カレントバッファで訪問しているファイルの
 ファイル番号とディレクトリ装置番号を保持する。
 あるいは、ファイルを訪問していなければ@code{nil}である。
 これは恒久的にバッファローカルであり、
-@code{kill-local-variables}に影響されない。
+@code{kill-all-local-variables}に影響されない。
 
 @c The value is normally a list of the form @code{(@var{filenum}
 @c @var{devnum})}.  This pair of numbers uniquely identifies the file among
@@ -682,7 +708,7 @@
 @c @deffn Command set-visited-file-name filename &optional no-query along-with-file
 @deffn コマンド set-visited-file-name filename &optional no-query along-with-file
 @c If @var{filename} is a non-empty string, this function changes the
-@c name of the file visited in current buffer to @var{filename}.  (If the
+@c name of the file visited in the current buffer to @var{filename}.  (If the
 @c buffer had no visited file, this gives it one.)  The @emph{next time}
 @c the buffer is saved it will go in the newly-specified file.  This
 @c command marks the buffer as modified, since it does not (as far as Emacs
@@ -739,7 +765,7 @@
 
 @node Buffer Modification
 @c @section Buffer Modification
-@section バッファの変更
+@section バッファの変更 @emph{(2003/10/30)}
 @c @cindex buffer modification
 @c @cindex modification flag (of buffer)
 @cindex バッファの変更
@@ -837,7 +863,7 @@
 @node Modification Time
 @comment  node-name,  next,  previous,  up
 @c @section Comparison of Modification Time
-@section 更新時刻の比較
+@section 更新時刻の比較 @emph{(2003/10/30)}
 @c @cindex comparison of modification time
 @c @cindex modification time, comparison of 
 @cindex 比較、更新時刻
@@ -974,7 +1000,7 @@
 
 @node Read Only Buffers
 @c @section Read-Only Buffers
-@section 読み出し専用バッファ
+@section 読み出し専用バッファ @emph{(2003/10/30)}
 @c @cindex read-only buffer
 @c @cindex buffer, read-only
 @cindex 読み出し専用バッファ
@@ -1006,7 +1032,7 @@
 
 @item
 @c Modes such as Dired and Rmail make buffers read-only when altering the
-@c contents with the usual editing commands is probably a mistake.
+@c contents with the usual editing commands would probably be a mistake.
 diredやrmailなどのモードは、
 普通の編集コマンドで内容を変更することが誤りであるような
 場合にバッファを読み出し専用にする。
@@ -1057,7 +1083,7 @@
 @c @deffn Command toggle-read-only
 @deffn コマンド toggle-read-only
 @c This command changes whether the current buffer is read-only.  It is
-@c intended for interactive use; don't use it in programs.  At any given
+@c intended for interactive use; do not use it in programs.  At any given
 @c point in a program, you should know whether you want the read-only flag
 @c on or off; so you can set @code{buffer-read-only} explicitly to the
 @c proper value, @code{t} or @code{nil}.
@@ -1081,7 +1107,7 @@
 
 @node The Buffer List
 @c @section The Buffer List
-@section バッファリスト
+@section バッファリスト @emph{(2003/10/30)}
 @c @cindex buffer list
 @cindex バッファリスト
 
@@ -1191,12 +1217,12 @@
 @defun other-buffer &optional buffer visible-ok frame
 @c This function returns the first buffer in the buffer list other than
 @c @var{buffer}.  Usually this is the buffer selected most recently (in
-@c frame @var{frame} or else the currently selected frame), aside from
-@c @var{buffer}.  Buffers whose names start with a space are not considered
-@c at all.
+@c frame @var{frame} or else the currently selected frame, @pxref{Input
+@c Focus}), aside from @var{buffer}.  Buffers whose names start with a
+@c space are not considered at all.
 この関数は、バッファリストから@var{buffer}以外の最初のバッファを返す。
 通常、当該バッファは、@var{buffer}を除いて
-（@var{frame}か現在選択されているフレームで）
+（@var{frame}か現在選択されているフレームで、@pxref{Input Focus}）
 もっとも最近に選択されたバッファである。
 空白で始まる名前のバッファは完全に除外する。
 
@@ -1279,7 +1305,7 @@
 
 @node Creating Buffers
 @c @section Creating Buffers
-@section バッファの作成
+@section バッファの作成 @emph{(2003/10/30)}
 @c @cindex creating buffers
 @c @cindex buffers, creating
 @cindex バッファの作成
@@ -1381,7 +1407,7 @@
 
 @node Killing Buffers
 @c @section Killing Buffers
-@section バッファの削除
+@section バッファの削除 @emph{(2003/10/30)}
 @c @cindex killing buffers
 @c @cindex buffers, killing
 @cindex バッファの削除
@@ -1395,8 +1421,8 @@
 @c   The buffer object for the buffer that has been killed remains in
 @c existence as long as anything refers to it, but it is specially marked
 @c so that you cannot make it current or display it.  Killed buffers retain
-@c their identity, however; two distinct buffers, when killed, remain
-@c distinct according to @code{eq}.
+@c their identity, however; if you kill two distinct buffers, they remain
+@c distinct according to @code{eq} although both are dead.
 削除されたバッファを表すバッファオブジェクトは、
 それを指すものが存在する限り存在し続けますが、
 それをカレントバッファにしたり表示できないように特別な印が付いています。
@@ -1488,16 +1514,15 @@
 @c After confirming unsaved changes, @code{kill-buffer} calls the functions
 @c in the list @code{kill-buffer-query-functions}, in order of appearance,
 @c with no arguments.  The buffer being killed is the current buffer when
-@c they are called.  The idea is that these functions ask for confirmation
-@c from the user for various nonstandard reasons.  If any of them returns
-@c @code{nil}, @code{kill-buffer} spares the buffer's life.
+@c they are called.  The idea of this feature is that these functions will
+@c ask for confirmation from the user.  If any of them returns @code{nil},
+@c @code{kill-buffer} spares the buffer's life.
 未保存の変更を確認したあとで、@code{kill-buffer}は、
 リスト@code{kill-buffer-query-functions}の関数を現れる順に
 引数なしで呼び出す。
 これらの関数が呼び出されるときには、
 削除対象のバッファがカレントバッファである。
-これらの関数でさまざまな非標準的な理由から
-ユーザーの確認をとることが目的である。
+これらの関数でユーザーの確認をとることがこの機能の目的である。
 いずれかが@code{nil}を返すと、@code{kill-buffer}はバッファを削除しない。
 @end defvar
 
@@ -1528,7 +1553,7 @@
 
 @node Indirect Buffers
 @c @section Indirect Buffers
-@section 間接バッファ
+@section 間接バッファ @emph{(2003/10/30)}
 @c @cindex indirect buffers
 @c @cindex base buffer
 @cindex 間接バッファ
@@ -1553,13 +1578,13 @@
 どれかを編集して変更すると、別のものでただちに見えます。
 これには、文字そのものに加えてテキスト属性も含みます。
 
-@c   But in all other respects, the indirect buffer and its base buffer are
+@c   In all other respects, the indirect buffer and its base buffer are
 @c completely separate.  They have different names, different values of
 @c point, different narrowing, different markers and overlays (though
 @c inserting or deleting text in either buffer relocates the markers and
 @c overlays for both), different major modes, and different buffer-local
 @c variables.
-しかし、それ以外に関しては、間接バッファと
+それ以外に関しては、間接バッファと
 その基底バッファは完全に別のものです。
 別の名前を持ち、ポイントの値も別であり、異なったナロイングをでき、
 （いずれかのバッファでテキストを挿入したり削除すると
@@ -1567,8 +1592,8 @@
 異なるメジャーモードを持ち、バッファローカルな変数も異なります。
 
 @c   An indirect buffer cannot visit a file, but its base buffer can.  If
-@c you try to save the indirect buffer, that actually works by saving the
-@c base buffer.
+@c you try to save the indirect buffer, that actually saves the base
+@c buffer.
 間接バッファはファイルを訪問できませんが、その基底バッファでは訪問できます。
 間接バッファを保存しようとすると、実際にはその基底バッファを保存します。
 
@@ -1603,3 +1628,39 @@
 さもなければ、値は間接バッファではない別のバッファである。
 @end defun
 
+@node Buffer Gap
+@c @section The Buffer Gap
+@section バッファ ギャップ @emph{(2003/10/30)}
+
+@c   Emacs buffers are implemented using an invisible @dfn{gap} to make
+@c insertion and deletion faster.  Insertion works by filling in part of
+@c the gap, and deletion adds to the gap.  Of course, this means that the
+@c gap must first be moved to the locus of the insertion or deletion.
+@c Emacs moves the gap only when you try to insert or delete.  This is why
+@c your first editing command in one part of a large buffer, after
+@c previously editing in another far-away part, sometimes involves a
+@c noticeable delay.
+Emacsのバッファは挿入や削除を高速にするために、目に見えない@dfn{ギャッ
+プ}(gap)を使って実行されます。挿入はギャップの部分を埋めるように、削除
+はギャップを加えるように働きます。もちろん、このことはギャップを挿入や
+削除の軌跡上に最初に動かさなければならないということです。ユーザが挿入
+や削除をしようとすると、Emacsはギャップだけを動かします。大きなバッファ
+の一部だけを素早く編集できる方法であり、先に他の離れた部分を編集した後
+だと、たまに大きな遅延を生じます。
+
+@c   This mechanism works invisibly, and Lisp code should never be affected
+@c by the gap's current location, but these functions are available for
+@c getting information about the gap status.
+この方法は目に触れない状態で動いてますし、Lispコードもギャップの現在一
+に影響されるべきではありません。しかし、ギャップの状態を得るための関数
+は利用できます。
+
+@defun gap-position
+@c This function returns the current gap position in the current buffer.
+カレントバッファで、現在ギャップがある位置を返します
+@end defun
+
+@defun gap-size
+@c This function returns the current gap size of the current buffer.
+カレントバッファで、今のギャップサイズを返します
+@end defun
diff -x'*.html' -u ../../20-2-5/ja/change.diff ./change.diff
--- ../../20-2-5/ja/change.diff	2004-04-26 11:16:00.000000000 +0900
+++ ./change.diff	2005-10-01 09:47:01.216302400 +0900
@@ -1,11 +1,262 @@
-Only in ./: .htaccess
-Only in ./: ChangeLog
-Only in ./: Makefile
-Only in ./: Makefile.in
-Only in ./: README
+../../20-2-5/ja/だけに発見: .htaccess
+diff -x'*.html' -u ../../20-2-5/ja/Makefile.in ./Makefile.in
+--- ../../20-2-5/ja/Makefile.in	2004-04-26 11:16:00.000000000 +0900
++++ ./Makefile.in	2004-04-26 11:17:00.000000000 +0900
+@@ -1,103 +1,139 @@
+-# Makefile for the   GNU Emacs Lisp Reference Manual.
+-#
+-# 11 August 1990
+-
+-# Redefine `TEX' if `tex' does not invoke plain TeX. For example:
+-# TEX=platex
+-
+-TEX=tex
+-MAKE=make
+-SHELL=/bin/sh
+-INSTALL_INFO = install-info
++# Makefile for the GNU Emacs Lisp Reference Manual.
++
++# Copyright (C) 1990,1991,1992,1993,1994,1995,1996,1998,1999,2000,2001,2003
++#  Free Software Foundation, Inc.
++
++# This file is part of GNU Emacs.
+ 
+-# Where the TeX macros are kept:
+-texmacrodir = /usr/local/lib/tex/macros
++# GNU Emacs is free software; you can redistribute it and/or modify
++# it under the terms of the GNU General Public License as published by
++# the Free Software Foundation; either version 2, or (at your option)
++# any later version.
++
++# GNU Emacs is distributed in the hope that it will be useful,
++# but WITHOUT ANY WARRANTY; without even the implied warranty of
++# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
++# GNU General Public License for more details.
++
++# You should have received a copy of the GNU General Public License
++# along with GNU Emacs; see the file COPYING.  If not, write to
++# the Free Software Foundation, Inc., 59 Temple Place - Suite 330,
++# Boston, MA 02111-1307, USA.
+ 
+ # Standard configure variables.
+-prefix = @prefix@
+-infodir = @infodir@
++srcdir = @srcdir@
+ 
+-# The name of the manual:
++# Tell make where to find source files; this is needed for the makefiles.
++VPATH=@srcdir@
++
++infodir = $(srcdir)/../info
+ 
+-VERSION=2.5
+-manual = elisp-manual-20-$(VERSION)
++TEXI2DVI = texi2dvi
++SHELL = /bin/sh
++INSTALL_INFO = install-info
++MAKEINFO = makeinfo
+ 
+-# Uncomment this line for permuted index.
+-# permuted_index = 1 
++# The name of the manual:
++VERSION=2.9
++manual = elisp-manual-21-$(VERSION)
+ 
+ # List of all the texinfo files in the manual:
+ 
+-srcs = elisp.texi back.texi \
+-  abbrevs.texi advice.texi anti.texi backups.texi locals.texi buffers.texi \
+-  calendar.texi commands.texi compile.texi control.texi customize.texi \
+-  debugging.texi display.texi edebug.texi errors.texi eval.texi files.texi \
+-  frames.texi functions.texi help.texi hooks.texi \
+-  internals.texi intro.texi keymaps.texi lists.texi \
+-  loading.texi macros.texi maps.texi markers.texi \
+-  minibuf.texi modes.texi nonascii.texi numbers.texi objects.texi \
+-  os.texi positions.texi processes.texi searching.texi \
+-  sequences.texi streams.texi strings.texi symbols.texi \
+-  syntax.texi text.texi tips.texi variables.texi \
+-  windows.texi \
+-  index.unperm index.perm
++srcs = \
++  $(srcdir)/abbrevs.texi \
++  $(srcdir)/advice.texi \
++  $(srcdir)/anti.texi \
++  $(srcdir)/back.texi \
++  $(srcdir)/backups.texi \
++  $(srcdir)/buffers.texi \
++  $(srcdir)/calendar.texi \
++  $(srcdir)/commands.texi \
++  $(srcdir)/compile.texi \
++  $(srcdir)/control.texi \
++  $(srcdir)/customize.texi \
++  $(srcdir)/debugging.texi \
++  $(srcdir)/display.texi \
++  $(srcdir)/edebug.texi \
++  $(srcdir)/elisp.texi \
++  $(srcdir)/errors.texi \
++  $(srcdir)/eval.texi \
++  $(srcdir)/files.texi \
++  $(srcdir)/frames.texi \
++  $(srcdir)/functions.texi \
++  $(srcdir)/hash.texi \
++  $(srcdir)/help.texi \
++  $(srcdir)/hooks.texi \
++  $(srcdir)/internals.texi \
++  $(srcdir)/intro.texi \
++  $(srcdir)/keymaps.texi \
++  $(srcdir)/lists.texi \
++  $(srcdir)/loading.texi \
++  $(srcdir)/locals.texi \
++  $(srcdir)/macros.texi \
++  $(srcdir)/maps.texi \
++  $(srcdir)/markers.texi \
++  $(srcdir)/minibuf.texi \
++  $(srcdir)/modes.texi \
++  $(srcdir)/nonascii.texi \
++  $(srcdir)/numbers.texi \
++  $(srcdir)/objects.texi \
++  $(srcdir)/os.texi \
++  $(srcdir)/positions.texi \
++  $(srcdir)/processes.texi \
++  $(srcdir)/searching.texi \
++  $(srcdir)/sequences.texi \
++  $(srcdir)/streams.texi \
++  $(srcdir)/strings.texi \
++  $(srcdir)/symbols.texi \
++  $(srcdir)/syntax.texi \
++  $(srcdir)/text.texi \
++  $(srcdir)/tips.texi \
++  $(srcdir)/variables.texi \
++  $(srcdir)/windows.texi \
++  $(srcdir)/index.texi \
++  $(srcdir)/gpl.texi \
++  $(srcdir)/doclicense.texi
++
+ 
+-.PHONY: elisp.dvi clean
++.PHONY: clean
+ 
+ # The info file is named `elisp'.
++info: $(infodir)/elisp
++
++$(infodir)/elisp: $(srcs)
++	$(MAKEINFO) -I. -I$(srcdir) $(srcdir)/elisp.texi -o $(infodir)/elisp
+ 
+-elisp: $(srcs) index.texi
+-	rm -f elisp-*
+-	makeinfo elisp.texi
+-
+-elisp.dvi: $(srcs) index.texi
+-	# Avoid losing old contents of aux file entirely.
+-	-mv elisp.aux elisp.oaux
+-	# First shot to define xrefs:
+-	$(TEX) elisp.texi
+-	if [ a${permuted_index} != a ]; \
+-	then \
+-	  ./permute-index; \
+-	  mv permuted.fns elisp.fns; \
+-	  texindex elisp.tp; \
+-	else \
+-	  texindex elisp.??; \
+-	fi
+-	$(TEX) elisp.texi
+-
+-index.texi:
+-	if [ a${permuted_index} != a ]; \
+-	then \
+-	  ln -s index.perm index.texi; \
+-	else \
+-	  ln -s index.unperm index.texi; \
+-	fi
++elisp.dvi: $(srcs)
++	$(TEXI2DVI) -I $(srcdir) $(srcdir)/elisp.texi
+ 
+ install: elisp
+-	./mkinstalldirs $(infodir)
++	$(srcdir)/mkinstalldirs $(infodir)
+ 	cp elisp elisp-* $(infodir)
+-	${INSTALL_INFO} --dir-file=${infodir}/dir --info-file=${infodir}/elisp
+-
+-installall: install
+-	install -c texinfo.tex $(texmacrodir)
++	${INSTALL_INFO} --info-dir=${infodir} ${infodir}/elisp
+ 
+ clean:
+ 	rm -f *.toc *.aux *.log *.cp *.cps *.fn *.fns *.tp *.tps \
+               *.vr *.vrs *.pg *.pgs *.ky *.kys
+-	rm -f make.out core 
+-	rm -f index.texi
++	rm -f make.out core
++
++distclean: clean
+ 
+ maintainer-clean: clean
+-	rm -f elisp elisp-*
++	rm -f elisp elisp-* elisp.dvi elisp.oaux
+ 
+-dist:
++dist: elisp elisp.dvi
+ 	-rm -rf temp
+ 	-mkdir temp
+ 	-mkdir temp/$(manual)
+-	-ln README configure.in configure Makefile.in permute-index $(srcs) \
+- texinfo.tex elisp.dvi elisp.aux elisp.??s elisp elisp-[0-9] elisp-[0-9][0-9] \
++	-ln $(srcdir)/README $(srcdir)/configure.in $(srcdir)/configure \
++ $(srcdir)/Makefile.in $(srcs) \
++ $(srcdir)/../man/texinfo.tex \
++ elisp.dvi elisp.aux elisp.??s elisp elisp-[0-9] elisp-[0-9][0-9] \
+  temp/$(manual)
+ 	-(cd temp/$(manual); rm -f mkinstalldirs)
+-	cp mkinstalldirs temp/$(manual)
++	cp $(srcdir)/mkinstalldirs temp/$(manual)
+ 	(cd temp/$(manual); rm -f *~)
+ 	(cd temp; tar chf - $(manual)) | gzip > $(manual).tar.gz
+ 	-rm -rf temp
++
++# arch-tag: f5a1a94d-62e1-4460-a2d1-f02e538ab554
+diff -x'*.html' -u ../../20-2-5/ja/README ./README
+--- ../../20-2-5/ja/README	2004-04-26 11:16:00.000000000 +0900
++++ ./README	2004-04-26 11:17:00.000000000 +0900
+@@ -1,4 +1,4 @@
+-README for Edition 2.5 of the Emacs Lisp Reference Manual.
++README for Edition 2.8 of the Emacs Lisp Reference Manual.
+ 
+ * This directory contains the texinfo source files for the Reference
+ Manual, make-permuted-index, and the latest version of texinfo.tex,
+@@ -11,11 +11,11 @@
+ newsgroup gnu.emacs.help.
+ 
+ * The Emacs Lisp Reference Manual is quite large.  It totals around
+-900 pages in smallbook format; the info files total almost two
+-megabytes.
++980 pages in smallbook format; the info files total almost
++2.5 megabytes.
+ 
+ * You can format this manual either for Info or for printing hardcopy
+-using TeX.  
++using TeX.
+ 
+ * You can buy nicely printed copies from the Free Software Foundation.
+ For info, send mail to gnu@gnu.org or phone 617-542-5942.  Buying a
+@@ -37,11 +37,13 @@
+ To create a DVI file with a sorted index, execute the following
+ commands in the shell:
+ 
++% ./configure
+ % make index.texi
+ % make elisp.dvi
+ 
+ *** To create a DVI file with a permuted index, you may experiment
+-with `make-permuted-index'.  
++with `make-permuted-index'.
+ 
+ ** To make an Info file, you need to install Texinfo, then run
+-`make elisp'.  To install the Info files, run `make install'.
++`./configure' and `make info'.  To install the Info files, run
++`make install'.
 diff -x'*.html' -u ../../20-2-5/ja/abbrevs.texi ./abbrevs.texi
---- ../../20-2-5/ja/abbrevs.texi	2004-01-12 02:49:10.781673600 +0900
-+++ ./abbrevs.texi	2004-01-11 22:26:11.982875200 +0900
+--- ../../20-2-5/ja/abbrevs.texi	2004-04-26 06:02:06.000000000 +0900
++++ ./abbrevs.texi	2004-04-26 06:02:46.000000000 +0900
 @@ -1,11 +1,12 @@
  @c -*-texinfo-*-
  @c This is part of the GNU Emacs Lisp Reference Manual.
@@ -415,8 +666,8 @@
  @end defvar
 +
 diff -x'*.html' -u ../../20-2-5/ja/advice.texi ./advice.texi
---- ../../20-2-5/ja/advice.texi	2004-01-12 02:49:10.971947200 +0900
-+++ ./advice.texi	2003-10-30 19:46:54.000000000 +0900
+--- ../../20-2-5/ja/advice.texi	2004-04-26 06:01:48.000000000 +0900
++++ ./advice.texi	2004-04-26 06:02:30.000000000 +0900
 @@ -1,12 +1,12 @@
  @c -*-texinfo-*-
  @c This is part of the GNU Emacs Lisp Reference Manual.
@@ -776,16 +1027,9 @@
  つまり、基本関数を@code{call-interactively}で呼び出して、
  基本関数自身が引数を読み取るようにします。
  この場合、アドバイスからは引数を参照できません。
-Only in ./: an_abbrevs.txt
-Only in ./: an_advice.txt
-Only in ./: an_anti.txt
-Only in ./: an_backups.txt
-Only in ./: an_buffers.txt
-Only in ./: anti.texi
-Only in ./: back.texi
 diff -x'*.html' -u ../../20-2-5/ja/backups.texi ./backups.texi
---- ../../20-2-5/ja/backups.texi	2004-01-12 02:49:11.182249600 +0900
-+++ ./backups.texi	2003-10-30 19:46:56.000000000 +0900
+--- ../../20-2-5/ja/backups.texi	2004-04-26 06:01:54.000000000 +0900
++++ ./backups.texi	2004-04-26 06:02:36.000000000 +0900
 @@ -1,11 +1,12 @@
  @c -*-texinfo-*-
  @c This is part of the GNU Emacs Lisp Reference Manual.
@@ -1372,10 +1616,9 @@
 +場合にのみ、変更内容を挿入したあとに@code{revert-buffer}が実行する。
  @end defvar
 -
-Only in ./: book-spine.texinfo
 diff -x'*.html' -u ../../20-2-5/ja/buffers.texi ./buffers.texi
---- ../../20-2-5/ja/buffers.texi	2004-01-12 02:49:11.532753600 +0900
-+++ ./buffers.texi	2003-10-30 19:46:56.000000000 +0900
+--- ../../20-2-5/ja/buffers.texi	2004-04-26 06:01:48.000000000 +0900
++++ ./buffers.texi	2004-04-26 06:02:30.000000000 +0900
 @@ -1,18 +1,19 @@
  @c -*-texinfo-*-
  @c This is part of the GNU Emacs Lisp Reference Manual.
@@ -1910,590 +2153,3 @@
 +@c This function returns the current gap size of the current buffer.
 +カレントバッファで、今のギャップサイズを返します
 +@end defun
-Only in ./: change.diff
-Only in ./: configure
-Only in ./: configure.in
-Only in ./: css
-Only in ./: doclicense.texi
-Only in ./: elisp-covers.texi
-Only in ./: elisp.aux
-Only in ./: elisp.cps
-Only in ./: elisp.dvi
-Only in ./: elisp.fns
-Only in ./: elisp.kys
-Only in ./: elisp.pgs
-diff -x'*.html' -u ../../20-2-5/ja/elisp.texi ./elisp.texi
---- ../../20-2-5/ja/elisp.texi	2004-01-12 02:49:14.767404800 +0900
-+++ ./elisp.texi	2004-01-12 02:46:55.927763200 +0900
-@@ -5,61 +5,17 @@
- @settitle GNU Emacs Lispリファレンスマニュアル
- @c %**end of header
- 
--@dircategory Editors
-+@c Versino of the manual.
-+@set VERSION 2.9
-+
-+@dircategory Emacs
- @direntry
- * Elisp: (elisp).	The Emacs Lisp Reference Manual.
- @end direntry
- 
- @smallbook
--
--@ifinfo
--@c This version is the edition 2.5 of the GNU Emacs Lisp
--@c Reference Manual.  It corresponds to Emacs Version 20.3
--Emacs Lispリファレンスマニュアル2.5版であり、
--Emacs 20.3版に対応します。
--@c Please REMEMBER to update edition number in *four* places in this file
--@c                 and also in *one* place in intro.texi
--
--Published by the Free Software Foundation
--59 Temple Place, Suite 330
--Boston, MA  02111-1307  USA
--
--Copyright (C) 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998 Free Software Foundation, Inc. 
--
--Permission is granted to make and distribute verbatim copies of this
--manual provided the copyright notice and this permission notice are
--preserved on all copies.
--
--@ignore
--Permission is granted to process this file through TeX and print the
--results, provided the printed document carries copying permission notice
--identical to this one except for the removal of this paragraph (this
--paragraph not being relevant to the printed manual).
--
--@end ignore
--Permission is granted to copy and distribute modified versions of this
--manual under the conditions for verbatim copying, provided that the
--entire resulting derived work is distributed under the terms of a
--permission notice identical to this one.
--
--Permission is granted to copy and distribute translations of this manual
--into another language, under the above conditions for modified versions,
--except that this permission notice may be stated in a translation
--approved by the Foundation.
--
--Permission is granted to copy and distribute modified versions of this
--manual under the conditions for verbatim copying, provided also that the
--section entitled ``GNU General Public License'' is included exactly as
--in the original, and provided that the entire resulting derived work is
--distributed under the terms of a permission notice identical to this
--one.
--
--Permission is granted to copy and distribute translations of this manual
--into another language, under the above conditions for modified versions,
--except that the section entitled ``GNU General Public License'' may be
--included in a translation approved by the Free Software Foundation
--instead of in the original English.
--@end ifinfo
-+@setchapternewpage odd
-+@finalout
- 
- @c Combine indices.
- @synindex cp fn
-@@ -69,72 +25,108 @@
- @c We use the "type index" to index new functions and variables.
- @c @syncodeindex tp fn
- 
--@setchapternewpage odd
--@finalout
-+@ifinfo
-+@c This Info file contains edition @value{VERSION} of the GNU Emacs Lisp
-+@c Reference Manual, corresponding to Emacs version 21.3.
-+Emacs Lispリファレンスマニュアル@value{VERSION}版であり、
-+Emacs 21.3版に対応します。
-+@c Please REMEMBER to update edition number in *four* places in this file
-+@c                 and also in *one* place in intro.texi and *one* in README.
-+
-+Published by the Free Software Foundation
-+59 Temple Place, Suite 330
-+Boston, MA  02111-1307  USA
-+
-+Copyright (C) 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998, 1999,@*
-+              2000, 2002 Free Software Foundation, Inc.
-+
-+Permission is granted to copy, distribute and/or modify this document
-+under the terms of the GNU Free Documentation License, Version 1.1 or
-+any later version published by the Free Software Foundation; with the
-+Invariant Sections being ``GNU General Public License'', with the Front-Cover texts being
-+``A GNU Manual'', and with the Back-Cover Texts as in (a) below.  A copy
-+of the license is included in the section entitled ``GNU Free
-+Documentation License''.
-+
-+(a) The FSF's Back-Cover Text is: ``You have freedom to copy and modify
-+this GNU Manual, like GNU software.  Copies published by the Free
-+Software Foundation raise funds for GNU development.''
-+@end ifnottex
- 
- @titlepage
- @c @title GNU Emacs Lisp Reference Manual
--@c @subtitle For Emacs Version 20.3
-+@c @subtitle For Emacs Version 21
- @c @c The edition number appears in several places in this file
- @c @c and also in the file intro.texi.
--@c @subtitle Revision 2.5, May 1998
-+@c @subtitle Revision @value{VERSION}, January 2002
- @title GNU Emacs Lisp リファレンスマニュアル
--@subtitle Emacs 20.3版対応
--@subtitle 改訂2.5版、1998年5月
-+@subtitle Emacs 21版対応
-+@subtitle 改訂@value{VERSION}版、2002年1月
- 
- @author by Bil Lewis, Dan LaLiberte, Richard Stallman
- @author and the GNU Manual Group
- @page
- @vskip 0pt plus 1filll
--Copyright @copyright{} 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998 Free Software Foundation, Inc. 
-+Copyright @copyright{} 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998,@*
-+1999, 2000, 2002 Free Software Foundation, Inc.
- 
- @sp 2
--@c Edition 2.5 @*
--@c Revised for Emacs Version 20.3,@*
--@c May 1998.@*
--2.5版 @*
--Emacs 20.3版対応改訂版 @*
--1998年5月 @*
-+@c Edition @value{VERSION} @*
-+@c Revised for Emacs Version 21.3,@*
-+@c January 2002.@*
-+@value{VERSION}版 @*
-+Emacs 21.3版対応改訂版 @*
-+2002年1月 @*
- @sp 2
--ISBN 1-882114-72-8
-+ISBN 1-882114-73-6
- 
- @sp 2
- Published by the Free Software Foundation @*
- 59 Temple Place, Suite 330@*
- Boston, MA  02111-1307  USA
- 
--Permission is granted to make and distribute verbatim copies of this
--manual provided the copyright notice and this permission notice are
--preserved on all copies.
--
--Permission is granted to copy and distribute modified versions of this
--manual under the conditions for verbatim copying, provided also that the
--section entitled ``GNU General Public License'' is included
--exactly as in the original, and provided that the entire resulting
--derived work is distributed under the terms of a permission notice
--identical to this one.
--
--Permission is granted to copy and distribute translations of this manual
--into another language, under the above conditions for modified versions,
--except that the section entitled ``GNU General Public License'' may be
--included in a translation approved by the Free Software Foundation
--instead of in the original English.
-+Permission is granted to copy, distribute and/or modify this document
-+under the terms of the GNU Free Documentation License, Version 1.1 or
-+any later version published by the Free Software Foundation; with the
-+Invariant Sections being ``Copying'', with the Front-Cover texts being
-+``A GNU Manual'', and with the Back-Cover Texts as in (a) below.  A copy
-+of the license is included in the section entitled ``GNU Free
-+Documentation License''.
-+
-+(a) The FSF's Back-Cover Text is: ``You have freedom to copy and modify
-+this GNU Manual, like GNU software.  Copies published by the Free
-+Software Foundation raise funds for GNU development.''
- 
- Cover art by Etienne Suvasa.
- @end titlepage
- @page
- 
--@node Top, Copying, (dir), (dir)
-+@node Top, Introduction, (dir), (dir)
- 
- @ifinfo
--@c This Info file contains edition 2.5 of the GNU Emacs Lisp
--@c Reference Manual, corresponding to GNU Emacs version 20.3.
--このinfoファイルは、GNU Emacs Lispマニュアル 2.5版であり、
--GNU Emacs 20.3版に対応します。
-+@c This Info file contains edition @value{VERSION} of the GNU Emacs Lisp
-+@c Reference Manual, corresponding to GNU Emacs version 21.3.
-+このinfoファイルは、GNU Emacs Lispマニュアル @value{VERSION}版であり、
-+GNU Emacs 21.3版に対応します。
- @end ifinfo
- 
-+旧版の翻訳である
-+@uref{ftp://ftp.ascii.co.jp/pub/GNU/elisp-manual-20/elisp-manual-20-2.5-jp.tgz,elisp-manual-20-2.5-jp.tgz} 
-+を参考に最新版の変更点を追加しています。元文書の翻訳をされた方々に深く
-+感謝いたします。
-+
-+また、「コメント」と書いてある部分は私が追加した部分です。また、分かり
-+にく部分などは原文の意味を曲げない範囲で、加筆を行っています。
-+
-+分かりにくい、意味不明だ、用語が統一されていないなどありましたら、
-+@uref{mailto:akihisa@@mail.ne.jp,akihisa@@mail.ne.jpまでメール}にて連
-+絡をお願いいたします。あるいは、各章の右上にあるコメントからWikiに書き
-+込みをお願いします。
-+
-+またこの文書は原文のライセンスを継承しますので、再配布、コピー、変更な
-+どはすべて自由にしていただいて構いません。
-+
- @menu
--* Copying::                 Conditions for copying and changing GNU Emacs.
- * Introduction::            Introduction and conventions used.
- * Standards: Coding Conventions.    Coding conventions for Emacs Lisp.
- 
-@@ -145,6 +137,7 @@
- * Sequences Arrays Vectors::  Lists, strings and vectors are called sequences.
-                                 Certain functions act on any kind of sequence.
-                                 The description of vectors is here as well.
-+* Hash Tables::             Very fast lookup-tables.
- * Symbols::                 Symbols represent names, uniquely.
- 
- * Evaluation::              How Lisp expressions are evaluated.
-@@ -185,15 +178,17 @@
- * Abbrevs::                 How Abbrev mode works, and its data structures.
- 
- * Processes::               Running and communicating with subprocesses.
-+* Display::	            Features for controlling the screen display.
-+* Calendar::		    Customizing the calendar and diary.
- * System Interface::        Getting the user id, system type, environment
-                               variables, and other such things.
--* Display::	            Parameters controlling screen usage.
--                              The bell.  Waiting for input.
--* Calendar::		    Customizing the calendar and diary.
- 
- @c Appendices
- 付録
- 
-+* Antinews::                Info for users downgrading to Emacs 20.
-+* GNU Free Documentation License:: The license for this documentation
-+* GPL::                     Conditions for copying and changing GNU Emacs.
- * Tips::                    Advice and coding conventions for Emacs Lisp.
- * GNU Emacs Internals::     Building and dumping Emacs;
-                               internal data structures.
-@@ -206,7 +201,7 @@
- * Index::                   Index including concepts, functions, variables,
-                               and other terms.
- 
--* New Symbols::             New functions and variables in Emacs 20.
-+* New Symbols::             New functions and variables in Emacs 21.
- 
- @c       --- The Detailed Node Listing ---
-       −−− 詳細ノード一覧 −−−
-@@ -247,8 +242,8 @@
- @c Format of Descriptions
- 記述形式
- 
--* A Sample Function Description::       
--* A Sample Variable Description::   
-+* A Sample Function Description::
-+* A Sample Variable Description::
- 
- @c Lisp Data Types
- Lispデータ型
-@@ -266,7 +261,7 @@
- * Integer Type::        Numbers without fractional parts.
- * Floating Point Type:: Numbers with fractional parts and with a large range.
- * Character Type::      The representation of letters, numbers and
--                        control characters.
-+                          control characters.
- * Sequence Type::       Both lists and arrays are classified as sequences.
- * Cons Cell Type::      Cons cells, and lists (which are made from cons cells).
- * Array Type::          Arrays include strings and vectors.
-@@ -280,7 +275,7 @@
- * Primitive Function Type::     A function written in C, callable from Lisp.
- * Byte-Code Type::      A function written in Lisp, then compiled.
- * Autoload Type::       A type used for automatically loading seldom-used
--                        functions.
-+                          functions.
- 
- @c List Type
- リスト型
-@@ -368,7 +363,7 @@
- * Intro Eval::              Evaluation in the scheme of things.
- * Eval::                    How to invoke the Lisp interpreter explicitly.
- * Forms::                   How various sorts of objects are evaluated.
--* Quoting::                 Avoiding evaluation (to put constants in 
-+* Quoting::                 Avoiding evaluation (to put constants in
-                               the program).
- 
- @c Kinds of Forms
-@@ -427,11 +422,11 @@
- @c Scoping Rules for Variable Bindings
- スコープルールと変数束縛
- 
--* Scope::                   Scope means where in the program a value 
-+* Scope::                   Scope means where in the program a value
-                               is visible.  Comparison with other languages.
- * Extent::                  Extent means how long in time a value exists.
- * Impl of Scope::           Two ways to implement dynamic scoping.
--* Using Scoping::           How to use dynamic scoping carefully and 
-+* Using Scoping::           How to use dynamic scoping carefully and
-                               avoid problems.
- 
- @c Buffer-Local Variables
-@@ -451,11 +446,11 @@
- * Defining Functions::      Lisp expressions for defining functions.
- * Calling Functions::       How to use an existing function.
- * Mapping Functions::       Applying a function to each element of a list, etc.
--* Anonymous Functions::     Lambda-expressions are functions with no names.    
-+* Anonymous Functions::     Lambda-expressions are functions with no names.
- * Function Cells::          Accessing or setting the function definition
-                               of a symbol.
- * Related Topics::          Cross-references to specific Lisp primitives
--                              that have a special bearing on how 
-+                              that have a special bearing on how
-                               functions work.
- 
- @c Lambda Expressions
-@@ -535,10 +530,10 @@
- Lispオブジェクトの読み取りと表示
- 
- * Streams Intro::           Overview of streams, reading and printing.
--* Input Streams::           Various data types that can be used as 
-+* Input Streams::           Various data types that can be used as
-                               input streams.
- * Input Functions::         Functions to read Lisp objects from text.
--* Output Streams::          Various data types that can be used as 
-+* Output Streams::          Various data types that can be used as
-                               output streams.
- * Output Functions::        Functions to print Lisp objects as text.
- 
-@@ -599,14 +594,15 @@
- * Inheritance and Keymaps::	How one keymap can inherit the bindings
- 				  of another keymap.
- * Prefix Keys::                 Defining a key with a keymap as its definition.
--* Menu Keymaps::		A keymap can define a menu for X windows
-+* Menu Keymaps::		A keymap can define a menu for X
- 				  or for use from the terminal.
- * Active Keymaps::	        Each buffer has a local keymap
-                                   to override the standard (global) bindings.
--				Each minor mode can also override them.
-+				  Each minor mode can also override them.
- * Key Lookup::                  How extracting elements from keymaps works.
- * Functions for Key Lookup::    How to request key lookup.
- * Changing Key Bindings::       Redefining a key in a keymap.
-+* Remapping Commands::          Bindings that translate one command to another.
- * Key Binding Commands::        Interactive interfaces for redefining keys.
- * Scanning Keymaps::            Looking through all keymaps, for printing help.
- 
-@@ -616,7 +612,7 @@
- * Major Modes::             Defining major modes.
- * Minor Modes::             Defining minor modes.
- * Mode Line Format::        Customizing the text that appears in the mode line.
--* Hooks::                   How to use hooks; how to write code that 
-+* Hooks::                   How to use hooks; how to write code that
-                               provides hooks.
- 
- @c Major Modes
-@@ -684,7 +680,7 @@
- * File Name Components::    The directory part of a file name, and the rest.
- * Directory Names::         A directory's name as a directory
-                               is different from its name as a file.
--* Relative File Names::     Some file names are relative to a 
-+* Relative File Names::     Some file names are relative to a
-                               current directory.
- * File Name Expansion::     Converting relative file names to absolute ones.
- * Unique File Names::       Generating names for temporary files.
-@@ -693,18 +689,18 @@
- @c Backups and Auto-Saving
- バックアップと自動保存
- 
--* Backup Files::            How backup files are made; how their names 
-+* Backup Files::            How backup files are made; how their names
-                               are chosen.
- * Auto-Saving::             How auto-save files are made; how their
-                               names are chosen.
--* Reverting::               @code{revert-buffer}, and how to customize 
-+* Reverting::               @code{revert-buffer}, and how to customize
-                               what it does.
- 
- @c Backup Files
- バックアップファイル
- 
- * Making Backups::          How Emacs makes backup files, and when.
--* Rename or Copy::          Two alternatives: renaming the old file 
-+* Rename or Copy::          Two alternatives: renaming the old file
-                               or copying it.
- * Numbered Backups::        Keeping multiple backups for each source file.
- * Backup Names::            How backup file names are computed; customization.
-@@ -740,7 +736,7 @@
-                               and choosing a window for it.
- * Window Point::            Each window has its own location of point.
- * Window Start::            The display-start position controls which text
--                              is on-screen in the window. 
-+                              is on-screen in the window.
- * Vertical Scrolling::      Moving text up and down in the window.
- * Horizontal Scrolling::    Moving text sideways on the window.
- * Size of Window::          Accessing the size of a window.
-@@ -772,7 +768,7 @@
- * Window System Selections::Transferring text to and from other windows.
- * Color Names::	            Getting the definitions of color names.
- * Resources::		    Getting resource values from the server.
--* Server Data::		    Getting info about the X server.
-+* Display Feature Testing:: Determining the features of a terminal.
- 
- @c Positions
- バッファ内の位置
-@@ -800,7 +796,7 @@
- * Predicates on Markers::   Testing whether an object is a marker.
- * Creating Markers::        Making empty markers or markers at certain places.
- * Information from Markers::  Finding the marker's buffer or character
--                                position. 
-+                                position.
- * Moving Markers::          Moving the marker to a new buffer or position.
- * The Mark::                How ``the mark'' is implemented with a marker.
- * The Region::              How to access ``the region''.
-@@ -829,6 +825,9 @@
- * Transposition::           Swapping two portions of a buffer.
- * Registers::               How registers are implemented.  Accessing
-                               the text or position stored in a register.
-+* Atomic Changes::          Installing several buffer changes ``atomically''.
-+* Base 64::                 Conversion to or from base 64 encoding.
-+* MD5 Checksum::            Compute the MD5 ``message digest''/``checksum''.
- * Change Hooks::            Supplying functions to be run when text is changed.
-                               
- @c The Kill Ring
-@@ -836,6 +835,7 @@
- 
- * Kill Ring Concepts::      What text looks like in the kill ring.
- * Kill Functions::          Functions that kill text.
-+* Yanking::                 How yanking is done.
- * Yank Commands::           Commands that access the kill ring.
- * Low-Level Kill Ring::	    Functions and variables for kill ring access.
- * Internals of Kill Ring::  Variables that hold kill-ring data.
-@@ -864,9 +864,32 @@
-                               them back.
- * Lazy Properties::         Computing text properties in a lazy fashion
-                               only when text is examined.
-+* Clickable Text::          Using text properties to make regions of text
-+                              do something when you click on them.
-+* Fields::                  The @code{field} property defines
-+                              fields within the buffer.
- * Not Intervals::	    Why text properties do not use
- 			      Lisp-visible text intervals.
- 
-+@c Non-ASCII Characters
-+非アスキー文字
-+
-+* Text Representations::    Unibyte and multibyte representations
-+* Converting Representations::  Converting unibyte to multibyte and vice versa.
-+* Selecting a Representation::  Treating a byte sequence as unibyte or multi.
-+* Character Codes::         How unibyte and multibyte relate to
-+                                codes of individual characters.
-+* Character Sets::          The space of possible characters codes
-+                                is divided into various character sets.
-+* Chars and Bytes::         More information about multibyte encodings.
-+* Splitting Characters::    Converting a character to its byte sequence.
-+* Scanning Charsets::       Which character sets are used in a buffer?
-+* Translation of Characters::   Translation tables are used for conversion.
-+* Coding Systems::          Coding systems are conversions for saving files.
-+* Input Methods::           Input methods allow users to enter various
-+                                non-ASCII characters without special keyboards.
-+* Locales::                 Interacting with the POSIX locale.
-+
- @c Searching and Matching
- 探索と一致
- 
-@@ -931,6 +954,7 @@
- 
- * Process Buffers::         If no filter, output is put in a buffer.
- * Filter Functions::        Filter functions accept output from the process.
-+* Decoding Output::         Filters can get unibyte or multibyte strings.
- * Accepting Output::        How to wait until process output arrives.
- 
- @c Operating System Interface
-@@ -947,10 +971,10 @@
- @c Starting Up Emacs
- Emacsの始動
- 
--* Start-up Summary::        Sequence of actions Emacs performs at start-up.
-+* Startup Summary::         Sequence of actions Emacs performs at start-up.
- * Init File::               Details on reading the init file (@file{.emacs}).
- * Terminal-Specific::       How the terminal-specific Lisp file is read.
--* Command Line Arguments::  How command line arguments are processed,
-+* Command-Line Arguments::  How command line arguments are processed,
-                               and how you can customize them.
- 
- @c Getting out of Emacs
-@@ -965,12 +989,21 @@
- * Refresh Screen::          Clearing the screen and redrawing everything on it.
- * Truncation::              Folding or wrapping long text lines.
- * The Echo Area::           Where messages are displayed.
-+* Warnings::                Displaying warning messages for the user.
- * Selective Display::       Hiding part of the buffer text.
- * Overlay Arrow::           Display of an arrow to indicate position.
- * Temporary Displays::      Displays that go away automatically.
--* Waiting::                 Forcing display update and waiting for user.
-+* Overlays::		    Use overlays to highlight parts of the buffer.
-+* Width::                   How wide a character or string is on the screen.
-+* Faces::		    A face defines a graphics style
-+                              for text characters: font, colors, etc.
-+* Fringes::                 Controlling window fringes.
-+* Display Property::        Enabling special display features.
-+* Images::                  Displaying images in Emacs buffers.
- * Blinking::                How Emacs shows the matching open parenthesis.
--* Usual Display::	    How control characters are displayed.
-+* Inverse Video::	    Specifying how the screen looks.
-+* Usual Display::	    The usual conventions for displaying nonprinting chars.
-+* Display Tables::	    How to specify other conventions.
- * Beeping::                 Audible signal to the user.
- * Window Systems::          Which window system is being used.
- 
-@@ -1003,6 +1036,7 @@
- 
- @include lists.texi
- @include sequences.texi
-+@include hash.texi
- @include symbols.texi
- @include eval.texi
- 
-@@ -1041,9 +1075,9 @@
- @include abbrevs.texi
- @include processes.texi
- 
--@include os.texi
- @include display.texi
- @include calendar.texi
-+@include os.texi
- 
- @c MOVE to Emacs Manual:  include misc-modes.texi
- 
-@@ -1051,6 +1085,9 @@
- 
- @c  REMOVE this:  include non-hacker.texi
- 
-+@include anti.texi
-+@include doclicense.texi
-+@include gpl.texi
- @include tips.texi
- @include internals.texi
- @include errors.texi
-@@ -1075,3 +1112,7 @@
- 
- 
- These words prevent "local variables" above from confusing Emacs.
-+
-+@ignore
-+   arch-tag: f7e9a219-a0e1-4776-b631-08eaa1d49b34
-+@end ignore
-Only in ./: elisp.tps
-Only in ./: elisp.vrs
-Only in ./: front-cover-1.texi
-Only in ./: gpl.texi
-Only in ./: hash.texi
-Only in ./: html.bat
-Only in ./: index.perm
-Only in ./: index.texi
-Only in ./: jcode.pl
-Only in ./: lay-flat.texi
-Only in ./: lgrep.exe.stackdump
-Only in ./: makefile.w32-in
-Only in ./: mkinstalldirs
-Only in ./: spellfile
-Only in ./: style1.js
-Only in ./: style2.js
-Only in ./: texi2html.pl
-Only in ./: texinfo.tex
-Only in ./: tindex.pl
-Only in ./: two-volume-cross-refs.txt
-Only in ./: two.el
-Only in ./: vol1.texi
-Only in ./: vol2.texi
-Only in ./: word.memo
diff -x'*.html' -u ../../20-2-5/ja/configure ./configure
--- ../../20-2-5/ja/configure	2004-04-26 06:01:58.000000000 +0900
+++ ./configure	2004-04-26 06:03:06.000000000 +0900
@@ -1,7 +1,7 @@
 #! /bin/sh
 
 # Guess values for system-dependent variables and create Makefiles.
-# Generated automatically using autoconf version 2.12 
+# Generated automatically using autoconf version 2.13
 # Copyright (C) 1992, 93, 94, 95, 96 Free Software Foundation, Inc.
 #
 # This configure script is free software; the Free Software Foundation
@@ -49,6 +49,7 @@
 # Initialize some other variables.
 subdirs=
 MFLAGS= MAKEFLAGS=
+SHELL=${CONFIG_SHELL-/bin/sh}
 # Maximum number of lines to put in a shell here document.
 ac_max_here_lines=12
 
@@ -332,7 +333,7 @@
     verbose=yes ;;
 
   -version | --version | --versio | --versi | --vers)
-    echo "configure generated by autoconf version 2.12"
+    echo "configure generated by autoconf version 2.13"
     exit 0 ;;
 
   -with-* | --with-*)
@@ -502,9 +503,11 @@
 # CFLAGS is not in ac_cpp because -g, -O, etc. are not valid cpp options.
 ac_cpp='$CPP $CPPFLAGS'
 ac_compile='${CC-cc} -c $CFLAGS $CPPFLAGS conftest.$ac_ext 1>&5'
-ac_link='${CC-cc} -o conftest $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS 1>&5'
+ac_link='${CC-cc} -o conftest${ac_exeext} $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS 1>&5'
 cross_compiling=$ac_cv_prog_cc_cross
 
+ac_exeext=
+ac_objext=o
 if (echo "testing\c"; echo 1,2,3) | grep c >/dev/null; then
   # Stardent Vistra SVR4 grep lacks -e, says ghazi@caip.rutgers.edu.
   if (echo -n testing; echo 1,2,3) | sed s/-n/xn/ | grep xn >/dev/null; then
@@ -620,7 +623,7 @@
     echo "running \${CONFIG_SHELL-/bin/sh} $0 $ac_configure_args --no-create --no-recursion"
     exec \${CONFIG_SHELL-/bin/sh} $0 $ac_configure_args --no-create --no-recursion ;;
   -version | --version | --versio | --versi | --vers | --ver | --ve | --v)
-    echo "$CONFIG_STATUS generated by autoconf version 2.12"
+    echo "$CONFIG_STATUS generated by autoconf version 2.13"
     exit 0 ;;
   -help | --help | --hel | --he | --h)
     echo "\$ac_cs_usage"; exit 0 ;;
@@ -639,9 +642,11 @@
  s/@@/%@/; s/@@/@%/; s/@g\$/%g/' > conftest.subs <<\\CEOF
 $ac_vpsub
 $extrasub
+s%@SHELL@%$SHELL%g
 s%@CFLAGS@%$CFLAGS%g
 s%@CPPFLAGS@%$CPPFLAGS%g
 s%@CXXFLAGS@%$CXXFLAGS%g
+s%@FFLAGS@%$FFLAGS%g
 s%@DEFS@%$DEFS%g
 s%@LDFLAGS@%$LDFLAGS%g
 s%@LIBS@%$LIBS%g
共通の下位ディレクトリー: ../../20-2-5/ja/cssと./css
diff -x'*.html' -u ../../20-2-5/ja/elisp.texi ./elisp.texi
--- ../../20-2-5/ja/elisp.texi	2004-04-26 06:01:46.000000000 +0900
+++ ./elisp.texi	2004-08-11 02:42:10.162465600 +0900
@@ -1,65 +1,21 @@
 \input texinfo  @c -*-texinfo-*-
 @c %**start of header
-@setfilename elisp
+@setfilename elisp-ja
 @c @settitle GNU Emacs Lisp Reference Manual
 @settitle GNU Emacs Lispリファレンスマニュアル
 @c %**end of header
 
-@dircategory Editors
+@c Versino of the manual.
+@set VERSION 2.9
+
+@dircategory Emacs
 @direntry
-* Elisp: (elisp).	The Emacs Lisp Reference Manual.
+* Elisp: (elisp-ja).	The Emacs Lisp Reference Manual.
 @end direntry
 
 @smallbook
-
-@ifinfo
-@c This version is the edition 2.5 of the GNU Emacs Lisp
-@c Reference Manual.  It corresponds to Emacs Version 20.3
-Emacs Lispリファレンスマニュアル2.5版であり、
-Emacs 20.3版に対応します。
-@c Please REMEMBER to update edition number in *four* places in this file
-@c                 and also in *one* place in intro.texi
-
-Published by the Free Software Foundation
-59 Temple Place, Suite 330
-Boston, MA  02111-1307  USA
-
-Copyright (C) 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998 Free Software Foundation, Inc. 
-
-Permission is granted to make and distribute verbatim copies of this
-manual provided the copyright notice and this permission notice are
-preserved on all copies.
-
-@ignore
-Permission is granted to process this file through TeX and print the
-results, provided the printed document carries copying permission notice
-identical to this one except for the removal of this paragraph (this
-paragraph not being relevant to the printed manual).
-
-@end ignore
-Permission is granted to copy and distribute modified versions of this
-manual under the conditions for verbatim copying, provided that the
-entire resulting derived work is distributed under the terms of a
-permission notice identical to this one.
-
-Permission is granted to copy and distribute translations of this manual
-into another language, under the above conditions for modified versions,
-except that this permission notice may be stated in a translation
-approved by the Foundation.
-
-Permission is granted to copy and distribute modified versions of this
-manual under the conditions for verbatim copying, provided also that the
-section entitled ``GNU General Public License'' is included exactly as
-in the original, and provided that the entire resulting derived work is
-distributed under the terms of a permission notice identical to this
-one.
-
-Permission is granted to copy and distribute translations of this manual
-into another language, under the above conditions for modified versions,
-except that the section entitled ``GNU General Public License'' may be
-included in a translation approved by the Free Software Foundation
-instead of in the original English.
-@end ifinfo
+@setchapternewpage odd
+@finalout
 
 @c Combine indices.
 @synindex cp fn
@@ -69,72 +25,108 @@
 @c We use the "type index" to index new functions and variables.
 @c @syncodeindex tp fn
 
-@setchapternewpage odd
-@finalout
+@ifinfo
+@c This Info file contains edition @value{VERSION} of the GNU Emacs Lisp
+@c Reference Manual, corresponding to Emacs version 21.3.
+Emacs Lispリファレンスマニュアル@value{VERSION}版であり、
+Emacs 21.3版に対応します。
+@c Please REMEMBER to update edition number in *four* places in this file
+@c                 and also in *one* place in intro.texi and *one* in README.
+
+Published by the Free Software Foundation
+59 Temple Place, Suite 330
+Boston, MA  02111-1307  USA
+
+Copyright (C) 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998, 1999,@*
+              2000, 2002 Free Software Foundation, Inc.
+
+Permission is granted to copy, distribute and/or modify this document
+under the terms of the GNU Free Documentation License, Version 1.1 or
+any later version published by the Free Software Foundation; with the
+Invariant Sections being ``GNU General Public License'', with the Front-Cover texts being
+``A GNU Manual'', and with the Back-Cover Texts as in (a) below.  A copy
+of the license is included in the section entitled ``GNU Free
+Documentation License''.
+
+(a) The FSF's Back-Cover Text is: ``You have freedom to copy and modify
+this GNU Manual, like GNU software.  Copies published by the Free
+Software Foundation raise funds for GNU development.''
+@end ifnottex
 
 @titlepage
 @c @title GNU Emacs Lisp Reference Manual
-@c @subtitle For Emacs Version 20.3
+@c @subtitle For Emacs Version 21
 @c @c The edition number appears in several places in this file
 @c @c and also in the file intro.texi.
-@c @subtitle Revision 2.5, May 1998
+@c @subtitle Revision @value{VERSION}, January 2002
 @title GNU Emacs Lisp リファレンスマニュアル
-@subtitle Emacs 20.3版対応
-@subtitle 改訂2.5版、1998年5月
+@subtitle Emacs 21版対応
+@subtitle 改訂@value{VERSION}版、2002年1月
 
 @author by Bil Lewis, Dan LaLiberte, Richard Stallman
 @author and the GNU Manual Group
 @page
 @vskip 0pt plus 1filll
-Copyright @copyright{} 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998 Free Software Foundation, Inc. 
+Copyright @copyright{} 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1998,@*
+1999, 2000, 2002 Free Software Foundation, Inc.
 
 @sp 2
-@c Edition 2.5 @*
-@c Revised for Emacs Version 20.3,@*
-@c May 1998.@*
-2.5版 @*
-Emacs 20.3版対応改訂版 @*
-1998年5月 @*
+@c Edition @value{VERSION} @*
+@c Revised for Emacs Version 21.3,@*
+@c January 2002.@*
+@value{VERSION}版 @*
+Emacs 21.3版対応改訂版 @*
+2002年1月 @*
 @sp 2
-ISBN 1-882114-72-8
+ISBN 1-882114-73-6
 
 @sp 2
 Published by the Free Software Foundation @*
 59 Temple Place, Suite 330@*
 Boston, MA  02111-1307  USA
 
-Permission is granted to make and distribute verbatim copies of this
-manual provided the copyright notice and this permission notice are
-preserved on all copies.
-
-Permission is granted to copy and distribute modified versions of this
-manual under the conditions for verbatim copying, provided also that the
-section entitled ``GNU General Public License'' is included
-exactly as in the original, and provided that the entire resulting
-derived work is distributed under the terms of a permission notice
-identical to this one.
-
-Permission is granted to copy and distribute translations of this manual
-into another language, under the above conditions for modified versions,
-except that the section entitled ``GNU General Public License'' may be
-included in a translation approved by the Free Software Foundation
-instead of in the original English.
+Permission is granted to copy, distribute and/or modify this document
+under the terms of the GNU Free Documentation License, Version 1.1 or
+any later version published by the Free Software Foundation; with the
+Invariant Sections being ``Copying'', with the Front-Cover texts being
+``A GNU Manual'', and with the Back-Cover Texts as in (a) below.  A copy
+of the license is included in the section entitled ``GNU Free
+Documentation License''.
+
+(a) The FSF's Back-Cover Text is: ``You have freedom to copy and modify
+this GNU Manual, like GNU software.  Copies published by the Free
+Software Foundation raise funds for GNU development.''
 
 Cover art by Etienne Suvasa.
 @end titlepage
 @page
 
-@node Top, Copying, (dir), (dir)
+@node Top, Introduction, (dir), (dir)
 
 @ifinfo
-@c This Info file contains edition 2.5 of the GNU Emacs Lisp
-@c Reference Manual, corresponding to GNU Emacs version 20.3.
-このinfoファイルは、GNU Emacs Lispマニュアル 2.5版であり、
-GNU Emacs 20.3版に対応します。
+@c This Info file contains edition @value{VERSION} of the GNU Emacs Lisp
+@c Reference Manual, corresponding to GNU Emacs version 21.3.
+このinfoファイルは、GNU Emacs Lispマニュアル @value{VERSION}版であり、
+GNU Emacs 21.3版に対応します。
 @end ifinfo
 
+旧版の翻訳である
+@uref{ftp://ftp.ascii.co.jp/pub/GNU/elisp-manual-20/elisp-manual-20-2.5-jp.tgz,elisp-manual-20-2.5-jp.tgz} 
+を参考に最新版の変更点を追加しています。元文書の翻訳をされた方々に深く
+感謝いたします。
+
+また、「コメント」と書いてある部分は私が追加した部分です。また、分かり
+にく部分などは原文の意味を曲げない範囲で、加筆を行っています。
+
+分かりにくい、意味不明だ、用語が統一されていないなどありましたら、
+@uref{mailto:akihisa@@mail.ne.jp,akihisa@@mail.ne.jpまでメール}にて連
+絡をお願いいたします。あるいは、各章の右上にあるコメントからWikiに書き
+込みをお願いします。
+
+またこの文書は原文のライセンスを継承しますので、再配布、コピー、変更な
+どはすべて自由にしていただいて構いません。
+
 @menu
-* Copying::                 Conditions for copying and changing GNU Emacs.
 * Introduction::            Introduction and conventions used.
 * Standards: Coding Conventions.    Coding conventions for Emacs Lisp.
 
@@ -145,6 +137,7 @@
 * Sequences Arrays Vectors::  Lists, strings and vectors are called sequences.
                                 Certain functions act on any kind of sequence.
                                 The description of vectors is here as well.
+* Hash Tables::             Very fast lookup-tables.
 * Symbols::                 Symbols represent names, uniquely.
 
 * Evaluation::              How Lisp expressions are evaluated.
@@ -185,15 +178,17 @@
 * Abbrevs::                 How Abbrev mode works, and its data structures.
 
 * Processes::               Running and communicating with subprocesses.
+* Display::	            Features for controlling the screen display.
+* Calendar::		    Customizing the calendar and diary.
 * System Interface::        Getting the user id, system type, environment
                               variables, and other such things.
-* Display::	            Parameters controlling screen usage.
-                              The bell.  Waiting for input.
-* Calendar::		    Customizing the calendar and diary.
 
 @c Appendices
 付録
 
+* Antinews::                Info for users downgrading to Emacs 20.
+* GNU Free Documentation License:: The license for this documentation
+* GPL::                     Conditions for copying and changing GNU Emacs.
 * Tips::                    Advice and coding conventions for Emacs Lisp.
 * GNU Emacs Internals::     Building and dumping Emacs;
                               internal data structures.
@@ -206,7 +201,7 @@
 * Index::                   Index including concepts, functions, variables,
                               and other terms.
 
-* New Symbols::             New functions and variables in Emacs 20.
+* New Symbols::             New functions and variables in Emacs 21.
 
 @c       --- The Detailed Node Listing ---
       −−− 詳細ノード一覧 −−−
@@ -247,8 +242,8 @@
 @c Format of Descriptions
 記述形式
 
-* A Sample Function Description::       
-* A Sample Variable Description::   
+* A Sample Function Description::
+* A Sample Variable Description::
 
 @c Lisp Data Types
 Lispデータ型
@@ -266,7 +261,7 @@
 * Integer Type::        Numbers without fractional parts.
 * Floating Point Type:: Numbers with fractional parts and with a large range.
 * Character Type::      The representation of letters, numbers and
-                        control characters.
+                          control characters.
 * Sequence Type::       Both lists and arrays are classified as sequences.
 * Cons Cell Type::      Cons cells, and lists (which are made from cons cells).
 * Array Type::          Arrays include strings and vectors.
@@ -280,7 +275,7 @@
 * Primitive Function Type::     A function written in C, callable from Lisp.
 * Byte-Code Type::      A function written in Lisp, then compiled.
 * Autoload Type::       A type used for automatically loading seldom-used
-                        functions.
+                          functions.
 
 @c List Type
 リスト型
@@ -368,7 +363,7 @@
 * Intro Eval::              Evaluation in the scheme of things.
 * Eval::                    How to invoke the Lisp interpreter explicitly.
 * Forms::                   How various sorts of objects are evaluated.
-* Quoting::                 Avoiding evaluation (to put constants in 
+* Quoting::                 Avoiding evaluation (to put constants in
                               the program).
 
 @c Kinds of Forms
@@ -427,11 +422,11 @@
 @c Scoping Rules for Variable Bindings
 スコープルールと変数束縛
 
-* Scope::                   Scope means where in the program a value 
+* Scope::                   Scope means where in the program a value
                               is visible.  Comparison with other languages.
 * Extent::                  Extent means how long in time a value exists.
 * Impl of Scope::           Two ways to implement dynamic scoping.
-* Using Scoping::           How to use dynamic scoping carefully and 
+* Using Scoping::           How to use dynamic scoping carefully and
                               avoid problems.
 
 @c Buffer-Local Variables
@@ -451,11 +446,11 @@
 * Defining Functions::      Lisp expressions for defining functions.
 * Calling Functions::       How to use an existing function.
 * Mapping Functions::       Applying a function to each element of a list, etc.
-* Anonymous Functions::     Lambda-expressions are functions with no names.    
+* Anonymous Functions::     Lambda-expressions are functions with no names.
 * Function Cells::          Accessing or setting the function definition
                               of a symbol.
 * Related Topics::          Cross-references to specific Lisp primitives
-                              that have a special bearing on how 
+                              that have a special bearing on how
                               functions work.
 
 @c Lambda Expressions
@@ -535,10 +530,10 @@
 Lispオブジェクトの読み取りと表示
 
 * Streams Intro::           Overview of streams, reading and printing.
-* Input Streams::           Various data types that can be used as 
+* Input Streams::           Various data types that can be used as
                               input streams.
 * Input Functions::         Functions to read Lisp objects from text.
-* Output Streams::          Various data types that can be used as 
+* Output Streams::          Various data types that can be used as
                               output streams.
 * Output Functions::        Functions to print Lisp objects as text.
 
@@ -599,14 +594,15 @@
 * Inheritance and Keymaps::	How one keymap can inherit the bindings
 				  of another keymap.
 * Prefix Keys::                 Defining a key with a keymap as its definition.
-* Menu Keymaps::		A keymap can define a menu for X windows
+* Menu Keymaps::		A keymap can define a menu for X
 				  or for use from the terminal.
 * Active Keymaps::	        Each buffer has a local keymap
                                   to override the standard (global) bindings.
-				Each minor mode can also override them.
+				  Each minor mode can also override them.
 * Key Lookup::                  How extracting elements from keymaps works.
 * Functions for Key Lookup::    How to request key lookup.
 * Changing Key Bindings::       Redefining a key in a keymap.
+* Remapping Commands::          Bindings that translate one command to another.
 * Key Binding Commands::        Interactive interfaces for redefining keys.
 * Scanning Keymaps::            Looking through all keymaps, for printing help.
 
@@ -616,7 +612,7 @@
 * Major Modes::             Defining major modes.
 * Minor Modes::             Defining minor modes.
 * Mode Line Format::        Customizing the text that appears in the mode line.
-* Hooks::                   How to use hooks; how to write code that 
+* Hooks::                   How to use hooks; how to write code that
                               provides hooks.
 
 @c Major Modes
@@ -684,7 +680,7 @@
 * File Name Components::    The directory part of a file name, and the rest.
 * Directory Names::         A directory's name as a directory
                               is different from its name as a file.
-* Relative File Names::     Some file names are relative to a 
+* Relative File Names::     Some file names are relative to a
                               current directory.
 * File Name Expansion::     Converting relative file names to absolute ones.
 * Unique File Names::       Generating names for temporary files.
@@ -693,18 +689,18 @@
 @c Backups and Auto-Saving
 バックアップと自動保存
 
-* Backup Files::            How backup files are made; how their names 
+* Backup Files::            How backup files are made; how their names
                               are chosen.
 * Auto-Saving::             How auto-save files are made; how their
                               names are chosen.
-* Reverting::               @code{revert-buffer}, and how to customize 
+* Reverting::               @code{revert-buffer}, and how to customize
                               what it does.
 
 @c Backup Files
 バックアップファイル
 
 * Making Backups::          How Emacs makes backup files, and when.
-* Rename or Copy::          Two alternatives: renaming the old file 
+* Rename or Copy::          Two alternatives: renaming the old file
                               or copying it.
 * Numbered Backups::        Keeping multiple backups for each source file.
 * Backup Names::            How backup file names are computed; customization.
@@ -740,7 +736,7 @@
                               and choosing a window for it.
 * Window Point::            Each window has its own location of point.
 * Window Start::            The display-start position controls which text
-                              is on-screen in the window. 
+                              is on-screen in the window.
 * Vertical Scrolling::      Moving text up and down in the window.
 * Horizontal Scrolling::    Moving text sideways on the window.
 * Size of Window::          Accessing the size of a window.
@@ -772,7 +768,7 @@
 * Window System Selections::Transferring text to and from other windows.
 * Color Names::	            Getting the definitions of color names.
 * Resources::		    Getting resource values from the server.
-* Server Data::		    Getting info about the X server.
+* Display Feature Testing:: Determining the features of a terminal.
 
 @c Positions
 バッファ内の位置
@@ -800,7 +796,7 @@
 * Predicates on Markers::   Testing whether an object is a marker.
 * Creating Markers::        Making empty markers or markers at certain places.
 * Information from Markers::  Finding the marker's buffer or character
-                                position. 
+                                position.
 * Moving Markers::          Moving the marker to a new buffer or position.
 * The Mark::                How ``the mark'' is implemented with a marker.
 * The Region::              How to access ``the region''.
@@ -829,6 +825,9 @@
 * Transposition::           Swapping two portions of a buffer.
 * Registers::               How registers are implemented.  Accessing
                               the text or position stored in a register.
+* Atomic Changes::          Installing several buffer changes ``atomically''.
+* Base 64::                 Conversion to or from base 64 encoding.
+* MD5 Checksum::            Compute the MD5 ``message digest''/``checksum''.
 * Change Hooks::            Supplying functions to be run when text is changed.
                               
 @c The Kill Ring
@@ -836,6 +835,7 @@
 
 * Kill Ring Concepts::      What text looks like in the kill ring.
 * Kill Functions::          Functions that kill text.
+* Yanking::                 How yanking is done.
 * Yank Commands::           Commands that access the kill ring.
 * Low-Level Kill Ring::	    Functions and variables for kill ring access.
 * Internals of Kill Ring::  Variables that hold kill-ring data.
@@ -864,9 +864,32 @@
                               them back.
 * Lazy Properties::         Computing text properties in a lazy fashion
                               only when text is examined.
+* Clickable Text::          Using text properties to make regions of text
+                              do something when you click on them.
+* Fields::                  The @code{field} property defines
+                              fields within the buffer.
 * Not Intervals::	    Why text properties do not use
 			      Lisp-visible text intervals.
 
+@c Non-ASCII Characters
+非アスキー文字
+
+* Text Representations::    Unibyte and multibyte representations
+* Converting Representations::  Converting unibyte to multibyte and vice versa.
+* Selecting a Representation::  Treating a byte sequence as unibyte or multi.
+* Character Codes::         How unibyte and multibyte relate to
+                                codes of individual characters.
+* Character Sets::          The space of possible characters codes
+                                is divided into various character sets.
+* Chars and Bytes::         More information about multibyte encodings.
+* Splitting Characters::    Converting a character to its byte sequence.
+* Scanning Charsets::       Which character sets are used in a buffer?
+* Translation of Characters::   Translation tables are used for conversion.
+* Coding Systems::          Coding systems are conversions for saving files.
+* Input Methods::           Input methods allow users to enter various
+                                non-ASCII characters without special keyboards.
+* Locales::                 Interacting with the POSIX locale.
+
 @c Searching and Matching
 探索と一致
 
@@ -931,6 +954,7 @@
 
 * Process Buffers::         If no filter, output is put in a buffer.
 * Filter Functions::        Filter functions accept output from the process.
+* Decoding Output::         Filters can get unibyte or multibyte strings.
 * Accepting Output::        How to wait until process output arrives.
 
 @c Operating System Interface
@@ -947,10 +971,10 @@
 @c Starting Up Emacs
 Emacsの始動
 
-* Start-up Summary::        Sequence of actions Emacs performs at start-up.
+* Startup Summary::         Sequence of actions Emacs performs at start-up.
 * Init File::               Details on reading the init file (@file{.emacs}).
 * Terminal-Specific::       How the terminal-specific Lisp file is read.
-* Command Line Arguments::  How command line arguments are processed,
+* Command-Line Arguments::  How command line arguments are processed,
                               and how you can customize them.
 
 @c Getting out of Emacs
@@ -965,12 +989,21 @@
 * Refresh Screen::          Clearing the screen and redrawing everything on it.
 * Truncation::              Folding or wrapping long text lines.
 * The Echo Area::           Where messages are displayed.
+* Warnings::                Displaying warning messages for the user.
 * Selective Display::       Hiding part of the buffer text.
 * Overlay Arrow::           Display of an arrow to indicate position.
 * Temporary Displays::      Displays that go away automatically.
-* Waiting::                 Forcing display update and waiting for user.
+* Overlays::		    Use overlays to highlight parts of the buffer.
+* Width::                   How wide a character or string is on the screen.
+* Faces::		    A face defines a graphics style
+                              for text characters: font, colors, etc.
+* Fringes::                 Controlling window fringes.
+* Display Property::        Enabling special display features.
+* Images::                  Displaying images in Emacs buffers.
 * Blinking::                How Emacs shows the matching open parenthesis.
-* Usual Display::	    How control characters are displayed.
+* Inverse Video::	    Specifying how the screen looks.
+* Usual Display::	    The usual conventions for displaying nonprinting chars.
+* Display Tables::	    How to specify other conventions.
 * Beeping::                 Audible signal to the user.
 * Window Systems::          Which window system is being used.
 
@@ -1003,6 +1036,7 @@
 
 @include lists.texi
 @include sequences.texi
+@include hash.texi
 @include symbols.texi
 @include eval.texi
 
@@ -1041,9 +1075,9 @@
 @include abbrevs.texi
 @include processes.texi
 
-@include os.texi
 @include display.texi
 @include calendar.texi
+@include os.texi
 
 @c MOVE to Emacs Manual:  include misc-modes.texi
 
@@ -1051,6 +1085,9 @@
 
 @c  REMOVE this:  include non-hacker.texi
 
+@include anti.texi
+@include doclicense.texi
+@include gpl.texi
 @include tips.texi
 @include internals.texi
 @include errors.texi
@@ -1075,3 +1112,7 @@
 
 
 These words prevent "local variables" above from confusing Emacs.
+
+@ignore
+   arch-tag: f7e9a219-a0e1-4776-b631-08eaa1d49b34
+@end ignore
diff -x'*.html' -u ../../20-2-5/ja/html.bat ./html.bat
--- ../../20-2-5/ja/html.bat	2004-04-26 06:01:50.000000000 +0900
+++ ./html.bat	2005-03-28 22:49:30.972934400 +0900
@@ -1,2 +1,10 @@
 perl texi2html.pl -split chapter elisp.texi
+rm -f change.diff
+diff -x"*.html" -u ../../20-2-5/ja/ ./ >> change.diff
 meadow -batch -l "~/mylisp/meadowmemo-index-elisp.el"
+sh ./info.sh
+rm -rf ../elisp-info.tar.gz
+rm -rf ../elisp-src.tar.gz
+tar cvfz ../elisp-info.tar.gz *.inf*
+tar cvfz ../elisp-src.tar.gz *.texi ChangeLog
+rm -rf *.inf*
./だけに発見: index1.js
./だけに発見: index10.js
./だけに発見: index11.js
./だけに発見: index12.js
./だけに発見: index13.js
./だけに発見: index14.js
./だけに発見: index15.js
./だけに発見: index16.js
./だけに発見: index17.js
./だけに発見: index18.js
./だけに発見: index19.js
./だけに発見: index2.js
./だけに発見: index20.js
./だけに発見: index21.js
./だけに発見: index22.js
./だけに発見: index23.js
./だけに発見: index24.js
./だけに発見: index25.js
./だけに発見: index26.js
./だけに発見: index27.js
./だけに発見: index28.js
./だけに発見: index29.js
./だけに発見: index3.js
./だけに発見: index30.js
./だけに発見: index31.js
./だけに発見: index32.js
./だけに発見: index33.js
./だけに発見: index34.js
./だけに発見: index35.js
./だけに発見: index36.js
./だけに発見: index37.js
./だけに発見: index38.js
./だけに発見: index39.js
./だけに発見: index4.js
./だけに発見: index5.js
./だけに発見: index6.js
./だけに発見: index7.js
./だけに発見: index8.js
./だけに発見: index9.js
./だけに発見: indexA.js
./だけに発見: indexB.js
./だけに発見: indexC.js
./だけに発見: indexCopying.js
./だけに発見: indexD.js
./だけに発見: indexE.js
./だけに発見: indexF.js
./だけに発見: indexG.js
./だけに発見: indexIndex.js
./だけに発見: indexNewSymbols.js
./だけに発見: info.sh
../../20-2-5/ja/だけに発見: lgrep.exe.stackdump
diff -x'*.html' -u ../../20-2-5/ja/mkinstalldirs ./mkinstalldirs
--- ../../20-2-5/ja/mkinstalldirs	2004-04-26 11:16:00.000000000 +0900
+++ ./mkinstalldirs	2004-04-26 11:17:00.000000000 +0900
@@ -4,7 +4,7 @@
 # Created: 1993-05-16
 # Public domain
 
-# $Id: mkinstalldirs,v 1.10 1996/05/03 07:37:52 friedman Exp $
+# $Id: mkinstalldirs,v 1.1 2000/07/28 12:48:04 gerd Exp $
 
 errstatus=0
 
./だけに発見: mmemoinfo.el
./だけに発見: texi2html.pl
