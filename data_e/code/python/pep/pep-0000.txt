PEP: 0
Title: Index of Python Enhancement Proposals (PEPs)
Version: N/A
Last-Modified: 2013-03-11
Author: David Goodger <goodger@python.org>,
        Barry Warsaw <barry@python.org>
Status: Active
Type: Informational
Created: 13-Jul-2000


Introduction

    This PEP contains the index of all Python Enhancement Proposals,
    known as PEPs.  PEP numbers are assigned by the PEP editors, and
    once assigned are never changed[1].  The Mercurial history[2] of
    the PEP texts represent their historical record.


Index by Category

     num  title                                                   owner
     ---  -----                                                   -----

 Meta-PEPs (PEPs about PEPs or Processes)

 P     1  PEP Purpose and Guidelines                              Warsaw, Hylton, Goodger, Coghlan
 P     4  Deprecation of Standard Modules                         von Löwis
 P     5  Guidelines for Language Evolution                       Prescod
 P     6  Bug Fix Releases                                        Aahz, Baxter
 P     7  Style Guide for C Code                                  GvR
 P     8  Style Guide for Python Code                             GvR, Warsaw
 P     9  Sample Plaintext PEP Template                           Warsaw
 P    10  Voting Guidelines                                       Warsaw
 P    11  Removing support for little used platforms              von Löwis
 P    12  Sample reStructuredText PEP Template                    Goodger, Warsaw

 Other Informational PEPs

 I    20  The Zen of Python                                       Peters
 I   101  Doing Python Releases 101                               Warsaw, GvR
 IF  247  API for Cryptographic Hash Functions                    Kuchling
 IF  248  Python Database API Specification v1.0                  Lemburg
 IF  249  Python Database API Specification v2.0                  Lemburg
 I   257  Docstring Conventions                                   Goodger, GvR
 IF  272  API for Block Encryption Algorithms v1.0                Kuchling
 I   287  reStructuredText Docstring Format                       Goodger
 I   290  Code Migration and Modernization                        Hettinger
 IF  291  Backward Compatibility for the Python 2 Standard ...    Norwitz
 IF  333  Python Web Server Gateway Interface v1.0                Eby
 I   373  Python 2.7 Release Schedule                             Peterson
 I   392  Python 3.2 Release Schedule                             Brandl
 I   394  The "python" Command on Unix-Like Systems               Staley, Coghlan
 I   398  Python 3.3 Release Schedule                             Brandl
 IF  399  Pure Python/C Accelerator Module Compatibility ...      Cannon
 IF  404  Python 2.8 Un-release Schedule                          Warsaw
 IA  411  Provisional packages in the Python standard library     Coghlan, Bendersky
 I   429  Python 3.4 Release Schedule                             Hastings
 IF  430  Migrating to Python 3 as the default online ...         Coghlan
 IF 3333  Python Web Server Gateway Interface v1.0.1              Eby

 Accepted PEPs (accepted; may not be implemented yet)

 SA  345  Metadata for Python Software Packages 1.2               Jones
 SA  376  Database of Installed Python Distributions              Ziadé
 SA  386  Changing the version comparison module in Distutils     Ziadé
 SA  397  Python launcher for Windows                             Hammond, v. Löwis
 SA  425  Compatibility Tags for Built Distributions              <dholth@gmail.com
 SA  427  The Wheel Binary Package Format 1.0                     Holth
 SA 3121  Extension Module Initialization and Finalization        von Löwis

 Open PEPs (under consideration)

 S   286  Enhanced Argument Tuples                                von Löwis
 S   337  Logging Usage in the Standard Library                   Dubner
 S   368  Standard image protocol and class                       Mastrodomenico
 S   381  Mirroring infrastructure for PyPI                       Ziadé, v. Löwis
 P   387  Backwards Compatibility Policy                          Peterson
 S   390  Static metadata for Distutils                           Ziadé
 I   396  Module Version Numbers                                  Warsaw
 S   400  Deprecate codecs.StreamReader and codecs.StreamWriter   Stinner
 S   419  Protecting cleanup statements from interruptions        Colomiets
 S   422  Simpler customisation of class creation                 Coghlan, Urban
 I   423  Naming conventions and recipes related to packaging     Bryon
 S   426  Metadata for Python Software Packages 2.0               Holth, Stufft, Coghlan
 S   428  The pathlib module -- object-oriented filesystem paths  Pitrou
 S   431  Time zone support improvements                          Regebro
 S   432  Simplifying the CPython startup sequence                Coghlan
 S   433  Easier suppression of file descriptor inheritance       Stinner
 I   434  IDLE Enhancement Exception for All Branches             Rovito, Reedy
 S   435  Adding an Enum type to the Python standard library      Warsaw, Bendersky
 S   436  The Argument Clinic DSL                                 Hastings
 I   444  Python Web3 Interface                                   McDonough, Ronacher
 S  3124  Overloading, Generic Functions, Interfaces, and ...     Eby
 S  3142  Add a "while" clause to generator expressions           Britton
 S  3143  Standard daemon process library                         Finney
 S  3145  Asynchronous I/O For subprocess.Popen                   Pruitt, McCreary, Carlson
 S  3152  Cofunctions                                             Ewing
 S  3154  Pickle protocol version 4                               Pitrou
 S  3156  Asynchronous IO Support Rebooted                        GvR

 Finished PEPs (done, implemented in code repository)

 SF  100  Python Unicode Integration                              Lemburg
 SF  201  Lockstep Iteration                                      Warsaw
 SF  202  List Comprehensions                                     Warsaw
 SF  203  Augmented Assignments                                   Wouters
 SF  205  Weak References                                         Drake
 SF  207  Rich Comparisons                                        GvR, Ascher
 SF  208  Reworking the Coercion Model                            Schemenauer, Lemburg
 SF  214  Extended Print Statement                                Warsaw
 SF  217  Display Hook for Interactive Use                        Zadka
 SF  218  Adding a Built-In Set Object Type                       Wilson, Hettinger
 SF  221  Import As                                               Wouters
 SF  223  Change the Meaning of \x Escapes                        Peters
 SF  227  Statically Nested Scopes                                Hylton
 SF  229  Using Distutils to Build Python                         Kuchling
 SF  230  Warning Framework                                       GvR
 SF  232  Function Attributes                                     Warsaw
 SF  234  Iterators                                               Yee, GvR
 SF  235  Import on Case-Insensitive Platforms                    Peters
 SF  236  Back to the __future__                                  Peters
 SF  237  Unifying Long Integers and Integers                     Zadka, GvR
 SF  238  Changing the Division Operator                          Zadka, GvR
 SF  241  Metadata for Python Software Packages                   Kuchling
 SF  250  Using site-packages on Windows                          Moore
 SF  252  Making Types Look More Like Classes                     GvR
 SF  253  Subtyping Built-in Types                                GvR
 SF  255  Simple Generators                                       Schemenauer, Peters, Hetland
 SF  260  Simplify xrange()                                       GvR
 SF  261  Support for "wide" Unicode characters                   Prescod
 SF  263  Defining Python Source Code Encodings                   Lemburg, von Löwis
 SF  264  Future statements in simulated shells                   Hudson
 SF  273  Import Modules from Zip Archives                        Ahlstrom
 SF  274  Dict Comprehensions                                     Warsaw
 SF  277  Unicode file name support for Windows NT                Hodgson
 SF  278  Universal Newline Support                               Jansen
 SF  279  The enumerate() built-in function                       Hettinger
 SF  282  A Logging System                                        Sajip, Mick
 SF  285  Adding a bool type                                      GvR
 SF  289  Generator Expressions                                   Hettinger
 SF  292  Simpler String Substitutions                            Warsaw
 SF  293  Codec Error Handling Callbacks                          Dörwald
 SF  301  Package Index and Metadata for Distutils                Jones
 SF  302  New Import Hooks                                        JvR, Moore
 SF  305  CSV File API                                            Altis, Cole, McNamara, Montanaro, Wells
 SF  307  Extensions to the pickle protocol                       GvR, Peters
 SF  308  Conditional Expressions                                 GvR, Hettinger
 SF  309  Partial Function Application                            Harris
 SF  311  Simplified Global Interpreter Lock Acquisition for ...  Hammond
 SF  314  Metadata for Python Software Packages v1.1              Kuchling, Jones
 SF  318  Decorators for Functions and Methods                    Smith
 SF  322  Reverse Iteration                                       Hettinger
 SF  324  subprocess - New process module                         Astrand
 SF  327  Decimal Data Type                                       Batista
 SF  328  Imports: Multi-Line and Absolute/Relative               Aahz
 SF  331  Locale-Independent Float/String Conversions             Reis
 SF  338  Executing modules as scripts                            Coghlan
 SF  341  Unifying try-except and try-finally                     Brandl
 SF  342  Coroutines via Enhanced Generators                      GvR, Eby
 SF  343  The "with" Statement                                    GvR, Coghlan
 SF  352  Required Superclass for Exceptions                      Cannon, GvR
 SF  353  Using ssize_t as the index type                         von Löwis
 SF  357  Allowing Any Object to be Used for Slicing              Oliphant
 SF  358  The "bytes" Object                                      Schemenauer, GvR
 SF  362  Function Signature Object                               Cannon, Seo, Selivanov, Hastings
 SF  366  Main module explicit relative imports                   Coghlan
 SF  370  Per user site-packages directory                        Heimes
 SF  371  Addition of the multiprocessing package to the ...      Noller, Oudkerk
 SF  372  Adding an ordered dictionary to collections             Ronacher, Hettinger
 SF  378  Format Specifier for Thousands Separator                Hettinger
 SF  380  Syntax for Delegating to a Subgenerator                 Ewing
 SF  383  Non-decodable Bytes in System Character Interfaces      v. Löwis
 SF  384  Defining a Stable ABI                                   v. Löwis
 SF  389  argparse - New Command Line Parsing Module              Bethard
 SF  391  Dictionary-Based Configuration For Logging              Sajip
 SF  393  Flexible String Representation                          v. Löwis
 SF  405  Python Virtual Environments                             Meyer
 SF  409  Suppressing exception context                           Furman
 SF  412  Key-Sharing Dictionary                                  Shannon
 SF  414  Explicit Unicode Literal for Python 3.3                 Ronacher, Coghlan
 SF  415  Implement context suppression with exception attributes Peterson
 SF  417  Including mock in the Standard Library                  Foord
 SF  418  Add monotonic time, performance counter, and ...        Simpson, Jewett, Turnbull, Stinner
 SF  420  Implicit Namespace Packages                             Smith
 SF  421  Adding sys.implementation                               Snow
 SF  424  A method for exposing a length hint                     Gaynor
 SF 3101  Advanced String Formatting                              Talin
 SF 3102  Keyword-Only Arguments                                  Talin
 SF 3104  Access to Names in Outer Scopes                         Yee
 SF 3105  Make print a function                                   Brandl
 SF 3106  Revamping dict.keys(), .values() and .items()           GvR
 SF 3107  Function Annotations                                    Winter, Lownds
 SF 3108  Standard Library Reorganization                         Cannon
 SF 3109  Raising Exceptions in Python 3000                       Winter
 SF 3110  Catching Exceptions in Python 3000                      Winter
 SF 3111  Simple input built-in in Python 3000                    Roberge
 SF 3112  Bytes literals in Python 3000                           Orendorff
 SF 3113  Removal of Tuple Parameter Unpacking                    Cannon
 SF 3114  Renaming iterator.next() to iterator.__next__()         Yee
 SF 3115  Metaclasses in Python 3000                              Talin
 SF 3116  New I/O                                                 Stutzbach, GvR, Verdone
 SF 3118  Revising the buffer protocol                            Oliphant, Banks
 SF 3119  Introducing Abstract Base Classes                       GvR, Talin
 SF 3120  Using UTF-8 as the default source encoding              von Löwis
 SF 3123  Making PyObject_HEAD conform to standard C              von Löwis
 SF 3127  Integer Literal Support and Syntax                      Maupin
 SF 3129  Class Decorators                                        Winter
 SF 3131  Supporting Non-ASCII Identifiers                        von Löwis
 SF 3132  Extended Iterable Unpacking                             Brandl
 SF 3134  Exception Chaining and Embedded Tracebacks              Yee
 SF 3135  New Super                                               Spealman, Delaney, Ryan
 SF 3137  Immutable Bytes and Mutable Buffer                      GvR
 SF 3138  String representation in Python 3000                    Ishimoto
 SF 3141  A Type Hierarchy for Numbers                            Yasskin
 SF 3144  IP Address Manipulation Library for the Python ...      Moody
 SF 3147  PYC Repository Directories                              Warsaw
 SF 3148  futures - execute computations asynchronously           Quinlan
 SF 3149  ABI version tagged .so files                            Warsaw
 SF 3151  Reworking the OS and IO exception hierarchy             Pitrou
 SF 3155  Qualified name for classes and functions                Pitrou

 Historical Meta-PEPs and Informational PEPs

 PF    2  Procedure for Adding New Modules                        Faassen
 PF   42  Feature Requests                                        Hylton
 IF  160  Python 1.6 Release Schedule                             Drake
 IF  200  Python 2.0 Release Schedule                             Hylton
 IF  226  Python 2.1 Release Schedule                             Hylton
 IF  251  Python 2.2 Release Schedule                             Warsaw, GvR
 IF  283  Python 2.3 Release Schedule                             GvR
 IF  320  Python 2.4 Release Schedule                             Warsaw, Hettinger, Baxter
 PF  347  Migrating the Python CVS to Subversion                  von Löwis
 IF  356  Python 2.5 Release Schedule                             Norwitz, GvR, Baxter
 PF  360  Externally Maintained Packages                          Cannon
 IF  361  Python 2.6 and 3.0 Release Schedule                     Norwitz, Warsaw
 PF  374  Choosing a distributed VCS for the Python project       Cannon, Turnbull, Vassalotti, Warsaw, Ochtman
 IF  375  Python 3.1 Release Schedule                             Peterson
 PF  385  Migrating from Subversion to Mercurial                  Ochtman, Pitrou, Brandl
 PF 3000  Python 3000                                             GvR
 PF 3002  Procedure for Backwards-Incompatible Changes            Bethard
 PF 3003  Python Language Moratorium                              Cannon, Noller, GvR
 PF 3099  Things that will Not Change in Python 3000              Brandl
 PF 3100  Miscellaneous Python 3.0 Plans                          Cannon

 Deferred PEPs

 SD  211  Adding A New Outer Product Operator                     Wilson
 SD  212  Loop Counter Iteration                                  Schneider-Kamp
 SD  213  Attribute Access Handlers                               Prescod
 SD  219  Stackless Python                                        McMillan
 SD  222  Web Library Enhancements                                Kuchling
 SD  225  Elementwise/Objectwise Operators                        Zhu, Lielens
 SD  233  Python Online Help                                      Prescod
 SD  262  A Database of Installed Python Packages                 Kuchling
 SD  267  Optimized Access to Module Namespaces                   Hylton
 SD  269  Pgen Module for Python                                  Riehl
 SD  280  Optimizing access to globals                            GvR
 SD  312  Simple Implicit Lambda                                  Suzi, Martelli
 SD  315  Enhanced While Loop                                     Hettinger, Carroll
 SD  316  Programming by Contract for Python                      Way
 SD  323  Copyable Iterators                                      Martelli
 SD  349  Allow str() to return unicode strings                   Schemenauer
 SD  395  Qualified Names for Modules                             Coghlan
 SD  403  General purpose decorator clause (aka "@in" clause)     Coghlan
 SD  406  Improved Encapsulation of Import State                  Coghlan, Slodkowicz
 PD  407  New release cycle and introducing long-term support ... Pitrou, Brandl, Warsaw
 PD  413  Faster evolution of the Python Standard Library         Coghlan
 SD  628  Add ``math.tau``                                        Coghlan
 SD 3150  Statement local namespaces (aka "given" clause)         Coghlan

 Abandoned, Withdrawn, and Rejected PEPs

 PW    3  Guidelines for Handling Bug Reports                     Hylton
 IS  102  Doing Python Micro Releases                             Baxter, Warsaw, GvR
 SR  204  Range Literals                                          Wouters
 IW  206  Python Advanced Library                                 Kuchling
 SW  209  Multi-dimensional Arrays                                Barrett, Oliphant
 SR  210  Decoupling the Interpreter Loop                         Ascher
 SS  215  String Interpolation                                    Yee
 IR  216  Docstring Format                                        Zadka
 IR  220  Coroutines, Generators, Continuations                   McMillan
 SR  224  Attribute Docstrings                                    Lemburg
 SW  228  Reworking Python's Numeric Model                        Zadka, GvR
 SR  231  __findattr__()                                          Warsaw
 SR  239  Adding a Rational Type to Python                        Craig, Zadka
 SR  240  Adding a Rational Literal to Python                     Craig, Zadka
 SR  242  Numeric Kinds                                           Dubois
 SW  243  Module Repository Upload Mechanism                      Reifschneider
 SR  244  The `directive' statement                               von Löwis
 SR  245  Python Interface Syntax                                 Pelletier
 SR  246  Object Adaptation                                       Martelli, Evans
 SR  254  Making Classes Look More Like Types                     GvR
 SR  256  Docstring Processing System Framework                   Goodger
 SR  258  Docutils Design Specification                           Goodger
 SR  259  Omit printing newline after newline                     GvR
 SR  265  Sorting Dictionaries by Value                           Griffin
 SW  266  Optimizing Global Variable/Attribute Access             Montanaro
 SR  268  Extended HTTP functionality and WebDAV                  Stein
 SR  270  uniq method for list objects                            Petrone
 SR  271  Prefixing sys.path by command line option               Giacometti
 SR  275  Switching on Multiple Values                            Lemburg
 SR  276  Simple Iterator for ints                                Althoff
 SR  281  Loop Counter Iteration with range and xrange            Hetland
 SR  284  Integer for-loops                                       Eppstein, Ewing
 SW  288  Generators Attributes and Exceptions                    Hettinger
 SR  294  Type Names in the types Module                          Tirosh
 SR  295  Interpretation of multiline string constants            Koltsov
 SW  296  Adding a bytes Object Type                              Gilbert
 SR  297  Support for System Upgrades                             Lemburg
 SW  298  The Locked Buffer Interface                             Heller
 SR  299  Special __main__() function in modules                  Epler
 SR  303  Extend divmod() for Multiple Divisors                   Bellman
 SW  304  Controlling Generation of Bytecode Files                Montanaro
 IW  306  How to Change Python's Grammar                          Hudson, Diederich, Coghlan, Peterson
 SR  310  Reliable Acquisition/Release Pairs                      Hudson, Moore
 SR  313  Adding Roman Numeral Literals to Python                 Meyer
 SR  317  Eliminate Implicit Exception Instantiation              Taschuk
 SR  319  Python Synchronize/Asynchronize Block                   Pelletier
 SW  321  Date/Time Parsing and Formatting                        Kuchling
 SR  325  Resource-Release Support for Generators                 Pedroni
 SR  326  A Case for Top and Bottom Values                        Carlson, Reedy
 SR  329  Treating Builtins as Constants in the Standard Library  Hettinger
 SR  330  Python Bytecode Verification                            Pelletier
 SR  332  Byte vectors and String/Unicode Unification             Montanaro
 SW  334  Simple Coroutines via SuspendIteration                  Evans
 SR  335  Overloadable Boolean Operators                          Ewing
 SR  336  Make None Callable                                      McClelland
 IW  339  Design of the CPython Compiler                          Cannon
 SR  340  Anonymous Block Statements                              GvR
 SS  344  Exception Chaining and Embedded Tracebacks              Yee
 SW  346  User Defined ("``with``") Statements                    Coghlan
 SR  348  Exception Reorganization for Python 3.0                 Cannon
 IR  350  Codetags                                                Elliott
 SR  351  The freeze protocol                                     Warsaw
 SR  354  Enumerations in Python                                  Finney
 SR  355  Path - Object oriented filesystem paths                 Lindqvist
 SW  359  The "make" Statement                                    Bethard
 SR  363  Syntax For Dynamic Attribute Access                     North
 SW  364  Transitioning to the Py3K Standard Library              Warsaw
 SR  365  Adding the pkg_resources module                         Eby
 SS  367  New Super                                               Spealman, Delaney
 SW  369  Post import hooks                                       Heimes
 SR  377  Allow __enter__() methods to skip the statement body    Coghlan
 SW  379  Adding an Assignment Expression                         Whitley
 SR  382  Namespace Packages                                      v. Löwis
 PR  401  BDFL Retirement                                         Warsaw, Cannon
 SR  402  Simplified Package Layout and Partitioning              Eby
 SR  408  Standard library __preview__ package                    Coghlan, Bendersky
 SR  410  Use decimal.Decimal type for timestamps                 Stinner
 SR  416  Add a frozendict builtin type                           Stinner
 SR  666  Reject Foolish Indentation                              Creighton
 SR  754  IEEE 754 Floating Point Special Values                  Warnes
 PW 3001  Procedure for reviewing and improving standard ...      Brandl
 SR 3103  A Switch/Case Statement                                 GvR
 SR 3117  Postfix type declarations                               Brandl
 SR 3122  Delineation of the main module                          Cannon
 SR 3125  Remove Backslash Continuation                           Jewett
 SR 3126  Remove Implicit String Concatenation                    Jewett, Hettinger
 SR 3128  BList: A Faster List-like Type                          Stutzbach
 SR 3130  Access to Current Module/Class/Function                 Jewett
 SR 3133  Introducing Roles                                       Winter
 SR 3136  Labeled break and continue                              Chisholm
 SR 3139  Cleaning out sys and the "interpreter" module           Peterson
 SR 3140  str(container) should call str(item), not repr(item)    Broytmann, Jewett
 SW 3146  Merging Unladen Swallow into CPython                    Winter, Yasskin, Kleckner
 SS 3153  Asynchronous IO support                                 Houtven


Numerical Index

     num  title                                                   owner
     ---  -----                                                   -----
 P     1  PEP Purpose and Guidelines                              Warsaw, Hylton, Goodger, Coghlan
 PF    2  Procedure for Adding New Modules                        Faassen
 PW    3  Guidelines for Handling Bug Reports                     Hylton
 P     4  Deprecation of Standard Modules                         von Löwis
 P     5  Guidelines for Language Evolution                       Prescod
 P     6  Bug Fix Releases                                        Aahz, Baxter
 P     7  Style Guide for C Code                                  GvR
 P     8  Style Guide for Python Code                             GvR, Warsaw
 P     9  Sample Plaintext PEP Template                           Warsaw
 P    10  Voting Guidelines                                       Warsaw
 P    11  Removing support for little used platforms              von Löwis
 P    12  Sample reStructuredText PEP Template                    Goodger, Warsaw

 I    20  The Zen of Python                                       Peters

 PF   42  Feature Requests                                        Hylton

 SF  100  Python Unicode Integration                              Lemburg
 I   101  Doing Python Releases 101                               Warsaw, GvR
 IS  102  Doing Python Micro Releases                             Baxter, Warsaw, GvR

 IF  160  Python 1.6 Release Schedule                             Drake

 IF  200  Python 2.0 Release Schedule                             Hylton
 SF  201  Lockstep Iteration                                      Warsaw
 SF  202  List Comprehensions                                     Warsaw
 SF  203  Augmented Assignments                                   Wouters
 SR  204  Range Literals                                          Wouters
 SF  205  Weak References                                         Drake
 IW  206  Python Advanced Library                                 Kuchling
 SF  207  Rich Comparisons                                        GvR, Ascher
 SF  208  Reworking the Coercion Model                            Schemenauer, Lemburg
 SW  209  Multi-dimensional Arrays                                Barrett, Oliphant
 SR  210  Decoupling the Interpreter Loop                         Ascher
 SD  211  Adding A New Outer Product Operator                     Wilson
 SD  212  Loop Counter Iteration                                  Schneider-Kamp
 SD  213  Attribute Access Handlers                               Prescod
 SF  214  Extended Print Statement                                Warsaw
 SS  215  String Interpolation                                    Yee
 IR  216  Docstring Format                                        Zadka
 SF  217  Display Hook for Interactive Use                        Zadka
 SF  218  Adding a Built-In Set Object Type                       Wilson, Hettinger
 SD  219  Stackless Python                                        McMillan
 IR  220  Coroutines, Generators, Continuations                   McMillan
 SF  221  Import As                                               Wouters
 SD  222  Web Library Enhancements                                Kuchling
 SF  223  Change the Meaning of \x Escapes                        Peters
 SR  224  Attribute Docstrings                                    Lemburg
 SD  225  Elementwise/Objectwise Operators                        Zhu, Lielens
 IF  226  Python 2.1 Release Schedule                             Hylton
 SF  227  Statically Nested Scopes                                Hylton
 SW  228  Reworking Python's Numeric Model                        Zadka, GvR
 SF  229  Using Distutils to Build Python                         Kuchling
 SF  230  Warning Framework                                       GvR
 SR  231  __findattr__()                                          Warsaw
 SF  232  Function Attributes                                     Warsaw
 SD  233  Python Online Help                                      Prescod
 SF  234  Iterators                                               Yee, GvR
 SF  235  Import on Case-Insensitive Platforms                    Peters
 SF  236  Back to the __future__                                  Peters
 SF  237  Unifying Long Integers and Integers                     Zadka, GvR
 SF  238  Changing the Division Operator                          Zadka, GvR
 SR  239  Adding a Rational Type to Python                        Craig, Zadka
 SR  240  Adding a Rational Literal to Python                     Craig, Zadka
 SF  241  Metadata for Python Software Packages                   Kuchling
 SR  242  Numeric Kinds                                           Dubois
 SW  243  Module Repository Upload Mechanism                      Reifschneider
 SR  244  The `directive' statement                               von Löwis
 SR  245  Python Interface Syntax                                 Pelletier
 SR  246  Object Adaptation                                       Martelli, Evans
 IF  247  API for Cryptographic Hash Functions                    Kuchling
 IF  248  Python Database API Specification v1.0                  Lemburg
 IF  249  Python Database API Specification v2.0                  Lemburg
 SF  250  Using site-packages on Windows                          Moore
 IF  251  Python 2.2 Release Schedule                             Warsaw, GvR
 SF  252  Making Types Look More Like Classes                     GvR
 SF  253  Subtyping Built-in Types                                GvR
 SR  254  Making Classes Look More Like Types                     GvR
 SF  255  Simple Generators                                       Schemenauer, Peters, Hetland
 SR  256  Docstring Processing System Framework                   Goodger
 I   257  Docstring Conventions                                   Goodger, GvR
 SR  258  Docutils Design Specification                           Goodger
 SR  259  Omit printing newline after newline                     GvR
 SF  260  Simplify xrange()                                       GvR
 SF  261  Support for "wide" Unicode characters                   Prescod
 SD  262  A Database of Installed Python Packages                 Kuchling
 SF  263  Defining Python Source Code Encodings                   Lemburg, von Löwis
 SF  264  Future statements in simulated shells                   Hudson
 SR  265  Sorting Dictionaries by Value                           Griffin
 SW  266  Optimizing Global Variable/Attribute Access             Montanaro
 SD  267  Optimized Access to Module Namespaces                   Hylton
 SR  268  Extended HTTP functionality and WebDAV                  Stein
 SD  269  Pgen Module for Python                                  Riehl
 SR  270  uniq method for list objects                            Petrone
 SR  271  Prefixing sys.path by command line option               Giacometti
 IF  272  API for Block Encryption Algorithms v1.0                Kuchling
 SF  273  Import Modules from Zip Archives                        Ahlstrom
 SF  274  Dict Comprehensions                                     Warsaw
 SR  275  Switching on Multiple Values                            Lemburg
 SR  276  Simple Iterator for ints                                Althoff
 SF  277  Unicode file name support for Windows NT                Hodgson
 SF  278  Universal Newline Support                               Jansen
 SF  279  The enumerate() built-in function                       Hettinger
 SD  280  Optimizing access to globals                            GvR
 SR  281  Loop Counter Iteration with range and xrange            Hetland
 SF  282  A Logging System                                        Sajip, Mick
 IF  283  Python 2.3 Release Schedule                             GvR
 SR  284  Integer for-loops                                       Eppstein, Ewing
 SF  285  Adding a bool type                                      GvR
 S   286  Enhanced Argument Tuples                                von Löwis
 I   287  reStructuredText Docstring Format                       Goodger
 SW  288  Generators Attributes and Exceptions                    Hettinger
 SF  289  Generator Expressions                                   Hettinger
 I   290  Code Migration and Modernization                        Hettinger
 IF  291  Backward Compatibility for the Python 2 Standard ...    Norwitz
 SF  292  Simpler String Substitutions                            Warsaw
 SF  293  Codec Error Handling Callbacks                          Dörwald
 SR  294  Type Names in the types Module                          Tirosh
 SR  295  Interpretation of multiline string constants            Koltsov
 SW  296  Adding a bytes Object Type                              Gilbert
 SR  297  Support for System Upgrades                             Lemburg
 SW  298  The Locked Buffer Interface                             Heller
 SR  299  Special __main__() function in modules                  Epler

 SF  301  Package Index and Metadata for Distutils                Jones
 SF  302  New Import Hooks                                        JvR, Moore
 SR  303  Extend divmod() for Multiple Divisors                   Bellman
 SW  304  Controlling Generation of Bytecode Files                Montanaro
 SF  305  CSV File API                                            Altis, Cole, McNamara, Montanaro, Wells
 IW  306  How to Change Python's Grammar                          Hudson, Diederich, Coghlan, Peterson
 SF  307  Extensions to the pickle protocol                       GvR, Peters
 SF  308  Conditional Expressions                                 GvR, Hettinger
 SF  309  Partial Function Application                            Harris
 SR  310  Reliable Acquisition/Release Pairs                      Hudson, Moore
 SF  311  Simplified Global Interpreter Lock Acquisition for ...  Hammond
 SD  312  Simple Implicit Lambda                                  Suzi, Martelli
 SR  313  Adding Roman Numeral Literals to Python                 Meyer
 SF  314  Metadata for Python Software Packages v1.1              Kuchling, Jones
 SD  315  Enhanced While Loop                                     Hettinger, Carroll
 SD  316  Programming by Contract for Python                      Way
 SR  317  Eliminate Implicit Exception Instantiation              Taschuk
 SF  318  Decorators for Functions and Methods                    Smith
 SR  319  Python Synchronize/Asynchronize Block                   Pelletier
 IF  320  Python 2.4 Release Schedule                             Warsaw, Hettinger, Baxter
 SW  321  Date/Time Parsing and Formatting                        Kuchling
 SF  322  Reverse Iteration                                       Hettinger
 SD  323  Copyable Iterators                                      Martelli
 SF  324  subprocess - New process module                         Astrand
 SR  325  Resource-Release Support for Generators                 Pedroni
 SR  326  A Case for Top and Bottom Values                        Carlson, Reedy
 SF  327  Decimal Data Type                                       Batista
 SF  328  Imports: Multi-Line and Absolute/Relative               Aahz
 SR  329  Treating Builtins as Constants in the Standard Library  Hettinger
 SR  330  Python Bytecode Verification                            Pelletier
 SF  331  Locale-Independent Float/String Conversions             Reis
 SR  332  Byte vectors and String/Unicode Unification             Montanaro
 IF  333  Python Web Server Gateway Interface v1.0                Eby
 SW  334  Simple Coroutines via SuspendIteration                  Evans
 SR  335  Overloadable Boolean Operators                          Ewing
 SR  336  Make None Callable                                      McClelland
 S   337  Logging Usage in the Standard Library                   Dubner
 SF  338  Executing modules as scripts                            Coghlan
 IW  339  Design of the CPython Compiler                          Cannon
 SR  340  Anonymous Block Statements                              GvR
 SF  341  Unifying try-except and try-finally                     Brandl
 SF  342  Coroutines via Enhanced Generators                      GvR, Eby
 SF  343  The "with" Statement                                    GvR, Coghlan
 SS  344  Exception Chaining and Embedded Tracebacks              Yee
 SA  345  Metadata for Python Software Packages 1.2               Jones
 SW  346  User Defined ("``with``") Statements                    Coghlan
 PF  347  Migrating the Python CVS to Subversion                  von Löwis
 SR  348  Exception Reorganization for Python 3.0                 Cannon
 SD  349  Allow str() to return unicode strings                   Schemenauer
 IR  350  Codetags                                                Elliott
 SR  351  The freeze protocol                                     Warsaw
 SF  352  Required Superclass for Exceptions                      Cannon, GvR
 SF  353  Using ssize_t as the index type                         von Löwis
 SR  354  Enumerations in Python                                  Finney
 SR  355  Path - Object oriented filesystem paths                 Lindqvist
 IF  356  Python 2.5 Release Schedule                             Norwitz, GvR, Baxter
 SF  357  Allowing Any Object to be Used for Slicing              Oliphant
 SF  358  The "bytes" Object                                      Schemenauer, GvR
 SW  359  The "make" Statement                                    Bethard
 PF  360  Externally Maintained Packages                          Cannon
 IF  361  Python 2.6 and 3.0 Release Schedule                     Norwitz, Warsaw
 SF  362  Function Signature Object                               Cannon, Seo, Selivanov, Hastings
 SR  363  Syntax For Dynamic Attribute Access                     North
 SW  364  Transitioning to the Py3K Standard Library              Warsaw
 SR  365  Adding the pkg_resources module                         Eby
 SF  366  Main module explicit relative imports                   Coghlan
 SS  367  New Super                                               Spealman, Delaney
 S   368  Standard image protocol and class                       Mastrodomenico
 SW  369  Post import hooks                                       Heimes
 SF  370  Per user site-packages directory                        Heimes
 SF  371  Addition of the multiprocessing package to the ...      Noller, Oudkerk
 SF  372  Adding an ordered dictionary to collections             Ronacher, Hettinger
 I   373  Python 2.7 Release Schedule                             Peterson
 PF  374  Choosing a distributed VCS for the Python project       Cannon, Turnbull, Vassalotti, Warsaw, Ochtman
 IF  375  Python 3.1 Release Schedule                             Peterson
 SA  376  Database of Installed Python Distributions              Ziadé
 SR  377  Allow __enter__() methods to skip the statement body    Coghlan
 SF  378  Format Specifier for Thousands Separator                Hettinger
 SW  379  Adding an Assignment Expression                         Whitley
 SF  380  Syntax for Delegating to a Subgenerator                 Ewing
 S   381  Mirroring infrastructure for PyPI                       Ziadé, v. Löwis
 SR  382  Namespace Packages                                      v. Löwis
 SF  383  Non-decodable Bytes in System Character Interfaces      v. Löwis
 SF  384  Defining a Stable ABI                                   v. Löwis
 PF  385  Migrating from Subversion to Mercurial                  Ochtman, Pitrou, Brandl
 SA  386  Changing the version comparison module in Distutils     Ziadé
 P   387  Backwards Compatibility Policy                          Peterson

 SF  389  argparse - New Command Line Parsing Module              Bethard
 S   390  Static metadata for Distutils                           Ziadé
 SF  391  Dictionary-Based Configuration For Logging              Sajip
 I   392  Python 3.2 Release Schedule                             Brandl
 SF  393  Flexible String Representation                          v. Löwis
 I   394  The "python" Command on Unix-Like Systems               Staley, Coghlan
 SD  395  Qualified Names for Modules                             Coghlan
 I   396  Module Version Numbers                                  Warsaw
 SA  397  Python launcher for Windows                             Hammond, v. Löwis
 I   398  Python 3.3 Release Schedule                             Brandl
 IF  399  Pure Python/C Accelerator Module Compatibility ...      Cannon
 S   400  Deprecate codecs.StreamReader and codecs.StreamWriter   Stinner
 PR  401  BDFL Retirement                                         Warsaw, Cannon
 SR  402  Simplified Package Layout and Partitioning              Eby
 SD  403  General purpose decorator clause (aka "@in" clause)     Coghlan
 IF  404  Python 2.8 Un-release Schedule                          Warsaw
 SF  405  Python Virtual Environments                             Meyer
 SD  406  Improved Encapsulation of Import State                  Coghlan, Slodkowicz
 PD  407  New release cycle and introducing long-term support ... Pitrou, Brandl, Warsaw
 SR  408  Standard library __preview__ package                    Coghlan, Bendersky
 SF  409  Suppressing exception context                           Furman
 SR  410  Use decimal.Decimal type for timestamps                 Stinner
 IA  411  Provisional packages in the Python standard library     Coghlan, Bendersky
 SF  412  Key-Sharing Dictionary                                  Shannon
 PD  413  Faster evolution of the Python Standard Library         Coghlan
 SF  414  Explicit Unicode Literal for Python 3.3                 Ronacher, Coghlan
 SF  415  Implement context suppression with exception attributes Peterson
 SR  416  Add a frozendict builtin type                           Stinner
 SF  417  Including mock in the Standard Library                  Foord
 SF  418  Add monotonic time, performance counter, and ...        Simpson, Jewett, Turnbull, Stinner
 S   419  Protecting cleanup statements from interruptions        Colomiets
 SF  420  Implicit Namespace Packages                             Smith
 SF  421  Adding sys.implementation                               Snow
 S   422  Simpler customisation of class creation                 Coghlan, Urban
 I   423  Naming conventions and recipes related to packaging     Bryon
 SF  424  A method for exposing a length hint                     Gaynor
 SA  425  Compatibility Tags for Built Distributions              <dholth@gmail.com
 S   426  Metadata for Python Software Packages 2.0               Holth, Stufft, Coghlan
 SA  427  The Wheel Binary Package Format 1.0                     Holth
 S   428  The pathlib module -- object-oriented filesystem paths  Pitrou
 I   429  Python 3.4 Release Schedule                             Hastings
 IF  430  Migrating to Python 3 as the default online ...         Coghlan
 S   431  Time zone support improvements                          Regebro
 S   432  Simplifying the CPython startup sequence                Coghlan
 S   433  Easier suppression of file descriptor inheritance       Stinner
 I   434  IDLE Enhancement Exception for All Branches             Rovito, Reedy
 S   435  Adding an Enum type to the Python standard library      Warsaw, Bendersky
 S   436  The Argument Clinic DSL                                 Hastings

 I   444  Python Web3 Interface                                   McDonough, Ronacher

 SD  628  Add ``math.tau``                                        Coghlan

 SR  666  Reject Foolish Indentation                              Creighton

 SR  754  IEEE 754 Floating Point Special Values                  Warnes

 PF 3000  Python 3000                                             GvR
 PW 3001  Procedure for reviewing and improving standard ...      Brandl
 PF 3002  Procedure for Backwards-Incompatible Changes            Bethard
 PF 3003  Python Language Moratorium                              Cannon, Noller, GvR

 PF 3099  Things that will Not Change in Python 3000              Brandl
 PF 3100  Miscellaneous Python 3.0 Plans                          Cannon
 SF 3101  Advanced String Formatting                              Talin
 SF 3102  Keyword-Only Arguments                                  Talin
 SR 3103  A Switch/Case Statement                                 GvR
 SF 3104  Access to Names in Outer Scopes                         Yee
 SF 3105  Make print a function                                   Brandl
 SF 3106  Revamping dict.keys(), .values() and .items()           GvR
 SF 3107  Function Annotations                                    Winter, Lownds
 SF 3108  Standard Library Reorganization                         Cannon
 SF 3109  Raising Exceptions in Python 3000                       Winter
 SF 3110  Catching Exceptions in Python 3000                      Winter
 SF 3111  Simple input built-in in Python 3000                    Roberge
 SF 3112  Bytes literals in Python 3000                           Orendorff
 SF 3113  Removal of Tuple Parameter Unpacking                    Cannon
 SF 3114  Renaming iterator.next() to iterator.__next__()         Yee
 SF 3115  Metaclasses in Python 3000                              Talin
 SF 3116  New I/O                                                 Stutzbach, GvR, Verdone
 SR 3117  Postfix type declarations                               Brandl
 SF 3118  Revising the buffer protocol                            Oliphant, Banks
 SF 3119  Introducing Abstract Base Classes                       GvR, Talin
 SF 3120  Using UTF-8 as the default source encoding              von Löwis
 SA 3121  Extension Module Initialization and Finalization        von Löwis
 SR 3122  Delineation of the main module                          Cannon
 SF 3123  Making PyObject_HEAD conform to standard C              von Löwis
 S  3124  Overloading, Generic Functions, Interfaces, and ...     Eby
 SR 3125  Remove Backslash Continuation                           Jewett
 SR 3126  Remove Implicit String Concatenation                    Jewett, Hettinger
 SF 3127  Integer Literal Support and Syntax                      Maupin
 SR 3128  BList: A Faster List-like Type                          Stutzbach
 SF 3129  Class Decorators                                        Winter
 SR 3130  Access to Current Module/Class/Function                 Jewett
 SF 3131  Supporting Non-ASCII Identifiers                        von Löwis
 SF 3132  Extended Iterable Unpacking                             Brandl
 SR 3133  Introducing Roles                                       Winter
 SF 3134  Exception Chaining and Embedded Tracebacks              Yee
 SF 3135  New Super                                               Spealman, Delaney, Ryan
 SR 3136  Labeled break and continue                              Chisholm
 SF 3137  Immutable Bytes and Mutable Buffer                      GvR
 SF 3138  String representation in Python 3000                    Ishimoto
 SR 3139  Cleaning out sys and the "interpreter" module           Peterson
 SR 3140  str(container) should call str(item), not repr(item)    Broytmann, Jewett
 SF 3141  A Type Hierarchy for Numbers                            Yasskin
 S  3142  Add a "while" clause to generator expressions           Britton
 S  3143  Standard daemon process library                         Finney
 SF 3144  IP Address Manipulation Library for the Python ...      Moody
 S  3145  Asynchronous I/O For subprocess.Popen                   Pruitt, McCreary, Carlson
 SW 3146  Merging Unladen Swallow into CPython                    Winter, Yasskin, Kleckner
 SF 3147  PYC Repository Directories                              Warsaw
 SF 3148  futures - execute computations asynchronously           Quinlan
 SF 3149  ABI version tagged .so files                            Warsaw
 SD 3150  Statement local namespaces (aka "given" clause)         Coghlan
 SF 3151  Reworking the OS and IO exception hierarchy             Pitrou
 S  3152  Cofunctions                                             Ewing
 SS 3153  Asynchronous IO support                                 Houtven
 S  3154  Pickle protocol version 4                               Pitrou
 SF 3155  Qualified name for classes and functions                Pitrou
 S  3156  Asynchronous IO Support Rebooted                        GvR

 IF 3333  Python Web Server Gateway Interface v1.0.1              Eby


Key

    S - Standards Track PEP
    I - Informational PEP
    P - Process PEP

    A - Accepted proposal
    R - Rejected proposal
    W - Withdrawn proposal
    D - Deferred proposal
    F - Final proposal
    A - Active proposal
    D - Draft proposal
    S - Superseded proposal


Owners

