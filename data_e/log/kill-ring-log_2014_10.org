
* Wed 01 Oct 2014 03:38:52 PM JST
zip(*[iter(reply.keysyms)] * reply.keysyms_per_keycode)
* Wed 01 Oct 2014 03:41:13 PM JST
ListUtil
* Wed 01 Oct 2014 03:43:34 PM JST
[ListUtil(x) for x in zip(*[iter(self)] * size)]
* Wed 01 Oct 2014 03:43:41 PM JST
return 
* Wed 01 Oct 2014 03:43:44 PM JST
[ListUtil(x) for x in zip(*[iter(self)] * size)]
* Wed 01 Oct 2014 03:43:45 PM JST

* Wed 01 Oct 2014 03:43:45 PM JST

* Wed 01 Oct 2014 03:43:45 PM JST
        l = 

* Wed 01 Oct 2014 03:45:00 PM JST
    for i in container:
        if isinstance(i, seqtypes):
            for j in flatten(i):
                yield j
        else:
            yield i

* Wed 01 Oct 2014 03:45:33 PM JST
container
* Wed 01 Oct 2014 03:45:58 PM JST
seqtypes
* Wed 01 Oct 2014 03:48:11 PM JST
list(flatten(self))
* Wed 01 Oct 2014 03:48:16 PM JST

* Wed 01 Oct 2014 03:48:16 PM JST

* Wed 01 Oct 2014 03:48:16 PM JST
        tmp = 

* Wed 01 Oct 2014 03:48:18 PM JST

* Wed 01 Oct 2014 03:48:19 PM JST

* Wed 01 Oct 2014 03:48:19 PM JST
        self.extend(tmp)

* Wed 01 Oct 2014 03:48:28 PM JST
ListUtil
* Thu 02 Oct 2014 08:31:09 AM JST

* Thu 02 Oct 2014 08:31:09 AM JST

* Thu 02 Oct 2014 08:31:09 AM JST
        if size == 0:

* Thu 02 Oct 2014 08:31:10 AM JST
        if size == 0:

* Thu 02 Oct 2014 08:31:10 AM JST
        if size == 0:
        else:

* Thu 02 Oct 2014 08:31:24 AM JST
self.
* Thu 02 Oct 2014 08:32:09 AM JST
0
* Thu 02 Oct 2014 10:45:57 AM JST
_keymap_syms
* Thu 02 Oct 2014 11:05:03 AM JST
from t1.listutil.limitlist import ListFill
* Thu 02 Oct 2014 11:05:10 AM JST
ListFill
* Thu 02 Oct 2014 11:08:58 AM JST
d.keymap._keymap_codes.get_keyboard_mapping()
* Thu 02 Oct 2014 02:33:27 PM JST
ListFill
* Thu 02 Oct 2014 02:38:42 PM JST
        from xcb2.xproto.xconnection import Connection
        return Connection.get_instance(display=self.display)

* Thu 02 Oct 2014 02:42:03 PM JST
object
* Thu 02 Oct 2014 02:42:46 PM JST
cls.__instances[display]
* Thu 02 Oct 2014 02:48:03 PM JST
mincode
* Thu 02 Oct 2014 02:52:55 PM JST
ListUtil
* Thu 02 Oct 2014 02:57:07 PM JST
from t1.listutil.limitlist import ListFill
* Thu 02 Oct 2014 03:00:26 PM JST
length=self.listlen, fill=0
* Thu 02 Oct 2014 03:03:33 PM JST
d.keymap._keymap_codes._keymap_codes
* Thu 02 Oct 2014 03:29:52 PM JST
codes
* Thu 02 Oct 2014 04:16:36 PM JST
xrange
* Thu 02 Oct 2014 04:16:40 PM JST
range
* Thu 02 Oct 2014 04:21:24 PM JST
KeymapCodes
* Thu 02 Oct 2014 04:21:39 PM JST
KeyboardMapping
* Fri 03 Oct 2014 06:30:25 AM JST

* Fri 03 Oct 2014 06:30:25 AM JST

* Fri 03 Oct 2014 06:30:25 AM JST
        self._display = display

* Fri 03 Oct 2014 06:30:27 AM JST
_
* Fri 03 Oct 2014 06:30:28 AM JST
self._
* Fri 03 Oct 2014 06:31:02 AM JST
self._conn.get_setup()
* Fri 03 Oct 2014 06:32:20 AM JST

* Fri 03 Oct 2014 06:32:20 AM JST

* Fri 03 Oct 2014 06:32:21 AM JST
    @property

* Fri 03 Oct 2014 06:32:22 AM JST

* Fri 03 Oct 2014 06:32:22 AM JST

* Fri 03 Oct 2014 06:32:22 AM JST
    @property

* Fri 03 Oct 2014 06:39:03 AM JST
        lastcode = self.get_minkeycode() + self.get_maxkeycode()
        reply = self._conn.core.GetKeyboardMapping(
            self.get_minkeycode(),
            self.get_maxkeycode() - self.get_minkeycode()).reply()
        self.listlen = reply.keysyms_per_keycode
        codes = ListUtil(reply.keysyms)
        codes.chunks(self.listlen)

* Fri 03 Oct 2014 06:39:38 AM JST

* Fri 03 Oct 2014 06:39:38 AM JST

* Fri 03 Oct 2014 06:39:39 AM JST
        lastcode = self.get_minkeycode() + self.get_maxkeycode()

* Fri 03 Oct 2014 06:48:25 AM JST
reply.keysyms_per_keycode
* Fri 03 Oct 2014 06:48:28 AM JST

* Fri 03 Oct 2014 06:48:28 AM JST

* Fri 03 Oct 2014 06:48:28 AM JST
        self.listlen = 

* Fri 03 Oct 2014 06:49:09 AM JST
self.
* Fri 03 Oct 2014 06:49:16 AM JST
self.
* Fri 03 Oct 2014 06:53:58 AM JST

* Fri 03 Oct 2014 06:53:58 AM JST

* Fri 03 Oct 2014 06:53:58 AM JST
        self.listlen = None

* Fri 03 Oct 2014 12:52:37 PM JST
from xcb2.xproto.xconnection import Connection
* Fri 03 Oct 2014 12:58:27 PM JST
        reply = self._conn.core.GetKeyboardMapping(
            self.get_minkeycode(),
            self.get_maxkeycode() - self.get_minkeycode()).reply()

* Fri 03 Oct 2014 12:59:35 PM JST
            
* Fri 03 Oct 2014 12:59:39 PM JST
            
* Fri 03 Oct 2014 12:59:43 PM JST
reply
* Fri 03 Oct 2014 12:59:47 PM JST
reply()
* Fri 03 Oct 2014 01:01:13 PM JST

* Fri 03 Oct 2014 01:01:13 PM JST

* Fri 03 Oct 2014 01:01:13 PM JST
# return Connection.get_instance(display=self.display)

* Fri 03 Oct 2014 01:02:30 PM JST
c.core.GetKeyboardMapping(8, 255)
* Fri 03 Oct 2014 01:03:27 PM JST
try:
   .....:     c.core.GetKeyboardMapping(8, 255)
   .....: except xcb2.xproto.BadValue as e:
   .....:     pass
* Fri 03 Oct 2014 01:03:32 PM JST
.....:     
* Fri 03 Oct 2014 01:03:34 PM JST
.....: 
* Fri 03 Oct 2014 01:03:37 PM JST
.....:
* Fri 03 Oct 2014 01:03:42 PM JST
try:
    c.core.GetKeyboardMapping(8, 255)
except xcb2.xproto.BadValue as e:
    pass

* Fri 03 Oct 2014 01:04:23 PM JST
    
* Fri 03 Oct 2014 01:04:25 PM JST
try:c.core.GetKeyboardMapping(8, 255
* Fri 03 Oct 2014 01:04:27 PM JST
try:c.core.GetKeyboardMapping(8, 255);except xcb2.xproto.BadValue as e:pass
* Fri 03 Oct 2014 01:05:00 PM JST
try:
    c.core.GetKeyboardMapping(8, 255)
except xcb2.xproto.BadValue as e:
    pass

* Fri 03 Oct 2014 01:05:52 PM JST
pass
* Fri 03 Oct 2014 01:09:44 PM JST
Exception
* Fri 03 Oct 2014 01:11:35 PM JST
GetKeyboardMappingError
* Fri 03 Oct 2014 01:12:48 PM JST
'mincode: {}, lastcode: {}'.format(mincode, maxcode)
* Fri 03 Oct 2014 01:12:58 PM JST
maxcode
* Fri 03 Oct 2014 04:28:04 PM JST
        
* Fri 03 Oct 2014 04:28:14 PM JST
self._conn.get_setup().min_keycode
* Fri 03 Oct 2014 04:28:21 PM JST
self._conn.get_setup().max_keycode
* Fri 03 Oct 2014 04:29:49 PM JST
get_
* Fri 03 Oct 2014 04:29:50 PM JST
self.get_
* Fri 03 Oct 2014 04:31:58 PM JST

* Fri 03 Oct 2014 04:31:58 PM JST

* Fri 03 Oct 2014 04:31:58 PM JST
        lastcode = maxcode - mincode

* Fri 03 Oct 2014 04:31:59 PM JST
lastcode
* Fri 03 Oct 2014 04:32:53 PM JST
self.get_minkeycode()
* Fri 03 Oct 2014 04:33:00 PM JST
self.get_lastcode()
* Fri 03 Oct 2014 04:36:01 PM JST

* Fri 03 Oct 2014 04:36:01 PM JST

* Fri 03 Oct 2014 04:36:01 PM JST
        listlen = len(codes[0])

* Fri 03 Oct 2014 04:36:04 PM JST
ListFill(
* Fri 03 Oct 2014 04:36:08 PM JST
                
* Fri 03 Oct 2014 04:36:42 PM JST
self._maxcode - self._mincode
* Fri 03 Oct 2014 04:37:03 PM JST
self.get_minkeycode() + self.get_maxkeycode()
* Fri 03 Oct 2014 04:37:57 PM JST
self._maxcode - self._mincode
* Fri 03 Oct 2014 04:38:06 PM JST

* Fri 03 Oct 2014 04:38:06 PM JST

* Fri 03 Oct 2014 04:38:06 PM JST
        lastcode = self.get_minkeycode() + self.get_maxkeycode()

* Fri 03 Oct 2014 04:38:15 PM JST
get_
* Fri 03 Oct 2014 04:43:31 PM JST
codes[i]
* Fri 03 Oct 2014 10:55:55 PM JST
        reply = self._get_keyboardmapping()
        codes = ListUtil(reply.keysyms)
        codes.chunks(reply.keysyms_per_keycode)

* Fri 03 Oct 2014 10:56:22 PM JST
reply.keysyms_per_keycode
* Sat 04 Oct 2014 01:24:43 AM JST
get
* Sat 04 Oct 2014 07:58:24 AM JST
codes, 
* Sat 04 Oct 2014 08:00:02 AM JST
                
* Sat 04 Oct 2014 04:10:34 PM JST
0x020
* Sat 04 Oct 2014 04:11:28 PM JST
0x20
* Sat 04 Oct 2014 04:14:50 PM JST
116
* Sat 04 Oct 2014 04:19:18 PM JST
32
* Sat 04 Oct 2014 04:19:47 PM JST
keysym_to_str
* Sat 04 Oct 2014 04:20:19 PM JST
keysym_to_str
* Sat 04 Oct 2014 04:21:51 PM JST
keysym_to_char
* Sat 04 Oct 2014 04:22:10 PM JST
keysym_to_char
* Sat 04 Oct 2014 04:42:00 PM JST
names
* Sat 04 Oct 2014 04:45:36 PM JST
names
* Sat 04 Oct 2014 05:35:27 PM JST

* Sat 04 Oct 2014 05:35:27 PM JST

* Sat 04 Oct 2014 05:35:27 PM JST
        self._dict_ = dict_

* Sat 04 Oct 2014 05:35:33 PM JST
kwarg
* Sat 04 Oct 2014 05:35:44 PM JST

* Sat 04 Oct 2014 05:35:44 PM JST

* Sat 04 Oct 2014 05:35:44 PM JST
        self._kwargs = kwargs

* Sat 04 Oct 2014 05:37:13 PM JST
        
* Sat 04 Oct 2014 05:37:15 PM JST
key
* Sat 04 Oct 2014 05:37:17 PM JST
val
* Sat 04 Oct 2014 05:38:15 PM JST
        
* Sat 04 Oct 2014 05:51:08 PM JST
# recursive call
* Sat 04 Oct 2014 05:52:20 PM JST
(('key', 1), ('key2', 2))
* Sat 04 Oct 2014 06:02:59 PM JST
super(TwoWayDict, self).pop(key, *args)
* Sat 04 Oct 2014 06:03:19 PM JST
poped
* Sat 04 Oct 2014 06:03:46 PM JST
super(TwoWayDict, self).pop(key, *args)
* Sat 04 Oct 2014 06:03:48 PM JST
key
* Sat 04 Oct 2014 06:04:12 PM JST
super(TwoWayDict, self).pop(value, *args)
* Sat 04 Oct 2014 06:04:15 PM JST

* Sat 04 Oct 2014 06:04:15 PM JST

* Sat 04 Oct 2014 06:04:15 PM JST
        value2 = 

* Sat 04 Oct 2014 06:08:41 PM JST
item
* Sat 04 Oct 2014 06:08:52 PM JST
1]
* Sat 04 Oct 2014 06:08:53 PM JST
item[1]
* Sat 04 Oct 2014 06:15:16 PM JST
pp({1:}
* Sat 04 Oct 2014 06:15:36 PM JST
{'world': 2, 2: 'world', 'hello': 1, 1: 'hello'}
* Sat 04 Oct 2014 06:15:46 PM JST
{'world': 2, 2: 'world', 'hello': 1, 1: 'hello'}
* Sat 04 Oct 2014 06:17:26 PM JST
{1: 'hello', 2: 'world', 3: 'bing', 4: 'google', 5: 'yahoo', 'bing': 3, 'yahoo': 5, 'google': 4, 'world': 2, 'hello': 1}
* Sat 04 Oct 2014 06:18:26 PM JST
pformat
* Sat 04 Oct 2014 06:18:32 PM JST
{1: 'hello', 2: 'world', 3: 'bing', 4: 'google', 5: 'yahoo', 'bing': 3, 'yahoo': 5, 'google': 4, 'world': 2, 'hello': 1}
* Sat 04 Oct 2014 06:19:48 PM JST
super(TwoWayDict, self)
* Sat 04 Oct 2014 06:26:50 PM JST

* Sat 04 Oct 2014 06:26:50 PM JST

* Sat 04 Oct 2014 06:26:51 PM JST
        indent = len(self.__class__.__name__) + len('({')

* Sat 04 Oct 2014 10:40:34 PM JST
pass
* Sat 04 Oct 2014 10:43:44 PM JST
        self.dic.update(expects)
        self.assertEqual(expects, self.dic)

* Sat 04 Oct 2014 10:45:40 PM JST
self
* Sat 04 Oct 2014 10:49:36 PM JST
        expects = {}
        for key, value in self.sample.items():
            expects[key] = value
            expects[value] = key

* Sat 04 Oct 2014 10:50:16 PM JST
self.assertEqual(expects, self.dic)
* Sat 04 Oct 2014 10:51:02 PM JST
{'hello': 1, 'world': 2, 'yahoo': 3, 'google': 4,}
* Sat 04 Oct 2014 10:51:12 PM JST
(('world', 2), ('google', 4), ('hello', 1), ('yahoo', 3))
* Sat 04 Oct 2014 10:51:50 PM JST
self
* Sat 04 Oct 2014 10:52:04 PM JST
        for key, value in self.sample2.items():
            expects[key] = value
            expects[value] = key

* Sat 04 Oct 2014 10:52:13 PM JST
expects
* Sat 04 Oct 2014 10:52:24 PM JST
cls.sample3
* Sat 04 Oct 2014 10:52:29 PM JST
self
* Sat 04 Oct 2014 10:52:59 PM JST
self.sample3
* Sat 04 Oct 2014 10:55:36 PM JST
self.assertEqual(expects, self.dic)
* Sat 04 Oct 2014 10:58:34 PM JST
expects = self.sample3
* Sat 04 Oct 2014 10:58:38 PM JST
got = twowaydict.TwoWayDict(self.sample1)
* Sat 04 Oct 2014 10:58:44 PM JST
self.assertEqual(expects, got)
* Sat 04 Oct 2014 10:59:15 PM JST
        expects = self.sample3
        got = twowaydict.TwoWayDict(self.sample2)
        self.assertEqual(expects, got)

* Sat 04 Oct 2014 10:59:45 PM JST
twowaydict.TwoWayDict(self.sample2)
* Sat 04 Oct 2014 11:00:45 PM JST
got = twowaydict.TwoWayDict(self.sample2)
* Sat 04 Oct 2014 11:00:48 PM JST
sample2
* Sat 04 Oct 2014 11:00:57 PM JST
assertEqual
* Sat 04 Oct 2014 11:00:58 PM JST
self.assertEqual
* Sat 04 Oct 2014 11:01:00 PM JST
self.assertEqual(expects, got)
* Sat 04 Oct 2014 11:01:17 PM JST
        expects = self.sample3
        got = twowaydict.TwoWayDict(twowaydict.TwoWayDict(self.sample2))
        self.assertEqual(expects, got)

* Sat 04 Oct 2014 11:01:44 PM JST
world=2, google=4, hello=1, yahoo=3
* Sat 04 Oct 2014 11:06:45 PM JST
assert
* Sat 04 Oct 2014 11:06:52 PM JST
self.assertEqual(expects, got)
* Sat 04 Oct 2014 11:07:48 PM JST
        self.dic[key] = value
        expects = value
        got = self.dic.get(key)
        self.assertEqual(expects, got)

* Sat 04 Oct 2014 11:08:02 PM JST
        expects = key
        got = self.dic.get(value)
        self.assertEqual(expects, got)

* Sat 04 Oct 2014 11:14:37 PM JST
self.sample
* Sat 04 Oct 2014 11:15:32 PM JST

* Sat 04 Oct 2014 11:15:32 PM JST

* Sat 04 Oct 2014 11:15:32 PM JST
        self.samplekey, self.samplevalue = 1, 1

* Sat 04 Oct 2014 11:16:28 PM JST
value
* Sat 04 Oct 2014 11:17:33 PM JST
self.dic[self.samplekey] = self.samplevalue
* Sat 04 Oct 2014 11:17:43 PM JST
self.dic[self.samplekey]
* Sat 04 Oct 2014 11:20:27 PM JST
    def test___delitem__(self, ):
        self.dic[self.samplekey] = self.samplevalue
        del self.dic[self.samplekey]
        expects = 0
        got = len(self.dic)
        self.assertEqual(expects, got)

* Sat 04 Oct 2014 11:20:43 PM JST
        self.dic[self.samplevalue] = self.samplevalue
        expects = self.samplevalue
        got = self.dic.get(self.samplevalue)
        self.assertEqual(expects, got)

* Sat 04 Oct 2014 11:20:48 PM JST
self.dic[self.samplevalue] = self.samplevalue
* Sat 04 Oct 2014 11:20:57 PM JST
samplekey
* Sat 04 Oct 2014 11:24:34 PM JST
dic)
* Sat 04 Oct 2014 11:24:34 PM JST
self.dic)
* Sat 04 Oct 2014 11:24:35 PM JST
len(self.dic)
* Sat 04 Oct 2014 11:24:55 PM JST
self.assertEqual(expects, got)
* Sat 04 Oct 2014 11:29:52 PM JST

* Sat 04 Oct 2014 11:33:46 PM JST

* Sat 04 Oct 2014 11:34:16 PM JST
self.dic.update(self.sample3)
* Sat 04 Oct 2014 11:34:24 PM JST
expects = self.sample3.copy()
* Sat 04 Oct 2014 11:36:37 PM JST
sample3
* Sat 04 Oct 2014 11:36:37 PM JST
self.sample3
* Sat 04 Oct 2014 11:36:44 PM JST
self.
* Sat 04 Oct 2014 11:36:57 PM JST
expects1
* Sat 04 Oct 2014 11:37:12 PM JST
got1, got2 = self.dic.pop('hello')
* Sat 04 Oct 2014 11:37:26 PM JST
        self.assertEqual(expects, got)
        self.assertEqual(expects1, got1)
        self.assertEqual(expects2, got2)

* Sat 04 Oct 2014 11:37:54 PM JST
got = self.dic
* Sat 04 Oct 2014 11:48:25 PM JST
self.dic.update(self.sample3)
* Sat 04 Oct 2014 11:50:14 PM JST
 * 2
* Sat 04 Oct 2014 11:53:02 PM JST

* Sat 04 Oct 2014 11:53:03 PM JST
orderdict
* Sat 04 Oct 2014 11:53:12 PM JST
OrderDict
* Sat 04 Oct 2014 11:53:22 PM JST
TwoWayDict
* Sat 04 Oct 2014 11:58:41 PM JST
{
    'XF86PowerOff': 0x1008ff2a,
    'XF86WakeUp': 0x1008ff2b,
    'XF86Sleep': 0x1008ff2f,

    'Greek_omicron': 0x7ef,
    'Uhornacute': 0x1001ee8,
    'Kcedilla': 0x3d3,
    'Georgian_san': 0x10010e1,
    'DongSign': 0x10020ab,
    'Hangul_AraeA': 0xef6,
    'MouseKeys_Enable': 0xfe76,
    'KP_Page_Up': 0xff9a,
    'Massyo': 0xff2c,
    'braille_dots_34567': 0x100287c,
    'Georgian_qar': 0x10010e7,
    'braille_dots_1234': 0x100280f,
    'Hangul_J_Kiyeog': 0xed4,
    'openstar': 0xae5,
    'hebrew_finalzade': 0xcf5,
    'Thai_leknung': 0xdf1,
    'hebrew_finalzadi': 0xcf5,
    'braille_dots_1238': 0x1002887,
    'lcedilla': 0x3b6,
    'Thai_soso': 0xdab,
    'foursubscript': 0x1002084,
    'Hangul_J_RieulPieub': 0xede,
    'Rcedilla': 0x3a3,
    'Serbian_dze': 0x6af,
    'StickyKeys_Enable': 0xfe75,
    'braille_dots_257': 0x1002852,
    'Armenian_ini': 0x100056b,
    'Hangul_J_Pieub': 0xee4,
    'Mabovedot': 0x1001e40,
    'downtack': 0xbc2,
    'braille_dots_258': 0x1002892,
    'Page_Down': 0xff56,
    'Cyrillic_ka_vertstroke': 0x100049d,
    'braille_dots_245678': 0x10028fa,
    'threesubscript': 0x1002083,
    'Scaron': 0x1a9,
    'Henkan_Mode': 0xff23,
    'G': 0x47,
    'Cacute': 0x1c6,
    'logicaland': 0x8de,
    'Pointer_DblClick_Dflt': 0xfeee,
    'gcedilla': 0x3bb,
    'braille_dots_12457': 0x100285b,
    'braille_dots_12456': 0x100283b,
    'braille_dots_12458': 0x100289b,
    'THORN': 0xde,
    'greaterthanequal': 0x8be,
    'Pointer_EnableKeys': 0xfef9,
    'Greek_upsilonaccent': 0x7b8,
    'dead_belowcircumflex': 0xfe69,
    'acircumflex': 0xe2,
    'ISO_Partial_Space_Left': 0xfe25,
    'Georgian_on': 0x10010dd,
    'k': 0x6b,
    'Ooblique': 0xd8,
    'Rcaron': 0x1d8,
    'Arabic_alef': 0x5c7,
    'Hangul_J_KkogjiDalrinIeung': 0xef9,
    'Agrave': 0xc0,
    'Home': 0xff50,
    'Greek_switch': 0xff7e,
    'Armenian_but': 0x100055d,
    'Cyrillic_en_descender': 0x10004a3,
    'Hangul_Dikeud': 0xea7,
    'Greek_eta': 0x7e7,
    'Acircumflextilde': 0x1001eaa,
    'ccaron': 0x1e8,
    'Hstroke': 0x2a1,
    'Arabic_hamza_above': 0x1000654,
    'F10': 0xffc7,
    'Thai_thothahan': 0xdb7,
    'leftsinglequotemark': 0xad0,
    'zabovedot': 0x1bf,
    'Ukrainian_IE': 0x6b4,
    'NairaSign': 0x10020a6,
    'braille_dots_2357': 0x1002856,
    'KP_Next': 0xff9b,
    'therefore': 0x8c0,
    'Mae_Koho': 0xff3e,
    'hebrew_dalet': 0xce3,
    'Cyrillic_er': 0x6d2,
    'Hangul_J_Jieuj': 0xee9,
    'V': 0x56,
    'Overlay1_Enable': 0xfe78,
    'rightt': 0x9f5,
    'Hangul_Jieuj': 0xeb8,
    'partdifferential': 0x1002202,
    'mu': 0xb5,
    'Cyrillic_SCHWA': 0x10004d8,
    'braille_dot_10': 0xfffa,
    'Hangul_Codeinput': 0xff37,
    'Armenian_DA': 0x1000534,
    'lowrightcorner': 0x9ea,
    'Greek_OMEGA': 0x7d9,
    'Ohorngrave': 0x1001edc,
    'Hangul_PreHanja': 0xff3a,
    'currency': 0xa4,
    'braille_dots_124568': 0x10028bb,
    'braille_dots_124567': 0x100287b,
    'Uhook': 0x1001ee6,
    'Shift_Lock': 0xffe6,
    'Muhenkan': 0xff22,
    'eng': 0x3bf,
    'Cyrillic_DZHE': 0x6bf,
    'Hangul_J_YeorinHieuh': 0xefa,
    'A': 0x41,
    'Thai_nonu': 0xdb9,
    'Armenian_VO': 0x1000548,
    'L6': 0xffcd,
    'L7': 0xffce,
    'L4': 0xffcb,
    'L5': 0xffcc,
    'L2': 0xffc9,
    'L3': 0xffca,
    'L1': 0xffc8,
    'L8': 0xffcf,
    'L9': 0xffd0,
    'ISO_Partial_Line_Down': 0xfe24,
    'KP_Up': 0xff97,
    'Cyrillic_YERU': 0x6f9,
    'Dstroke': 0x1d0,
    'Cyrillic_en': 0x6ce,
    'Hangul_SunkyeongeumMieum': 0xef0,
    'includedin': 0x8da,
    'checkerboard': 0x9e1,
    'Pointer_Button_Dflt': 0xfee8,
    'hebrew_kaph': 0xceb,
    'approxeq': 0x1002248,
    'Thai_nikhahit': 0xded,
    'ograve': 0xf2,
    'Georgian_hie': 0x10010f2,
    'Armenian_lyun': 0x100056c,
    'kana_NU': 0x4c7,
    'kana_NI': 0x4c6,
    'kana_NO': 0x4c9,
    'kana_NA': 0x4c5,
    'Hangul_J_SsangSios': 0xee7,
    'kana_NE': 0x4c8,
    'Armenian_tso': 0x1000581,
    'Hangul_J_Khieuq': 0xeeb,
    'Armenian_tsa': 0x100056e,
    'Cyrillic_ZE': 0x6fa,
    'otilde': 0xf5,
    'braille_dots_15': 0x1002811,
    'braille_dots_14': 0x1002809,
    'braille_dots_17': 0x1002841,
    'braille_dots_16': 0x1002821,
    'Abrevehook': 0x1001eb2,
    'braille_dots_12': 0x1002803,
    'Arabic_fatha': 0x5ee,
    'guillemotright': 0xbb,
    'Armenian_je': 0x100057b,
    'ISO_Level5_Lock': 0xfe13,
    'onethird': 0xab0,
    'braille_dots_15678': 0x10028f1,
    'toprightsqbracket': 0x8a9,
    'l': 0x6c,
    'dead_doubleacute': 0xfe59,
    'Codeinput': 0xff37,
    'notsign': 0xac,
    'dead_belowdiaeresis': 0xfe6c,
    'braille_dots_3458': 0x100289c,
    'braille_dots_3456': 0x100283c,
    'braille_dots_3457': 0x100285c,
    'Yhook': 0x1001ef6,
    'braille_dots_145678': 0x10028f9,
    'braille_dots_4678': 0x10028e8,
    'Armenian_re': 0x1000580,
    'Thai_yoying': 0xdad,
    'quoteright': 0x27,
    'braille_dots_248': 0x100288a,
    'ucircumflex': 0xfb,
    'braille_dots_245': 0x100281a,
    'braille_dots_247': 0x100284a,
    'PreviousCandidate': 0xff3e,
    'Arabic_tehmarbuta': 0x5c9,
    'Thai_thanthakhat': 0xdec,
    'Arabic_yeh_baree': 0x10006d2,
    'W': 0x57,
    'dead_psili': 0xfe64,
    'uhornacute': 0x1001ee9,
    'logicalor': 0x8df,
    'downstile': 0xbc4,
    'wacute': 0x1001e83,
    'notelementof': 0x1002209,
    'braille_dots_12467': 0x100286b,
    'Zabovedot': 0x1af,
    'Thai_dodek': 0xdb4,
    'Thai_lekpaet': 0xdf8,
    'braille_dots_123678': 0x10028e7,
    'ballotcross': 0xaf4,
    'abrevetilde': 0x1001eb5,
    'Georgian_jhan': 0x10010ef,
    'Cyrillic_softsign': 0x6d8,
    'emfilledcircle': 0xade,
    'Hangul_PreviousCandidate': 0xff3e,
    'Kanji_Bangou': 0xff37,
    'Ukranian_YI': 0x6b7,
    'hebrew_gimmel': 0xce2,
    'Greek_iotadieresis': 0x7b5,
    'Greek_IOTAdieresis': 0x7a5,
    'ocircumflextilde': 0x1001ed7,
    'B': 0x42,
    'Greek_xi': 0x7ee,
    'ediaeresis': 0xeb,
    'rightopentriangle': 0xacd,
    'Armenian_nu': 0x1000576,
    'Cyrillic_zhe': 0x6d6,
    'twofifths': 0xab3,
    'Cyrillic_HA_descender': 0x10004b2,
    'botrightsummation': 0x8b6,
    'Hangul_J_RieulKiyeog': 0xedc,
    'uhornbelowdot': 0x1001ef1,
    'minus': 0x2d,
    'tcaron': 0x1bb,
    'hebrew_doublelowline': 0xcdf,
    'soliddiamond': 0x9e0,
    'hebrew_zain': 0xce6,
    'Armenian_SHA': 0x1000547,
    'braille_dots_2678': 0x10028e2,
    'hebrew_finalmem': 0xced,
    'Hangul_RieulPhieuf': 0xeaf,
    'Gabovedot': 0x2d5,
    'Hangul_J_RieulPhieuf': 0xee1,
    'Uacute': 0xda,
    'onesubscript': 0x1002081,
    'braille_dots_135678': 0x10028f5,
    'Arabic_ra': 0x5d1,
    'braille_dots_1378': 0x10028c5,
    'Greek_upsilondieresis': 0x7b9,
    'Arabic_comma': 0x5ac,
    'KP_F3': 0xff93,
    'KP_F2': 0xff92,
    'KP_F1': 0xff91,
    'KP_F4': 0xff94,
    'Armenian_ke': 0x1000584,
    'grave': 0x60,
    'Ocircumflex': 0xd4,
    'm': 0x6d,
    'lstroke': 0x1b3,
    'braille_dots_1368': 0x10028a5,
    'Ukranian_JE': 0x6b4,
    'Hangul_WEO': 0xecd,
    'lowleftcorner': 0x9ed,
    'F23': 0xffd4,
    'F22': 0xffd3,
    'F21': 0xffd2,
    'F20': 0xffd1,
    'F27': 0xffd8,
    'F26': 0xffd7,
    'F25': 0xffd6,
    'Atilde': 0xc3,
    'F29': 0xffda,
    'F28': 0xffd9,
    'ybelowdot': 0x1001ef5,
    'hcircumflex': 0x2b6,
    'Hangul_Khieuq': 0xebb,
    'leftanglebracket': 0xabc,
    'rcaron': 0x1f8,
    'KP_Insert': 0xff9e,
    'Acircumflexhook': 0x1001ea8,
    'seveneighths': 0xac6,
    'Eacute': 0xc9,
    'Lbelowdot': 0x1001e36,
    'Thai_chochoe': 0xdac,
    'cacute': 0x1e6,
    'braille_dots_4': 0x1002808,
    'acircumflexhook': 0x1001ea9,
    'Hangul_End': 0xff33,
    'Arabic_tah': 0x5d7,
    'kana_openingbracket': 0x4a2,
    'thinspace': 0xaa7,
    'Serbian_dje': 0x6a1,
    'bar': 0x7c,
    'rightanglebracket': 0xabe,
    'Cyrillic_u_macron': 0x10004ef,
    'Thai_sosua': 0xdca,
    'dead_abovering': 0xfe58,
    'numerosign': 0x6b0,
    'dead_currency': 0xfe6f,
    'braille_dots_128': 0x1002883,
    'Thai_lekha': 0xdf5,
    'Hangul_J_Nieun': 0xed7,
    'braille_dots_123': 0x1002807,
    'L10': 0xffd1,
    'braille_dots_125': 0x1002813,
    'Cabovedot': 0x2c5,
    'braille_dots_127': 0x1002843,
    'Armenian_KEN': 0x100053f,
    'mabovedot': 0x1001e41,
    'Thai_rorua': 0xdc3,
    'Sabovedot': 0x1001e60,
    'hebrew_taw': 0xcfa,
    'voicedsound': 0x4de,
    'atilde': 0xe3,
    'Arabic_alefmaksura': 0x5e9,
    'Arabic_jeem': 0x5cc,
    'hebrew_taf': 0xcfa,
    'C': 0x43,
    'lessthanequal': 0x8bc,
    'Jcircumflex': 0x2ac,
    'Arabic_zah': 0x5d8,
    'braille_dots_3467': 0x100286c,
    'Hangul_RieulSios': 0xead,
    'ISO_Level5_Shift': 0xfe11,
    'braille_dots_3468': 0x10028ac,
    'braille_dots_45': 0x1002818,
    'Udoubleacute': 0x1db,
    'braille_dots_27': 0x1002842,
    'leftradical': 0x8a1,
    'braille_dots_238': 0x1002886,
    'Cyrillic_hardsign': 0x6df,
    'braille_dots_234': 0x100280e,
    'braille_dots_235': 0x1002816,
    'braille_dots_236': 0x1002826,
    'braille_dots_237': 0x1002846,
    'Hangul_AE': 0xec0,
    'Egrave': 0xc8,
    '3270_ExSelect': 0xfd1b,
    'igrave': 0xec,
    'Thai_kokai': 0xda1,
    'ETH': 0xd0,
    '3270_Copy': 0xfd15,
    'Hangul_J_KiyeogSios': 0xed6,
    'Arabic_dammatan': 0x5ec,
    'union': 0x8dd,
    'Pointer_DownLeft': 0xfee6,
    'braille_dots_346': 0x100282c,
    'braille_dots_347': 0x100284c,
    'braille_dots_348': 0x100288c,
    'Pointer_DblClick5': 0xfef3,
    'Pointer_DblClick4': 0xfef2,
    'braille_dots_12478': 0x10028cb,
    'Pointer_DblClick1': 0xfeef,
    'Pointer_DblClick3': 0xfef1,
    'Pointer_DblClick2': 0xfef0,
    'Hangul_WE': 0xece,
    '3270_Enter': 0xfd1e,
    'KP_Page_Down': 0xff9b,
    'ISO_Group_Shift': 0xff7e,
    'Macedonia_DSE': 0x6b5,
    'guillemotleft': 0xab,
    'Ecircumflexacute': 0x1001ebe,
    'Arabic_thal': 0x5d0,
    'n': 0x6e,
    'braille_dots_1567': 0x1002871,
    'nobreakspace': 0xa0,
    'Menu': 0xff67,
    'Greek_etaaccent': 0x7b3,
    'Arabic_jeh': 0x1000698,
    'dead_caron': 0xfe5a,
    'figdash': 0xabb,
    'fivesuperior': 0x1002075,
    'Armenian_JE': 0x100054b,
    'periodcentered': 0xb7,
    'Cyrillic_yeru': 0x6d9,
    'leftarrow': 0x8fb,
    'MultipleCandidate': 0xff3d,
    'Greek_mu': 0x7ec,
    'Hangul_RieulMieum': 0xeab,
    'Georgian_shin': 0x10010e8,
    'uhook': 0x1001ee7,
    'sabovedot': 0x1001e61,
    'braille_dots_13567': 0x1002875,
    'Thai_phophan': 0xdbe,
    'topt': 0x9f7,
    'Georgian_ban': 0x10010d1,
    'Greek_GAMMA': 0x7c3,
    'Num_Lock': 0xff7f,
    'Hangul_RieulKiyeog': 0xeaa,
    'Y': 0x59,
    'KP_Delete': 0xff9f,
    'hebrew_het': 0xce7,
    'Arabic_veh': 0x10006a4,
    'hebrew_lamed': 0xcec,
    'tcedilla': 0x1fe,
    'Arabic_9': 0x1000669,
    'Arabic_8': 0x1000668,
    'ISO_Move_Line_Up': 0xfe21,
    'Armenian_FE': 0x1000556,
    'Arabic_1': 0x1000661,
    'Arabic_0': 0x1000660,
    'Arabic_3': 0x1000663,
    'Arabic_2': 0x1000662,
    'Arabic_5': 0x1000665,
    'Arabic_4': 0x1000664,
    'Arabic_7': 0x1000667,
    'Arabic_6': 0x1000666,
    'plusminus': 0xb1,
    'yen': 0xa5,
    'Cyrillic_SOFTSIGN': 0x6f8,
    'kana_YA': 0x4d4,
    'Armenian_ZA': 0x1000536,
    'ocircumflexbelowdot': 0x1001ed9,
    'Hangul_J_PieubSios': 0xee5,
    'D': 0x44,
    'F30': 0xffdb,
    'F31': 0xffdc,
    'F32': 0xffdd,
    'F33': 0xffde,
    'F34': 0xffdf,
    'F35': 0xffe0,
    'Greek_kappa': 0x7ea,
    'Wdiaeresis': 0x1001e84,
    'lcaron': 0x1b5,
    'Cyrillic_KA_descender': 0x100049a,
    'ISO_Emphasize': 0xfe32,
    '3270_CursorSelect': 0xfd1c,
    'aogonek': 0x1b1,
    'Cyrillic_SHCHA': 0x6fd,
    'Thai_honokhuk': 0xdce,
    'Cyrillic_shha': 0x10004bb,
    'obarred': 0x1000275,
    'SingleCandidate': 0xff3c,
    'Thorn': 0xde,
    'leftt': 0x9f4,
    'braille_dots_23457': 0x100285e,
    'braille_dots_23456': 0x100283e,
    'zcaron': 0x1be,
    'sevensuperior': 0x1002077,
    'braille_dots_137': 0x1002845,
    'Armenian_LYUN': 0x100053c,
    'Hangul_J_Mieum': 0xee3,
    'braille_dots_134': 0x100280d,
    'Cyrillic_JE': 0x6b8,
    'Arabic_madda_above': 0x1000653,
    'ohook': 0x1001ecf,
    'o': 0x6f,
    'AccessX_Feedback_Enable': 0xfe71,
    'Greek_gamma': 0x7e3,
    'plus': 0x2b,
    'Greek_KAPPA': 0x7ca,
    'ydiaeresis': 0xff,
    'Hangul_RieulYeorinHieuh': 0xeef,
    'Greek_IOTA': 0x7c9,
    'Eisu_toggle': 0xff30,
    'Pabovedot': 0x1001e56,
    'dstroke': 0x1f0,
    'braille_dots_3678': 0x10028e4,
    'abelowdot': 0x1001ea1,
    'Cyrillic_VE': 0x6f7,
    'Hiragana': 0xff25,
    'topleftradical': 0x8a2,
    'braille_dots_3478': 0x10028cc,
    'acircumflexbelowdot': 0x1001ead,
    'ohorngrave': 0x1001edd,
    'checkmark': 0xaf3,
    'approximate': 0x8c8,
    'Break': 0xff6b,
    'Hangul_J_SsangKiyeog': 0xed5,
    'hstroke': 0x2b1,
    'egrave': 0xe8,
    '3270_EraseEOF': 0xfd06,
    'Ydiaeresis': 0x13be,
    'Z': 0x5a,
    'Kana_Shift': 0xff2e,
    'Left': 0xff51,
    'Ohorntilde': 0x1001ee0,
    'Cyrillic_lje': 0x6a9,
    'kana_RU': 0x4d9,
    'hairspace': 0xaa8,
    'kana_RO': 0x4db,
    'Thai_baht': 0xddf,
    'braille_dots_357': 0x1002854,
    'Greek_alphaaccent': 0x7b1,
    'kana_RI': 0x4d8,
    'Thai_thonangmontho': 0xdb1,
    'kana_RE': 0x4da,
    'braille_dots_358': 0x1002894,
    'kana_RA': 0x4d7,
    'nacute': 0x1f1,
    'horizlinescan9': 0x9f3,
    'horizlinescan7': 0x9f2,
    'horizlinescan5': 0x9f1,
    'horizlinescan3': 0x9f0,
    'upstile': 0xbd3,
    'horizlinescan1': 0x9ef,
    'Thai_saraaa': 0xdd2,
    'Thai_saraae': 0xde1,
    'Georgian_vin': 0x10010d5,
    'Thai_saraam': 0xdd3,
    'Begin': 0xff58,
    'nl': 0x9e8,
    'Iacute': 0xcd,
    'semivoicedsound': 0x4df,
    'Greek_PSI': 0x7d8,
    'Armenian_separation_mark': 0x100055d,
    'Pointer_UpRight': 0xfee5,
    'enopensquarebullet': 0xae1,
    'Hangul_AraeAE': 0xef7,
    'onefifth': 0xab2,
    'Armenian_BEN': 0x1000532,
    'E': 0x45,
    'Cyrillic_U': 0x6f5,
    'topvertsummationconnector': 0x8b3,
    'asterisk': 0x2a,
    'opentribulletdown': 0xae4,
    'Arabic_noon_ghunna': 0x10006ba,
    'Cyrillic_O': 0x6ef,
    'Cyrillic_I': 0x6e9,
    'Cyrillic_E': 0x6fc,
    'Cyrillic_A': 0x6e1,
    'wgrave': 0x1001e81,
    'Cyrillic_u': 0x6d5,
    'braille_blank': 0x1002800,
    'Cyrillic_o': 0x6cf,
    'Cyrillic_i': 0x6c9,
    'Cyrillic_e': 0x6dc,
    'Hangul_Start': 0xff32,
    'Cyrillic_a': 0x6c1,
    'Hcircumflex': 0x2a6,
    'Alt_R': 0xffea,
    'Hangul_SsangJieuj': 0xeb9,
    'Greek_ALPHA': 0x7c1,
    'Alt_L': 0xffe9,
    'kana_CHI': 0x4c1,
    'dabovedot': 0x1001e0b,
    'Thai_maiyamok': 0xde6,
    '0': 0x30,
    'braille_dots_1358': 0x1002895,
    'Touroku': 0xff2b,
    'Pointer_DfltBtnPrev': 0xfefc,
    'braille_dots_1357': 0x1002855,
    'idotless': 0x2b9,
    'Arabic_noon': 0x5e6,
    'ISO_Set_Margin_Right': 0xfe28,
    'division': 0xf7,
    'braille_dots_24678': 0x10028ea,
    'slash': 0x2f,
    'ocaron': 0x10001d2,
    'Romaji': 0xff24,
    'Hangul_SunkyeongeumPieub': 0xef1,
    'braille_dots_234578': 0x10028de,
    'Hangul_Jeonja': 0xff38,
    'p': 0x70,
    'Tab': 0xff09,
    'leftshoe': 0xbda,
    'hebrew_qoph': 0xcf7,
    'Arabic_hamzaonalef': 0x5c3,
    'Serbian_TSHE': 0x6bb,
    'braille_dots_138': 0x1002885,
    'Armenian_e': 0x1000567,
    'Cyrillic_KA': 0x6eb,
    'braille_dots_2345678': 0x10028fe,
    'Next_Virtual_Screen': 0xfed2,
    'Cyrillic_ghe_bar': 0x1000493,
    'dead_semivoiced_sound': 0xfe5f,
    'ntilde': 0xf1,
    'braille_dots_1268': 0x10028a3,
    'ampersand': 0x26,
    'Armenian_E': 0x1000537,
    'Armenian_O': 0x1000555,
    'braille_dots_136': 0x1002825,
    'crossinglines': 0x9ee,
    'braille_dots_135': 0x1002815,
    'VoidSymbol': 0xffffff,
    'braille_dots_34568': 0x10028bc,
    'braille_dots_1267': 0x1002863,
    'Armenian_paruyk': 0x100055e,
    'Greek_alpha': 0x7e1,
    'Abrevetilde': 0x1001eb4,
    'fabovedot': 0x1001e1f,
    'ISO_Partial_Space_Right': 0xfe26,
    'Abreve': 0x1c3,
    'braille_dots_23468': 0x10028ae,
    'Georgian_kan': 0x10010d9,
    'Thai_topatak': 0xdaf,
    'ocircumflex': 0xf4,
    'braille_dots_47': 0x1002848,
    'braille_dots_13458': 0x100289d,
    'asciitilde': 0x7e,
    'Lacute': 0x1c5,
    'marker': 0xabf,
    'braille_dots_13456': 0x100283d,
    'braille_dots_13457': 0x100285d,
    'ohorntilde': 0x1001ee1,
    'hebrew_he': 0xce4,
    'kana_SU': 0x4bd,
    'Thai_phinthu': 0xdda,
    'kana_SO': 0x4bf,
    'kana_SE': 0x4be,
    'Armenian_hyphen': 0x100058a,
    'dead_doublegrave': 0xfe66,
    'KP_Add': 0xffab,
    'Arabic_damma': 0x5ef,
    'Cyrillic_shorti': 0x6ca,
    'F': 0x46,
    'club': 0xaec,
    'Thai_saraaimaimuan': 0xde3,
    'Pointer_Accelerate': 0xfefa,
    'Arabic_hamza_below': 0x1000655,
    'Adiaeresis': 0xc4,
    'kana_MA': 0x4cf,
    'Cyrillic_YA': 0x6f1,
    'kana_MI': 0x4d0,
    'kana_MO': 0x4d3,
    'KP_Enter': 0xff8d,
    'Down': 0xff54,
    'Cyrillic_YU': 0x6e0,
    'Hangul_RieulPieub': 0xeac,
    'Thai_sorusi': 0xdc9,
    'heart': 0xaee,
    'braille_dots_1345': 0x100281d,
    'musicalflat': 0xaf6,
    'rightsinglequotemark': 0xad1,
    'braille_dots_13678': 0x10028e5,
    'backslash': 0x5c,
    'hebrew_teth': 0xce8,
    'braille_dots_34678': 0x10028ec,
    'idiaeresis': 0xef,
    'braille_dots_12678': 0x10028e3,
    '1': 0x31,
    'braille_dots_367': 0x1002864,
    'Greek_upsilonaccentdieresis': 0x7ba,
    'hebrew_mem': 0xcee,
    'ygrave': 0x1001ef3,
    'Arabic_farsi_yeh': 0x10006cc,
    'Thai_thothong': 0xdb8,
    'braille_dots_1234568': 0x10028bf,
    'Cyrillic_KA_vertstroke': 0x100049c,
    'braille_dots_1234567': 0x100287f,
    'downshoe': 0xbd6,
    'Lstroke': 0x1a3,
    'braille_dot_9': 0xfff9,
    'braille_dot_8': 0xfff8,
    'dintegral': 0x100222c,
    'braille_dot_2': 0xfff2,
    'braille_dot_1': 0xfff1,
    'braille_dot_7': 0xfff7,
    'braille_dot_6': 0xfff6,
    'braille_dot_5': 0xfff5,
    'braille_dot_4': 0xfff4,
    'Cyrillic_I_macron': 0x10004e2,
    'Henkan': 0xff23,
    'uparrow': 0x8fc,
    'q': 0x71,
    'Odiaeresis': 0xd6,
    'Hangul_J_RieulSios': 0xedf,
    'Arabic_beh': 0x5c8,
    'Thai_ngongu': 0xda7,
    'braille_dots_134678': 0x10028ed,
    'Arabic_sheen': 0x5d4,
    'Hangul': 0xff31,
    'acircumflextilde': 0x1001eab,
    'Georgian_zen': 0x10010d6,
    'Control_R': 0xffe4,
    'gcircumflex': 0x2f8,
    'Cyrillic_CHE_vertstroke': 0x10004b8,
    'Armenian_sha': 0x1000577,
    'Control_L': 0xffe3,
    'Armenian_pyur': 0x1000583,
    'R4': 0xffd5,
    'R5': 0xffd6,
    'R6': 0xffd7,
    'R7': 0xffd8,
    'ecircumflex': 0xea,
    'R1': 0xffd2,
    'R2': 0xffd3,
    'R3': 0xffd4,
    'dead_invertedbreve': 0xfe6d,
    'R8': 0xffd9,
    'R9': 0xffda,
    'Georgian_in': 0x10010d8,
    'ccircumflex': 0x2e6,
    'foursuperior': 0x1002074,
    'Odoubleacute': 0x1d5,
    'uhornhook': 0x1001eed,
    'hebrew_finalkaph': 0xcea,
    'Ncedilla': 0x3d1,
    'braille_dots_1348': 0x100288d,
    'KP_Tab': 0xff89,
    'ebelowdot': 0x1001eb9,
    'Hangul_J_RieulMieum': 0xedd,
    'braille_dots_1346': 0x100282d,
    'braille_dots_1347': 0x100284d,
    'Zenkaku': 0xff28,
    'Greek_iotaaccentdieresis': 0x7b6,
    'braille_dots_234567': 0x100287e,
    'braille_dots_234568': 0x10028be,
    'ISO_Fast_Cursor_Down': 0xfe2f,
    'filledrectbullet': 0xadb,
    'Hangul_PieubSios': 0xeb4,
    'similarequal': 0x8c9,
    'space': 0x20,
    'Cyrillic_ze': 0x6da,
    'dead_belowmacron': 0xfe68,
    'Hangul_J_Phieuf': 0xeed,
    'twosuperior': 0xb2,
    'braille_dots_1235': 0x1002817,
    'braille_dots_1236': 0x1002827,
    'braille_dots_1237': 0x1002847,
    'dead_abovecomma': 0xfe64,
    'hebrew_gimel': 0xce2,
    'ENG': 0x3bd,
    'Arabic_khah': 0x5ce,
    'ISO_Level2_Latch': 0xfe02,
    'quoteleft': 0x60,
    'F18': 0xffcf,
    'F19': 0xffd0,
    'F12': 0xffc9,
    'F13': 0xffca,
    'Serbian_je': 0x6a8,
    'F11': 0xffc8,
    'F16': 0xffcd,
    'F17': 0xffce,
    'F14': 0xffcb,
    'F15': 0xffcc,
    'Georgian_las': 0x10010da,
    'ISO_Fast_Cursor_Right': 0xfe2d,
    'Hangul_KiyeogSios': 0xea3,
    'kana_fullstop': 0x4a1,
    'Armenian_verjaket': 0x1000589,
    'Hangul_Ieung': 0xeb7,
    'Greek_DELTA': 0x7c4,
    'Pointer_Right': 0xfee1,
    'Ubreve': 0x2dd,
    'Ukrainian_ghe_with_upturn': 0x6ad,
    'Georgian_jil': 0x10010eb,
    'Ycircumflex': 0x1000176,
    'braille_dots_2457': 0x100285a,
    'braille_dots_2456': 0x100283a,
    'Shift_R': 0xffe2,
    'elementof': 0x1002208,
    'braille_dots_2458': 0x100289a,
    '2': 0x32,
    'abovedot': 0x1ff,
    'Armenian_ken': 0x100056f,
    'Shift_L': 0xffe1,
    'Ukrainian_GHE_WITH_UPTURN': 0x6bd,
    'leftdoublequotemark': 0xad2,
    'iacute': 0xed,
    'braille_dots_23478': 0x10028ce,
    'squareroot': 0x100221a,
    'Cyrillic_HA': 0x6e8,
    'Thai_maitri': 0xdea,
    'Tabovedot': 0x1001e6a,
    'Armenian_yentamna': 0x100058a,
    'Ytilde': 0x1001ef8,
    'Thai_ru': 0xdc4,
    'Thai_phophung': 0xdbc,
    'em4space': 0xaa4,
    'Armenian_dza': 0x1000571,
    'braille_dots_23678': 0x10028e6,
    'Uhorntilde': 0x1001eee,
    'r': 0x72,
    'doubbaselinedot': 0xaaf,
    '3270_Rule': 0xfd14,
    'Cyrillic_TE': 0x6f4,
    'Armenian_KE': 0x1000554,
    'hebrew_samekh': 0xcf1,
    'Ucircumflex': 0xdb,
    'Cyrillic_schwa': 0x10004d9,
    'Armenian_exclam': 0x100055c,
    'abreve': 0x1e3,
    '3270_Reset': 0xfd08,
    'Hangul_YeorinHieuh': 0xef5,
    'Armenian_KHE': 0x100053d,
    'Ohook': 0x1001ece,
    'onehalf': 0xbd,
    'numbersign': 0x23,
    'Greek_XI': 0x7ce,
    'Fabovedot': 0x1001e1e,
    'emacron': 0x3ba,
    'KP_Separator': 0xffac,
    'multiply': 0xd7,
    'Greek_OMICRON': 0x7cf,
    'Ocircumflexhook': 0x1001ed4,
    'braille_dots_378': 0x10028c4,
    'Armenian_pe': 0x100057a,
    'braille_dots_1234578': 0x10028df,
    'hebrew_shin': 0xcf9,
    'Pointer_DownRight': 0xfee7,
    'kana_tu': 0x4af,
    'Sacute': 0x1a6,
    'Greek_IOTAdiaeresis': 0x7a5,
    'AccessX_Enable': 0xfe70,
    'onequarter': 0xbc,
    'Cyrillic_shcha': 0x6dd,
    'H': 0x48,
    'gcaron': 0x10001e7,
    'downarrow': 0x8fe,
    'Greek_SIGMA': 0x7d2,
    'Armenian_GIM': 0x1000533,
    'Right': 0xff53,
    'uhorntilde': 0x1001eef,
    'braille_dots_568': 0x10028b0,
    'ColonSign': 0x10020a1,
    'ISO_Next_Group_Lock': 0xfe09,
    'braille_dots_567': 0x1002870,
    'MouseKeys_Accel_Enable': 0xfe77,
    'Hangul_Tieut': 0xebc,
    'Ccaron': 0x1c8,
    'Arabic_fullstop': 0x10006d4,
    'Farsi_1': 0x10006f1,
    'Farsi_0': 0x10006f0,
    'Farsi_3': 0x10006f3,
    'Farsi_2': 0x10006f2,
    'Farsi_5': 0x10006f5,
    'Farsi_4': 0x10006f4,
    'Farsi_7': 0x10006f7,
    'Farsi_6': 0x10006f6,
    'Farsi_9': 0x10006f9,
    'Farsi_8': 0x10006f8,
    'Serbian_JE': 0x6b8,
    'dead_dasia': 0xfe65,
    'Thai_sarauu': 0xdd9,
    'braille_dots_147': 0x1002849,
    '3': 0x33,
    'Arabic_semicolon': 0x5bb,
    'braille_dots_458': 0x1002898,
    'Thai_saraue': 0xdd6,
    'braille_dots_356': 0x1002834,
    'Greek_beta': 0x7e2,
    'FFrancSign': 0x10020a3,
    'Greek_zeta': 0x7e6,
    'Tcaron': 0x1ab,
    'braille_dots_457': 0x1002858,
    'enopencircbullet': 0xae0,
    'Greek_nu': 0x7ed,
    '3270_Left2': 0xfd04,
    'braille_dots_1245': 0x100281b,
    's': 0x73,
    'braille_dots_1246': 0x100282b,
    'Escape': 0xff1b,
    'zerosubscript': 0x1002080,
    'braille_dots_1248': 0x100288b,
    'Georgian_chin': 0x10010e9,
    'Ihook': 0x1001ec8,
    'Idiaeresis': 0xcf,
    'Utilde': 0x3dd,
    'period': 0x2e,
    'Cyrillic_IE': 0x6e5,
    'colon': 0x3a,
    'Cyrillic_IO': 0x6b3,
    'Hangul_WAE': 0xec9,
    'caret': 0xafc,
    'Ecircumflex': 0xca,
    'semicolon': 0x3b,
    'KP_Divide': 0xffaf,
    'ihook': 0x1001ec9,
    '3270_Duplicate': 0xfd01,
    'Hangul_J_RieulTieut': 0xee0,
    'Thai_lekchet': 0xdf7,
    'ohorn': 0x10001a1,
    'braille_dots_13': 0x1002805,
    'Arabic_ha': 0x5e7,
    'breve': 0x1a2,
    'CruzeiroSign': 0x10020a2,
    'Uhornhook': 0x1001eec,
    'ISO_Level3_Shift': 0xfe03,
    'kappa': 0x3a2,
    'Pointer_Up': 0xfee2,
    'braille_dots_18': 0x1002881,
    'braille_dots_1367': 0x1002865,
    'Greek_delta': 0x7e4,
    'Hangul_J_Sios': 0xee6,
    'Thai_maitaikhu': 0xde7,
    'threequarters': 0xbe,
    'Armenian_GHAT': 0x1000542,
    'Armenian_MEN': 0x1000544,
    'telephone': 0xaf9,
    'Cyrillic_NJE': 0x6ba,
    'ugrave': 0xf9,
    'braille_dots_167': 0x1002861,
    'braille_dots_13478': 0x10028cd,
    'fiveeighths': 0xac5,
    '3270_Test': 0xfd0d,
    'ISO_Discontinuous_Underline': 0xfe31,
    'hebrew_tet': 0xce8,
    'SlowKeys_Enable': 0xfe73,
    'braille_dots_1247': 0x100284b,
    'Uhorngrave': 0x1001eea,
    'braille_dots_345678': 0x10028fc,
    'sterling': 0xa3,
    'Hangul_YEO': 0xec5,
    'topintegral': 0x8a4,
    'Hiragana_Katakana': 0xff27,
    'I': 0x49,
    'Super_R': 0xffec,
    'Clear': 0xff0b,
    'Greek_lambda': 0x7eb,
    '3270_Right2': 0xfd03,
    'apostrophe': 0x27,
    'Eth': 0xd0,
    'Ocircumflexacute': 0x1001ed0,
    'Thai_lekhok': 0xdf6,
    'Hangul_EU': 0xed1,
    'ncaron': 0x1f2,
    'Hangul_SunkyeongeumPhieuf': 0xef4,
    'Hangul_EO': 0xec3,
    'Cyrillic_GHE_bar': 0x1000492,
    'Hangul_Hanja': 0xff34,
    'zstroke': 0x10001b6,
    'Arabic_feh': 0x5e1,
    'sixsubscript': 0x1002086,
    'kana_SHI': 0x4bc,
    'Thai_maihanakat': 0xdd1,
    'Hangul_YA': 0xec1,
    'Hangul_YE': 0xec6,
    'Hangul_YI': 0xed2,
    'Hangul_YO': 0xecb,
    'Cyrillic_ha_descender': 0x10004b3,
    '4': 0x34,
    'dead_belowcomma': 0xfe6e,
    'hebrew_aleph': 0xce0,
    'Greek_sigma': 0x7f2,
    'Hangul_Mieum': 0xeb1,
    'Thai_sosala': 0xdc8,
    'Greek_phi': 0x7f6,
    'Greek_rho': 0x7f1,
    'Wacute': 0x1001e82,
    'oslash': 0xf8,
    'kana_comma': 0x4a4,
    'Greek_EPSILON': 0x7c5,
    'Greek_MU': 0x7cc,
    't': 0x74,
    'tabovedot': 0x1001e6b,
    'Georgian_an': 0x10010d0,
    'hebrew_daleth': 0xce3,
    'scircumflex': 0x2fe,
    'BounceKeys_Enable': 0xfe74,
    'braille_dots_2367': 0x1002866,
    'Thai_leksi': 0xdf4,
    'braille_dots_1458': 0x1002899,
    'Cyrillic_je': 0x6a8,
    'dead_acute': 0xfe51,
    'eogonek': 0x1ea,
    'Umacron': 0x3de,
    'braille_dots_1235678': 0x10028f7,
    'punctspace': 0xaa6,
    'Hangul_Banja': 0xff39,
    'braille_dots_578': 0x10028d0,
    'Armenian_at': 0x1000568,
    'seconds': 0xad7,
    '3270_BackTab': 0xfd05,
    'Greek_horizbar': 0x7af,
    'etilde': 0x1001ebd,
    'dead_perispomeni': 0xfe53,
    'toprightparens': 0x8ad,
    'oe': 0x13bd,
    'SCHWA': 0x100018f,
    'Uring': 0x1d9,
    'leftopentriangle': 0xacc,
    'Greek_UPSILONaccent': 0x7a8,
    'dead_ogonek': 0xfe5c,
    'Katakana': 0xff26,
    'dagger': 0xaf1,
    'leftmiddlecurlybrace': 0x8af,
    'eacute': 0xe9,
    'dead_cedilla': 0xfe5b,
    'parenleft': 0x28,
    'braille_dots_256': 0x1002832,
    'Ukrainian_i': 0x6a6,
    'braille_dots_1256': 0x1002833,
    'braille_dots_1257': 0x1002853,
    'uogonek': 0x3f9,
    'Ccircumflex': 0x2c6,
    'braille_dots_1258': 0x1002893,
    'Macedonia_dse': 0x6a5,
    'Omacron': 0x3d2,
    'Iogonek': 0x3c7,
    'J': 0x4a,
    'ISO_Release_Margin_Left': 0xfe29,
    'Arabic_percent': 0x100066a,
    'braille_dots_124678': 0x10028eb,
    'e': 0x65,
    'Greek_omegaaccent': 0x7bb,
    'braille_dots_1678': 0x10028e1,
    'braille_dots_123478': 0x10028cf,
    'dead_belowdot': 0xfe60,
    'doubleacute': 0x1bd,
    'ogonek': 0x1b2,
    'ae': 0xe6,
    'ohornacute': 0x1001edb,
    'Byelorussian_SHORTU': 0x6be,
    'Hangul_RieulTieut': 0xeae,
    'Arabic_hamza': 0x5c1,
    'at': 0x40,
    'Georgian_hoe': 0x10010f5,
    'braille_dots_2478': 0x10028ca,
    'hebrew_chet': 0xce7,
    'braille_dots_148': 0x1002889,
    '5': 0x35,
    'Thai_paiyannoi': 0xdcf,
    'Cyrillic_DE': 0x6e4,
    'Wcircumflex': 0x1000174,
    'abrevebelowdot': 0x1001eb7,
    'Ediaeresis': 0xcb,
    'Cyrillic_ve': 0x6d7,
    'includes': 0x8db,
    'horizconnector': 0x8a3,
    'Arabic_shadda': 0x5f1,
    'braille_dots_178': 0x10028c1,
    'Amacron': 0x3c0,
    'Georgian_don': 0x10010d3,
    'Hangul_U': 0xecc,
    'Terminate_Server': 0xfed5,
    'thorn': 0xfe,
    'Ukrainian_I': 0x6b6,
    'kana_middledot': 0x4a5,
    'Greek_OMICRONaccent': 0x7a7,
    'Hangul_A': 0xebf,
    'u': 0x75,
    'Hangul_E': 0xec4,
    'Hangul_I': 0xed3,
    'Cyrillic_che_descender': 0x10004b7,
    'Hangul_O': 0xec7,
    'aring': 0xe5,
    'uprightcorner': 0x9eb,
    'Cyrillic_SHORTI': 0x6ea,
    'Zen_Koho': 0xff3d,
    'dollar': 0x24,
    'Greek_omicronaccent': 0x7b7,
    'KP_9': 0xffb9,
    'braille_dots_12357': 0x1002857,
    'Ygrave': 0x1001ef2,
    'braille_dots_13467': 0x100286d,
    'braille_dots_13468': 0x10028ad,
    '3270_Setup': 0xfd17,
    'Thai_lu': 0xdc6,
    'twothirds': 0xab1,
    'ubelowdot': 0x1001ee5,
    'Armenian_shesht': 0x100055b,
    'kana_closingbracket': 0x4a3,
    'cuberoot': 0x100221b,
    'ISO_Group_Latch': 0xfe06,
    'Acircumflexacute': 0x1001ea4,
    'amacron': 0x3e0,
    'Armenian_ra': 0x100057c,
    'braille_dots_246': 0x100282a,
    'latincross': 0xad9,
    'Yacute': 0xdd,
    'Ocircumflexgrave': 0x1001ed2,
    'Greek_BETA': 0x7c2,
    'Georgian_tar': 0x10010e2,
    'Greek_ZETA': 0x7c6,
    'Otilde': 0xd5,
    'Georgian_tan': 0x10010d7,
    'ISO_First_Group_Lock': 0xfe0d,
    'section': 0xa7,
    'Thai_khokhon': 0xda5,
    'botleftsqbracket': 0x8a8,
    'Ecircumflexbelowdot': 0x1001ec6,
    'braille_dots_12358': 0x1002897,
    'braille_dots_12356': 0x1002837,
    'Thai_dochada': 0xdae,
    'K': 0x4b,
    'KP_Begin': 0xff9d,
    'dead_capital_schwa': 0xfe8b,
    'emspace': 0xaa1,
    'Thai_lekkao': 0xdf9,
    'Aring': 0xc5,
    'telephonerecorder': 0xafa,
    'Cyrillic_CHE': 0x6fe,
    'vertbar': 0x9f8,
    'LiraSign': 0x10020a4,
    'Thai_khorakhang': 0xda6,
    'Greek_LAMDA': 0x7cb,
    'enfilledcircbullet': 0xae6,
    'braille_dots_1467': 0x1002869,
    'Acircumflexbelowdot': 0x1001eac,
    'Hangul_SsangPieub': 0xeb3,
    'rcedilla': 0x3b3,
    'braille_dots_1468': 0x10028a9,
    'emptyset': 0x1002205,
    'Gbreve': 0x2ab,
    'Hangul_J_NieunJieuj': 0xed8,
    'Arabic_ddal': 0x1000688,
    'Arabic_heh_doachashmee': 0x10006be,
    'Hangul_MultipleCandidate': 0xff3d,
    '6': 0x36,
    'braille_dots_1345678': 0x10028fd,
    'dead_circumflex': 0xfe52,
    'EcuSign': 0x10020a0,
    'scaron': 0x1b9,
    'dead_E': 0xfe83,
    'diamond': 0xaed,
    'dead_A': 0xfe81,
    'dead_O': 0xfe87,
    'dead_I': 0xfe85,
    'dead_U': 0xfe89,
    'Linefeed': 0xff0a,
    'asciicircum': 0x5e,
    'Dcaron': 0x1cf,
    'Cyrillic_ka': 0x6cb,
    'Ecircumflexgrave': 0x1001ec0,
    'dead_e': 0xfe82,
    'dead_a': 0xfe80,
    'emopencircle': 0xace,
    'hebrew_finalnun': 0xcef,
    'dead_o': 0xfe86,
    'dead_i': 0xfe84,
    'braille_dots_1356': 0x1002835,
    'dead_u': 0xfe88,
    'paragraph': 0xb6,
    'v': 0x76,
    'kana_HE': 0x4cd,
    'Ecircumflextilde': 0x1001ec4,
    'Scroll_Lock': 0xff14,
    'partialderivative': 0x8ef,
    'Armenian_ghat': 0x1000572,
    'Serbian_NJE': 0x6ba,
    'emopenrectangle': 0xacf,
    'Cyrillic_U_macron': 0x10004ee,
    'Serbian_LJE': 0x6b9,
    'ISO_Fast_Cursor_Up': 0xfe2e,
    'braille_dots_123468': 0x10028af,
    'fourthroot': 0x100221c,
    'Thai_chochan': 0xda8,
    'braille_dots_168': 0x10028a1,
    'braille_dots_123467': 0x100286f,
    'lacute': 0x1e5,
    'Cyrillic_HARDSIGN': 0x6ff,
    'Thai_thothung': 0xdb6,
    'Arabic_sad': 0x5d5,
    'icircumflex': 0xee,
    'RepeatKeys_Enable': 0xfe72,
    'ff': 0x9e3,
    'lefttack': 0xbdc,
    'dead_macron': 0xfe54,
    'Greek_theta': 0x7e8,
    'a': 0x61,
    'braille_dots_2468': 0x10028aa,
    'Cyrillic_ya': 0x6d1,
    'Greek_iotaaccent': 0x7b4,
    'braille_dots_2467': 0x100286a,
    'braille_dots_45678': 0x10028f8,
    'Hangul_PostHanja': 0xff3b,
    'Cyrillic_yu': 0x6c0,
    'oacute': 0xf3,
    'Hankaku': 0xff29,
    'uring': 0x1f9,
    'Armenian_se': 0x100057d,
    'Cyrillic_SHA': 0x6fb,
    'Obelowdot': 0x1001ecc,
    'Armenian_khe': 0x100056d,
    'braille_dots_146': 0x1002829,
    'Ohorn': 0x10001a0,
    'braille_dots_145': 0x1002819,
    'braille_dots_35678': 0x10028f4,
    'Hangul_PanSios': 0xef2,
    'braille_dots_14578': 0x10028d9,
    'Cyrillic_ka_descender': 0x100049b,
    'Scedilla': 0x1aa,
    'Thai_maiek': 0xde8,
    'braille_dots_24567': 0x100287a,
    'Thai_nonen': 0xdb3,
    'Macedonia_kje': 0x6ac,
    '3270_PA1': 0xfd0a,
    '3270_PA2': 0xfd0b,
    '3270_PA3': 0xfd0c,
    'braille_dots_24568': 0x10028ba,
    'braille_dots_12346': 0x100282f,
    'braille_dots_12468': 0x10028ab,
    'L': 0x4c,
    'AudibleBell_Enable': 0xfe7a,
    'Uhornbelowdot': 0x1001ef0,
    'lbelowdot': 0x1001e37,
    'Cyrillic_ER': 0x6f2,
    'Cyrillic_ES': 0x6f3,
    'omacron': 0x3f2,
    'Mode_switch': 0xff7e,
    'Cyrillic_EF': 0x6e6,
    'Thai_sarauee': 0xdd7,
    'dead_grave': 0xfe50,
    'braille_dots_34': 0x100280c,
    'Cyrillic_EN': 0x6ee,
    'Cyrillic_EL': 0x6ec,
    'Cyrillic_EM': 0x6ed,
    'End': 0xff57,
    'braille_dots_6': 0x1002820,
    'ISO_Level5_Latch': 0xfe12,
    'Hangul_Phieuf': 0xebd,
    '3270_AltCursor': 0xfd10,
    'Armenian_zhe': 0x100056a,
    'botleftsummation': 0x8b2,
    'Abrevegrave': 0x1001eb0,
    '7': 0x37,
    'signifblank': 0xaac,
    'kana_WA': 0x4dc,
    'KP_End': 0xff9c,
    'Farsi_yeh': 0x10006cc,
    'kana_WO': 0x4a6,
    '3270_ChangeScreen': 0xfd19,
    'Cyrillic_che_vertstroke': 0x10004b9,
    'Delete': 0xffff,
    'dead_diaeresis': 0xfe57,
    'imacron': 0x3ef,
    'phonographcopyright': 0xafb,
    'Arabic_hah': 0x5cd,
    'Armenian_hi': 0x1000575,
    'upshoe': 0xbc3,
    'Arabic_meem': 0x5e5,
    'filledrighttribullet': 0xadd,
    'w': 0x77,
    'ISO_Last_Group_Lock': 0xfe0f,
    'EuroSign': 0x20ac,
    'notequal': 0x8bd,
    'braille_dots_12348': 0x100288f,
    'KP_Space': 0xff80,
    'braille_dots_12345': 0x100281f,
    'radical': 0x8d6,
    'braille_dots_12347': 0x100284f,
    'Super_L': 0xffeb,
    'ninesubscript': 0x1002089,
    'Itilde': 0x3a5,
    'Cyrillic_ha': 0x6c8,
    'blank': 0x9df,
    'ecircumflextilde': 0x1001ec5,
    'ISO_Last_Group': 0xfe0e,
    'Arabic_kasratan': 0x5ed,
    'upleftcorner': 0x9ec,
    'tslash': 0x3bc,
    'botrightparens': 0x8ae,
    'Wgrave': 0x1001e80,
    'Greek_chi': 0x7f7,
    'Arabic_kasra': 0x5f0,
    'braille_dots_1478': 0x10028c9,
    'careof': 0xab8,
    'Greek_ALPHAaccent': 0x7a1,
    'Aogonek': 0x1a1,
    'Thai_bobaimai': 0xdba,
    'b': 0x62,
    'braille_dots_12345678': 0x10028ff,
    'Arabic_kaf': 0x5e3,
    'Cancel': 0xff69,
    'Georgian_man': 0x10010db,
    'ohornhook': 0x1001edf,
    'Arabic_rreh': 0x1000691,
    'ISO_Level3_Lock': 0xfe05,
    'braille_dots_125678': 0x10028f3,
    'xabovedot': 0x1001e8b,
    'racute': 0x1e0,
    'vertconnector': 0x8a6,
    'Ocaron': 0x10001d1,
    'Armenian_o': 0x1000585,
    'hebrew_beth': 0xce1,
    'Hangul_Nieun': 0xea4,
    'Emacron': 0x3aa,
    'yacute': 0xfd,
    'Armenian_PE': 0x100054a,
    'Pointer_Button5': 0xfeed,
    'Pointer_Button4': 0xfeec,
    'braille_dots_2346': 0x100282e,
    'Pointer_Button1': 0xfee9,
    'Pointer_Button3': 0xfeeb,
    'Pointer_Button2': 0xfeea,
    'quotedbl': 0x22,
    'containsas': 0x100220b,
    'M': 0x4d,
    'Hebrew_switch': 0xff7e,
    'Greek_lamda': 0x7eb,
    'kana_yo': 0x4ae,
    'braille_dots_123458': 0x100289f,
    'onesuperior': 0xb9,
    'Cyrillic_TSE': 0x6e3,
    'braille_dots_123457': 0x100285f,
    'braille_dots_123456': 0x100283f,
    'righttack': 0xbfc,
    'Georgian_gan': 0x10010d2,
    '3270_FieldMark': 0xfd02,
    'kana_ya': 0x4ac,
    'kana_yu': 0x4ad,
    'Armenian_NU': 0x1000546,
    'adiaeresis': 0xe4,
    'Georgian_har': 0x10010f4,
    'Armenian_VYUN': 0x1000552,
    'ocircumflexhook': 0x1001ed5,
    'braille_dots_467': 0x1002868,
    'Georgian_hae': 0x10010f0,
    'Ntilde': 0xd1,
    'ISO_Next_Group': 0xfe08,
    'questiondown': 0xbf,
    'babovedot': 0x1001e03,
    'dead_abovereversedcomma': 0xfe65,
    'Icircumflex': 0xce,
    'braille_dots_1568': 0x10028b1,
    'kana_FU': 0x4cc,
    'Ubelowdot': 0x1001ee4,
    'Armenian_men': 0x1000574,
    'Gcaron': 0x10001e6,
    'Thai_popla': 0xdbb,
    'Cyrillic_BE': 0x6e2,
    '8': 0x38,
    'circle': 0xbcf,
    'Etilde': 0x1001ebc,
    'Greek_UPSILON': 0x7d5,
    'Thai_thothan': 0xdb0,
    'filledlefttribullet': 0xadc,
    'Cyrillic_te': 0x6d4,
    'kana_u': 0x4a9,
    'braille_dots_468': 0x10028a8,
    'kana_o': 0x4ab,
    'kana_i': 0x4a8,
    'kana_e': 0x4aa,
    'braille_dots_157': 0x1002851,
    'braille_dots_156': 0x1002831,
    'kana_a': 0x4a7,
    'Greek_tau': 0x7f4,
    'Help': 0xff6a,
    'Cyrillic_U_straight': 0x10004ae,
    'kana_U': 0x4b3,
    'kana_N': 0x4dd,
    'kana_O': 0x4b5,
    'braille_dots_14567': 0x1002879,
    'kana_I': 0x4b2,
    'Thai_leksam': 0xdf3,
    'kana_E': 0x4b4,
    'braille_dots_14568': 0x10028b9,
    'kana_A': 0x4b1,
    'notapproxeq': 0x1002247,
    'kana_TO': 0x4c4,
    'ordfeminine': 0xaa,
    'kana_TI': 0x4c1,
    'Georgian_fi': 0x10010f6,
    'ISO_Prev_Group_Lock': 0xfe0b,
    'kana_TE': 0x4c3,
    'ISO_Fast_Cursor_Left': 0xfe2c,
    'kana_TA': 0x4c0,
    'underbar': 0xbc6,
    'ehook': 0x1001ebb,
    'braille_dots_4568': 0x10028b8,
    'kana_TU': 0x4c2,
    '3270_Ident': 0xfd13,
    'Cyrillic_PE': 0x6f0,
    'braceleft': 0x7b,
    'threefifths': 0xab4,
    'braille_dots_57': 0x1002850,
    'Greek_NU': 0x7cd,
    'zerosuperior': 0x1002070,
    'Ukrainian_yi': 0x6a7,
    'Acircumflex': 0xc2,
    'Ohornbelowdot': 0x1001ee2,
    'Oslash': 0xd8,
    'gbreve': 0x2bb,
    'Hangul_J_Dikeud': 0xeda,
    'Korean_Won': 0xeff,
    'Cyrillic_i_macron': 0x10004e3,
    'braille_dots_1578': 0x10028d1,
    'braille_dots_3': 0x1002804,
    'Armenian_tche': 0x1000573,
    'c': 0x63,
    'prescription': 0xad4,
    'Pointer_Drag1': 0xfef5,
    'Pointer_Drag3': 0xfef7,
    'Pointer_Drag2': 0xfef6,
    'Pointer_Drag5': 0xfefd,
    'Pointer_Drag4': 0xfef8,
    'Ugrave': 0xd9,
    'Prev_Virtual_Screen': 0xfed1,
    'braille_dots_8': 0x1002880,
    'Thai_maitho': 0xde9,
    'bott': 0x9f6,
    'Serbian_tshe': 0x6ab,
    'Greek_finalsmallsigma': 0x7f3,
    'tintegral': 0x100222d,
    'Greek_pi': 0x7f0,
    'enfilledsqbullet': 0xae7,
    'hexagram': 0xada,
    'Thai_oang': 0xdcd,
    'Hangul_YU': 0xed0,
    'Hangul_Special': 0xff3f,
    'Armenian_cha': 0x1000579,
    'braille_dots_12578': 0x10028d3,
    'Hangul_switch': 0xff7e,
    'Kana_Lock': 0xff2d,
    'N': 0x4e,
    'ibelowdot': 0x1001ecb,
    'uhorngrave': 0x1001eeb,
    'braille_dots_12378': 0x10028c7,
    'Ohornhook': 0x1001ede,
    'ISO_Lock': 0xfe01,
    'Cyrillic_nje': 0x6aa,
    'ISO_Level3_Latch': 0xfe04,
    'braceright': 0x7d,
    'brokenbar': 0xa6,
    'ecircumflexbelowdot': 0x1001ec7,
    'Serbian_DZE': 0x6bf,
    'dead_tilde': 0xfe53,
    'rightarrow': 0x8fd,
    'Hangul_Kiyeog': 0xea1,
    'Arabic_heh_goal': 0x10006c1,
    'BackSpace': 0xff08,
    'Georgian_can': 0x10010ea,
    '9': 0x39,
    'ISO_Continuous_Underline': 0xfe30,
    'Insert': 0xff63,
    'gabovedot': 0x2f5,
    'hebrew_zayin': 0xce6,
    'Cyrillic_ie': 0x6c5,
    'Udiaeresis': 0xdc,
    'Cyrillic_io': 0x6a3,
    'Hangul_J_PanSios': 0xef8,
    'hebrew_yod': 0xce9,
    'y': 0x79,
    'Arabic_sukun': 0x5f2,
    'wdiaeresis': 0x1001e85,
    'ISO_First_Group': 0xfe0c,
    'ocircumflexgrave': 0x1001ed3,
    'KP_Down': 0xff99,
    'Ecircumflexhook': 0x1001ec2,
    'ISO_Release_Both_Margins': 0xfe2b,
    'Thai_loling': 0xdc5,
    'braille_dots_278': 0x10028c2,
    'braille_dots_1278': 0x10028c3,
    'KP_Decimal': 0xffae,
    'acute': 0xb4,
    'kana_TSU': 0x4c2,
    'braille_dots_23467': 0x100286e,
    'Acircumflexgrave': 0x1001ea6,
    '3270_Jump': 0xfd12,
    'd': 0x64,
    'Scircumflex': 0x2de,
    'ssharp': 0xdf,
    'OE': 0x13bc,
    'ocircumflexacute': 0x1001ed1,
    'Find': 0xff68,
    'braille_dots_67': 0x1002860,
    'twosubscript': 0x1002082,
    'braille_dots_68': 0x10028a0,
    'Arabic_seen': 0x5d3,
    'Thai_lakkhangyao': 0xde5,
    'Igrave': 0xcc,
    'jcircumflex': 0x2bc,
    'hebrew_ayin': 0xcf2,
    'Thai_moma': 0xdc1,
    'Cyrillic_dzhe': 0x6af,
    'Armenian_accent': 0x100055b,
    'Arabic_zain': 0x5d2,
    'braille_dots_1245678': 0x10028fb,
    'Lcedilla': 0x3a6,
    'ellipsis': 0xaae,
    'Georgian_we': 0x10010f3,
    'O': 0x4f,
    'Uhorn': 0x10001af,
    'botleftparens': 0x8ac,
    'abrevegrave': 0x1001eb1,
    'Thai_maihanakat_maitho': 0xdde,
    'caron': 0x1b7,
    'singlelowquotemark': 0xafd,
    'Abelowdot': 0x1001ea0,
    'fivesixths': 0xab7,
    'dead_stroke': 0xfe63,
    'threesuperior': 0xb3,
    'Arabic_qaf': 0x5e2,
    'sevensubscript': 0x1002087,
    'braille_dots_3578': 0x10028d4,
    'integral': 0x8bf,
    'Overlay2_Enable': 0xfe79,
    'fourfifths': 0xab5,
    'KP_Equal': 0xffbd,
    'Abrevebelowdot': 0x1001eb6,
    'braille_dots_4578': 0x10028d8,
    'question': 0x3f,
    'hebrew_bet': 0xce1,
    'Arabic_peh': 0x100067e,
    'Last_Virtual_Screen': 0xfed4,
    'hebrew_nun': 0xcf0,
    'rightshoe': 0xbd8,
    'ecircumflexhook': 0x1001ec3,
    'registered': 0xae,
    'Pointer_DfltBtnNext': 0xfefb,
    'Georgian_en': 0x10010d4,
    'Hangul_OE': 0xeca,
    'Armenian_YECH': 0x1000535,
    'Ohornacute': 0x1001eda,
    'Ograve': 0xd2,
    'Hangul_RieulHieuh': 0xeb0,
    'kana_SA': 0x4bb,
    'Pointer_Left': 0xfee0,
    'Arabic_waw': 0x5e8,
    'Armenian_VEV': 0x100054e,
    'braille_dots_456': 0x1002838,
    'z': 0x7a,
    'ISO_Release_Margin_Right': 0xfe2a,
    'braille_dots_12567': 0x1002873,
    'Armenian_amanak': 0x100055c,
    'braille_dots_12568': 0x10028b3,
    'Page_Up': 0xff55,
    'braille_dots_12367': 0x1002867,
    'KP_Subtract': 0xffad,
    'Arabic_lam': 0x5e4,
    'braille_dots_12368': 0x10028a7,
    'emfilledrect': 0xadf,
    'Macedonia_gje': 0x6a2,
    'Hangul_J_Tieut': 0xeec,
    'kcedilla': 0x3f3,
    'ninesuperior': 0x1002079,
    'Armenian_ayb': 0x1000561,
    'kana_ME': 0x4d2,
    'Greek_OMEGAaccent': 0x7ab,
    'AE': 0xc6,
    'leftpointer': 0xaea,
    'braille_dots_1456': 0x1002839,
    'braille_dots_1457': 0x1002859,
    'botintegral': 0x8a5,
    'aacute': 0xe1,
    'abrevehook': 0x1001eb3,
    'Armenian_full_stop': 0x1000589,
    'wcircumflex': 0x1000175,
    'implies': 0x8ce,
    'Thai_chochang': 0xdaa,
    'Greek_RHO': 0x7d1,
    'overline': 0x47e,
    'Babovedot': 0x1001e02,
    'acircumflexacute': 0x1001ea5,
    'Caps_Lock': 0xffe5,
    'PesetaSign': 0x10020a7,
    'Thai_leksong': 0xdf2,
    'Arabic_superscript_alef': 0x1000670,
    'rightcaret': 0xba6,
    'Greek_omega': 0x7f9,
    'dead_belowring': 0xfe67,
    'Greek_PHI': 0x7d6,
    'Armenian_RE': 0x1000550,
    'Armenian_RA': 0x100054c,
    'masculine': 0xba,
    'Cyrillic_de': 0x6c4,
    'rightmiddlecurlybrace': 0x8b0,
    'braille_dots_23458': 0x100289e,
    'Thai_totao': 0xdb5,
    'femalesymbol': 0xaf8,
    'P': 0x50,
    'underscore': 0x5f,
    'Cyrillic_ghe': 0x6c7,
    'Hangul_J_NieunHieuh': 0xed9,
    'KP_Multiply': 0xffaa,
    'F7': 0xffc4,
    'Ibreve': 0x100012c,
    'Uogonek': 0x3d9,
    'udiaeresis': 0xfc,
    'Select': 0xff60,
    'Thai_leksun': 0xdf0,
    'First_Virtual_Screen': 0xfed0,
    'Thai_phosamphao': 0xdc0,
    'F24': 0xffd5,
    'braille_dots_2348': 0x100288e,
    'Macedonia_KJE': 0x6bc,
    'braille_dots_2345': 0x100281e,
    'braille_dots_2347': 0x100284e,
    'Armenian_TCHE': 0x1000543,
    'Eabovedot': 0x3cc,
    'KP_Home': 0xff95,
    'diaeresis': 0xa8,
    'RupeeSign': 0x10020a8,
    'Armenian_da': 0x1000564,
    'prolongedsound': 0x4b0,
    'degree': 0xb0,
    'Georgian_phar': 0x10010e4,
    'Hyper_L': 0xffed,
    'kana_MU': 0x4d1,
    'Armenian_question': 0x100055e,
    'Prior': 0xff55,
    'Hangul_J_Hieuh': 0xeee,
    'copyright': 0xa9,
    'braille_dots_2567': 0x1002872,
    'Georgian_ghan': 0x10010e6,
    'Thai_wowaen': 0xdc7,
    'Ocircumflexbelowdot': 0x1001ed8,
    'Arabic_hamzaonwaw': 0x5c4,
    'KP_Prior': 0xff9a,
    'Greek_ETAaccent': 0x7a3,
    'dcaron': 0x1ef,
    'Ibelowdot': 0x1001eca,
    'Arabic_tatweel': 0x5e0,
    'braille_dots_3568': 0x10028b4,
    'braille_dots_3567': 0x1002874,
    'Hangul_YAE': 0xec2,
    'Armenian_vo': 0x1000578,
    'bracketleft': 0x5b,
    '3270_Record': 0xfd18,
    'filledtribulletup': 0xae8,
    'Ebelowdot': 0x1001eb8,
    'F1': 0xffbe,
    'F2': 0xffbf,
    'F3': 0xffc0,
    'F4': 0xffc1,
    'F5': 0xffc2,
    'F6': 0xffc3,
    'f': 0x66,
    'F8': 0xffc5,
    'F9': 0xffc6,
    'Ukrainian_ie': 0x6a4,
    'rightpointer': 0xaeb,
    'Eogonek': 0x1ca,
    'Hangul_Romaja': 0xff36,
    'Hangul_Pieub': 0xeb2,
    'Hangul_Hieuh': 0xebe,
    'overbar': 0xbc0,
    'Hangul_Rieul': 0xea9,
    'Hangul_SsangSios': 0xeb6,
    'hebrew_samech': 0xcf1,
    'trademarkincircle': 0xacb,
    'Serbian_DJE': 0x6b1,
    'eabovedot': 0x3ec,
    'Ahook': 0x1001ea2,
    'umacron': 0x3fe,
    'Byelorussian_shortu': 0x6ae,
    'Q': 0x51,
    'em3space': 0xaa3,
    'Armenian_INI': 0x100053b,
    'braille_dots_78': 0x10028c0,
    'Cyrillic_CHE_descender': 0x10004b6,
    'ahook': 0x1001ea3,
    'kra': 0x3a2,
    'Greek_IOTAaccent': 0x7a4,
    'Zstroke': 0x10001b5,
    'ecircumflexgrave': 0x1001ec1,
    'braille_dots_158': 0x1002891,
    'Thai_fofan': 0xdbf,
    'comma': 0x2c,
    'hebrew_waw': 0xce5,
    'X': 0x58,
    'Ybelowdot': 0x1001ef4,
    'Cyrillic_SHHA': 0x10004ba,
    'lf': 0x9e5,
    'ISO_Set_Margin_Left': 0xfe27,
    'Eisu_Shift': 0xff2f,
    'onesixth': 0xab6,
    'Hangul_Sios': 0xeb5,
    'Armenian_AT': 0x1000538,
    'Hangul_SingleCandidate': 0xff3c,
    'Execute': 0xff62,
    'Armenian_ZHE': 0x100053a,
    'greater': 0x3e,
    'uacute': 0xfa,
    'Ehook': 0x1001eba,
    'musicalsharp': 0xaf5,
    'Thai_thophuthao': 0xdb2,
    'Hangul_J_Rieul': 0xedb,
    'cedilla': 0xb8,
    'Hangul_SsangDikeud': 0xea8,
    'Armenian_PYUR': 0x1000553,
    'dead_breve': 0xfe55,
    'braille_dots_368': 0x10028a4,
    '3270_EraseInput': 0xfd07,
    'exclamdown': 0xa1,
    'Hangul_Cieuc': 0xeba,
    'Armenian_ligature_ew': 0x1000587,
    'braille_dots_134568': 0x10028bd,
    'endash': 0xaaa,
    'notidentical': 0x1002262,
    'Gcedilla': 0x3ab,
    'Thai_khokhuat': 0xda3,
    'braille_dots_134567': 0x100287d,
    'Next': 0xff56,
    'Iabovedot': 0x2a9,
    'agrave': 0xe0,
    'Thai_saraa': 0xdd0,
    'Print': 0xff61,
    'WonSign': 0x10020a9,
    'Ocircumflextilde': 0x1001ed6,
    'Cyrillic_u_straight_bar': 0x10004b1,
    'Georgian_par': 0x10010de,
    'braille_dots_24578': 0x10028da,
    'Ecaron': 0x1cc,
    'Lcaron': 0x1a5,
    'kana_switch': 0xff7e,
    'Cyrillic_ZHE': 0x6f6,
    'Greek_ETA': 0x7c7,
    'braille_dots_2358': 0x1002896,
    'Armenian_HI': 0x1000545,
    'x': 0x78,
    'braille_dots_2356': 0x1002836,
    'script_switch': 0xff7e,
    'ISO_Partial_Line_Up': 0xfe23,
    'openrectbullet': 0xae2,
    'Cyrillic_es': 0x6d3,
    'g': 0x67,
    'Arabic_question_mark': 0x5bf,
    'uhorn': 0x10001b0,
    'Cyrillic_ef': 0x6c6,
    'odoubleacute': 0x1f5,
    'signaturemark': 0xaca,
    'Cyrillic_el': 0x6cc,
    'Cyrillic_em': 0x6cd,
    'Pause': 0xff13,
    'Armenian_tyun': 0x100057f,
    'Armenian_HO': 0x1000540,
    'braille_dot_3': 0xfff3,
    'downcaret': 0xba8,
    'Hangul_NieunJieuj': 0xea5,
    'Meta_L': 0xffe7,
    'Georgian_char': 0x10010ed,
    'Thai_lochula': 0xdcc,
    'hebrew_pe': 0xcf4,
    'obelowdot': 0x1001ecd,
    'Meta_R': 0xffe8,
    'Ukranian_je': 0x6a4,
    'maltesecross': 0xaf0,
    'Georgian_un': 0x10010e3,
    'Arabic_yeh': 0x5ea,
    'Cyrillic_EN_descender': 0x10004a2,
    'braille_dots_2578': 0x10028d2,
    'Arabic_teh': 0x5ca,
    'Cyrillic_O_bar': 0x10004e8,
    'braille_dots_23578': 0x10028d6,
    'hebrew_finalpe': 0xcf3,
    'R': 0x52,
    'braille_dots_126': 0x1002823,
    'Sys_Req': 0xff15,
    '3270_Quit': 0xfd09,
    'dead_small_schwa': 0xfe8a,
    'braille_dots_48': 0x1002888,
    'braille_dots_46': 0x1002828,
    'stricteq': 0x1002263,
    'sixsuperior': 0x1002076,
    'Ccedilla': 0xc7,
    'Redo': 0xff66,
    'Greek_THETA': 0x7c8,
    'Cyrillic_U_straight_bar': 0x10004b0,
    'rightmiddlesummation': 0x8b7,
    'Armenian_DZA': 0x1000541,
    'Armenian_TSA': 0x100053e,
    'braille_dots_4567': 0x1002878,
    'NewSheqelSign': 0x10020aa,
    'kana_YO': 0x4d6,
    'braille_dots_13568': 0x10028b5,
    'itilde': 0x3b5,
    'kana_YU': 0x4d5,
    'kana_KU': 0x4b8,
    'braille_dots_478': 0x10028c8,
    'kana_KE': 0x4b9,
    'kana_KA': 0x4b6,
    'kana_KO': 0x4ba,
    'braille_dots_2568': 0x10028b2,
    'kana_KI': 0x4b7,
    'eightsubscript': 0x1002088,
    'Hangul_SsangKiyeog': 0xea2,
    'Arabic_heh': 0x5e7,
    '3270_Play': 0xfd16,
    'Arabic_dad': 0x5d6,
    'opentribulletup': 0xae3,
    'Dabovedot': 0x1001e0a,
    'Arabic_dal': 0x5cf,
    'Greek_LAMBDA': 0x7cb,
    'Arabic_tteh': 0x1000679,
    'Gcircumflex': 0x2d8,
    'braille_dots_1234678': 0x10028ef,
    'uptack': 0xbce,
    'ccedilla': 0xe7,
    'Greek_upsilon': 0x7f5,
    'Armenian_CHA': 0x1000549,
    'Georgian_xan': 0x10010ee,
    'Undo': 0xff65,
    'Thai_yoyak': 0xdc2,
    'Arabic_hamzaunderalef': 0x5c5,
    'Multi_key': 0xff20,
    'Zacute': 0x1ac,
    'topleftsummation': 0x8b1,
    'Arabic_tcheh': 0x1000686,
    'Cyrillic_tse': 0x6c3,
    'Ncaron': 0x1d2,
    'Arabic_theh': 0x5cb,
    'Serbian_nje': 0x6aa,
    'h': 0x68,
    'Armenian_gim': 0x1000563,
    'Hangul_WA': 0xec8,
    'Georgian_cil': 0x10010ec,
    'Serbian_lje': 0x6a9,
    '3270_CursorBlink': 0xfd0f,
    'Cyrillic_ZHE_descender': 0x1000496,
    'dead_iota': 0xfe5d,
    'Armenian_to': 0x1000569,
    'schwa': 0x1000259,
    'ooblique': 0xf8,
    'Arabic_gaf': 0x10006af,
    'braille_dots_235678': 0x10028f6,
    'oneeighth': 0xac3,
    'macron': 0xaf,
    'Cyrillic_be': 0x6c2,
    'Abreveacute': 0x1001eae,
    'sacute': 0x1b6,
    'braille_dots_234678': 0x10028ee,
    'jot': 0xbca,
    'Arabic_maddaonalef': 0x5c2,
    'braille_dots_134578': 0x10028dd,
    'botvertsummationconnector': 0x8b4,
    '3270_PrintScreen': 0xfd1d,
    'S': 0x53,
    'exclam': 0x21,
    'ISO_Left_Tab': 0xfe20,
    'nabla': 0x8c5,
    'equal': 0x3d,
    'ISO_Enter': 0xfe34,
    'kana_tsu': 0x4af,
    'malesymbol': 0xaf7,
    'eth': 0xf0,
    'Racute': 0x1c0,
    'Pointer_UpLeft': 0xfee4,
    'hyphen': 0xad,
    'Thai_hohip': 0xdcb,
    'ncedilla': 0x3f1,
    'zacute': 0x1bc,
    'MillSign': 0x10020a5,
    'braille_dots_2368': 0x10028a6,
    'dead_abovedot': 0xfe56,
    'cr': 0x9e4,
    'doublelowquotemark': 0xafe,
    'Greek_CHI': 0x7d7,
    'Armenian_ben': 0x1000562,
    'braille_dots_123568': 0x10028b7,
    'braille_dots_123567': 0x1002877,
    'trademark': 0xac9,
    'Aacute': 0xc1,
    'cent': 0xa2,
    'Armenian_fe': 0x1000586,
    'ohornbelowdot': 0x1001ee3,
    'Hangul_KkogjiDalrinIeung': 0xef3,
    'leftcaret': 0xba3,
    'Armenian_TO': 0x1000539,
    'Hangul_J_Ieung': 0xee8,
    'topleftsqbracket': 0x8a7,
    'KP_0': 0xffb0,
    'KP_1': 0xffb1,
    'KP_2': 0xffb2,
    'KP_3': 0xffb3,
    'KP_4': 0xffb4,
    'KP_5': 0xffb5,
    'KP_6': 0xffb6,
    'KP_7': 0xffb7,
    'KP_8': 0xffb8,
    'Cyrillic_zhe_descender': 0x1000497,
    'Cyrillic_pe': 0x6d0,
    'Ukranian_yi': 0x6a7,
    'Oacute': 0xd3,
    'KP_Left': 0xff96,
    'Greek_EPSILONaccent': 0x7a2,
    'threeeighths': 0xac4,
    'cursor': 0xaff,
    'hebrew_zade': 0xcf6,
    'Ukrainian_YI': 0x6b7,
    'hebrew_zadi': 0xcf6,
    'braille_dots_23567': 0x1002876,
    'kana_HU': 0x4cc,
    'Thai_fofa': 0xdbd,
    'Pointer_Down': 0xfee3,
    'braille_dots_23568': 0x10028b6,
    'ifonlyif': 0x8cd,
    'doubledagger': 0xaf2,
    'kana_HA': 0x4ca,
    'braille_dots_124': 0x100280b,
    'vt': 0x9e9,
    'kana_HI': 0x4cb,
    'odiaeresis': 0xf6,
    'kana_HO': 0x4ce,
    'Return': 0xff0d,
    'Cyrillic_u_straight': 0x10004af,
    'Georgian_zhar': 0x10010df,
    'Arabic_switch': 0xff7e,
    'braille_dots_38': 0x1002884,
    'Georgian_khar': 0x10010e5,
    'braille_dots_37': 0x1002844,
    'braille_dots_36': 0x1002824,
    'braille_dots_35': 0x1002814,
    'Arabic_ain': 0x5d9,
    'Pointer_Drag_Dflt': 0xfef4,
    'infinity': 0x8c2,
    'Greek_psi': 0x7f8,
    'Cyrillic_che': 0x6de,
    'botrightsqbracket': 0x8aa,
    'quad': 0xbcc,
    'dead_hook': 0xfe61,
    'KP_Right': 0xff98,
    'braille_dots_14678': 0x10028e9,
    'Armenian_ho': 0x1000570,
    'Armenian_vev': 0x100057e,
    'abreveacute': 0x1001eaf,
    'emdash': 0xaa9,
    'braille_dots_34578': 0x10028dc,
    'i': 0x69,
    'Greek_PI': 0x7d0,
    'braille_dots_13578': 0x10028d5,
    'Arabic_hamzaonyeh': 0x5c6,
    'Hangul_NieunHieuh': 0xea6,
    '3270_KeyClick': 0xfd11,
    'rightdoublequotemark': 0xad3,
    'acircumflexgrave': 0x1001ea7,
    'Thai_khokhai': 0xda2,
    'less': 0x3c,
    '3270_Attn': 0xfd0e,
    'Greek_epsilonaccent': 0x7b2,
    'Greek_epsilon': 0x7e5,
    'Armenian_yech': 0x1000565,
    'Arabic_fathatan': 0x5eb,
    'braille_dots_56': 0x1002830,
    'braille_dots_1': 0x1002801,
    'Thai_saraaimaimalai': 0xde4,
    'braille_dots_2': 0x1002802,
    'braille_dots_5': 0x1002810,
    'Zcaron': 0x1ae,
    'braille_dots_7': 0x1002840,
    'Georgian_he': 0x10010f1,
    'Greek_accentdieresis': 0x7ae,
    'Zenkaku_Hankaku': 0xff2a,
    'braille_dots_267': 0x1002862,
    'braille_dots_268': 0x10028a2,
    'Greek_TAU': 0x7d4,
    'identical': 0x8cf,
    'enspace': 0xaa2,
    'dead_belowtilde': 0xfe6a,
    'Tcedilla': 0x1de,
    'T': 0x54,
    'Macedonia_GJE': 0x6b2,
    'Hangul_J_RieulHieuh': 0xee2,
    'braille_dots_58': 0x1002890,
    'intersection': 0x8dc,
    'ecaron': 0x1ec,
    'Armenian_za': 0x1000566,
    'fivesubscript': 0x1002085,
    'Xabovedot': 0x1001e8a,
    'parenright': 0x29,
    'dead_voiced_sound': 0xfe5e,
    'because': 0x1002235,
    'eightsuperior': 0x1002078,
    'udoubleacute': 0x1fb,
    'toprightsummation': 0x8b5,
    'braille_dots_678': 0x10028e0,
    'Arabic_keheh': 0x10006a9,
    'Tslash': 0x3ac,
    'Armenian_TSO': 0x1000551,
    'R14': 0xffdf,
    'R15': 0xffe0,
    'R12': 0xffdd,
    'R13': 0xffde,
    'R10': 0xffdb,
    'R11': 0xffdc,
    'utilde': 0x3fd,
    'cabovedot': 0x2e5,
    'Thai_saraii': 0xdd5,
    'topleftparens': 0x8ab,
    'dead_belowbreve': 0xfe6b,
    'Kanji': 0xff21,
    'Up': 0xff52,
    'Hyper_R': 0xffee,
    '3270_DeleteWord': 0xfd1a,
    'Greek_UPSILONdieresis': 0x7a9,
    'filledtribulletdown': 0xae9,
    'Cyrillic_GHE': 0x6e7,
    'Thai_maichattawa': 0xdeb,
    'Obarred': 0x100019f,
    'Greek_iota': 0x7e9,
    'hebrew_kuf': 0xcf7,
    'Armenian_vyun': 0x1000582,
    'Thai_sarau': 0xdd8,
    'Thai_sarai': 0xdd4,
    'Thai_sarao': 0xde2,
    'decimalpoint': 0xabd,
    'Thai_sarae': 0xde0,
    'braille_dots_5678': 0x10028f0,
    'pabovedot': 0x1001e57,
    'braille_dots_25678': 0x10028f2,
    'Cyrillic_sha': 0x6db,
    'yhook': 0x1001ef7,
    'braille_dots_345': 0x100281c,
    'function': 0x8f6,
    'upcaret': 0xba9,
    'ISO_Group_Lock': 0xfe07,
    'ht': 0x9e2,
    'Ukranian_i': 0x6a6,
    'ISO_Center_Object': 0xfe33,
    'braille_dots_124578': 0x10028db,
    'Armenian_AYB': 0x1000531,
    'kana_conjunctive': 0x4a5,
    'Armenian_SE': 0x100054d,
    'Hangul_Jamo': 0xff35,
    'iogonek': 0x3e7,
    'j': 0x6a,
    'Ukranian_I': 0x6b6,
    'braille_dots_123578': 0x10028d7,
    'minutes': 0xad6,
    'Thai_choching': 0xda9,
    'ycircumflex': 0x1000177,
    'Cyrillic_LJE': 0x6b9,
    'Thai_khokhwai': 0xda4,
    'Arabic_ghain': 0x5da,
    'hebrew_resh': 0xcf8,
    'braille_dots_2378': 0x10028c6,
    'Hangul_WI': 0xecf,
    'percent': 0x25,
    'Cyrillic_o_bar': 0x10004e9,
    'ibreve': 0x100012d,
    'Armenian_apostrophe': 0x100055a,
    'Georgian_nar': 0x10010dc,
    'ubreve': 0x2fd,
    'bracketright': 0x5d,
    'ISO_Prev_Group': 0xfe0a,
    'Armenian_TYUN': 0x100054f,
    'Imacron': 0x3cf,
    'ecircumflexacute': 0x1001ebf,
    'scedilla': 0x1ba,
    'variation': 0x8c1,
    'U': 0x55,
    'Georgian_rae': 0x10010e0,
    'dead_horn': 0xfe62,
    'Hangul_J_Cieuc': 0xeea,
    'Nacute': 0x1d1,
    'ISO_Move_Line_Down': 0xfe22,
    'digitspace': 0xaa5,
    'braille_dots_28': 0x1002882,
    'braille_dots_23': 0x1002806,
    'braille_dots_24': 0x100280a,
    'braille_dots_25': 0x1002812,
    'braille_dots_26': 0x1002822,
    'ytilde': 0x1001ef9,
}
* Sat 04 Oct 2014 11:59:05 PM JST
    
* Sat 04 Oct 2014 11:59:12 PM JST
    
* Sun 05 Oct 2014 12:05:36 AM JST
0x4bb: 'kana_SA',
0x20: 'space',
0x22: 'quotedbl',
0x23: 'numbersign',
0x24: 'dollar',
0x26: 'ampersand',
0x27: 'apostrophe',
0x28: 'parenleft',
0x29: 'parenright',
0x2a: 'asterisk',
0x2b: 'plus',
0x2c: 'comma',
0x2d: 'minus',
0x2f: 'slash',
0x30: '0',
0x31: '1',
0x32: '2',
0x34: '4',
0x35: '5',
0x36: '6',
0x37: '7',
0x38: '8',
0x3a: 'colon',
0x3b: 'semicolon',
0x3c: 'less',
0x3d: 'equal',
0x3e: 'greater',
0x3f: 'question',
0x41: 'A',
0x43: 'C',
0x44: 'D',
0x45: 'E',
0x46: 'F',
0x47: 'G',
0x48: 'H',
0x49: 'I',
0x4a: 'J',
0x4b: 'K',
0x4c: 'L',
0x4d: 'M',
0x4f: 'O',
0x50: 'P',
0xab8: 'careof',
0x52: 'R',
0x53: 'S',
0x54: 'T',
0x55: 'U',
0x57: 'W',
0x58: 'X',
0x59: 'Y',
0x5a: 'Z',
0x5b: 'bracketleft',
0x5c: 'backslash',
0x5d: 'bracketright',
0x5e: 'asciicircum',
0x5f: 'underscore',
0x61: 'a',
0x63: 'c',
0x64: 'd',
0x65: 'e',
0x67: 'g',
0x68: 'h',
0x69: 'i',
0x6a: 'j',
0x6b: 'k',
0x6e: 'n',
0x6f: 'o',
0x73: 's',
0x1002075: 'fivesuperior',
0x76: 'v',
0x1002077: 'sevensuperior',
0x79: 'y',
0x7a: 'z',
0x7c: 'bar',
0x1002080: 'zerosubscript',
0x1002081: 'onesubscript',
0x1002082: 'twosubscript',
0x1002083: 'threesubscript',
0x1002084: 'foursubscript',
0x1002085: 'fivesubscript',
0x1001eeb: 'uhorngrave',
0x1002089: 'ninesubscript',
0x100056f: 'Armenian_ken',
0xa0: 'nobreakspace',
0x10020a1: 'ColonSign',
0x10020a3: 'FFrancSign',
0xa4: 'currency',
0x10020a6: 'NairaSign',
0xa7: 'section',
0xa8: 'diaeresis',
0xa9: 'copyright',
0xaa: 'ordfeminine',
0x10020ab: 'DongSign',
0xac: 'notsign',
0xad: 'hyphen',
0xaf: 'macron',
0xb0: 'degree',
0xb1: 'plusminus',
0xb2: 'twosuperior',
0xb3: 'threesuperior',
0xb5: 'mu',
0xb6: 'paragraph',
0xb8: 'cedilla',
0xb9: 'onesuperior',
0xba: 'masculine',
0xbb: 'guillemotright',
0xbc: 'onequarter',
0xaca: 'signaturemark',
0xbe: 'threequarters',
0xbf: 'questiondown',
0xc0: 'Agrave',
0xc1: 'Aacute',
0xc2: 'Acircumflex',
0xc3: 'Atilde',
0xc4: 'Adiaeresis',
0xc5: 'Aring',
0xc8: 'Egrave',
0xcb: 'Ediaeresis',
0xcc: 'Igrave',
0xcd: 'Iacute',
0xce: 'Icircumflex',
0xd0: 'Eth',
0xd3: 'Oacute',
0xd4: 'Ocircumflex',
0xd5: 'Otilde',
0xd7: 'multiply',
0xef2: 'Hangul_PanSios',
0xda: 'Uacute',
0xdb: 'Ucircumflex',
0xdc: 'Udiaeresis',
0xdd: 'Yacute',
0xde: 'Thorn',
0xdf: 'ssharp',
0xe0: 'agrave',
0xe1: 'aacute',
0xe2: 'acircumflex',
0xe3: 'atilde',
0xe4: 'adiaeresis',
0xe5: 'aring',
0xe6: 'ae',
0xe7: 'ccedilla',
0xe8: 'egrave',
0xeb: 'ediaeresis',
0xef: 'idiaeresis',
0xf0: 'eth',
0xf1: 'ntilde',
0xf3: 'oacute',
0xf4: 'ocircumflex',
0xf5: 'otilde',
0xf7: 'division',
0xf8: 'ooblique',
0xfa: 'uacute',
0xfc: 'udiaeresis',
0xfd: 'yacute',
0xfe: 'thorn',
0xff: 'ydiaeresis',
0x2e: 'period',
0xad9: 'latincross',
0xadc: 'filledlefttribullet',
0x100012c: 'Ibreve',
0xadd: 'filledrighttribullet',
0x33: '3',
0xab2: 'onefifth',
0x7ae: 'Greek_accentdieresis',
0xae1: 'enopensquarebullet',
0xab3: 'twofifths',
0x8bf: 'integral',
0x6d4: 'Cyrillic_te',
0xae7: 'enfilledsqbullet',
0xab4: 'threefifths',
0x1000174: 'Wcircumflex',
0x1000175: 'wcircumflex',
0x1000177: 'ycircumflex',
0x39: '9',
0x42: 'B',
0x1001ef4: 'Ybelowdot',
0x10001a1: 'ohorn',
0x1a2: 'breve',
0x1a5: 'Lcaron',
0x1a6: 'Sacute',
0x1a9: 'Scaron',
0x1aa: 'Scedilla',
0x1ab: 'Tcaron',
0x1ae: 'Zcaron',
0x1af: 'Zabovedot',
0x10001b0: 'uhorn',
0x1b1: 'aogonek',
0x1b2: 'ogonek',
0x1b3: 'lstroke',
0x1b5: 'lcaron',
0x10001b6: 'zstroke',
0x1b7: 'caron',
0x1b9: 'scaron',
0x1ba: 'scedilla',
0x1bb: 'tcaron',
0x1bc: 'zacute',
0x1bd: 'doubleacute',
0x1be: 'zcaron',
0x1bf: 'zabovedot',
0x1c3: 'Abreve',
0x1c5: 'Lacute',
0x1c6: 'Cacute',
0x1c8: 'Ccaron',
0xfee4: 'Pointer_UpLeft',
0x1ca: 'Eogonek',
0x1cc: 'Ecaron',
0xab7: 'fivesixths',
0x1cf: 'Dcaron',
0x1d0: 'Dstroke',
0x1d8: 'Rcaron',
0x1d9: 'Uring',
0x1db: 'Udoubleacute',
0x1e0: 'racute',
0x1e3: 'abreve',
0x1e8: 'ccaron',
0x1000564: 'Armenian_da',
0x1ea: 'eogonek',
0x1ec: 'ecaron',
0x1f0: 'dstroke',
0x1f1: 'nacute',
0x1f2: 'ncaron',
0x1f5: 'odoubleacute',
0x1f8: 'rcaron',
0x1f9: 'uring',
0xaff: 'cursor',
0x1fe: 'tcedilla',
0x1002202: 'partdifferential',
0x56: 'V',
0x1000565: 'Armenian_yech',
0x100220b: 'containsas',
0xbca: 'jot',
0xffff: 'Delete',
0x100221c: 'fourthroot',
0x100222c: 'dintegral',
0x1002235: 'because',
0x60: 'quoteleft',
0x1002247: 'notapproxeq',
0x1002248: 'approxeq',
0x62: 'b',
0x1000259: 'schwa',
0x1002262: 'notidentical',
0x1002263: 'stricteq',
0x66: 'f',
0x1000275: 'obarred',
0x5bf: 'Arabic_question_mark',
0x5c2: 'Arabic_maddaonalef',
0x6d: 'm',
0x100056a: 'Armenian_zhe',
0x2a1: 'Hstroke',
0x2a6: 'Hcircumflex',
0x71: 'q',
0x2ab: 'Gbreve',
0x2ac: 'Jcircumflex',
0x72: 'r',
0x2b6: 'hcircumflex',
0x5c9: 'Arabic_tehmarbuta',
0x2b9: 'idotless',
0x100056b: 'Armenian_ini',
0x2c5: 'Cabovedot',
0x2c6: 'Ccircumflex',
0x5cc: 'Arabic_jeem',
0x78: 'x',
0x2d5: 'Gabovedot',
0x1002079: 'ninesuperior',
0x2dd: 'Ubreve',
0x2de: 'Scircumflex',
0x7b: 'braceleft',
0x2e5: 'cabovedot',
0x2e6: 'ccircumflex',
0xaf5: 'musicalsharp',
0x7d: 'braceright',
0x7e: 'asciitilde',
0x2f8: 'gcircumflex',
0x2fd: 'ubreve',
0x5d7: 'Arabic_tah',
0x1002086: 'sixsubscript',
0x1002087: 'sevensubscript',
0x1002088: 'eightsubscript',
0x5e2: 'Arabic_qaf',
0x5e3: 'Arabic_kaf',
0x1000571: 'Armenian_dza',
0x5ed: 'Arabic_kasratan',
0xac6: 'seveneighths',
0x5ee: 'Arabic_fatha',
0x3a3: 'Rcedilla',
0x3a5: 'Itilde',
0x3a6: 'Lcedilla',
0x3aa: 'Emacron',
0x3ac: 'Tslash',
0x3b3: 'rcedilla',
0xbd8: 'rightshoe',
0x3b5: 'itilde',
0x3b6: 'lcedilla',
0x3ba: 'emacron',
0x3bb: 'gcedilla',
0x3bc: 'tslash',
0x3bf: 'eng',
0x10020a0: 'EcuSign',
0x3c7: 'Iogonek',
0x3cc: 'Eabovedot',
0x10020a2: 'CruzeiroSign',
0x3cf: 'Imacron',
0x3d1: 'Ncedilla',
0x3d3: 'Kcedilla',
0x10020a4: 'LiraSign',
0x3dd: 'Utilde',
0xa5: 'yen',
0x3e0: 'amacron',
0xa6: 'brokenbar',
0x3e7: 'iogonek',
0x10020a8: 'RupeeSign',
0x3f2: 'omacron',
0x3f3: 'kcedilla',
0x10020a9: 'WonSign',
0x3f9: 'uogonek',
0x10020aa: 'NewSheqelSign',
0x3fe: 'umacron',
0x20ac: 'EuroSign',
0x74: 't',
0x1002070: 'zerosuperior',
0x10028a2: 'braille_dots_268',
0xbd: 'onehalf',
0x47e: 'overline',
0x10028a4: 'braille_dots_368',
0x1000492: 'Cyrillic_GHE_bar',
0x1000493: 'Cyrillic_ghe_bar',
0x1000497: 'Cyrillic_zhe_descender',
0x100049a: 'Cyrillic_KA_descender',
0x100049b: 'Cyrillic_ka_descender',
0x100049c: 'Cyrillic_KA_vertstroke',
0x100049d: 'Cyrillic_ka_vertstroke',
0x4a1: 'kana_fullstop',
0x4a2: 'kana_openingbracket',
0x10004a3: 'Cyrillic_en_descender',
0x4a4: 'kana_comma',
0xc6: 'AE',
0x4a6: 'kana_WO',
0x4a7: 'kana_a',
0x4a8: 'kana_i',
0x4a9: 'kana_u',
0x4aa: 'kana_e',
0xc7: 'Ccedilla',
0x4ac: 'kana_ya',
0x4ad: 'kana_yu',
0x4af: 'kana_tsu',
0x4b1: 'kana_A',
0x4b2: 'kana_I',
0x10004b3: 'Cyrillic_ha_descender',
0x4b4: 'kana_E',
0x4b5: 'kana_O',
0x10004b6: 'Cyrillic_CHE_descender',
0xc9: 'Eacute',
0x10004b8: 'Cyrillic_CHE_vertstroke',
0x10004b9: 'Cyrillic_che_vertstroke',
0x10004ba: 'Cyrillic_SHHA',
0x4bc: 'kana_SHI',
0x4bd: 'kana_SU',
0x4be: 'kana_SE',
0x4c0: 'kana_TA',
0x4c1: 'kana_TI',
0x4c4: 'kana_TO',
0x4c5: 'kana_NA',
0x4c6: 'kana_NI',
0x4c7: 'kana_NU',
0x4c8: 'kana_NE',
0x4c9: 'kana_NO',
0x4ca: 'kana_HA',
0x4cc: 'kana_HU',
0x4cd: 'kana_HE',
0x4ce: 'kana_HO',
0x4cf: 'kana_MA',
0x4d0: 'kana_MI',
0x4d1: 'kana_MU',
0x4d3: 'kana_MO',
0x4d5: 'kana_YU',
0x4d6: 'kana_YO',
0x4d8: 'kana_RI',
0x4d9: 'kana_RU',
0x4da: 'kana_RE',
0x4dc: 'kana_WA',
0x4dd: 'kana_N',
0x4de: 'voicedsound',
0x4df: 'semivoicedsound',
0x10004e2: 'Cyrillic_I_macron',
0x10004e3: 'Cyrillic_i_macron',
0xd1: 'Ntilde',
0x10004e8: 'Cyrillic_O_bar',
0x10004e9: 'Cyrillic_o_bar',
0x8b0: 'rightmiddlecurlybrace',
0xd2: 'Ograve',
0x10004ee: 'Cyrillic_U_macron',
0x10004ef: 'Cyrillic_u_macron',
0x10010d3: 'Georgian_don',
0xd6: 'Odiaeresis',
0xd8: 'Oslash',
0xd9: 'Ugrave',
0x1000531: 'Armenian_AYB',
0x1000532: 'Armenian_BEN',
0x1000533: 'Armenian_GIM',
0x1000534: 'Armenian_DA',
0x1000539: 'Armenian_TO',
0x100053a: 'Armenian_ZHE',
0x100053b: 'Armenian_INI',
0x100053c: 'Armenian_LYUN',
0x100053d: 'Armenian_KHE',
0x100053e: 'Armenian_TSA',
0x100053f: 'Armenian_KEN',
0x1000542: 'Armenian_GHAT',
0x1000545: 'Armenian_HI',
0x1000547: 'Armenian_SHA',
0x1000548: 'Armenian_VO',
0x1000549: 'Armenian_CHA',
0x100054a: 'Armenian_PE',
0x100054c: 'Armenian_RA',
0x100054e: 'Armenian_VEV',
0x1001e03: 'babovedot',
0x1000551: 'Armenian_TSO',
0x1000552: 'Armenian_VYUN',
0x1000553: 'Armenian_PYUR',
0x1000554: 'Armenian_KE',
0x1000555: 'Armenian_O',
0x1000556: 'Armenian_FE',
0x100055a: 'Armenian_apostrophe',
0x100055b: 'Armenian_accent',
0x100055c: 'Armenian_amanak',
0x100055d: 'Armenian_separation_mark',
0x100055e: 'Armenian_question',
0x1000561: 'Armenian_ayb',
0x1000562: 'Armenian_ben',
0x1000563: 'Armenian_gim',
0x1000566: 'Armenian_za',
0x1000567: 'Armenian_e',
0x1000568: 'Armenian_at',
0x1000569: 'Armenian_to',
0x100056c: 'Armenian_lyun',
0x100056d: 'Armenian_khe',
0x100056e: 'Armenian_tsa',
0x1000570: 'Armenian_ho',
0x1000572: 'Armenian_ghat',
0x1000573: 'Armenian_tche',
0x1000574: 'Armenian_men',
0x1000575: 'Armenian_hi',
0x1000576: 'Armenian_nu',
0x1000577: 'Armenian_sha',
0x1000578: 'Armenian_vo',
0x1000579: 'Armenian_cha',
0x100057a: 'Armenian_pe',
0x100057b: 'Armenian_je',
0x100057c: 'Armenian_ra',
0xea: 'ecircumflex',
0x100057e: 'Armenian_vev',
0x100057f: 'Armenian_tyun',
0x1000580: 'Armenian_re',
0x1000581: 'Armenian_tso',
0x1000582: 'Armenian_vyun',
0x1000583: 'Armenian_pyur',
0x1000584: 'Armenian_ke',
0x1000585: 'Armenian_o',
0x1000586: 'Armenian_fe',
0x100058a: 'Armenian_yentamna',
0xed: 'iacute',
0x40: 'at',
0x5ac: 'Arabic_comma',
0xf2: 'ograve',
0x10010f3: 'Georgian_we',
0x5bb: 'Arabic_semicolon',
0x5c1: 'Arabic_hamza',
0x8fd: 'rightarrow',
0x5c3: 'Arabic_hamzaonalef',
0x5c4: 'Arabic_hamzaonwaw',
0x5c5: 'Arabic_hamzaunderalef',
0x5c6: 'Arabic_hamzaonyeh',
0x5c7: 'Arabic_alef',
0x5c8: 'Arabic_beh',
0x5ca: 'Arabic_teh',
0x5cd: 'Arabic_hah',
0x5ce: 'Arabic_khah',
0x5cf: 'Arabic_dal',
0x5d0: 'Arabic_thal',
0x5d2: 'Arabic_zain',
0x5d3: 'Arabic_seen',
0x5d4: 'Arabic_sheen',
0x5d5: 'Arabic_sad',
0x5d6: 'Arabic_dad',
0x5d8: 'Arabic_zah',
0x5d9: 'Arabic_ain',
0x5da: 'Arabic_ghain',
0x5e0: 'Arabic_tatweel',
0x5e1: 'Arabic_feh',
0xfb: 'ucircumflex',
0x5e4: 'Arabic_lam',
0x5e5: 'Arabic_meem',
0x5e6: 'Arabic_noon',
0x5e7: 'Arabic_ha',
0x5e8: 'Arabic_waw',
0x5e9: 'Arabic_alefmaksura',
0x5ea: 'Arabic_yeh',
0x5eb: 'Arabic_fathatan',
0x5ec: 'Arabic_dammatan',
0x5ef: 'Arabic_damma',
0x1000587: 'Armenian_ligature_ew',
0xfe6b: 'dead_belowbreve',
0x10028b2: 'braille_dots_2568',
0x100054d: 'Armenian_SE',
0x1000589: 'Armenian_full_stop',
0x1000653: 'Arabic_madda_above',
0x1000655: 'Arabic_hamza_below',
0x1000664: 'Arabic_4',
0x1000660: 'Arabic_0',
0x1000661: 'Arabic_1',
0x1000662: 'Arabic_2',
0x1000663: 'Arabic_3',
0x1000665: 'Arabic_5',
0x1000666: 'Arabic_6',
0x1000667: 'Arabic_7',
0x1000668: 'Arabic_8',
0x100066a: 'Arabic_percent',
0x1000670: 'Arabic_superscript_alef',
0x1000669: 'Arabic_9',
0x1000679: 'Arabic_tteh',
0x100067e: 'Arabic_peh',
0x1000686: 'Arabic_tcheh',
0x1000688: 'Arabic_ddal',
0x1000698: 'Arabic_jeh',
0x10028b6: 'braille_dots_23568',
0x6a1: 'Serbian_dje',
0x6a2: 'Macedonia_gje',
0x6a3: 'Cyrillic_io',
0x10006a4: 'Arabic_veh',
0x6a5: 'Macedonia_dse',
0x6a6: 'Ukranian_i',
0x6a7: 'Ukranian_yi',
0x6a8: 'Cyrillic_je',
0x6aa: 'Serbian_nje',
0x6ab: 'Serbian_tshe',
0x6ac: 'Macedonia_kje',
0x6ad: 'Ukrainian_ghe_with_upturn',
0x6ae: 'Byelorussian_shortu',
0x6af: 'Cyrillic_dzhe',
0x6b0: 'numerosign',
0x6b1: 'Serbian_DJE',
0x6b3: 'Cyrillic_IO',
0x6b4: 'Ukranian_JE',
0x6b5: 'Macedonia_DSE',
0x6b6: 'Ukranian_I',
0x6b7: 'Ukrainian_YI',
0x6b8: 'Serbian_JE',
0x6b9: 'Cyrillic_LJE',
0x10006ba: 'Arabic_noon_ghunna',
0x6bb: 'Serbian_TSHE',
0x6bd: 'Ukrainian_GHE_WITH_UPTURN',
0x6be: 'Byelorussian_SHORTU',
0x6bf: 'Serbian_DZE',
0x6c1: 'Cyrillic_a',
0x6c4: 'Cyrillic_de',
0x6c6: 'Cyrillic_ef',
0x6c8: 'Cyrillic_ha',
0x6c9: 'Cyrillic_i',
0x6ca: 'Cyrillic_shorti',
0x10006cc: 'Farsi_yeh',
0x6cf: 'Cyrillic_o',
0x6d0: 'Cyrillic_pe',
0x6d1: 'Cyrillic_ya',
0x10006d2: 'Arabic_yeh_baree',
0x6d3: 'Cyrillic_es',
0x10006d4: 'Arabic_fullstop',
0x6d5: 'Cyrillic_u',
0x6d6: 'Cyrillic_zhe',
0x6d7: 'Cyrillic_ve',
0x6d8: 'Cyrillic_softsign',
0x6d9: 'Cyrillic_yeru',
0x6da: 'Cyrillic_ze',
0x6db: 'Cyrillic_sha',
0x6dc: 'Cyrillic_e',
0x6dd: 'Cyrillic_shcha',
0x6df: 'Cyrillic_hardsign',
0x6e0: 'Cyrillic_YU',
0x6e1: 'Cyrillic_A',
0x6e2: 'Cyrillic_BE',
0x6e4: 'Cyrillic_DE',
0x6e5: 'Cyrillic_IE',
0x6e6: 'Cyrillic_EF',
0x6e7: 'Cyrillic_GHE',
0x6e8: 'Cyrillic_HA',
0x6e9: 'Cyrillic_I',
0x6ea: 'Cyrillic_SHORTI',
0x6eb: 'Cyrillic_KA',
0x6ec: 'Cyrillic_EL',
0x6ed: 'Cyrillic_EM',
0x6ef: 'Cyrillic_O',
0x10006f0: 'Farsi_0',
0x6f1: 'Cyrillic_YA',
0x10006f2: 'Farsi_2',
0x6f5: 'Cyrillic_U',
0x10006f6: 'Farsi_6',
0x6f7: 'Cyrillic_VE',
0x6f8: 'Cyrillic_SOFTSIGN',
0x6f9: 'Cyrillic_YERU',
0x6fa: 'Cyrillic_ZE',
0x6fb: 'Cyrillic_SHA',
0x6fc: 'Cyrillic_E',
0x6fe: 'Cyrillic_CHE',
0x6ff: 'Cyrillic_HARDSIGN',
0x8c2: 'infinity',
0x100012d: 'ibreve',
0xab5: 'fourfifths',
0x8c5: 'nabla',
0x1000691: 'Arabic_rreh',
0xfeea: 'Pointer_Button2',
0x10028bd: 'braille_dots_134568',
0x7a1: 'Greek_ALPHAaccent',
0x7a3: 'Greek_ETAaccent',
0x7a7: 'Greek_OMICRONaccent',
0x7a9: 'Greek_UPSILONdieresis',
0x7ab: 'Greek_OMEGAaccent',
0x7af: 'Greek_horizbar',
0x7b1: 'Greek_alphaaccent',
0x7b2: 'Greek_epsilonaccent',
0x7b3: 'Greek_etaaccent',
0x7b4: 'Greek_iotaaccent',
0x7b5: 'Greek_iotadieresis',
0x7b6: 'Greek_iotaaccentdieresis',
0x7b7: 'Greek_omicronaccent',
0x7b9: 'Greek_upsilondieresis',
0x7ba: 'Greek_upsilonaccentdieresis',
0x7bb: 'Greek_omegaaccent',
0x7c1: 'Greek_ALPHA',
0x7c2: 'Greek_BETA',
0x7c5: 'Greek_EPSILON',
0x7c6: 'Greek_ZETA',
0x7c7: 'Greek_ETA',
0x7c8: 'Greek_THETA',
0x7ca: 'Greek_KAPPA',
0x7cd: 'Greek_NU',
0x7cf: 'Greek_OMICRON',
0x7d0: 'Greek_PI',
0x7d2: 'Greek_SIGMA',
0x7d4: 'Greek_TAU',
0x7d7: 'Greek_CHI',
0x7d8: 'Greek_PSI',
0x7e1: 'Greek_alpha',
0x7e2: 'Greek_beta',
0x7e3: 'Greek_gamma',
0x7e4: 'Greek_delta',
0x7e5: 'Greek_epsilon',
0x7e6: 'Greek_zeta',
0x7e7: 'Greek_eta',
0x7e8: 'Greek_theta',
0x7ea: 'Greek_kappa',
0x7eb: 'Greek_lamda',
0x7ec: 'Greek_mu',
0x7ed: 'Greek_nu',
0x7ee: 'Greek_xi',
0x7ef: 'Greek_omicron',
0x7f0: 'Greek_pi',
0x7f2: 'Greek_sigma',
0x7f4: 'Greek_tau',
0x7f6: 'Greek_phi',
0x6a9: 'Serbian_lje',
0x7f8: 'Greek_psi',
0x1002800: 'braille_blank',
0x1002801: 'braille_dots_1',
0x1002802: 'braille_dots_2',
0x1002803: 'braille_dots_12',
0x1002804: 'braille_dots_3',
0x1002805: 'braille_dots_13',
0x1002806: 'braille_dots_23',
0x1002807: 'braille_dots_123',
0x1002808: 'braille_dots_4',
0x1002809: 'braille_dots_14',
0x100280a: 'braille_dots_24',
0x100280d: 'braille_dots_134',
0x100280e: 'braille_dots_234',
0x100280f: 'braille_dots_1234',
0x1002810: 'braille_dots_5',
0x1002811: 'braille_dots_15',
0x1002812: 'braille_dots_25',
0x1002813: 'braille_dots_125',
0x1002814: 'braille_dots_35',
0x1002815: 'braille_dots_135',
0x1002816: 'braille_dots_235',
0x1002817: 'braille_dots_1235',
0x1002818: 'braille_dots_45',
0x1002819: 'braille_dots_145',
0x100281a: 'braille_dots_245',
0x100281b: 'braille_dots_1245',
0x100281c: 'braille_dots_345',
0x100281d: 'braille_dots_1345',
0x100281e: 'braille_dots_2345',
0x100281f: 'braille_dots_12345',
0x1002820: 'braille_dots_6',
0x1002821: 'braille_dots_16',
0x1002822: 'braille_dots_26',
0xaed: 'diamond',
0x1002824: 'braille_dots_36',
0x1002825: 'braille_dots_136',
0x1002826: 'braille_dots_236',
0x1002827: 'braille_dots_1236',
0x100282a: 'braille_dots_246',
0x100282b: 'braille_dots_1246',
0x100282c: 'braille_dots_346',
0x100282d: 'braille_dots_1346',
0x100282e: 'braille_dots_2346',
0x100282f: 'braille_dots_12346',
0x1002832: 'braille_dots_256',
0x1002834: 'braille_dots_356',
0x1002835: 'braille_dots_1356',
0x1002837: 'braille_dots_12356',
0x1002839: 'braille_dots_1456',
0x100283a: 'braille_dots_2456',
0x100283b: 'braille_dots_12456',
0x100283c: 'braille_dots_3456',
0x100283f: 'braille_dots_123456',
0x1002842: 'braille_dots_27',
0x1002843: 'braille_dots_127',
0x1002845: 'braille_dots_137',
0x1002846: 'braille_dots_237',
0x1002847: 'braille_dots_1237',
0x1002848: 'braille_dots_47',
0x1002849: 'braille_dots_147',
0x100284a: 'braille_dots_247',
0x100284b: 'braille_dots_1247',
0x100284c: 'braille_dots_347',
0x100284d: 'braille_dots_1347',
0x100284e: 'braille_dots_2347',
0x100284f: 'braille_dots_12347',
0x1002850: 'braille_dots_57',
0x1002851: 'braille_dots_157',
0x1002852: 'braille_dots_257',
0x1002853: 'braille_dots_1257',
0x1002854: 'braille_dots_357',
0x1002855: 'braille_dots_1357',
0x1002858: 'braille_dots_457',
0x1002859: 'braille_dots_1457',
0x100285a: 'braille_dots_2457',
0x100285b: 'braille_dots_12457',
0x100285c: 'braille_dots_3457',
0x100285d: 'braille_dots_13457',
0x100285e: 'braille_dots_23457',
0x100285f: 'braille_dots_123457',
0x1002860: 'braille_dots_67',
0x1002861: 'braille_dots_167',
0x1002862: 'braille_dots_267',
0x1002863: 'braille_dots_1267',
0x1002864: 'braille_dots_367',
0x1002865: 'braille_dots_1367',
0x1002866: 'braille_dots_2367',
0x1002867: 'braille_dots_12367',
0x1002868: 'braille_dots_467',
0x1002869: 'braille_dots_1467',
0x100286a: 'braille_dots_2467',
0x100286b: 'braille_dots_12467',
0x100286c: 'braille_dots_3467',
0x100286d: 'braille_dots_13467',
0x100286e: 'braille_dots_23467',
0x100286f: 'braille_dots_123467',
0x1002870: 'braille_dots_567',
0x1002871: 'braille_dots_1567',
0x1002872: 'braille_dots_2567',
0x1002873: 'braille_dots_12567',
0x1002874: 'braille_dots_3567',
0x10006be: 'Arabic_heh_doachashmee',
0x1002877: 'braille_dots_123567',
0x1002878: 'braille_dots_4567',
0x1002879: 'braille_dots_14567',
0x100287a: 'braille_dots_24567',
0x100287b: 'braille_dots_124567',
0x100287c: 'braille_dots_34567',
0x100287d: 'braille_dots_134567',
0x100287e: 'braille_dots_234567',
0x100287f: 'braille_dots_1234567',
0x1002880: 'braille_dots_8',
0x1002881: 'braille_dots_18',
0x1002884: 'braille_dots_38',
0x1002885: 'braille_dots_138',
0x1002886: 'braille_dots_238',
0x1002888: 'braille_dots_48',
0x100288a: 'braille_dots_248',
0x100288b: 'braille_dots_1248',
0x100288c: 'braille_dots_348',
0x100288d: 'braille_dots_1348',
0x100288e: 'braille_dots_2348',
0x100288f: 'braille_dots_12348',
0x1002890: 'braille_dots_58',
0x1002891: 'braille_dots_158',
0x1002892: 'braille_dots_258',
0x1002894: 'braille_dots_358',
0x1002895: 'braille_dots_1358',
0x1002896: 'braille_dots_2358',
0x1002898: 'braille_dots_458',
0x1002899: 'braille_dots_1458',
0x100289a: 'braille_dots_2458',
0x100289b: 'braille_dots_12458',
0x100289c: 'braille_dots_3458',
0x100289e: 'braille_dots_23458',
0x100289f: 'braille_dots_123458',
0x8a1: 'leftradical',
0x8a2: 'topleftradical',
0x8a3: 'horizconnector',
0x8a4: 'topintegral',
0x10028a5: 'braille_dots_1368',
0x8a6: 'vertconnector',
0x10028a7: 'braille_dots_12368',
0x8a8: 'botleftsqbracket',
0x8a9: 'toprightsqbracket',
0x10028aa: 'braille_dots_2468',
0x10028ab: 'braille_dots_12468',
0x10028ac: 'braille_dots_3468',
0x10028ad: 'braille_dots_13468',
0x10028ae: 'braille_dots_23468',
0x8af: 'leftmiddlecurlybrace',
0x10028b1: 'braille_dots_1568',
0x8b3: 'topvertsummationconnector',
0x10028b5: 'braille_dots_13568',
0x8b6: 'botrightsummation',
0x10028b8: 'braille_dots_4568',
0x10028b9: 'braille_dots_14568',
0x10028ba: 'braille_dots_24568',
0x10028bb: 'braille_dots_124568',
0x10028bc: 'braille_dots_34568',
0x8be: 'greaterthanequal',
0x10028bf: 'braille_dots_1234568',
0x8c0: 'therefore',
0x10028c1: 'braille_dots_178',
0x10028c2: 'braille_dots_278',
0x6cb: 'Cyrillic_ka',
0x10028c4: 'braille_dots_378',
0x10028c5: 'braille_dots_1378',
0x10028c6: 'braille_dots_2378',
0x10028c7: 'braille_dots_12378',
0x8c8: 'approximate',
0x8c9: 'similarequal',
0x10028ca: 'braille_dots_2478',
0x10028cb: 'braille_dots_12478',
0x10028cc: 'braille_dots_3478',
0x10028cd: 'braille_dots_13478',
0x10028ce: 'braille_dots_23478',
0x10028d0: 'braille_dots_578',
0x10028d1: 'braille_dots_1578',
0x10028d2: 'braille_dots_2578',
0x10028d3: 'braille_dots_12578',
0x8d6: 'radical',
0x10028d7: 'braille_dots_123578',
0x10028d8: 'braille_dots_4578',
0x10028d9: 'braille_dots_14578',
0x8da: 'includedin',
0x10028dc: 'braille_dots_34578',
0x8dd: 'union',
0x10028de: 'braille_dots_234578',
0x8df: 'logicalor',
0x10028e0: 'braille_dots_678',
0x10028e1: 'braille_dots_1678',
0x10028e2: 'braille_dots_2678',
0x10028e3: 'braille_dots_12678',
0x10028e4: 'braille_dots_3678',
0x10028e5: 'braille_dots_13678',
0x10028e6: 'braille_dots_23678',
0x10028e7: 'braille_dots_123678',
0x10028e8: 'braille_dots_4678',
0x10028ea: 'braille_dots_24678',
0x10028eb: 'braille_dots_124678',
0x10028ec: 'braille_dots_34678',
0x10028ed: 'braille_dots_134678',
0x8ef: 'partialderivative',
0x10028f0: 'braille_dots_5678',
0x10028f1: 'braille_dots_15678',
0x10028f4: 'braille_dots_35678',
0x10028f5: 'braille_dots_135678',
0x10028f6: 'braille_dots_235678',
0x10028f7: 'braille_dots_1235678',
0x10028f8: 'braille_dots_45678',
0x10028f9: 'braille_dots_145678',
0x10028fa: 'braille_dots_245678',
0x8fb: 'leftarrow',
0x8fc: 'uparrow',
0x10028fe: 'braille_dots_2345678',
0x6b2: 'Macedonia_GJE',
0x4e: 'N',
0x1002074: 'foursuperior',
0x6de: 'Cyrillic_che',
0x6e3: 'Cyrillic_TSE',
0x100018f: 'SCHWA',
0x10028b4: 'braille_dots_3568',
0x51: 'Q',
0xeee: 'Hangul_J_Hieuh',
0x6ee: 'Cyrillic_EN',
0x6f0: 'Cyrillic_PE',
0x10006f3: 'Farsi_3',
0x6f4: 'Cyrillic_TE',
0x100019f: 'Obarred',
0x10006f5: 'Farsi_5',
0x6f6: 'Cyrillic_ZHE',
0x1a1: 'Aogonek',
0x10006f8: 'Farsi_8',
0x1a3: 'Lstroke',
0x10006f9: 'Farsi_9',
0x9e0: 'soliddiamond',
0x9e1: 'checkerboard',
0x9e2: 'ht',
0x9e3: 'ff',
0x9e4: 'cr',
0x9e8: 'nl',
0x9e9: 'vt',
0x9ea: 'lowrightcorner',
0x9ec: 'upleftcorner',
0x9ed: 'lowleftcorner',
0x9ee: 'crossinglines',
0x9ef: 'horizlinescan1',
0x9f1: 'horizlinescan5',
0x9f2: 'horizlinescan7',
0x9f3: 'horizlinescan9',
0x9f4: 'leftt',
0x9f5: 'rightt',
0x9f6: 'bott',
0x9f7: 'topt',
0x9f8: 'vertbar',
0x6ba: 'Serbian_NJE',
0x7cb: 'Greek_LAMBDA',
0x8dc: 'intersection',
0x10001af: 'Uhorn',
0xab6: 'onesixth',
0x7cc: 'Greek_MU',
0x10001b5: 'Zstroke',
0x7ce: 'Greek_XI',
0x9f0: 'horizlinescan3',
0x1c0: 'Racute',
0xaa1: 'emspace',
0xaa2: 'enspace',
0xaa4: 'em4space',
0xaa6: 'punctspace',
0xaa7: 'thinspace',
0xaa8: 'hairspace',
0xaa9: 'emdash',
0xaac: 'signifblank',
0x10028b7: 'braille_dots_123568',
0xaae: 'ellipsis',
0xaaf: 'doubbaselinedot',
0xab0: 'onethird',
0xab1: 'twothirds',
0xabb: 'figdash',
0xabc: 'leftanglebracket',
0xabd: 'decimalpoint',
0xabe: 'rightanglebracket',
0xabf: 'marker',
0x7d1: 'Greek_RHO',
0xac3: 'oneeighth',
0xac4: 'threeeighths',
0xac5: 'fiveeighths',
0xac9: 'trademark',
0xacb: 'trademarkincircle',
0xacc: 'leftopentriangle',
0xacd: 'rightopentriangle',
0xacf: 'emopenrectangle',
0xad0: 'leftsinglequotemark',
0xad1: 'rightsinglequotemark',
0xad4: 'prescription',
0xad6: 'minutes',
0xad7: 'seconds',
0xadb: 'filledrectbullet',
0xade: 'emfilledcircle',
0xae0: 'enopencircbullet',
0xae2: 'openrectbullet',
0xae4: 'opentribulletdown',
0xae5: 'openstar',
0xae6: 'enfilledcircbullet',
0xae8: 'filledtribulletup',
0xae9: 'filledtribulletdown',
0xaea: 'leftpointer',
0xaeb: 'rightpointer',
0xaec: 'club',
0x10001d2: 'ocaron',
0xaee: 'heart',
0xaf0: 'maltesecross',
0xaf1: 'dagger',
0xaf2: 'doubledagger',
0xaf3: 'checkmark',
0xaf4: 'ballotcross',
0xaf6: 'musicalflat',
0xaf7: 'malesymbol',
0x6c2: 'Cyrillic_be',
0xaf9: 'telephone',
0xafa: 'telephonerecorder',
0xafb: 'phonographcopyright',
0xafc: 'caret',
0xafd: 'singlelowquotemark',
0xafe: 'doublelowquotemark',
0x1d5: 'Odoubleacute',
0x6c3: 'Cyrillic_tse',
0x1de: 'Tcedilla',
0x6c5: 'Cyrillic_ie',
0x1e6: 'cacute',
0x10001e7: 'gcaron',
0xba3: 'leftcaret',
0xba6: 'rightcaret',
0xba8: 'downcaret',
0xba9: 'upcaret',
0x10006af: 'Arabic_gaf',
0xbc0: 'overbar',
0xbc2: 'downtack',
0xbc3: 'upshoe',
0xbc4: 'downstile',
0xbc6: 'underbar',
0xbcc: 'quad',
0xbce: 'uptack',
0xbcf: 'circle',
0xbd3: 'upstile',
0xbd6: 'downshoe',
0xadf: 'emfilledrect',
0xbda: 'leftshoe',
0xbdc: 'lefttack',
0x1fb: 'udoubleacute',
0x1000176: 'Ycircumflex',
0x1ff: 'abovedot',
0xbfc: 'righttack',
0x1002205: 'emptyset',
0x6cc: 'Cyrillic_el',
0x1002208: 'elementof',
0x1002209: 'notelementof',
0x6cd: 'Cyrillic_em',
0xad3: 'rightdoublequotemark',
0x6ce: 'Cyrillic_en',
0x100221a: 'squareroot',
0x100221b: 'cuberoot',
0x10004af: 'Cyrillic_u_straight',
0x6c: 'l',
0xfe07: 'ISO_Group_Lock',
0x6d2: 'Cyrillic_er',
0xce0: 'hebrew_aleph',
0xce1: 'hebrew_bet',
0xce2: 'hebrew_gimel',
0xce3: 'hebrew_daleth',
0xce4: 'hebrew_he',
0xce5: 'hebrew_waw',
0xce6: 'hebrew_zayin',
0xce7: 'hebrew_chet',
0xce8: 'hebrew_tet',
0xce9: 'hebrew_yod',
0xcea: 'hebrew_finalkaph',
0xceb: 'hebrew_kaph',
0xcec: 'hebrew_lamed',
0xced: 'hebrew_finalmem',
0xcee: 'hebrew_mem',
0xcef: 'hebrew_finalnun',
0xcf1: 'hebrew_samech',
0xcf3: 'hebrew_finalpe',
0xcf4: 'hebrew_pe',
0xcf5: 'hebrew_finalzadi',
0xcf6: 'hebrew_zadi',
0xcf7: 'hebrew_kuf',
0xcf8: 'hebrew_resh',
0xcf9: 'hebrew_shin',
0xcfa: 'hebrew_taf',
0x3ec: 'eabovedot',
0x100222d: 'tintegral',
0xae3: 'opentribulletup',
0x25: 'percent',
0xfe0a: 'ISO_Prev_Group',
0xcdf: 'hebrew_doublelowline',
0x10028ef: 'braille_dots_1234678',
0xda1: 'Thai_kokai',
0xda2: 'Thai_khokhai',
0xda3: 'Thai_khokhuat',
0xda4: 'Thai_khokhwai',
0xda5: 'Thai_khokhon',
0xda6: 'Thai_khorakhang',
0xda7: 'Thai_ngongu',
0xda9: 'Thai_choching',
0xdaa: 'Thai_chochang',
0xdab: 'Thai_soso',
0xdac: 'Thai_chochoe',
0xdad: 'Thai_yoying',
0xdae: 'Thai_dochada',
0xdaf: 'Thai_topatak',
0xdb0: 'Thai_thothan',
0xdb1: 'Thai_thonangmontho',
0xdb2: 'Thai_thophuthao',
0xdb4: 'Thai_dodek',
0xdb5: 'Thai_totao',
0xdb6: 'Thai_thothung',
0xdb7: 'Thai_thothahan',
0xdb8: 'Thai_thothong',
0xdb9: 'Thai_nonu',
0xdba: 'Thai_bobaimai',
0xdbc: 'Thai_phophung',
0xdbd: 'Thai_fofa',
0xdbe: 'Thai_phophan',
0x75: 'u',
0xdc2: 'Thai_yoyak',
0xdc3: 'Thai_rorua',
0xdc4: 'Thai_ru',
0xdc5: 'Thai_loling',
0xdc6: 'Thai_lu',
0xdc9: 'Thai_sorusi',
0xdca: 'Thai_sosua',
0xdcc: 'Thai_lochula',
0xdcd: 'Thai_oang',
0xdce: 'Thai_honokhuk',
0xdcf: 'Thai_paiyannoi',
0xdd0: 'Thai_saraa',
0xdd1: 'Thai_maihanakat',
0xdd2: 'Thai_saraaa',
0xdd3: 'Thai_saraam',
0xdd4: 'Thai_sarai',
0xdd5: 'Thai_saraii',
0xdd6: 'Thai_saraue',
0xdd8: 'Thai_sarau',
0xdd9: 'Thai_sarauu',
0xdda: 'Thai_phinthu',
0xdde: 'Thai_maihanakat_maitho',
0x7a5: 'Greek_IOTAdiaeresis',
0xde1: 'Thai_saraae',
0xde2: 'Thai_sarao',
0xde3: 'Thai_saraaimaimuan',
0xde4: 'Thai_saraaimaimalai',
0xde5: 'Thai_lakkhangyao',
0xde6: 'Thai_maiyamok',
0xde7: 'Thai_maitaikhu',
0xde8: 'Thai_maiek',
0xde9: 'Thai_maitho',
0xdea: 'Thai_maitri',
0xdeb: 'Thai_maichattawa',
0xdec: 'Thai_thanthakhat',
0xded: 'Thai_nikhahit',
0xdf0: 'Thai_leksun',
0xdf1: 'Thai_leknung',
0xdf2: 'Thai_leksong',
0xdf3: 'Thai_leksam',
0xdf4: 'Thai_leksi',
0xdf5: 'Thai_lekha',
0xdf6: 'Thai_lekhok',
0xdf7: 'Thai_lekchet',
0xdf8: 'Thai_lekpaet',
0x5cb: 'Arabic_theh',
0x10004bb: 'Cyrillic_shha',
0xfd0b: '3270_PA2',
0x7b8: 'Greek_upsilonaccent',
0xfd11: '3270_KeyClick',
0xfd18: '3270_Record',
0x7c3: 'Greek_GAMMA',
0xfd19: '3270_ChangeScreen',
0x7c4: 'Greek_DELTA',
0xea2: 'Hangul_SsangKiyeog',
0xea3: 'Hangul_KiyeogSios',
0xea5: 'Hangul_NieunJieuj',
0xea6: 'Hangul_NieunHieuh',
0xea7: 'Hangul_Dikeud',
0xea8: 'Hangul_SsangDikeud',
0xea9: 'Hangul_Rieul',
0xeaa: 'Hangul_RieulKiyeog',
0xeab: 'Hangul_RieulMieum',
0xeac: 'Hangul_RieulPieub',
0xead: 'Hangul_RieulSios',
0xeae: 'Hangul_RieulTieut',
0xeaf: 'Hangul_RieulPhieuf',
0xeb0: 'Hangul_RieulHieuh',
0xeb1: 'Hangul_Mieum',
0x5d1: 'Arabic_ra',
0xeb3: 'Hangul_SsangPieub',
0xeb4: 'Hangul_PieubSios',
0xeb5: 'Hangul_Sios',
0xeb6: 'Hangul_SsangSios',
0x7c9: 'Greek_IOTA',
0xeb8: 'Hangul_Jieuj',
0xeb9: 'Hangul_SsangJieuj',
0xeba: 'Hangul_Cieuc',
0xebb: 'Hangul_Khieuq',
0xebc: 'Hangul_Tieut',
0xebd: 'Hangul_Phieuf',
0xebe: 'Hangul_Hieuh',
0xebf: 'Hangul_A',
0xec0: 'Hangul_AE',
0xec1: 'Hangul_YA',
0xec2: 'Hangul_YAE',
0xec3: 'Hangul_EO',
0xec4: 'Hangul_E',
0xec5: 'Hangul_YEO',
0xec6: 'Hangul_YE',
0xec7: 'Hangul_O',
0xec9: 'Hangul_WAE',
0xeca: 'Hangul_OE',
0xecb: 'Hangul_YO',
0xecc: 'Hangul_U',
0xecd: 'Hangul_WEO',
0xece: 'Hangul_WE',
0xecf: 'Hangul_WI',
0xed0: 'Hangul_YU',
0xed1: 'Hangul_EU',
0xed2: 'Hangul_YI',
0xed3: 'Hangul_I',
0xed4: 'Hangul_J_Kiyeog',
0xed5: 'Hangul_J_SsangKiyeog',
0xed6: 'Hangul_J_KiyeogSios',
0xed7: 'Hangul_J_Nieun',
0xed8: 'Hangul_J_NieunJieuj',
0xed9: 'Hangul_J_NieunHieuh',
0xeda: 'Hangul_J_Dikeud',
0xedc: 'Hangul_J_RieulKiyeog',
0xedd: 'Hangul_J_RieulMieum',
0xede: 'Hangul_J_RieulPieub',
0xedf: 'Hangul_J_RieulSios',
0xee0: 'Hangul_J_RieulTieut',
0xee1: 'Hangul_J_RieulPhieuf',
0xee2: 'Hangul_J_RieulHieuh',
0xee3: 'Hangul_J_Mieum',
0xee4: 'Hangul_J_Pieub',
0xee5: 'Hangul_J_PieubSios',
0xee6: 'Hangul_J_Sios',
0xee7: 'Hangul_J_SsangSios',
0xee8: 'Hangul_J_Ieung',
0xee9: 'Hangul_J_Jieuj',
0xeeb: 'Hangul_J_Khieuq',
0xeec: 'Hangul_J_Tieut',
0xeed: 'Hangul_J_Phieuf',
0xeef: 'Hangul_RieulYeorinHieuh',
0xef0: 'Hangul_SunkyeongeumMieum',
0xef1: 'Hangul_SunkyeongeumPieub',
0xef4: 'Hangul_SunkyeongeumPhieuf',
0xef5: 'Hangul_YeorinHieuh',
0xef6: 'Hangul_AraeA',
0xef7: 'Hangul_AraeAE',
0xef8: 'Hangul_J_PanSios',
0xef9: 'Hangul_J_KkogjiDalrinIeung',
0xefa: 'Hangul_J_YeorinHieuh',
0x7d5: 'Greek_UPSILON',
0x7d6: 'Greek_PHI',
0x7d9: 'Greek_OMEGA',
0x1002078: 'eightsuperior',
0xaf8: 'femalesymbol',
0x7e9: 'Greek_iota',
0x2a9: 'Iabovedot',
0x7f1: 'Greek_rho',
0x7f3: 'Greek_finalsmallsigma',
0x7f5: 'Greek_upsilon',
0x7f7: 'Greek_chi',
0x7f9: 'Greek_omega',
0x4cb: 'kana_HI',
0xfe22: 'ISO_Move_Line_Down',
0x2b1: 'hstroke',
0x100280b: 'braille_dots_124',
0x100280c: 'braille_dots_34',
0x2bc: 'jcircumflex',
0xb4: 'acute',
0x10006f1: 'Farsi_1',
0xfe27: 'ISO_Set_Margin_Left',
0x6f2: 'Cyrillic_ER',
0x6f3: 'Cyrillic_ES',
0x1000496: 'Cyrillic_ZHE_descender',
0x10010d0: 'Georgian_an',
0x10010d1: 'Georgian_ban',
0x10010d2: 'Georgian_gan',
0x10001a0: 'Ohorn',
0x10010d4: 'Georgian_en',
0x10010d5: 'Georgian_vin',
0x10010d6: 'Georgian_zen',
0x10010d7: 'Georgian_tan',
0x10010d8: 'Georgian_in',
0x10010d9: 'Georgian_kan',
0x10010da: 'Georgian_las',
0x10010db: 'Georgian_man',
0x10010dc: 'Georgian_nar',
0x10010dd: 'Georgian_on',
0x10010de: 'Georgian_par',
0x10010df: 'Georgian_zhar',
0x10010e0: 'Georgian_rae',
0x10010e1: 'Georgian_san',
0x10010e2: 'Georgian_tar',
0x10010e3: 'Georgian_un',
0x10010e4: 'Georgian_phar',
0x10010e5: 'Georgian_khar',
0x10010e6: 'Georgian_ghan',
0x10010e7: 'Georgian_qar',
0x10010e8: 'Georgian_shin',
0x10010e9: 'Georgian_chin',
0x10010ea: 'Georgian_can',
0x10010eb: 'Georgian_jil',
0x10010ed: 'Georgian_char',
0x10010ee: 'Georgian_xan',
0x10010ef: 'Georgian_jhan',
0x10010f0: 'Georgian_hae',
0x10010f1: 'Georgian_he',
0x10010f2: 'Georgian_hie',
0x10010f4: 'Georgian_har',
0x10010f5: 'Georgian_hoe',
0x10010f6: 'Georgian_fi',
0x1002829: 'braille_dots_146',
0x2d8: 'Gcircumflex',
0x1001ecd: 'obelowdot',
0x10006f7: 'Farsi_7',
0x1002833: 'braille_dots_1256',
0x1002836: 'braille_dots_2356',
0x1002838: 'braille_dots_456',
0xff3f: 'Hangul_Special',
0x10006a9: 'Arabic_keheh',
0x100283d: 'braille_dots_13456',
0x100283e: 'braille_dots_23456',
0x1002840: 'braille_dots_7',
0x1002841: 'braille_dots_17',
0x10004d9: 'Cyrillic_schwa',
0x2f5: 'gabovedot',
0x6fd: 'Cyrillic_SHCHA',
0xda8: 'Thai_chochan',
0x2fe: 'scircumflex',
0x1002857: 'braille_dots_12357',
0x5f0: 'Arabic_kasra',
0xdbb: 'Thai_popla',
0x5f1: 'Arabic_shadda',
0xdbf: 'Thai_fofan',
0xdc0: 'Thai_phosamphao',
0xdc1: 'Thai_moma',
0x1002830: 'braille_dots_56',
0x5f2: 'Arabic_sukun',
0xdc7: 'Thai_wowaen',
0xdc8: 'Thai_sosala',
0x1002875: 'braille_dots_13567',
0xdcb: 'Thai_hohip',
0xa1: 'exclamdown',
0xa2: 'cent',
0xdd7: 'Thai_sarauee',
0x1002882: 'braille_dots_28',
0x1002883: 'braille_dots_128',
0xa3: 'sterling',
0x1002887: 'braille_dots_1238',
0x1002889: 'braille_dots_148',
0xddf: 'Thai_baht',
0xde0: 'Thai_sarae',
0x6bc: 'Macedonia_KJE',
0x8a7: 'topleftsqbracket',
0x1b6: 'sacute',
0x1002893: 'braille_dots_1258',
0x21: 'exclam',
0x1002897: 'braille_dots_12358',
0x100289d: 'braille_dots_13458',
0x13bc: 'OE',
0x13bd: 'oe',
0x13be: 'Ydiaeresis',
0x10028a0: 'braille_dots_68',
0x10028a3: 'braille_dots_1268',
0xdf9: 'Thai_lekkao',
0x8a5: 'botintegral',
0x10028a8: 'braille_dots_468',
0x10028a9: 'braille_dots_1468',
0x8aa: 'botrightsqbracket',
0x8ab: 'topleftparens',
0x8ac: 'botleftparens',
0x8ad: 'toprightparens',
0xab: 'guillemotleft',
0x10028af: 'braille_dots_123468',
0x10028b0: 'braille_dots_568',
0x8b1: 'topleftsummation',
0x10006f4: 'Farsi_4',
0x8b2: 'botleftsummation',
0x10028b3: 'braille_dots_12568',
0x1001e0a: 'Dabovedot',
0x8b5: 'toprightsummation',
0xfe0b: 'ISO_Prev_Group_Lock',
0x8b7: 'rightmiddlesummation',
0x4b7: 'kana_KI',
0x10020a5: 'MillSign',
0x8bc: 'lessthanequal',
0x8bd: 'notequal',
0x10028be: 'braille_dots_234568',
0x10028c0: 'braille_dots_78',
0x8c1: 'variation',
0x10028c3: 'braille_dots_1278',
0x10020a7: 'PesetaSign',
0x10028c8: 'braille_dots_478',
0x10028c9: 'braille_dots_1478',
0x8cd: 'ifonlyif',
0xfe23: 'ISO_Partial_Line_Up',
0x8ce: 'implies',
0x10028a1: 'braille_dots_168',
0x10028cf: 'braille_dots_123478',
0xfe25: 'ISO_Partial_Space_Left',
0x10028d4: 'braille_dots_3578',
0x10028d5: 'braille_dots_13578',
0x10028d6: 'braille_dots_23578',
0x10004b0: 'Cyrillic_U_straight_bar',
0x10028da: 'braille_dots_24578',
0x8db: 'includes',
0x10028dd: 'braille_dots_134578',
0x8de: 'logicaland',
0x10028df: 'braille_dots_1234578',
0x1002823: 'braille_dots_126',
0x10028e9: 'braille_dots_14678',
0xb7: 'periodcentered',
0x70: 'p',
0x10028ee: 'braille_dots_234678',
0x10028f2: 'braille_dots_25678',
0x6c0: 'Cyrillic_yu',
0x10028f3: 'braille_dots_125678',
0x1002076: 'sixsuperior',
0x8f6: 'function',
0x3a2: 'kra',
0x10028fb: 'braille_dots_1245678',
0x10028fc: 'braille_dots_345678',
0x8cf: 'identical',
0x10028fd: 'braille_dots_1345678',
0x8fe: 'downarrow',
0x1002828: 'braille_dots_46',
0x10028ff: 'braille_dots_12345678',
0x3ab: 'Gcedilla',
0xfe56: 'dead_abovedot',
0x1001e57: 'pabovedot',
0xfe60: 'dead_belowdot',
0x10006c1: 'Arabic_heh_goal',
0x10004b7: 'Cyrillic_che_descender',
0x3bd: 'ENG',
0x3c0: 'Amacron',
0xace: 'emopencircle',
0x10001d1: 'Ocaron',
0x1d2: 'Ncaron',
0xcf0: 'hebrew_nun',
0x10028db: 'braille_dots_124578',
0x3d2: 'Omacron',
0x1001e80: 'Wgrave',
0x1002831: 'braille_dots_156',
0xfe81: 'dead_A',
0xfe82: 'dead_e',
0xfe83: 'dead_E',
0x3d9: 'Uogonek',
0xfe84: 'dead_i',
0x1001e85: 'wdiaeresis',
0x3de: 'Umacron',
0x1001e8a: 'Xabovedot',
0x1001e8b: 'xabovedot',
0xfe61: 'dead_hook',
0xea1: 'Hangul_Kiyeog',
0x8ae: 'botrightparens',
0x3ef: 'imacron',
0x3f1: 'ncedilla',
0xca: 'Ecircumflex',
0x10028a6: 'braille_dots_2368',
0xea4: 'Hangul_Nieun',
0x1001ea5: 'acircumflexacute',
0x3fd: 'utilde',
0xcf2: 'hebrew_ayin',
0x100057d: 'Armenian_se',
0xeb7: 'Hangul_Ieung',
0xcf: 'Idiaeresis',
0xaa5: 'digitspace',
0xfed4: 'Last_Virtual_Screen',
0xfe6a: 'dead_belowtilde',
0xec8: 'Hangul_WA',
0xad2: 'leftdoublequotemark',
0xfed0: 'First_Virtual_Screen',
0x1001ed1: 'ocircumflexacute',
0x1e5: 'lacute',
0x1001ed2: 'Ocircumflexgrave',
0x1001ed5: 'ocircumflexhook',
0xef3: 'Hangul_KkogjiDalrinIeung',
0x10001e6: 'Gcaron',
0xedb: 'Hangul_J_Rieul',
0x1002844: 'braille_dots_37',
0xfee0: 'Pointer_Left',
0x1001ee1: 'ohorntilde',
0x1001ee2: 'Ohornbelowdot',
0xfee3: 'Pointer_Down',
0x1001ee5: 'ubelowdot',
0x1001ee6: 'Uhook',
0xfee7: 'Pointer_DownRight',
0xfee8: 'Pointer_Button_Dflt',
0x1001ee9: 'uhornacute',
0xfeec: 'Pointer_Button4',
0xfeed: 'Pointer_Button5',
0xeb2: 'Hangul_Pieub',
0x1001eee: 'Uhorntilde',
0x1001eef: 'uhorntilde',
0x1001ef0: 'Uhornbelowdot',
0x1001ef1: 'uhornbelowdot',
0x1001ef2: 'Ygrave',
0xfef3: 'Pointer_DblClick5',
0xfef5: 'Pointer_Drag1',
0x1001ef6: 'Yhook',
0x6c7: 'Cyrillic_ghe',
0x1001ef7: 'yhook',
0xfef8: 'Pointer_Drag4',
0x1001ef9: 'ytilde',
0xeff: 'Korean_Won',
0x1001e02: 'Babovedot',
0x1ef: 'dcaron',
0x2bb: 'gbreve',
0x7a2: 'Greek_EPSILONaccent',
0x6a4: 'Ukranian_je',
0xae: 'registered',
0xffb2: 'KP_2',
0x8b4: 'botvertsummationconnector',
0xff2a: 'Zenkaku_Hankaku',
0x1008ff2b: 'XF86WakeUp',
0x1d1: 'Nacute',
0xff2f: 'Eisu_Shift',
0x1ac: 'Zacute',
0x9df: 'blank',
0xe9: 'eacute',
0x1002856: 'braille_dots_2357',
0x9e5: 'lf',
0x7a4: 'Greek_IOTAaccent',
0xdb3: 'Thai_nonen',
0x9eb: 'uprightcorner',
0xec: 'igrave',
0x10004a2: 'Cyrillic_EN_descender',
0x4a3: 'kana_closingbracket',
0x4a5: 'kana_conjunctive',
0xee: 'icircumflex',
0x4ab: 'kana_o',
0x4ae: 'kana_yo',
0x4b0: 'prolongedsound',
0x10004b1: 'Cyrillic_u_straight_bar',
0x10004b2: 'Cyrillic_HA_descender',
0x4b3: 'kana_U',
0x10010ec: 'Georgian_cil',
0x4b6: 'kana_KA',
0x4b8: 'kana_KU',
0x4b9: 'kana_KE',
0x4ba: 'kana_KO',
0x1000535: 'Armenian_YECH',
0x4bf: 'kana_SO',
0x4c2: 'kana_TSU',
0x4c3: 'kana_TE',
0x1000537: 'Armenian_E',
0x1000538: 'Armenian_AT',
0xf6: 'odiaeresis',
0x4d2: 'kana_ME',
0x4d4: 'kana_YA',
0xfd01: '3270_Duplicate',
0xfd02: '3270_FieldMark',
0xfd03: '3270_Right2',
0xfd04: '3270_Left2',
0xfd05: '3270_BackTab',
0xfd06: '3270_EraseEOF',
0xfd07: '3270_EraseInput',
0xfd08: '3270_Reset',
0xfd09: '3270_Quit',
0xfd0a: '3270_PA1',
0x4d7: 'kana_RA',
0xfd0c: '3270_PA3',
0xfd0d: '3270_Test',
0xfd0e: '3270_Attn',
0xfd0f: '3270_CursorBlink',
0xfd10: '3270_AltCursor',
0x10004d8: 'Cyrillic_SCHWA',
0xfd12: '3270_Jump',
0xfd13: '3270_Ident',
0xfd14: '3270_Rule',
0xfd15: '3270_Copy',
0xfd16: '3270_Play',
0xfd17: '3270_Setup',
0xfd1a: '3270_DeleteWord',
0xfd1b: '3270_ExSelect',
0xfd1c: '3270_CursorSelect',
0xfd1d: '3270_PrintScreen',
0xfd1e: '3270_Enter',
0x4db: 'kana_RO',
0xf9: 'ugrave',
0x77: 'w',
0xada: 'hexagram',
0xff99: 'KP_Down',
0x7a8: 'Greek_UPSILONaccent',
0xeea: 'Hangul_J_Cieuc',
0xfe01: 'ISO_Lock',
0xfe02: 'ISO_Level2_Latch',
0xfe03: 'ISO_Level3_Shift',
0xfe04: 'ISO_Level3_Latch',
0xfe05: 'ISO_Level3_Lock',
0xfe06: 'ISO_Group_Latch',
0xfe08: 'ISO_Next_Group',
0xfe09: 'ISO_Next_Group_Lock',
0x1000543: 'Armenian_TCHE',
0x1001e0b: 'dabovedot',
0xfe0c: 'ISO_First_Group',
0xfe0d: 'ISO_First_Group_Lock',
0xfe0e: 'ISO_Last_Group',
0xfe0f: 'ISO_Last_Group_Lock',
0x1000654: 'Arabic_hamza_above',
0xfe11: 'ISO_Level5_Shift',
0xfe12: 'ISO_Level5_Latch',
0xfe13: 'ISO_Level5_Lock',
0x1001e1e: 'Fabovedot',
0x1001e1f: 'fabovedot',
0xfe20: 'ISO_Left_Tab',
0xfe21: 'ISO_Move_Line_Up',
0xfe24: 'ISO_Partial_Line_Down',
0xfe26: 'ISO_Partial_Space_Right',
0xfe28: 'ISO_Set_Margin_Right',
0xfe29: 'ISO_Release_Margin_Left',
0xfe2a: 'ISO_Release_Margin_Right',
0xfe2b: 'ISO_Release_Both_Margins',
0xfe2c: 'ISO_Fast_Cursor_Left',
0xfe2d: 'ISO_Fast_Cursor_Right',
0xfe2e: 'ISO_Fast_Cursor_Up',
0xfe2f: 'ISO_Fast_Cursor_Down',
0xfe30: 'ISO_Continuous_Underline',
0xfe31: 'ISO_Discontinuous_Underline',
0xfe32: 'ISO_Emphasize',
0xfe33: 'ISO_Center_Object',
0xfe34: 'ISO_Enter',
0x1001e36: 'Lbelowdot',
0x1001e37: 'lbelowdot',
0x1001e40: 'Mabovedot',
0x1001e41: 'mabovedot',
0xfe50: 'dead_grave',
0xfe51: 'dead_acute',
0xfe52: 'dead_circumflex',
0xfe53: 'dead_tilde',
0xfe54: 'dead_macron',
0xfe55: 'dead_breve',
0x1001e56: 'Pabovedot',
0xfe57: 'dead_diaeresis',
0xfe58: 'dead_abovering',
0xfe59: 'dead_doubleacute',
0xfe5a: 'dead_caron',
0xfe5b: 'dead_cedilla',
0xfe5c: 'dead_ogonek',
0xfe5d: 'dead_iota',
0xfe5e: 'dead_voiced_sound',
0xfe5f: 'dead_semivoiced_sound',
0x1001e60: 'Sabovedot',
0x1001e61: 'sabovedot',
0xfe62: 'dead_horn',
0xfe63: 'dead_stroke',
0xfe64: 'dead_abovecomma',
0xfe65: 'dead_abovereversedcomma',
0xfe66: 'dead_doublegrave',
0xfe67: 'dead_belowring',
0xfe68: 'dead_belowmacron',
0xfe69: 'dead_belowcircumflex',
0x1001e6a: 'Tabovedot',
0x1001e6b: 'tabovedot',
0xfe6c: 'dead_belowdiaeresis',
0xfe6d: 'dead_invertedbreve',
0xfe6e: 'dead_belowcomma',
0xfe6f: 'dead_currency',
0xfe70: 'AccessX_Enable',
0xfe71: 'AccessX_Feedback_Enable',
0xfe72: 'RepeatKeys_Enable',
0xfe73: 'SlowKeys_Enable',
0xfe74: 'BounceKeys_Enable',
0xfe75: 'StickyKeys_Enable',
0xfe76: 'MouseKeys_Enable',
0xfe77: 'MouseKeys_Accel_Enable',
0xfe78: 'Overlay1_Enable',
0xfe79: 'Overlay2_Enable',
0xfe7a: 'AudibleBell_Enable',
0xfe80: 'dead_a',
0x1001e81: 'wgrave',
0x1001e82: 'Wacute',
0x1001e83: 'wacute',
0x1001e84: 'Wdiaeresis',
0xfe85: 'dead_I',
0xfe86: 'dead_o',
0xfe87: 'dead_O',
0xfe88: 'dead_u',
0xfe89: 'dead_U',
0xfe8a: 'dead_small_schwa',
0xfe8b: 'dead_capital_schwa',
0xffc3: 'F6',
0x1001ea0: 'Abelowdot',
0x1001ea1: 'abelowdot',
0x1001ea2: 'Ahook',
0x1001ea3: 'ahook',
0x1001ea4: 'Acircumflexacute',
0x1001ea6: 'Acircumflexgrave',
0x1001ea7: 'acircumflexgrave',
0x1001ea8: 'Acircumflexhook',
0x1001ea9: 'acircumflexhook',
0x1001eaa: 'Acircumflextilde',
0x1001eab: 'acircumflextilde',
0x1001eac: 'Acircumflexbelowdot',
0x1001ead: 'acircumflexbelowdot',
0x1001eae: 'Abreveacute',
0x1001eaf: 'abreveacute',
0x1001eb0: 'Abrevegrave',
0x1001eb1: 'abrevegrave',
0x1001eb2: 'Abrevehook',
0x1001eb3: 'abrevehook',
0x1001eb4: 'Abrevetilde',
0x1001eb5: 'abrevetilde',
0x1001eb6: 'Abrevebelowdot',
0x1001eb7: 'abrevebelowdot',
0x1001eb8: 'Ebelowdot',
0x1001eb9: 'ebelowdot',
0x1001eba: 'Ehook',
0x1001ebb: 'ehook',
0x1001ebc: 'Etilde',
0x1001ebd: 'etilde',
0x1001ebe: 'Ecircumflexacute',
0x1001ebf: 'ecircumflexacute',
0x1001ec0: 'Ecircumflexgrave',
0x1001ec1: 'ecircumflexgrave',
0x1001ec2: 'Ecircumflexhook',
0x1001ec3: 'ecircumflexhook',
0x1001ec4: 'Ecircumflextilde',
0x1001ec5: 'ecircumflextilde',
0x1001ec6: 'Ecircumflexbelowdot',
0x1001ec7: 'ecircumflexbelowdot',
0x1001ec8: 'Ihook',
0x1001ec9: 'ihook',
0x1001eca: 'Ibelowdot',
0x1001ecb: 'ibelowdot',
0x1001ecc: 'Obelowdot',
0x10004ae: 'Cyrillic_U_straight',
0x1001ece: 'Ohook',
0x1001ecf: 'ohook',
0x1001ed0: 'Ocircumflexacute',
0xfed1: 'Prev_Virtual_Screen',
0xfed2: 'Next_Virtual_Screen',
0x1001ed3: 'ocircumflexgrave',
0x1001ed4: 'Ocircumflexhook',
0xfed5: 'Terminate_Server',
0x1001ed6: 'Ocircumflextilde',
0x1001ed7: 'ocircumflextilde',
0x1001ed8: 'Ocircumflexbelowdot',
0x1001ed9: 'ocircumflexbelowdot',
0x1001eda: 'Ohornacute',
0x1001edb: 'ohornacute',
0x1001edc: 'Ohorngrave',
0x1001edd: 'ohorngrave',
0x1001ede: 'Ohornhook',
0x1001edf: 'ohornhook',
0x1001ee0: 'Ohorntilde',
0xfee1: 'Pointer_Right',
0xfee2: 'Pointer_Up',
0x1001ee3: 'ohornbelowdot',
0x1001ee4: 'Ubelowdot',
0xfee5: 'Pointer_UpRight',
0xfee6: 'Pointer_DownLeft',
0x1001ee7: 'uhook',
0x1001ee8: 'Uhornacute',
0xfee9: 'Pointer_Button1',
0x1001eea: 'Uhorngrave',
0xfeeb: 'Pointer_Button3',
0x1001eec: 'Uhornhook',
0x1001eed: 'uhornhook',
0xfeee: 'Pointer_DblClick_Dflt',
0xfeef: 'Pointer_DblClick1',
0xfef0: 'Pointer_DblClick2',
0xfef1: 'Pointer_DblClick3',
0xfef2: 'Pointer_DblClick4',
0x1001ef3: 'ygrave',
0xfef4: 'Pointer_Drag_Dflt',
0x1001ef5: 'ybelowdot',
0xfef6: 'Pointer_Drag2',
0xfef7: 'Pointer_Drag3',
0x1001ef8: 'Ytilde',
0xfef9: 'Pointer_EnableKeys',
0xfefa: 'Pointer_Accelerate',
0xfefb: 'Pointer_DfltBtnNext',
0xfefc: 'Pointer_DfltBtnPrev',
0xfefd: 'Pointer_Drag5',
0xff08: 'BackSpace',
0xff09: 'Tab',
0xff0a: 'Linefeed',
0xff0b: 'Clear',
0xff0d: 'Return',
0xff13: 'Pause',
0xff14: 'Scroll_Lock',
0xff15: 'Sys_Req',
0xff1b: 'Escape',
0x1002876: 'braille_dots_23567',
0xff20: 'Multi_key',
0xff21: 'Kanji',
0xff22: 'Muhenkan',
0xff23: 'Henkan',
0xff24: 'Romaji',
0xff25: 'Hiragana',
0xff26: 'Katakana',
0xff27: 'Hiragana_Katakana',
0xff28: 'Zenkaku',
0xff29: 'Hankaku',
0x1008ff2a: 'XF86PowerOff',
0xff2b: 'Touroku',
0xff2c: 'Massyo',
0xff2d: 'Kana_Lock',
0xff2e: 'Kana_Shift',
0x1008ff2f: 'XF86Sleep',
0xff30: 'Eisu_toggle',
0xff31: 'Hangul',
0xff32: 'Hangul_Start',
0xff33: 'Hangul_End',
0xff34: 'Hangul_Hanja',
0xff35: 'Hangul_Jamo',
0xff36: 'Hangul_Romaja',
0xff37: 'Hangul_Codeinput',
0xff38: 'Hangul_Jeonja',
0xff39: 'Hangul_Banja',
0xff3a: 'Hangul_PreHanja',
0xff3b: 'Hangul_PostHanja',
0xff3c: 'Hangul_SingleCandidate',
0xff3d: 'Hangul_MultipleCandidate',
0xff3e: 'Hangul_PreviousCandidate',
0x1000536: 'Armenian_ZA',
0xff50: 'Home',
0xff51: 'Left',
0xff52: 'Up',
0xff53: 'Right',
0xff54: 'Down',
0xff55: 'Prior',
0xff56: 'Next',
0xff57: 'End',
0xff58: 'Begin',
0xff60: 'Select',
0xff61: 'Print',
0xff62: 'Execute',
0xff63: 'Insert',
0xff65: 'Undo',
0xff66: 'Redo',
0xff67: 'Menu',
0xff68: 'Find',
0xff69: 'Cancel',
0xff6a: 'Help',
0xff6b: 'Break',
0x100054f: 'Armenian_TYUN',
0xaa3: 'em3space',
0xff7e: 'Arabic_switch',
0xff7f: 'Num_Lock',
0xff80: 'KP_Space',
0x1000540: 'Armenian_HO',
0xffeb: 'Super_L',
0x1000541: 'Armenian_DZA',
0xff89: 'KP_Tab',
0xff8d: 'KP_Enter',
0x1000550: 'Armenian_RE',
0xff91: 'KP_F1',
0xff92: 'KP_F2',
0xff93: 'KP_F3',
0xff94: 'KP_F4',
0xff95: 'KP_Home',
0xff96: 'KP_Left',
0xff97: 'KP_Up',
0xff98: 'KP_Right',
0x1000544: 'Armenian_MEN',
0xff9a: 'KP_Prior',
0xff9b: 'KP_Next',
0xff9c: 'KP_End',
0xff9d: 'KP_Begin',
0xff9e: 'KP_Insert',
0xff9f: 'KP_Delete',
0x1000546: 'Armenian_NU',
0xffaa: 'KP_Multiply',
0xffab: 'KP_Add',
0xffac: 'KP_Separator',
0xffad: 'KP_Subtract',
0xffae: 'KP_Decimal',
0xffaf: 'KP_Divide',
0xffb0: 'KP_0',
0xffb1: 'KP_1',
0xffb3: 'KP_3',
0xffb4: 'KP_4',
0xffb5: 'KP_5',
0xffb6: 'KP_6',
0xffb7: 'KP_7',
0xffb8: 'KP_8',
0xffb9: 'KP_9',
0xffbd: 'KP_Equal',
0xffbe: 'F1',
0xffbf: 'F2',
0xffc0: 'F3',
0xffc1: 'F4',
0xffc2: 'F5',
0x100054b: 'Armenian_JE',
0xffc4: 'F7',
0xffc5: 'F8',
0xffc6: 'F9',
0xffc7: 'F10',
0xffc8: 'F11',
0xffc9: 'F12',
0xffca: 'F13',
0xffcb: 'F14',
0xffcc: 'L5',
0xffcd: 'F16',
0xffce: 'F17',
0xffcf: 'F18',
0xffd0: 'F19',
0xffd1: 'L10',
0xffd2: 'R1',
0xffd3: 'R2',
0xffd4: 'R3',
0xffd5: 'F24',
0xffd6: 'R5',
0xffd7: 'R6',
0xffd8: 'R7',
0xffd9: 'R8',
0xffda: 'R9',
0xffdb: 'R10',
0xffdc: 'R11',
0xffdd: 'R12',
0xffde: 'R13',
0xffdf: 'R14',
0xffe0: 'R15',
0xffe1: 'Shift_L',
0xffe2: 'Shift_R',
0xffe3: 'Control_L',
0xffe4: 'Control_R',
0xffe5: 'Caps_Lock',
0xffe6: 'Shift_Lock',
0xffe7: 'Meta_L',
0xffe8: 'Meta_R',
0xffe9: 'Alt_L',
0xffea: 'Alt_R',
0xffec: 'Super_R',
0xffed: 'Hyper_L',
0xffee: 'Hyper_R',
0xfff1: 'braille_dot_1',
0xfff2: 'braille_dot_2',
0xfff3: 'braille_dot_3',
0xfff4: 'braille_dot_4',
0xfff5: 'braille_dot_5',
0xfff6: 'braille_dot_6',
0xfff7: 'braille_dot_7',
0xfff8: 'braille_dot_8',
0xfff9: 'braille_dot_9',
0xfffa: 'braille_dot_10',
0xaaa: 'endash',
0xffffff: 'VoidSymbol',

* Sun 05 Oct 2014 12:17:04 AM JST

Symbol name	Numeric Value	Visual representation/Explanation
VoidSymbol	0xFFFFFF	Does nothing
BackSpace	0xFF08	Erase the previous character, unlike loadkeys, Delete does not do the same thing
Tab	0xFF09	
Linefeed	0xFF0A	Linefeed, LF
Clear	0xFF0B	
Return	0xFF0D	Return, enter
Pause	0xFF13	Pause, hold
Scroll_Lock	0xFF14	
Sys_Req	0xFF15	
Escape	0xFF1B	
Delete	0xFFFF	Erase the character under the cursor. This is the same as Rubout in loadkeys.
Multi_key	0xFF20	Allows odd characters to be entered, in the same way as Compose in loadkeys
Codeinput	0xFF37	Kanji_Bangou is a synonym
SingleCandidate	0xFF3C	
MultipleCandidate	0xFF3D	Zen_Koho is a synonym
PreviousCandidate	0xFF3E	Mae_Koho is a synonym
Kanji	0xFF21	Kanji, Kanji convert
Muhenkan	0xFF22	Cancel Conversion
Henkan_Mode	0xFF23	Start/Stop Conversion; Henkan is a synonym
Romaji	0xFF24	to Romaji
Hiragana	0xFF25	to Hiragana
Katakana	0xFF26	to Katakana
Hiragana_Katakana	0xFF27	Hiragana/Katakana toggle
Zenkaku	0xFF28	to Zenkaku
Hankaku	0xFF29	to Hankaku
Zenkaku_Hankaku	0xFF2A	Zenkaku/Hankaku toggle
Touroku	0xFF2B	Add to Dictionary
Massyo	0xFF2C	Delete from Dictionary
Kana_Lock	0xFF2D	Kana Lock
Kana_Shift	0xFF2E	Kana Shift
Eisu_Shift	0xFF2F	Alphanumeric Shift
Eisu_toggle	0xFF30	Alphanumeric toggle
Home	0xFF50	
Left	0xFF51	Move left, left arrow
Up	0xFF52	Move up, up arrow
Right	0xFF53	Move right, right arrow
Down	0xFF54	Move down, down arrow
Prior	0xFF55	Prior, previous; Page_Up is a synonym
Next	0xFF56	Next; Page_Down is a synonym
End	0xFF57	EOL
Begin	0xFF58	BOL
Select	0xFF60	Select, mark
Print	0xFF61	
Execute	0xFF62	Execute, run, do
Insert	0xFF63	Insert, insert here
Undo	0xFF65	Undo, oops
Redo	0xFF66	redo, again
Menu	0xFF67	
Find	0xFF68	Find, search
Cancel	0xFF69	Cancel, stop, abort, exit
Help	0xFF6A	Help
Break	0xFF6B	
Mode_switch	0xFF7E	Shiftlevel two, giving access to the third and fourth columns of keysyms; script-, Greek-, Arabic-, kana-, Hangul- and Hebrew- _switch are synonyms
Num_Lock	0xFF7F	
KP_Space	0xFF80	space
KP_Tab	0xFF89	
KP_Enter	0xFF8D	enter
KP_F1	0xFF91	PF1, KP_A, ...
KP_F2	0xFF92	
KP_F3	0xFF93	
KP_F4	0xFF94	
KP_Home	0xFF95	
KP_Left	0xFF96	
KP_Up	0xFF97	
KP_Right	0xFF98	
KP_Down	0xFF99	
KP_Prior	0xFF9A	KP_Page_Up is a synonym
KP_Next	0xFF9B	KP_Page_Down is a synonym
KP_End	0xFF9C	
KP_Begin	0xFF9D	
KP_Insert	0xFF9E	
KP_Delete	0xFF9F	
KP_Equal	0xFFBD	equals
KP_Multiply	0xFFAA	
KP_Add	0xFFAB	
KP_Separator	0xFFAC	separator, often comma
KP_Subtract	0xFFAD	
KP_Decimal	0xFFAE	
KP_Divide	0xFFAF	
KP_0 through 9	0xFFB0 through 0xFFB9	
F1 through 35	0xFFBE through 0xFFE0	F11 through 20 have synonyms L1 through 10; F21 through 35 have synonyms R1 through 15
Shift_L	0xFFE1	Left shift
Shift_R	0xFFE2	Right shift
Control_L	0xFFE3	Left control
Control_R	0xFFE4	Right control
Caps_Lock	0xFFE5	Caps lock
Shift_Lock	0xFFE6	Shift lock
Meta_L	0xFFE7	Left meta
Meta_R	0xFFE8	Right meta
Alt_L	0xFFE9	Left alt
Alt_R	0xFFEA	Right alt
Super_L	0xFFEB	Left super
Super_R	0xFFEC	Right super
Hyper_L	0xFFED	Left hyper
Hyper_R	0xFFEE	Right hyper
dead_hook	0xFE61	
dead_horn	0xFE62	
3270_Duplicate	0xFD01	
3270_FieldMark	0xFD02	
3270_Right2	0xFD03	
3270_Left2	0xFD04	
3270_BackTab	0xFD05	
3270_EraseEOF	0xFD06	
3270_EraseInput	0xFD07	
3270_Reset	0xFD08	
3270_Quit	0xFD09	
3270_PA1	0xFD0A	
3270_PA2	0xFD0B	
3270_PA3	0xFD0C	
3270_Test	0xFD0D	
3270_Attn	0xFD0E	
3270_CursorBlink	0xFD0F	
3270_AltCursor	0xFD10	
3270_KeyClick	0xFD11	
3270_Jump	0xFD12	
3270_Ident	0xFD13	
3270_Rule	0xFD14	
3270_Copy	0xFD15	
3270_Play	0xFD16	
3270_Setup	0xFD17	
3270_Record	0xFD18	
3270_ChangeScreen	0xFD19	
3270_DeleteWord	0xFD1A	
3270_ExSelect	0xFD1B	
3270_CursorSelect	0xFD1C	
3270_PrintScreen	0xFD1D	
3270_Enter	0xFD1E	
space	0x020	
exclam	0x021	!
quotedbl	0x022	"
numbersign	0x023	#
dollar	0x024	$
percent	0x025	%
ampersand	0x026	&
apostrophe	0x027	'; quoteright is a deprecated synonym
parenleft	0x028	(
parenright	0x029	)
asterisk	0x02a	*
plus	0x02b	+
comma	0x02c	,
minus	0x02d	-
period	0x02e	.
slash	0x02f	/
0 through 9	0x030 through 0x039	
colon	0x03a	:
semicolon	0x03b	;
less	0x03c	<
equal	0x03d	=
greater	0x03e	>
question	0x03f	?
at	0x040	@
A through Z	0x041 through 0x05a	
bracketleft	0x05b	[
backslash	0x05c	\
bracketright	0x05d	]
asciicircum	0x05e	^
underscore	0x05f	_
grave	0x060	`; quoteleft is a deprecated synonym
a through z	0x061 through 0x07a	
braceleft	0x07b	{
bar	0x07c	|
braceright	0x07d	}
asciitilde	0x07e	~
nobreakspace	0x0a0	
exclamdown	0x0a1	¡
cent	0x0a2	¢
sterling	0x0a3	£
currency	0x0a4	¤
yen	0x0a5	¥
brokenbar	0x0a6	¦
section	0x0a7	§
diaeresis	0x0a8	¨
copyright	0x0a9	©
ordfeminine	0x0aa	ª
guillemotleft	0x0ab	«
notsign	0x0ac	¬
hyphen	0x0ad	
registered	0x0ae	®
macron	0x0af	¯
degree	0x0b0	°
plusminus	0x0b1	±
twosuperior	0x0b2	²
threesuperior	0x0b3	³
acute	0x0b4	´
mu	0x0b5	µ
paragraph	0x0b6	¶
periodcentered	0x0b7	·
cedilla	0x0b8	¸
onesuperior	0x0b9	¹
masculine	0x0ba	º
guillemotright	0x0bb	»
onequarter	0x0bc	¼
onehalf	0x0bd	½
threequarters	0x0be	¾
questiondown	0x0bf	¿
Agrave	0x0c0	À
Aacute	0x0c1	Á
Acircumflex	0x0c2	Â
Atilde	0x0c3	Ã
Adiaeresis	0x0c4	Ä
Aring	0x0c5	Å
AE	0x0c6	Æ
Ccedilla	0x0c7	Ç
Egrave	0x0c8	È
Eacute	0x0c9	É
Ecircumflex	0x0ca	Ê
Ediaeresis	0x0cb	Ë
Igrave	0x0cc	Ì
Iacute	0x0cd	Í
Icircumflex	0x0ce	Î
Idiaeresis	0x0cf	Ï
ETH	0x0d0	Ð; Eth is a deprecated synonym
Ntilde	0x0d1	Ñ
Ograve	0x0d2	Ò
Oacute	0x0d3	Ó
Ocircumflex	0x0d4	Ô
Otilde	0x0d5	Õ
Odiaeresis	0x0d6	Ö
multiply	0x0d7	×
Ooblique	0x0d8	Ø; Oslash is a synonym
Ugrave	0x0d9	Ù
Uacute	0x0da	Ú
Ucircumflex	0x0db	Û
Udiaeresis	0x0dc	Ü
Yacute	0x0dd	Ý
THORN	0x0de	Þ; Thorn is a deprecated synonym
ssharp	0x0df	ß
agrave	0x0e0	à
aacute	0x0e1	á
acircumflex	0x0e2	â
atilde	0x0e3	ã
adiaeresis	0x0e4	ä
aring	0x0e5	å
ae	0x0e6	æ
ccedilla	0x0e7	ç
egrave	0x0e8	è
eacute	0x0e9	é
ecircumflex	0x0ea	ê
ediaeresis	0x0eb	ë
igrave	0x0ec	ì
iacute	0x0ed	í
icircumflex	0x0ee	î
idiaeresis	0x0ef	ï
eth	0x0f0	ð
ntilde	0x0f1	ñ
ograve	0x0f2	ò
oacute	0x0f3	ó
ocircumflex	0x0f4	ô
otilde	0x0f5	õ
odiaeresis	0x0f6	ö
division	0x0f7	÷
oslash	0x0f8	ø; ooblique is a synonym
ugrave	0x0f9	ù
uacute	0x0fa	ú
ucircumflex	0x0fb	û
udiaeresis	0x0fc	ü
yacute	0x0fd	ý
thorn	0x0fe	þ
ydiaeresis	0x0ff	ÿ
Aogonek	0x1a1	
breve	0x1a2	
Lstroke	0x1a3	
Lcaron	0x1a5	
Sacute	0x1a6	Ś
Scaron	0x1a9	
Scedilla	0x1aa	Ş
Tcaron	0x1ab	
Zacute	0x1ac	Ź
Zcaron	0x1ae	
Zabovedot	0x1af	
aogonek	0x1b1	
ogonek	0x1b2	
lstroke	0x1b3	
lcaron	0x1b5	
sacute	0x1b6	ś
caron	0x1b7	
scaron	0x1b9	
scedilla	0x1ba	ş
tcaron	0x1bb	
zacute	0x1bc	ź
doubleacute	0x1bd	
zcaron	0x1be	
zabovedot	0x1bf	
Racute	0x1c0	Ŕ
Abreve	0x1c3	
Lacute	0x1c5	Ĺ
Cacute	0x1c6	Ć
Ccaron	0x1c8	
Eogonek	0x1ca	
Ecaron	0x1cc	
Dcaron	0x1cf	
Dstroke	0x1d0	
Nacute	0x1d1	Ń
Ncaron	0x1d2	
Odoubleacute	0x1d5	
Rcaron	0x1d8	
Uring	0x1d9	
Udoubleacute	0x1db	
Tcedilla	0x1de	
racute	0x1e0	ŕ
abreve	0x1e3	
lacute	0x1e5	ĺ
cacute	0x1e6	ć
ccaron	0x1e8	
eogonek	0x1ea	
ecaron	0x1ec	
dcaron	0x1ef	
dstroke	0x1f0	
nacute	0x1f1	ń
ncaron	0x1f2	
odoubleacute	0x1f5	
udoubleacute	0x1fb	
rcaron	0x1f8	
uring	0x1f9	
tcedilla	0x1fe	
abovedot	0x1ff	
Hstroke	0x2a1	
Hcircumflex	0x2a6	
Iabovedot	0x2a9	
Gbreve	0x2ab	
Jcircumflex	0x2ac	
hstroke	0x2b1	
hcircumflex	0x2b6	
idotless	0x2b9	
gbreve	0x2bb	
jcircumflex	0x2bc	
Cabovedot	0x2c5	
Ccircumflex	0x2c6	
Gabovedot	0x2d5	
Gcircumflex	0x2d8	
Ubreve	0x2dd	
Scircumflex	0x2de	
cabovedot	0x2e5	
ccircumflex	0x2e6	
gabovedot	0x2f5	
gcircumflex	0x2f8	
ubreve	0x2fd	
scircumflex	0x2fe	
kra	0x3a2	kappa is a deprecated synonym
Rcedilla	0x3a3	Ŗ
Itilde	0x3a5	Ĩ
Lcedilla	0x3a6	Ļ
Emacron	0x3aa	
Gcedilla	0x3ab	Ģ
Tslash	0x3ac	
rcedilla	0x3b3	ŗ
itilde	0x3b5	ĩ
lcedilla	0x3b6	ļ
emacron	0x3ba	
gcedilla	0x3bb	
tslash	0x3bc	
ENG	0x3bd	
eng	0x3bf	
Amacron	0x3c0	
Iogonek	0x3c7	
Eabovedot	0x3cc	
Imacron	0x3cf	
Ncedilla	0x3d1	Ņ
Omacron	0x3d2	
Kcedilla	0x3d3	Ķ
Uogonek	0x3d9	
Utilde	0x3dd	Ũ
Umacron	0x3de	
amacron	0x3e0	
iogonek	0x3e7	
eabovedot	0x3ec	
imacron	0x3ef	
ncedilla	0x3f1	ņ
omacron	0x3f2	
kcedilla	0x3f3	ķ
uogonek	0x3f9	
utilde	0x3fd	ũ
umacron	0x3fe	
Babovedot	0x12a1	
babovedot	0x12a2	
Dabovedot	0x12a6	
Wgrave	0x12a8	
Wacute	0x12aa	
dabovedot	0x12ab	
Ygrave	0x12ac	
Fabovedot	0x12b0	
fabovedot	0x12b1	
Mabovedot	0x12b4	
mabovedot	0x12b5	
Pabovedot	0x12b7	
wgrave	0x12b8	
pabovedot	0x12b9	
wacute	0x12ba	
Sabovedot	0x12bb	
ygrave	0x12bc	
Wdiaeresis	0x12bd	
wdiaeresis	0x12be	
sabovedot	0x12bf	
Wcircumflex	0x12d0	
Tabovedot	0x12d7	
Ycircumflex	0x12de	
wcircumflex	0x12f0	
tabovedot	0x12f7	
ycircumflex	0x12fe	
OE	0x13bc	
oe	0x13bd	
Ydiaeresis	0x13be	Ÿ
overline	0x47e	
kana_fullstop	0x4a1	
kana_openingbracket	0x4a2	
kana_closingbracket	0x4a3	
kana_comma	0x4a4	
kana_conjunctive	0x4a5	kana_middledot is a deprecated synonym
kana_WO	0x4a6	
kana_a	0x4a7	
kana_i	0x4a8	
kana_u	0x4a9	
kana_e	0x4aa	
kana_o	0x4ab	
kana_ya	0x4ac	
kana_yu	0x4ad	
kana_yo	0x4ae	
kana_tsu	0x4af	kana_tu is a deprecated synonym
prolongedsound	0x4b0	
kana_A	0x4b1	
kana_I	0x4b2	
kana_U	0x4b3	
kana_E	0x4b4	
kana_O	0x4b5	
kana_KA	0x4b6	
kana_KI	0x4b7	
kana_KU	0x4b8	
kana_KE	0x4b9	
kana_KO	0x4ba	
kana_SA	0x4bb	
kana_SHI	0x4bc	
kana_SU	0x4bd	
kana_SE	0x4be	
kana_SO	0x4bf	
kana_TA	0x4c0	
kana_CHI	0x4c1	kana_TI is a deprecated synonym
kana_TSU	0x4c2	kana_TU is a deprecated synonym
kana_TE	0x4c3	
kana_TO	0x4c4	
kana_NA	0x4c5	
kana_NI	0x4c6	
kana_NU	0x4c7	
kana_NE	0x4c8	
kana_NO	0x4c9	
kana_HA	0x4ca	
kana_HI	0x4cb	
kana_FU	0x4cc	kana_HU is a deprecated synonym
kana_HE	0x4cd	
kana_HO	0x4ce	
kana_MA	0x4cf	
kana_MI	0x4d0	
kana_MU	0x4d1	
kana_ME	0x4d2	
kana_MO	0x4d3	
kana_YA	0x4d4	
kana_YU	0x4d5	
kana_YO	0x4d6	
kana_RA	0x4d7	
kana_RI	0x4d8	
kana_RU	0x4d9	
kana_RE	0x4da	
kana_RO	0x4db	
kana_WA	0x4dc	
kana_N	0x4dd	
voicedsound	0x4de	
semivoicedsound	0x4df	
Farsi_0 through 9	0x590 through 0x599	
Arabic_percent	0x5a5	
Arabic_superscript_alef	0x5a6	
Arabic_tteh	0x5a7	
Arabic_peh	0x5a8	
Arabic_tcheh	0x5a9	
Arabic_ddal	0x5aa	
Arabic_rreh	0x5ab	
Arabic_comma	0x5ac	
Arabic_fullstop	0x5ae	
Arabic_0 through 9	0x5b0 through 0x5b9	
Arabic_semicolon	0x5bb	
Arabic_question_mark	0x5bf	
Arabic_hamza	0x5c1	
Arabic_maddaonalef	0x5c2	
Arabic_hamzaonalef	0x5c3	
Arabic_hamzaonwaw	0x5c4	
Arabic_hamzaunderalef	0x5c5	
Arabic_hamzaonyeh	0x5c6	
Arabic_alef	0x5c7	
Arabic_beh	0x5c8	
Arabic_tehmarbuta	0x5c9	
Arabic_teh	0x5ca	
Arabic_theh	0x5cb	
Arabic_jeem	0x5cc	
Arabic_hah	0x5cd	
Arabic_khah	0x5ce	
Arabic_dal	0x5cf	
Arabic_thal	0x5d0	
Arabic_ra	0x5d1	
Arabic_zain	0x5d2	
Arabic_seen	0x5d3	
Arabic_sheen	0x5d4	
Arabic_sad	0x5d5	
Arabic_dad	0x5d6	
Arabic_tah	0x5d7	
Arabic_zah	0x5d8	
Arabic_ain	0x5d9	
Arabic_ghain	0x5da	
Arabic_tatweel	0x5e0	
Arabic_feh	0x5e1	
Arabic_qaf	0x5e2	
Arabic_kaf	0x5e3	
Arabic_lam	0x5e4	
Arabic_meem	0x5e5	
Arabic_noon	0x5e6	
Arabic_ha	0x5e7	Arabic_heh is a deprecated synonym
Arabic_waw	0x5e8	
Arabic_alefmaksura	0x5e9	
Arabic_yeh	0x5ea	
Arabic_fathatan	0x5eb	
Arabic_dammatan	0x5ec	
Arabic_kasratan	0x5ed	
Arabic_fatha	0x5ee	
Arabic_damma	0x5ef	
Arabic_kasra	0x5f0	
Arabic_shadda	0x5f1	
Arabic_sukun	0x5f2	
Arabic_madda_above	0x5f3	
Arabic_hamza_above	0x5f4	
Arabic_hamza_below	0x5f5	
Arabic_jeh	0x5f6	
Arabic_veh	0x5f7	
Arabic_keheh	0x5f8	
Arabic_gaf	0x5f9	
Arabic_noon_ghunna	0x5fa	
Arabic_heh_doachashmee	0x5fb	
Farsi_yeh	0x5fc	Arabic_farsi_yeh is a synonym
Arabic_yeh_baree	0x5fd	
Arabic_heh_goal	0x5fe	
Cyrillic_GHE_bar	0x680	
Cyrillic_ghe_bar	0x690	
Cyrillic_ZHE_descender	0x681	
Cyrillic_zhe_descender	0x691	
Cyrillic_KA_descender	0x682	
Cyrillic_ka_descender	0x692	
Cyrillic_KA_vertstroke	0x683	
Cyrillic_ka_vertstroke	0x693	
Cyrillic_EN_descender	0x684	
Cyrillic_en_descender	0x694	
Cyrillic_U_straight	0x685	
Cyrillic_u_straight	0x695	
Cyrillic_U_straight_bar	0x686	
Cyrillic_u_straight_bar	0x696	
Cyrillic_HA_descender	0x687	
Cyrillic_ha_descender	0x697	
Cyrillic_CHE_descender	0x688	
Cyrillic_che_descender	0x698	
Cyrillic_CHE_vertstroke	0x689	
Cyrillic_che_vertstroke	0x699	
Cyrillic_SHHA	0x68a	
Cyrillic_shha	0x69a	
Cyrillic_SCHWA	0x68c	
Cyrillic_schwa	0x69c	
Cyrillic_I_macron	0x68d	
Cyrillic_i_macron	0x69d	
Cyrillic_O_bar	0x68e	
Cyrillic_o_bar	0x69e	
Cyrillic_U_macron	0x68f	
Cyrillic_u_macron	0x69f	
Serbian_dje	0x6a1	
Macedonia_gje	0x6a2	
Cyrillic_io	0x6a3	
Ukrainian_ie	0x6a4	Ukranian_je is a deprecated synonym
Macedonia_dse	0x6a5	
Ukrainian_i	0x6a6	Ukranian_i is a deprecated synonym
Ukrainian_yi	0x6a7	Ukranian_yi is a deprecated synonym
Cyrillic_je	0x6a8	Serbian_je is a deprecated synonym
Cyrillic_lje	0x6a9	Serbian_lje is a deprecated synonym
Cyrillic_nje	0x6aa	Serbian_nje is a deprecated synonym
Serbian_tshe	0x6ab	
Macedonia_kje	0x6ac	
Ukrainian_ghe_with_upturn	0x6ad	
Byelorussian_shortu	0x6ae	
Cyrillic_dzhe	0x6af	Serbian_dze is a deprecated synonym
numerosign	0x6b0	
Serbian_DJE	0x6b1	
Macedonia_GJE	0x6b2	
Cyrillic_IO	0x6b3	
Ukrainian_IE	0x6b4	Ukranian_JE is a deprecated synonym
Macedonia_DSE	0x6b5	
Ukrainian_I	0x6b6	Ukranian_I is a deprecated synonym
Ukrainian_YI	0x6b7	Ukranian_YI is a deprecated synonym
Cyrillic_JE	0x6b8	Serbian_JE is a deprecated synonym
Cyrillic_LJE	0x6b9	Serbian_LJE is a deprecated synonym
Cyrillic_NJE	0x6ba	Serbian_NJE is a deprecated synonym
Serbian_TSHE	0x6bb	
Macedonia_KJE	0x6bc	
Ukrainian_GHE_WITH_UPTURN	0x6bd	
Byelorussian_SHORTU	0x6be	
Cyrillic_DZHE	0x6bf	Serbian_DZE is a deprecated synonym
Cyrillic_yu	0x6c0	ю
Cyrillic_a	0x6c1	а
Cyrillic_be	0x6c2	б
Cyrillic_tse	0x6c3	ц
Cyrillic_de	0x6c4	д
Cyrillic_ie	0x6c5	е
Cyrillic_ef	0x6c6	ф
Cyrillic_ghe	0x6c7	г
Cyrillic_ha	0x6c8	х
Cyrillic_i	0x6c9	и
Cyrillic_shorti	0x6ca	й
Cyrillic_ka	0x6cb	к
Cyrillic_el	0x6cc	л
Cyrillic_em	0x6cd	м
Cyrillic_en	0x6ce	н
Cyrillic_o	0x6cf	о
Cyrillic_pe	0x6d0	п
Cyrillic_ya	0x6d1	я
Cyrillic_er	0x6d2	р
Cyrillic_es	0x6d3	с
Cyrillic_te	0x6d4	т
Cyrillic_u	0x6d5	у
Cyrillic_zhe	0x6d6	ж
Cyrillic_ve	0x6d7	в
Cyrillic_softsign	0x6d8	ь
Cyrillic_yeru	0x6d9	ы
Cyrillic_ze	0x6da	з
Cyrillic_sha	0x6db	ш
Cyrillic_e	0x6dc	э
Cyrillic_shcha	0x6dd	щ
Cyrillic_che	0x6de	ч
Cyrillic_hardsign	0x6df	ъ
Cyrillic_YU	0x6e0	Ю
Cyrillic_A	0x6e1	А
Cyrillic_BE	0x6e2	Б
Cyrillic_TSE	0x6e3	Ц
Cyrillic_DE	0x6e4	Д
Cyrillic_IE	0x6e5	Е
Cyrillic_EF	0x6e6	Ф
Cyrillic_GHE	0x6e7	Г
Cyrillic_HA	0x6e8	Х
Cyrillic_I	0x6e9	И
Cyrillic_SHORTI	0x6ea	Й
Cyrillic_KA	0x6eb	К
Cyrillic_EL	0x6ec	Л
Cyrillic_EM	0x6ed	М
Cyrillic_EN	0x6ee	Н
Cyrillic_O	0x6ef	О
Cyrillic_PE	0x6f0	П
Cyrillic_YA	0x6f1	Я
Cyrillic_ER	0x6f2	Р
Cyrillic_ES	0x6f3	С
Cyrillic_TE	0x6f4	Т
Cyrillic_U	0x6f5	У
Cyrillic_ZHE	0x6f6	Ж
Cyrillic_VE	0x6f7	В
Cyrillic_SOFTSIGN	0x6f8	Ь
Cyrillic_YERU	0x6f9	Ы
Cyrillic_ZE	0x6fa	З
Cyrillic_SHA	0x6fb	Ш
Cyrillic_E	0x6fc	Э
Cyrillic_SHCHA	0x6fd	Щ
Cyrillic_CHE	0x6fe	Ч
Cyrillic_HARDSIGN	0x6ff	Ъ
Greek_ALPHAaccent	0x7a1	
Greek_EPSILONaccent	0x7a2	
Greek_ETAaccent	0x7a3	
Greek_IOTAaccent	0x7a4	
Greek_IOTAdieresis	0x7a5	Greek_IOTAdiaeresis is a synonym thanks to a typo
Greek_OMICRONaccent	0x7a7	
Greek_UPSILONaccent	0x7a8	
Greek_UPSILONdieresis	0x7a9	
Greek_OMEGAaccent	0x7ab	
Greek_accentdieresis	0x7ae	
Greek_horizbar	0x7af	
Greek_alphaaccent	0x7b1	
Greek_epsilonaccent	0x7b2	
Greek_etaaccent	0x7b3	
Greek_iotaaccent	0x7b4	
Greek_iotadieresis	0x7b5	
Greek_iotaaccentdieresis	0x7b6	
Greek_omicronaccent	0x7b7	
Greek_upsilonaccent	0x7b8	
Greek_upsilondieresis	0x7b9	
Greek_upsilonaccentdieresis	0x7ba	
Greek_omegaaccent	0x7bb	
Greek_ALPHA	0x7c1	
Greek_BETA	0x7c2	
Greek_GAMMA	0x7c3	
Greek_DELTA	0x7c4	
Greek_EPSILON	0x7c5	
Greek_ZETA	0x7c6	
Greek_ETA	0x7c7	
Greek_THETA	0x7c8	
Greek_IOTA	0x7c9	
Greek_KAPPA	0x7ca	
Greek_LAMDA	0x7cb	Greek_LAMBDA is a deprecated synonym
Greek_MU	0x7cc	
Greek_NU	0x7cd	
Greek_XI	0x7ce	
Greek_OMICRON	0x7cf	
Greek_PI	0x7d0	
Greek_RHO	0x7d1	
Greek_SIGMA	0x7d2	
Greek_TAU	0x7d4	
Greek_UPSILON	0x7d5	
Greek_PHI	0x7d6	
Greek_CHI	0x7d7	
Greek_PSI	0x7d8	
Greek_OMEGA	0x7d9	
Greek_alpha	0x7e1	
Greek_beta	0x7e2	
Greek_gamma	0x7e3	
Greek_delta	0x7e4	
Greek_epsilon	0x7e5	
Greek_zeta	0x7e6	
Greek_eta	0x7e7	
Greek_theta	0x7e8	
Greek_iota	0x7e9	
Greek_kappa	0x7ea	
Greek_lamda	0x7eb	Greek_lambda is a deprecated synonym
Greek_mu	0x7ec	
Greek_nu	0x7ed	
Greek_xi	0x7ee	
Greek_omicron	0x7ef	
Greek_pi	0x7f0	
Greek_rho	0x7f1	
Greek_sigma	0x7f2	
Greek_finalsmallsigma	0x7f3	
Greek_tau	0x7f4	
Greek_upsilon	0x7f5	
Greek_phi	0x7f6	
Greek_chi	0x7f7	
Greek_psi	0x7f8	
Greek_omega	0x7f9	
leftradical	0x8a1	
topleftradical	0x8a2	
horizconnector	0x8a3	
topintegral	0x8a4	
botintegral	0x8a5	
vertconnector	0x8a6	
topleftsqbracket	0x8a7	
botleftsqbracket	0x8a8	
toprightsqbracket	0x8a9	
botrightsqbracket	0x8aa	
topleftparens	0x8ab	
botleftparens	0x8ac	
toprightparens	0x8ad	
botrightparens	0x8ae	
leftmiddlecurlybrace	0x8af	
rightmiddlecurlybrace	0x8b0	
topleftsummation	0x8b1	
botleftsummation	0x8b2	
topvertsummationconnector	0x8b3	
botvertsummationconnector	0x8b4	
toprightsummation	0x8b5	
botrightsummation	0x8b6	
rightmiddlesummation	0x8b7	
lessthanequal	0x8bc	
notequal	0x8bd	
greaterthanequal	0x8be	
integral	0x8bf	
therefore	0x8c0	
variation	0x8c1	
infinity	0x8c2	
nabla	0x8c5	
approximate	0x8c8	
similarequal	0x8c9	
ifonlyif	0x8cd	
implies	0x8ce	
identical	0x8cf	
radical	0x8d6	
includedin	0x8da	
includes	0x8db	
intersection	0x8dc	
union	0x8dd	
logicaland	0x8de	
logicalor	0x8df	
partialderivative	0x8ef	
function	0x8f6	
leftarrow	0x8fb	
uparrow	0x8fc	
rightarrow	0x8fd	
downarrow	0x8fe	
blank	0x9df	
soliddiamond	0x9e0	
checkerboard	0x9e1	
ht	0x9e2	
ff	0x9e3	
cr	0x9e4	
lf	0x9e5	
nl	0x9e8	
vt	0x9e9	
lowrightcorner	0x9ea	
uprightcorner	0x9eb	
upleftcorner	0x9ec	
lowleftcorner	0x9ed	
crossinglines	0x9ee	
horizlinescan1	0x9ef	
horizlinescan3	0x9f0	
horizlinescan5	0x9f1	
horizlinescan7	0x9f2	
horizlinescan9	0x9f3	
leftt	0x9f4	
rightt	0x9f5	
bott	0x9f6	
topt	0x9f7	
vertbar	0x9f8	
emspace	0xaa1	
enspace	0xaa2	
em3space	0xaa3	
em4space	0xaa4	
digitspace	0xaa5	
punctspace	0xaa6	
thinspace	0xaa7	
hairspace	0xaa8	
emdash	0xaa9	
endash	0xaaa	
signifblank	0xaac	
ellipsis	0xaae	
doubbaselinedot	0xaaf	
onethird	0xab0	
twothirds	0xab1	
onefifth	0xab2	
twofifths	0xab3	
threefifths	0xab4	
fourfifths	0xab5	
onesixth	0xab6	
fivesixths	0xab7	
careof	0xab8	
figdash	0xabb	
leftanglebracket	0xabc	
decimalpoint	0xabd	
rightanglebracket	0xabe	
marker	0xabf	
oneeighth	0xac3	
threeeighths	0xac4	
fiveeighths	0xac5	
seveneighths	0xac6	
trademark	0xac9	
signaturemark	0xaca	
trademarkincircle	0xacb	
leftopentriangle	0xacc	
rightopentriangle	0xacd	
emopencircle	0xace	
emopenrectangle	0xacf	
leftsinglequotemark	0xad0	
rightsinglequotemark	0xad1	
leftdoublequotemark	0xad2	
rightdoublequotemark	0xad3	
prescription	0xad4	
minutes	0xad6	
seconds	0xad7	
latincross	0xad9	
hexagram	0xada	
filledrectbullet	0xadb	
filledlefttribullet	0xadc	
filledrighttribullet	0xadd	
emfilledcircle	0xade	
emfilledrect	0xadf	
enopencircbullet	0xae0	
enopensquarebullet	0xae1	
openrectbullet	0xae2	
opentribulletup	0xae3	
opentribulletdown	0xae4	
openstar	0xae5	
enfilledcircbullet	0xae6	
enfilledsqbullet	0xae7	
filledtribulletup	0xae8	
filledtribulletdown	0xae9	
leftpointer	0xaea	
rightpointer	0xaeb	
club	0xaec	
diamond	0xaed	
heart	0xaee	
maltesecross	0xaf0	
dagger	0xaf1	
doubledagger	0xaf2	
checkmark	0xaf3	
ballotcross	0xaf4	
musicalsharp	0xaf5	
musicalflat	0xaf6	
malesymbol	0xaf7	
femalesymbol	0xaf8	
telephone	0xaf9	
telephonerecorder	0xafa	
phonographcopyright	0xafb	
caret	0xafc	
singlelowquotemark	0xafd	
doublelowquotemark	0xafe	
cursor	0xaff	
leftcaret	0xba3	
rightcaret	0xba6	
downcaret	0xba8	
upcaret	0xba9	
overbar	0xbc0	
downtack	0xbc2	
upshoe	0xbc3	
downstile	0xbc4	
underbar	0xbc6	
jot	0xbca	
quad	0xbcc	
uptack	0xbce	
circle	0xbcf	
upstile	0xbd3	
downshoe	0xbd6	
rightshoe	0xbd8	
leftshoe	0xbda	
lefttack	0xbdc	
righttack	0xbfc	
hebrew_doublelowline	0xcdf	
hebrew_aleph	0xce0	
hebrew_bet	0xce1	hebrew_beth is a deprecated synonym
hebrew_gimel	0xce2	hebrew_gimmel is a deprecated synonym
hebrew_dalet	0xce3	hebrew_daleth is a deprecated synonym
hebrew_he	0xce4	
hebrew_waw	0xce5	
hebrew_zain	0xce6	hebrew_zayin is a deprecated synonym
hebrew_chet	0xce7	hebrew_het is a deprecated synonym
hebrew_tet	0xce8	hebrew_teth is a deprecated synonym
hebrew_yod	0xce9	
hebrew_finalkaph	0xcea	
hebrew_kaph	0xceb	
hebrew_lamed	0xcec	
hebrew_finalmem	0xced	
hebrew_mem	0xcee	
hebrew_finalnun	0xcef	
hebrew_nun	0xcf0	
hebrew_samech	0xcf1	hebrew_samekh is a deprecated synonym
hebrew_ayin	0xcf2	
hebrew_finalpe	0xcf3	
hebrew_pe	0xcf4	
hebrew_finalzade	0xcf5	hebrew_finalzadi is a deprecated synonym
hebrew_zade	0xcf6	hebrew_zadi is a deprecated synonym
hebrew_qoph	0xcf7	hebrew_kuf is a deprecated synonym
hebrew_resh	0xcf8	
hebrew_shin	0xcf9	
hebrew_taw	0xcfa	hebrew_taf is a deprecated synonym
Thai_kokai	0xda1	
Thai_khokhai	0xda2	
Thai_khokhuat	0xda3	
Thai_khokhwai	0xda4	
Thai_khokhon	0xda5	
Thai_khorakhang	0xda6	
Thai_ngongu	0xda7	
Thai_chochan	0xda8	
Thai_choching	0xda9	
Thai_chochang	0xdaa	
Thai_soso	0xdab	
Thai_chochoe	0xdac	
Thai_yoying	0xdad	
Thai_dochada	0xdae	
Thai_topatak	0xdaf	
Thai_thothan	0xdb0	
Thai_thonangmontho	0xdb1	
Thai_thophuthao	0xdb2	
Thai_nonen	0xdb3	
Thai_dodek	0xdb4	
Thai_totao	0xdb5	
Thai_thothung	0xdb6	
Thai_thothahan	0xdb7	
Thai_thothong	0xdb8	
Thai_nonu	0xdb9	
Thai_bobaimai	0xdba	
Thai_popla	0xdbb	
Thai_phophung	0xdbc	
Thai_fofa	0xdbd	
Thai_phophan	0xdbe	
Thai_fofan	0xdbf	
Thai_phosamphao	0xdc0	
Thai_moma	0xdc1	
Thai_yoyak	0xdc2	
Thai_rorua	0xdc3	
Thai_ru	0xdc4	
Thai_loling	0xdc5	
Thai_lu	0xdc6	
Thai_wowaen	0xdc7	
Thai_sosala	0xdc8	
Thai_sorusi	0xdc9	
Thai_sosua	0xdca	
Thai_hohip	0xdcb	
Thai_lochula	0xdcc	
Thai_oang	0xdcd	
Thai_honokhuk	0xdce	
Thai_paiyannoi	0xdcf	
Thai_saraa	0xdd0	
Thai_maihanakat	0xdd1	
Thai_saraaa	0xdd2	
Thai_saraam	0xdd3	
Thai_sarai	0xdd4	
Thai_saraii	0xdd5	
Thai_saraue	0xdd6	
Thai_sarauee	0xdd7	
Thai_sarau	0xdd8	
Thai_sarauu	0xdd9	
Thai_phinthu	0xdda	
Thai_maihanakat_maitho	0xdde	
Thai_baht	0xddf	
Thai_sarae	0xde0	
Thai_saraae	0xde1	
Thai_sarao	0xde2	
Thai_saraaimaimuan	0xde3	
Thai_saraaimaimalai	0xde4	
Thai_lakkhangyao	0xde5	
Thai_maiyamok	0xde6	
Thai_maitaikhu	0xde7	
Thai_maiek	0xde8	
Thai_maitho	0xde9	
Thai_maitri	0xdea	
Thai_maichattawa	0xdeb	
Thai_thanthakhat	0xdec	
Thai_nikhahit	0xded	
Thai_leksun	0xdf0	
Thai_leknung	0xdf1	
Thai_leksong	0xdf2	
Thai_leksam	0xdf3	
Thai_leksi	0xdf4	
Thai_lekha	0xdf5	
Thai_lekhok	0xdf6	
Thai_lekchet	0xdf7	
Thai_lekpaet	0xdf8	
Thai_lekkao	0xdf9	
Hangul	0xff31	Hangul start/stop(toggle)
Hangul_Start	0xff32	Hangul start
Hangul_End	0xff33	Hangul end, English start
Hangul_Hanja	0xff34	Start Hangul->Hanja Conversion
Hangul_Jamo	0xff35	Hangul Jamo mode
Hangul_Romaja	0xff36	Hangul Romaja mode
Hangul_Codeinput	0xff37	Hangul code input mode
Hangul_Jeonja	0xff38	Jeonja mode
Hangul_Banja	0xff39	Banja mode
Hangul_PreHanja	0xff3a	Pre Hanja conversion
Hangul_PostHanja	0xff3b	Post Hanja conversion
Hangul_SingleCandidate	0xff3c	Single candidate
Hangul_MultipleCandidate	0xff3d	Multiple candidate
Hangul_PreviousCandidate	0xff3e	Previous candidate
Hangul_Special	0xff3f	Special symbols
Hangul_Kiyeog	0xea1	
Hangul_SsangKiyeog	0xea2	
Hangul_KiyeogSios	0xea3	
Hangul_Nieun	0xea4	
Hangul_NieunJieuj	0xea5	
Hangul_NieunHieuh	0xea6	
Hangul_Dikeud	0xea7	
Hangul_SsangDikeud	0xea8	
Hangul_Rieul	0xea9	
Hangul_RieulKiyeog	0xeaa	
Hangul_RieulMieum	0xeab	
Hangul_RieulPieub	0xeac	
Hangul_RieulSios	0xead	
Hangul_RieulTieut	0xeae	
Hangul_RieulPhieuf	0xeaf	
Hangul_RieulHieuh	0xeb0	
Hangul_Mieum	0xeb1	
Hangul_Pieub	0xeb2	
Hangul_SsangPieub	0xeb3	
Hangul_PieubSios	0xeb4	
Hangul_Sios	0xeb5	
Hangul_SsangSios	0xeb6	
Hangul_Ieung	0xeb7	
Hangul_Jieuj	0xeb8	
Hangul_SsangJieuj	0xeb9	
Hangul_Cieuc	0xeba	
Hangul_Khieuq	0xebb	
Hangul_Tieut	0xebc	
Hangul_Phieuf	0xebd	
Hangul_Hieuh	0xebe	
Hangul_A	0xebf	
Hangul_AE	0xec0	
Hangul_YA	0xec1	
Hangul_YAE	0xec2	
Hangul_EO	0xec3	
Hangul_E	0xec4	
Hangul_YEO	0xec5	
Hangul_YE	0xec6	
Hangul_O	0xec7	
Hangul_WA	0xec8	
Hangul_WAE	0xec9	
Hangul_OE	0xeca	
Hangul_YO	0xecb	
Hangul_U	0xecc	
Hangul_WEO	0xecd	
Hangul_WE	0xece	
Hangul_WI	0xecf	
Hangul_YU	0xed0	
Hangul_EU	0xed1	
Hangul_YI	0xed2	
Hangul_I	0xed3	
Hangul_J_Kiyeog	0xed4	
Hangul_J_SsangKiyeog	0xed5	
Hangul_J_KiyeogSios	0xed6	
Hangul_J_Nieun	0xed7	
Hangul_J_NieunJieuj	0xed8	
Hangul_J_NieunHieuh	0xed9	
Hangul_J_Dikeud	0xeda	
Hangul_J_Rieul	0xedb	
Hangul_J_RieulKiyeog	0xedc	
Hangul_J_RieulMieum	0xedd	
Hangul_J_RieulPieub	0xede	
Hangul_J_RieulSios	0xedf	
Hangul_J_RieulTieut	0xee0	
Hangul_J_RieulPhieuf	0xee1	
Hangul_J_RieulHieuh	0xee2	
Hangul_J_Mieum	0xee3	
Hangul_J_Pieub	0xee4	
Hangul_J_PieubSios	0xee5	
Hangul_J_Sios	0xee6	
Hangul_J_SsangSios	0xee7	
Hangul_J_Ieung	0xee8	
Hangul_J_Jieuj	0xee9	
Hangul_J_Cieuc	0xeea	
Hangul_J_Khieuq	0xeeb	
Hangul_J_Tieut	0xeec	
Hangul_J_Phieuf	0xeed	
Hangul_J_Hieuh	0xeee	
Hangul_RieulYeorinHieuh	0xeef	
Hangul_SunkyeongeumMieum	0xef0	
Hangul_SunkyeongeumPieub	0xef1	
Hangul_PanSios	0xef2	
Hangul_KkogjiDalrinIeung	0xef3	
Hangul_SunkyeongeumPhieuf	0xef4	
Hangul_YeorinHieuh	0xef5	
Hangul_AraeA	0xef6	
Hangul_AraeAE	0xef7	
Hangul_J_PanSios	0xef8	
Hangul_J_KkogjiDalrinIeung	0xef9	
Hangul_J_YeorinHieuh	0xefa	
Korean_Won	0xeff	
Armenian_eternity	0x14a1	
Armenian_ligature_ew	0x14a2	
Armenian_full_stop	0x14a3	Armenian_verjaket is a deprecated synonym
Armenian_parenright	0x14a4	
Armenian_parenleft	0x14a5	
Armenian_guillemotright	0x14a6	
Armenian_guillemotleft	0x14a7	
Armenian_em_dash	0x14a8	
Armenian_dot	0x14a9	Armenian_mijaket is a deprecated synonym
Armenian_separation_mark	0x14aa	Armenian_but is a deprecated synonym
Armenian_comma	0x14ab	
Armenian_en_dash	0x14ac	
Armenian_hyphen	0x14ad	Armenian_yentamna is a deprecated synonym
Armenian_ellipsis	0x14ae	
Armenian_exclam	0x14af	Armenian_amanak is a deprecated synonym
Armenian_accent	0x14b0	Armenian_shesht is a deprecated synonym
Armenian_question	0x14b1	Armenian_paruyk is a deprecated synonym
Armenian_AYB	0x14b2	
Armenian_ayb	0x14b3	
Armenian_BEN	0x14b4	
Armenian_ben	0x14b5	
Armenian_GIM	0x14b6	
Armenian_gim	0x14b7	
Armenian_DA	0x14b8	
Armenian_da	0x14b9	
Armenian_YECH	0x14ba	
Armenian_yech	0x14bb	
Armenian_ZA	0x14bc	
Armenian_za	0x14bd	
Armenian_E	0x14be	
Armenian_e	0x14bf	
Armenian_AT	0x14c0	
Armenian_at	0x14c1	
Armenian_TO	0x14c2	
Armenian_to	0x14c3	
Armenian_ZHE	0x14c4	
Armenian_zhe	0x14c5	
Armenian_INI	0x14c6	
Armenian_ini	0x14c7	
Armenian_LYUN	0x14c8	
Armenian_lyun	0x14c9	
Armenian_KHE	0x14ca	
Armenian_khe	0x14cb	
Armenian_TSA	0x14cc	
Armenian_tsa	0x14cd	
Armenian_KEN	0x14ce	
Armenian_ken	0x14cf	
Armenian_HO	0x14d0	
Armenian_ho	0x14d1	
Armenian_DZA	0x14d2	
Armenian_dza	0x14d3	
Armenian_GHAT	0x14d4	
Armenian_ghat	0x14d5	
Armenian_TCHE	0x14d6	
Armenian_tche	0x14d7	
Armenian_MEN	0x14d8	
Armenian_men	0x14d9	
Armenian_HI	0x14da	
Armenian_hi	0x14db	
Armenian_NU	0x14dc	
Armenian_nu	0x14dd	
Armenian_SHA	0x14de	
Armenian_sha	0x14df	
Armenian_VO	0x14e0	
Armenian_vo	0x14e1	
Armenian_CHA	0x14e2	
Armenian_cha	0x14e3	
Armenian_PE	0x14e4	
Armenian_pe	0x14e5	
Armenian_JE	0x14e6	
Armenian_je	0x14e7	
Armenian_RA	0x14e8	
Armenian_ra	0x14e9	
Armenian_SE	0x14ea	
Armenian_se	0x14eb	
Armenian_VEV	0x14ec	
Armenian_vev	0x14ed	
Armenian_TYUN	0x14ee	
Armenian_tyun	0x14ef	
Armenian_RE	0x14f0	
Armenian_re	0x14f1	
Armenian_TSO	0x14f2	
Armenian_tso	0x14f3	
Armenian_VYUN	0x14f4	
Armenian_vyun	0x14f5	
Armenian_PYUR	0x14f6	
Armenian_pyur	0x14f7	
Armenian_KE	0x14f8	
Armenian_ke	0x14f9	
Armenian_O	0x14fa	
Armenian_o	0x14fb	
Armenian_FE	0x14fc	
Armenian_fe	0x14fd	
Armenian_apostrophe	0x14fe	
Armenian_section_sign	0x14ff	
Georgian_an	0x15d0	
Georgian_ban	0x15d1	
Georgian_gan	0x15d2	
Georgian_don	0x15d3	
Georgian_en	0x15d4	
Georgian_vin	0x15d5	
Georgian_zen	0x15d6	
Georgian_tan	0x15d7	
Georgian_in	0x15d8	
Georgian_kan	0x15d9	
Georgian_las	0x15da	
Georgian_man	0x15db	
Georgian_nar	0x15dc	
Georgian_on	0x15dd	
Georgian_par	0x15de	
Georgian_zhar	0x15df	
Georgian_rae	0x15e0	
Georgian_san	0x15e1	
Georgian_tar	0x15e2	
Georgian_un	0x15e3	
Georgian_phar	0x15e4	
Georgian_khar	0x15e5	
Georgian_ghan	0x15e6	
Georgian_qar	0x15e7	
Georgian_shin	0x15e8	
Georgian_chin	0x15e9	
Georgian_can	0x15ea	
Georgian_jil	0x15eb	
Georgian_cil	0x15ec	
Georgian_char	0x15ed	
Georgian_xan	0x15ee	
Georgian_jhan	0x15ef	
Georgian_hae	0x15f0	
Georgian_he	0x15f1	
Georgian_hie	0x15f2	
Georgian_we	0x15f3	
Georgian_har	0x15f4	
Georgian_hoe	0x15f5	
Georgian_fi	0x15f6	
Ccedillaabovedot	0x16a2	
Xabovedot	0x16a3	
Qabovedot	0x16a5	
IE	0x16a7	
UO	0x16a8	
Zstroke	0x16a9	
ccedillaabovedot	0x16b2	
xabovedot	0x16b3	
qabovedot	0x16b5	
ie	0x16b7	
uo	0x16b8	
zstroke	0x16b9	
SCHWA	0x16c6	
schwa	0x16f6	
Lbelowdot	0x16d1	
Lstrokebelowdot	0x16d2	
lbelowdot	0x16e1	
lstrokebelowdot	0x16e2	
Gtilde	0x16d3	
gtilde	0x16e3	
Abelowdot	0x1ea0	
abelowdot	0x1ea1	
Ahook	0x1ea2	
ahook	0x1ea3	
Acircumflexacute	0x1ea4	
acircumflexacute	0x1ea5	
Acircumflexgrave	0x1ea6	
acircumflexgrave	0x1ea7	
Acircumflexhook	0x1ea8	
acircumflexhook	0x1ea9	
Acircumflextilde	0x1eaa	
acircumflextilde	0x1eab	
Acircumflexbelowdot	0x1eac	
acircumflexbelowdot	0x1ead	
Abreveacute	0x1eae	
abreveacute	0x1eaf	
Abrevegrave	0x1eb0	
abrevegrave	0x1eb1	
Abrevehook	0x1eb2	
abrevehook	0x1eb3	
Abrevetilde	0x1eb4	
abrevetilde	0x1eb5	
Abrevebelowdot	0x1eb6	
abrevebelowdot	0x1eb7	
Ebelowdot	0x1eb8	
ebelowdot	0x1eb9	
Ehook	0x1eba	
ehook	0x1ebb	
Etilde	0x1ebc	
etilde	0x1ebd	
Ecircumflexacute	0x1ebe	
ecircumflexacute	0x1ebf	
Ecircumflexgrave	0x1ec0	
ecircumflexgrave	0x1ec1	
Ecircumflexhook	0x1ec2	
ecircumflexhook	0x1ec3	
Ecircumflextilde	0x1ec4	
ecircumflextilde	0x1ec5	
Ecircumflexbelowdot	0x1ec6	
ecircumflexbelowdot	0x1ec7	
Ihook	0x1ec8	
ihook	0x1ec9	
Ibelowdot	0x1eca	
ibelowdot	0x1ecb	
Obelowdot	0x1ecc	
obelowdot	0x1ecd	
Ohook	0x1ece	
ohook	0x1ecf	
Ocircumflexacute	0x1ed0	
ocircumflexacute	0x1ed1	
Ocircumflexgrave	0x1ed2	
ocircumflexgrave	0x1ed3	
Ocircumflexhook	0x1ed4	
ocircumflexhook	0x1ed5	
Ocircumflextilde	0x1ed6	
ocircumflextilde	0x1ed7	
Ocircumflexbelowdot	0x1ed8	
ocircumflexbelowdot	0x1ed9	
Ohornacute	0x1eda	
ohornacute	0x1edb	
Ohorngrave	0x1edc	
ohorngrave	0x1edd	
Ohornhook	0x1ede	
ohornhook	0x1edf	
Ohorntilde	0x1ee0	
ohorntilde	0x1ee1	
Ohornbelowdot	0x1ee2	
ohornbelowdot	0x1ee3	
Ubelowdot	0x1ee4	
ubelowdot	0x1ee5	
Uhook	0x1ee6	
uhook	0x1ee7	
Uhornacute	0x1ee8	
uhornacute	0x1ee9	
Uhorngrave	0x1eea	
uhorngrave	0x1eeb	
Uhornhook	0x1eec	
uhornhook	0x1eed	
Uhorntilde	0x1eee	
uhorntilde	0x1eef	
Uhornbelowdot	0x1ef0	
uhornbelowdot	0x1ef1	
Ybelowdot	0x1ef4	
ybelowdot	0x1ef5	
Yhook	0x1ef6	
yhook	0x1ef7	
Ytilde	0x1ef8	
ytilde	0x1ef9	
Ohorn	0x1efa	U+01a0
ohorn	0x1efb	U+01a1
Uhorn	0x1efc	U+01af
uhorn	0x1efd	U+01b0
combining_tilde	0x1e9f	U+0303
combining_grave	0x1ef2	U+0300
combining_acute	0x1ef3	U+0301
combining_hook	0x1efe	U+0309
combining_belowdot	0x1eff	U+0323
EcuSign	0x20a0	
ColonSign	0x20a1	
CruzeiroSign	0x20a2	
FFrancSign	0x20a3	
LiraSign	0x20a4	
MillSign	0x20a5	
NairaSign	0x20a6	
PesetaSign	0x20a7	
RupeeSign	0x20a8	
WonSign	0x20a9	
NewSheqelSign	0x20aa	
DongSign	0x20ab	
EuroSign	0x20ac	
* Sun 05 Oct 2014 12:17:29 AM JST

* Sun 05 Oct 2014 12:17:29 AM JST

* Sun 05 Oct 2014 12:17:29 AM JST
Symbol name	Numeric Value	Visual representation/Explanation

* Sun 05 Oct 2014 12:19:41 AM JST
0xFFFFFF
* Sun 05 Oct 2014 12:19:59 AM JST
0xFFFFFF
* Sun 05 Oct 2014 12:20:24 AM JST
0xFF08
* Sun 05 Oct 2014 12:20:28 AM JST
	Erase
* Sun 05 Oct 2014 12:20:28 AM JST

Linefeed
* Sun 05 Oct 2014 12:20:40 AM JST

* Sun 05 Oct 2014 12:20:41 AM JST

* Sun 05 Oct 2014 12:20:41 AM JST
0xFFFFFF, 
* Sun 05 Oct 2014 12:20:46 AM JST
0xFFFFFF
* Sun 05 Oct 2014 12:20:54 AM JST
0xFF08
* Sun 05 Oct 2014 12:20:54 AM JST
0xFF09
* Sun 05 Oct 2014 12:20:55 AM JST
0xFF0A
* Sun 05 Oct 2014 12:20:55 AM JST
0xFF0B
* Sun 05 Oct 2014 12:20:55 AM JST
0xFF0D
* Sun 05 Oct 2014 12:20:55 AM JST
0xFF13
* Sun 05 Oct 2014 12:20:56 AM JST
0xFF14
* Sun 05 Oct 2014 12:20:56 AM JST
0xFF15
* Sun 05 Oct 2014 12:20:56 AM JST
0xFF1B
* Sun 05 Oct 2014 12:20:56 AM JST
0xFFFF
* Sun 05 Oct 2014 12:20:56 AM JST
0xFF20
* Sun 05 Oct 2014 12:20:57 AM JST
0xFF37
* Sun 05 Oct 2014 12:20:57 AM JST
0xFF3C
* Sun 05 Oct 2014 12:20:57 AM JST
0xFF3D
* Sun 05 Oct 2014 12:20:58 AM JST
0xFF3E
* Sun 05 Oct 2014 12:20:58 AM JST
0xFF21
* Sun 05 Oct 2014 12:20:58 AM JST
0xFF22
* Sun 05 Oct 2014 12:20:59 AM JST
0xFF23
* Sun 05 Oct 2014 12:20:59 AM JST
0xFF24
* Sun 05 Oct 2014 12:20:59 AM JST
0xFF25
* Sun 05 Oct 2014 12:20:59 AM JST
0xFF26
* Sun 05 Oct 2014 12:21:00 AM JST
0xFF27
* Sun 05 Oct 2014 12:21:00 AM JST
0xFF28
* Sun 05 Oct 2014 12:21:00 AM JST
0xFF29
* Sun 05 Oct 2014 12:21:00 AM JST
0xFF2A
* Sun 05 Oct 2014 12:21:00 AM JST
0xFF2B
* Sun 05 Oct 2014 12:21:01 AM JST
0xFF2C
* Sun 05 Oct 2014 12:21:01 AM JST
0xFF2D
* Sun 05 Oct 2014 12:21:01 AM JST
0xFF2E
* Sun 05 Oct 2014 12:21:01 AM JST
0xFF2F
* Sun 05 Oct 2014 12:21:02 AM JST
0xFF30
* Sun 05 Oct 2014 12:21:02 AM JST
0xFF50
* Sun 05 Oct 2014 12:21:03 AM JST
0xFF51
* Sun 05 Oct 2014 12:21:03 AM JST
0xFF52
* Sun 05 Oct 2014 12:21:03 AM JST
0xFF53
* Sun 05 Oct 2014 12:21:03 AM JST
0xFF54
* Sun 05 Oct 2014 12:21:04 AM JST
0xFF55
* Sun 05 Oct 2014 12:21:04 AM JST
0xFF56
* Sun 05 Oct 2014 12:21:04 AM JST
0xFF57
* Sun 05 Oct 2014 12:21:04 AM JST
0xFF58
* Sun 05 Oct 2014 12:21:04 AM JST
0xFF60
* Sun 05 Oct 2014 12:21:05 AM JST
0xFF61
* Sun 05 Oct 2014 12:21:05 AM JST
0xFF62
* Sun 05 Oct 2014 12:21:05 AM JST
0xFF63
* Sun 05 Oct 2014 12:21:05 AM JST
0xFF65
* Sun 05 Oct 2014 12:21:05 AM JST
0xFF66
* Sun 05 Oct 2014 12:21:05 AM JST
0xFF67
* Sun 05 Oct 2014 12:21:06 AM JST
0xFF68
* Sun 05 Oct 2014 12:21:06 AM JST
0xFF69
* Sun 05 Oct 2014 12:21:06 AM JST
0xFF6A
* Sun 05 Oct 2014 12:21:06 AM JST
0xFF6B
* Sun 05 Oct 2014 12:21:06 AM JST
0xFF7E
* Sun 05 Oct 2014 12:21:06 AM JST
0xFF7F
* Sun 05 Oct 2014 12:21:07 AM JST
0xFF80
* Sun 05 Oct 2014 12:21:07 AM JST
0xFF89
* Sun 05 Oct 2014 12:21:07 AM JST
0xFF8D
* Sun 05 Oct 2014 12:21:07 AM JST
0xFF91
* Sun 05 Oct 2014 12:21:07 AM JST
0xFF92
* Sun 05 Oct 2014 12:21:07 AM JST
0xFF93
* Sun 05 Oct 2014 12:21:07 AM JST
0xFF94
* Sun 05 Oct 2014 12:21:07 AM JST
0xFF95
* Sun 05 Oct 2014 12:21:07 AM JST
0xFF96
* Sun 05 Oct 2014 12:21:07 AM JST
0xFF97
* Sun 05 Oct 2014 12:21:08 AM JST
0xFF98
* Sun 05 Oct 2014 12:21:08 AM JST
0xFF99
* Sun 05 Oct 2014 12:21:08 AM JST
0xFF9A
* Sun 05 Oct 2014 12:21:08 AM JST
0xFF9B
* Sun 05 Oct 2014 12:21:08 AM JST
0xFF9C
* Sun 05 Oct 2014 12:21:08 AM JST
0xFF9D
* Sun 05 Oct 2014 12:21:08 AM JST
0xFF9E
* Sun 05 Oct 2014 12:21:08 AM JST
0xFF9F
* Sun 05 Oct 2014 12:21:08 AM JST
0xFFBD
* Sun 05 Oct 2014 12:21:09 AM JST
0xFFAA
* Sun 05 Oct 2014 12:21:09 AM JST
0xFFAB
* Sun 05 Oct 2014 12:21:09 AM JST
0xFFAC
* Sun 05 Oct 2014 12:21:09 AM JST
0xFFAD
* Sun 05 Oct 2014 12:21:09 AM JST
0xFFAE
* Sun 05 Oct 2014 12:21:09 AM JST
0xFFAF
* Sun 05 Oct 2014 12:21:09 AM JST
0xFFB0
* Sun 05 Oct 2014 12:21:09 AM JST
0xFFBE
* Sun 05 Oct 2014 12:21:09 AM JST
0xFFE1
* Sun 05 Oct 2014 12:21:09 AM JST
0xFFE2
* Sun 05 Oct 2014 12:21:10 AM JST
0xFFE3
* Sun 05 Oct 2014 12:21:10 AM JST
0xFFE4
* Sun 05 Oct 2014 12:21:10 AM JST
0xFFE5
* Sun 05 Oct 2014 12:21:10 AM JST
0xFFE6
* Sun 05 Oct 2014 12:21:10 AM JST
0xFFE7
* Sun 05 Oct 2014 12:21:10 AM JST
0xFFE8
* Sun 05 Oct 2014 12:21:10 AM JST
0xFFE9
* Sun 05 Oct 2014 12:21:10 AM JST
0xFFEA
* Sun 05 Oct 2014 12:21:11 AM JST
0xFFEB
* Sun 05 Oct 2014 12:21:11 AM JST
0xFFEC
* Sun 05 Oct 2014 12:21:11 AM JST
0xFFED
* Sun 05 Oct 2014 12:21:11 AM JST
0xFFEE
* Sun 05 Oct 2014 12:21:11 AM JST
0xFE61
* Sun 05 Oct 2014 12:21:11 AM JST
0xFE62
* Sun 05 Oct 2014 12:21:11 AM JST
0xFD01
* Sun 05 Oct 2014 12:21:11 AM JST
0xFD02
* Sun 05 Oct 2014 12:21:11 AM JST
0xFD03
* Sun 05 Oct 2014 12:21:11 AM JST
0xFD04
* Sun 05 Oct 2014 12:21:12 AM JST
0xFD05
* Sun 05 Oct 2014 12:21:12 AM JST
0xFD06
* Sun 05 Oct 2014 12:21:12 AM JST
0xFD07
* Sun 05 Oct 2014 12:21:12 AM JST
0xFD08
* Sun 05 Oct 2014 12:21:12 AM JST
0xFD09
* Sun 05 Oct 2014 12:21:12 AM JST
0xFD0A
* Sun 05 Oct 2014 12:21:12 AM JST
0xFD0B
* Sun 05 Oct 2014 12:21:12 AM JST
0xFD0C
* Sun 05 Oct 2014 12:21:12 AM JST
0xFD0D
* Sun 05 Oct 2014 12:21:12 AM JST
0xFD0E
* Sun 05 Oct 2014 12:21:13 AM JST
0xFD0F
* Sun 05 Oct 2014 12:21:13 AM JST
0xFD10
* Sun 05 Oct 2014 12:21:13 AM JST
0xFD11
* Sun 05 Oct 2014 12:21:13 AM JST
0xFD12
* Sun 05 Oct 2014 12:21:13 AM JST
0xFD13
* Sun 05 Oct 2014 12:21:13 AM JST
0xFD14
* Sun 05 Oct 2014 12:21:13 AM JST
0xFD15
* Sun 05 Oct 2014 12:21:13 AM JST
0xFD16
* Sun 05 Oct 2014 12:21:13 AM JST
0xFD17
* Sun 05 Oct 2014 12:21:14 AM JST
0xFD18
* Sun 05 Oct 2014 12:21:14 AM JST
0xFD19
* Sun 05 Oct 2014 12:21:14 AM JST
0xFD1A
* Sun 05 Oct 2014 12:21:14 AM JST
0xFD1B
* Sun 05 Oct 2014 12:21:14 AM JST
0xFD1C
* Sun 05 Oct 2014 12:21:14 AM JST
0xFD1D
* Sun 05 Oct 2014 12:21:14 AM JST
0xFD1E
* Sun 05 Oct 2014 12:21:14 AM JST
0x020
* Sun 05 Oct 2014 12:21:14 AM JST
0x021
* Sun 05 Oct 2014 12:21:14 AM JST
0x022
* Sun 05 Oct 2014 12:21:15 AM JST
0x023
* Sun 05 Oct 2014 12:21:15 AM JST
0x024
* Sun 05 Oct 2014 12:21:15 AM JST
0x025
* Sun 05 Oct 2014 12:21:15 AM JST
0x026
* Sun 05 Oct 2014 12:21:15 AM JST
0x027
* Sun 05 Oct 2014 12:21:15 AM JST
0x028
* Sun 05 Oct 2014 12:21:15 AM JST
0x029
* Sun 05 Oct 2014 12:21:15 AM JST
0x02a
* Sun 05 Oct 2014 12:21:15 AM JST
0x02b
* Sun 05 Oct 2014 12:21:16 AM JST
0x02c
* Sun 05 Oct 2014 12:21:16 AM JST
0x02d
* Sun 05 Oct 2014 12:21:16 AM JST
0x02e
* Sun 05 Oct 2014 12:21:16 AM JST
0x02f
* Sun 05 Oct 2014 12:21:16 AM JST
0x030
* Sun 05 Oct 2014 12:21:16 AM JST
0x03a
* Sun 05 Oct 2014 12:21:16 AM JST
0x03b
* Sun 05 Oct 2014 12:21:16 AM JST
0x03c
* Sun 05 Oct 2014 12:21:16 AM JST
0x03d
* Sun 05 Oct 2014 12:21:17 AM JST
0x03e
* Sun 05 Oct 2014 12:21:17 AM JST
0x03f
* Sun 05 Oct 2014 12:21:17 AM JST
0x040
* Sun 05 Oct 2014 12:21:17 AM JST
0x041
* Sun 05 Oct 2014 12:21:17 AM JST
0x05b
* Sun 05 Oct 2014 12:21:17 AM JST
0x05c
* Sun 05 Oct 2014 12:21:18 AM JST
0x05d
* Sun 05 Oct 2014 12:21:18 AM JST
0x05e
* Sun 05 Oct 2014 12:21:18 AM JST
0x05f
* Sun 05 Oct 2014 12:21:18 AM JST
0x060
* Sun 05 Oct 2014 12:21:18 AM JST
0x061
* Sun 05 Oct 2014 12:21:18 AM JST
0x07b
* Sun 05 Oct 2014 12:21:18 AM JST
0x07c
* Sun 05 Oct 2014 12:21:18 AM JST
0x07d
* Sun 05 Oct 2014 12:21:18 AM JST
0x07e
* Sun 05 Oct 2014 12:21:18 AM JST
0x0a0
* Sun 05 Oct 2014 12:21:19 AM JST
0x0a1
* Sun 05 Oct 2014 12:21:19 AM JST
0x0a2
* Sun 05 Oct 2014 12:21:19 AM JST
0x0a3
* Sun 05 Oct 2014 12:21:19 AM JST
0x0a4
* Sun 05 Oct 2014 12:21:19 AM JST
0x0a5
* Sun 05 Oct 2014 12:21:19 AM JST
0x0a6
* Sun 05 Oct 2014 12:21:19 AM JST
0x0a7
* Sun 05 Oct 2014 12:21:19 AM JST
0x0a8
* Sun 05 Oct 2014 12:21:19 AM JST
0x0a9
* Sun 05 Oct 2014 12:21:19 AM JST
0x0aa
* Sun 05 Oct 2014 12:21:20 AM JST
0x0ab
* Sun 05 Oct 2014 12:21:20 AM JST
0x0ac
* Sun 05 Oct 2014 12:21:20 AM JST
0x0ad
* Sun 05 Oct 2014 12:21:20 AM JST
0x0ae
* Sun 05 Oct 2014 12:21:20 AM JST
0x0af
* Sun 05 Oct 2014 12:21:20 AM JST
0x0b0
* Sun 05 Oct 2014 12:21:20 AM JST
0x0b1
* Sun 05 Oct 2014 12:21:20 AM JST
0x0b2
* Sun 05 Oct 2014 12:21:21 AM JST
0x0b3
* Sun 05 Oct 2014 12:21:21 AM JST
0x0b4
* Sun 05 Oct 2014 12:21:21 AM JST
0x0b5
* Sun 05 Oct 2014 12:21:21 AM JST
0x0b6
* Sun 05 Oct 2014 12:21:21 AM JST
0x0b7
* Sun 05 Oct 2014 12:21:21 AM JST
0x0b8
* Sun 05 Oct 2014 12:21:21 AM JST
0x0b9
* Sun 05 Oct 2014 12:21:21 AM JST
0x0ba
* Sun 05 Oct 2014 12:21:21 AM JST
0x0bb
* Sun 05 Oct 2014 12:21:22 AM JST
0x0bc
* Sun 05 Oct 2014 12:21:22 AM JST
0x0bd
* Sun 05 Oct 2014 12:21:22 AM JST
0x0be
* Sun 05 Oct 2014 12:21:22 AM JST
0x0bf
* Sun 05 Oct 2014 12:21:22 AM JST
0x0c0
* Sun 05 Oct 2014 12:21:22 AM JST
0x0c1
* Sun 05 Oct 2014 12:21:22 AM JST
0x0c2
* Sun 05 Oct 2014 12:21:22 AM JST
0x0c3
* Sun 05 Oct 2014 12:21:22 AM JST
0x0c4
* Sun 05 Oct 2014 12:21:22 AM JST
0x0c5
* Sun 05 Oct 2014 12:21:23 AM JST
0x0c6
* Sun 05 Oct 2014 12:21:23 AM JST
0x0c7
* Sun 05 Oct 2014 12:21:23 AM JST
0x0c8
* Sun 05 Oct 2014 12:21:23 AM JST
0x0c9
* Sun 05 Oct 2014 12:21:23 AM JST
0x0ca
* Sun 05 Oct 2014 12:21:23 AM JST
0x0cb
* Sun 05 Oct 2014 12:21:23 AM JST
0x0cc
* Sun 05 Oct 2014 12:21:23 AM JST
0x0cd
* Sun 05 Oct 2014 12:21:23 AM JST
0x0ce
* Sun 05 Oct 2014 12:21:24 AM JST
0x0cf
* Sun 05 Oct 2014 12:21:24 AM JST
0x0d0
* Sun 05 Oct 2014 12:21:24 AM JST
0x0d1
* Sun 05 Oct 2014 12:21:24 AM JST
0x0d2
* Sun 05 Oct 2014 12:21:24 AM JST
0x0d3
* Sun 05 Oct 2014 12:21:24 AM JST
0x0d4
* Sun 05 Oct 2014 12:21:24 AM JST
0x0d5
* Sun 05 Oct 2014 12:21:24 AM JST
0x0d6
* Sun 05 Oct 2014 12:21:24 AM JST
0x0d7
* Sun 05 Oct 2014 12:21:24 AM JST
0x0d8
* Sun 05 Oct 2014 12:21:25 AM JST
0x0d9
* Sun 05 Oct 2014 12:21:25 AM JST
0x0da
* Sun 05 Oct 2014 12:21:25 AM JST
0x0db
* Sun 05 Oct 2014 12:21:25 AM JST
0x0dc
* Sun 05 Oct 2014 12:21:25 AM JST
0x0dd
* Sun 05 Oct 2014 12:21:25 AM JST
0x0de
* Sun 05 Oct 2014 12:21:25 AM JST
0x0df
* Sun 05 Oct 2014 12:21:25 AM JST
0x0e0
* Sun 05 Oct 2014 12:21:25 AM JST
0x0e1
* Sun 05 Oct 2014 12:21:25 AM JST
0x0e2
* Sun 05 Oct 2014 12:21:26 AM JST
0x0e3
* Sun 05 Oct 2014 12:21:26 AM JST
0x0e4
* Sun 05 Oct 2014 12:21:26 AM JST
0x0e5
* Sun 05 Oct 2014 12:21:26 AM JST
0x0e6
* Sun 05 Oct 2014 12:21:29 AM JST
0x0e7
* Sun 05 Oct 2014 12:21:30 AM JST
0x0e8
* Sun 05 Oct 2014 12:21:30 AM JST
0x0e9
* Sun 05 Oct 2014 12:21:31 AM JST
0x0ea
* Sun 05 Oct 2014 12:21:31 AM JST
0x0eb
* Sun 05 Oct 2014 12:21:31 AM JST
0x0ec
* Sun 05 Oct 2014 12:21:32 AM JST
0x0ed
* Sun 05 Oct 2014 12:21:32 AM JST
0x0ee
* Sun 05 Oct 2014 12:21:32 AM JST
0x0ef
* Sun 05 Oct 2014 12:21:32 AM JST
0x0f0
* Sun 05 Oct 2014 12:21:33 AM JST
0x0f1
* Sun 05 Oct 2014 12:21:33 AM JST
0x0f2
* Sun 05 Oct 2014 12:21:33 AM JST
0x0f3
* Sun 05 Oct 2014 12:21:33 AM JST
0x0f4
* Sun 05 Oct 2014 12:21:33 AM JST
0x0f5
* Sun 05 Oct 2014 12:21:34 AM JST
0x0f6
* Sun 05 Oct 2014 12:21:34 AM JST
0x0f7
* Sun 05 Oct 2014 12:21:34 AM JST
0x0f8
* Sun 05 Oct 2014 12:21:34 AM JST
0x0f9
* Sun 05 Oct 2014 12:21:34 AM JST
0x0fa
* Sun 05 Oct 2014 12:21:35 AM JST
0x0fb
* Sun 05 Oct 2014 12:21:35 AM JST
0x0fc
* Sun 05 Oct 2014 12:21:35 AM JST
0x0fd
* Sun 05 Oct 2014 12:21:35 AM JST
0x0fe
* Sun 05 Oct 2014 12:21:35 AM JST
0x0ff
* Sun 05 Oct 2014 12:21:36 AM JST
0x1a1
* Sun 05 Oct 2014 12:21:36 AM JST
0x1a2
* Sun 05 Oct 2014 12:21:36 AM JST
0x1a3
* Sun 05 Oct 2014 12:21:36 AM JST
0x1a5
* Sun 05 Oct 2014 12:21:36 AM JST
0x1a6
* Sun 05 Oct 2014 12:21:37 AM JST
0x1a9
* Sun 05 Oct 2014 12:21:37 AM JST
0x1aa
* Sun 05 Oct 2014 12:21:37 AM JST
0x1ab
* Sun 05 Oct 2014 12:21:37 AM JST
0x1ac
* Sun 05 Oct 2014 12:21:38 AM JST
0x1ae
* Sun 05 Oct 2014 12:21:38 AM JST
0x1af
* Sun 05 Oct 2014 12:21:38 AM JST
0x1b1
* Sun 05 Oct 2014 12:21:38 AM JST
0x1b2
* Sun 05 Oct 2014 12:21:38 AM JST
0x1b3
* Sun 05 Oct 2014 12:21:39 AM JST
0x1b5
* Sun 05 Oct 2014 12:21:39 AM JST
0x1b6
* Sun 05 Oct 2014 12:21:39 AM JST
0x1b7
* Sun 05 Oct 2014 12:21:39 AM JST
0x1b9
* Sun 05 Oct 2014 12:21:39 AM JST
0x1ba
* Sun 05 Oct 2014 12:21:40 AM JST
0x1bb
* Sun 05 Oct 2014 12:21:40 AM JST
0x1bc
* Sun 05 Oct 2014 12:21:40 AM JST
0x1bd
* Sun 05 Oct 2014 12:21:40 AM JST
0x1be
* Sun 05 Oct 2014 12:21:41 AM JST
0x1bf
* Sun 05 Oct 2014 12:21:41 AM JST
0x1c0
* Sun 05 Oct 2014 12:21:41 AM JST
0x1c3
* Sun 05 Oct 2014 12:21:41 AM JST
0x1c5
* Sun 05 Oct 2014 12:21:41 AM JST
0x1c6
* Sun 05 Oct 2014 12:21:41 AM JST
0x1c8
* Sun 05 Oct 2014 12:21:42 AM JST
0x1ca
* Sun 05 Oct 2014 12:21:42 AM JST
0x1cc
* Sun 05 Oct 2014 12:21:42 AM JST
0x1cf
* Sun 05 Oct 2014 12:21:42 AM JST
0x1d0
* Sun 05 Oct 2014 12:21:43 AM JST
0x1d1
* Sun 05 Oct 2014 12:21:43 AM JST
0x1d2
* Sun 05 Oct 2014 12:21:43 AM JST
0x1d5
* Sun 05 Oct 2014 12:21:43 AM JST
0x1d8
* Sun 05 Oct 2014 12:21:43 AM JST
0x1d9
* Sun 05 Oct 2014 12:21:44 AM JST
0x1db
* Sun 05 Oct 2014 12:21:44 AM JST
0x1de
* Sun 05 Oct 2014 12:21:44 AM JST
0x1e0
* Sun 05 Oct 2014 12:21:44 AM JST
0x1e3
* Sun 05 Oct 2014 12:21:44 AM JST
0x1e5
* Sun 05 Oct 2014 12:21:45 AM JST
0x1e6
* Sun 05 Oct 2014 12:21:45 AM JST
0x1e8
* Sun 05 Oct 2014 12:21:45 AM JST
0x1ea
* Sun 05 Oct 2014 12:21:45 AM JST
0x1ec
* Sun 05 Oct 2014 12:21:46 AM JST
0x1ef
* Sun 05 Oct 2014 12:21:46 AM JST
0x1f0
* Sun 05 Oct 2014 12:21:46 AM JST
0x1f1
* Sun 05 Oct 2014 12:21:46 AM JST
0x1f2
* Sun 05 Oct 2014 12:21:46 AM JST
0x1f5
* Sun 05 Oct 2014 12:21:47 AM JST
0x1fb
* Sun 05 Oct 2014 12:21:47 AM JST
0x1f8
* Sun 05 Oct 2014 12:21:48 AM JST
0x1f9
* Sun 05 Oct 2014 12:21:48 AM JST
0x1fe
* Sun 05 Oct 2014 12:21:48 AM JST
0x1ff
* Sun 05 Oct 2014 12:21:49 AM JST
0x2a1
* Sun 05 Oct 2014 12:21:49 AM JST
0x2a6
* Sun 05 Oct 2014 12:21:49 AM JST
0x2a9
* Sun 05 Oct 2014 12:21:49 AM JST
0x2ab
* Sun 05 Oct 2014 12:21:49 AM JST
0x2ac
* Sun 05 Oct 2014 12:21:49 AM JST
0x2b1
* Sun 05 Oct 2014 12:21:49 AM JST
0x2b6
* Sun 05 Oct 2014 12:21:50 AM JST
0x2b9
* Sun 05 Oct 2014 12:21:50 AM JST
0x2bb
* Sun 05 Oct 2014 12:21:50 AM JST
0x2bc
* Sun 05 Oct 2014 12:21:50 AM JST
0x2c5
* Sun 05 Oct 2014 12:21:51 AM JST
0x2c6
* Sun 05 Oct 2014 12:21:51 AM JST
0x2d5
* Sun 05 Oct 2014 12:21:51 AM JST
0x2d8
* Sun 05 Oct 2014 12:21:51 AM JST
0x2dd
* Sun 05 Oct 2014 12:21:51 AM JST
0x2de
* Sun 05 Oct 2014 12:21:52 AM JST
0x2e5
* Sun 05 Oct 2014 12:21:52 AM JST
0x2e6
* Sun 05 Oct 2014 12:21:52 AM JST
0x2f5
* Sun 05 Oct 2014 12:21:52 AM JST
0x2f8
* Sun 05 Oct 2014 12:21:52 AM JST
0x2fd
* Sun 05 Oct 2014 12:21:53 AM JST
0x2fe
* Sun 05 Oct 2014 12:21:53 AM JST
0x3a2
* Sun 05 Oct 2014 12:21:53 AM JST
0x3a3
* Sun 05 Oct 2014 12:21:53 AM JST
0x3a5
* Sun 05 Oct 2014 12:21:54 AM JST
0x3a6
* Sun 05 Oct 2014 12:21:54 AM JST
0x3aa
* Sun 05 Oct 2014 12:21:54 AM JST
0x3ab
* Sun 05 Oct 2014 12:21:54 AM JST
0x3ac
* Sun 05 Oct 2014 12:21:54 AM JST
0x3b3
* Sun 05 Oct 2014 12:21:54 AM JST
0x3b5
* Sun 05 Oct 2014 12:21:54 AM JST
0x3b6
* Sun 05 Oct 2014 12:21:55 AM JST
0x3ba
* Sun 05 Oct 2014 12:21:55 AM JST
0x3bb
* Sun 05 Oct 2014 12:21:55 AM JST
0x3bc
* Sun 05 Oct 2014 12:21:55 AM JST
0x3bd
* Sun 05 Oct 2014 12:21:55 AM JST
0x3bf
* Sun 05 Oct 2014 12:21:56 AM JST
0x3c0
* Sun 05 Oct 2014 12:21:56 AM JST
0x3c7
* Sun 05 Oct 2014 12:21:56 AM JST
0x3cc
* Sun 05 Oct 2014 12:21:56 AM JST
0x3cf
* Sun 05 Oct 2014 12:21:56 AM JST
0x3d1
* Sun 05 Oct 2014 12:21:56 AM JST
0x3d2
* Sun 05 Oct 2014 12:21:57 AM JST
0x3d3
* Sun 05 Oct 2014 12:21:57 AM JST
0x3d9
* Sun 05 Oct 2014 12:21:57 AM JST
0x3dd
* Sun 05 Oct 2014 12:21:57 AM JST
0x3de
* Sun 05 Oct 2014 12:21:57 AM JST
0x3e0
* Sun 05 Oct 2014 12:21:58 AM JST
0x3e7
* Sun 05 Oct 2014 12:21:58 AM JST
0x3ec
* Sun 05 Oct 2014 12:21:58 AM JST
0x3ef
* Sun 05 Oct 2014 12:21:58 AM JST
0x3f1
* Sun 05 Oct 2014 12:21:58 AM JST
0x3f2
* Sun 05 Oct 2014 12:21:58 AM JST
0x3f3
* Sun 05 Oct 2014 12:21:59 AM JST
0x3f9
* Sun 05 Oct 2014 12:21:59 AM JST
0x3fd
* Sun 05 Oct 2014 12:21:59 AM JST
0x3fe
* Sun 05 Oct 2014 12:21:59 AM JST
0x12a1
* Sun 05 Oct 2014 12:21:59 AM JST
0x12a2
* Sun 05 Oct 2014 12:22:00 AM JST
0x12a6
* Sun 05 Oct 2014 12:22:00 AM JST
0x12a8
* Sun 05 Oct 2014 12:22:00 AM JST
0x12aa
* Sun 05 Oct 2014 12:22:00 AM JST
0x12ab
* Sun 05 Oct 2014 12:22:01 AM JST
0x12ac
* Sun 05 Oct 2014 12:22:01 AM JST
0x12b0
* Sun 05 Oct 2014 12:22:01 AM JST
0x12b1
* Sun 05 Oct 2014 12:22:01 AM JST
0x12b4
* Sun 05 Oct 2014 12:22:01 AM JST
0x12b5
* Sun 05 Oct 2014 12:22:01 AM JST
0x12b7
* Sun 05 Oct 2014 12:22:02 AM JST
0x12b8
* Sun 05 Oct 2014 12:22:02 AM JST
0x12b9
* Sun 05 Oct 2014 12:22:02 AM JST
0x12ba
* Sun 05 Oct 2014 12:22:02 AM JST
0x12bb
* Sun 05 Oct 2014 12:22:02 AM JST
0x12bc
* Sun 05 Oct 2014 12:22:03 AM JST
0x12bd
* Sun 05 Oct 2014 12:22:03 AM JST
0x12be
* Sun 05 Oct 2014 12:22:03 AM JST
0x12bf
* Sun 05 Oct 2014 12:22:03 AM JST
0x12d0
* Sun 05 Oct 2014 12:22:03 AM JST
0x12d7
* Sun 05 Oct 2014 12:22:03 AM JST
0x12de
* Sun 05 Oct 2014 12:22:04 AM JST
0x12f0
* Sun 05 Oct 2014 12:22:04 AM JST
0x12f7
* Sun 05 Oct 2014 12:22:04 AM JST
0x12fe
* Sun 05 Oct 2014 12:22:04 AM JST
0x13bc
* Sun 05 Oct 2014 12:22:04 AM JST
0x13bd
* Sun 05 Oct 2014 12:22:05 AM JST
0x13be
* Sun 05 Oct 2014 12:22:05 AM JST
0x47e
* Sun 05 Oct 2014 12:22:05 AM JST
0x4a1
* Sun 05 Oct 2014 12:22:05 AM JST
0x4a2
* Sun 05 Oct 2014 12:22:05 AM JST
0x4a3
* Sun 05 Oct 2014 12:22:06 AM JST
0x4a4
* Sun 05 Oct 2014 12:22:06 AM JST
0x4a5
* Sun 05 Oct 2014 12:22:06 AM JST
0x4a6
* Sun 05 Oct 2014 12:22:06 AM JST
0x4a7
* Sun 05 Oct 2014 12:22:06 AM JST
0x4a8
* Sun 05 Oct 2014 12:22:07 AM JST
0x4a9
* Sun 05 Oct 2014 12:22:07 AM JST
0x4aa
* Sun 05 Oct 2014 12:22:07 AM JST
0x4ab
* Sun 05 Oct 2014 12:22:07 AM JST
0x4ac
* Sun 05 Oct 2014 12:22:07 AM JST
0x4ad
* Sun 05 Oct 2014 12:22:08 AM JST
0x4ae
* Sun 05 Oct 2014 12:22:08 AM JST
0x4af
* Sun 05 Oct 2014 12:22:08 AM JST
0x4b0
* Sun 05 Oct 2014 12:22:08 AM JST
0x4b1
* Sun 05 Oct 2014 12:22:08 AM JST
0x4b2
* Sun 05 Oct 2014 12:22:09 AM JST
0x4b3
* Sun 05 Oct 2014 12:22:09 AM JST
0x4b4
* Sun 05 Oct 2014 12:22:09 AM JST
0x4b5
* Sun 05 Oct 2014 12:22:09 AM JST
0x4b6
* Sun 05 Oct 2014 12:22:09 AM JST
0x4b7
* Sun 05 Oct 2014 12:22:10 AM JST
0x4b8
* Sun 05 Oct 2014 12:22:10 AM JST
0x4b9
* Sun 05 Oct 2014 12:22:10 AM JST
0x4ba
* Sun 05 Oct 2014 12:22:10 AM JST
0x4bb
* Sun 05 Oct 2014 12:22:11 AM JST
0x4bc
* Sun 05 Oct 2014 12:22:11 AM JST
0x4bd
* Sun 05 Oct 2014 12:22:11 AM JST
0x4be
* Sun 05 Oct 2014 12:22:11 AM JST
0x4bf
* Sun 05 Oct 2014 12:22:11 AM JST
0x4c0
* Sun 05 Oct 2014 12:22:11 AM JST
0x4c1
* Sun 05 Oct 2014 12:22:11 AM JST
0x4c2
* Sun 05 Oct 2014 12:22:12 AM JST
0x4c3
* Sun 05 Oct 2014 12:22:12 AM JST
0x4c4
* Sun 05 Oct 2014 12:22:12 AM JST
0x4c5
* Sun 05 Oct 2014 12:22:12 AM JST
0x4c6
* Sun 05 Oct 2014 12:22:12 AM JST
0x4c7
* Sun 05 Oct 2014 12:22:13 AM JST
0x4c8
* Sun 05 Oct 2014 12:22:13 AM JST
0x4c9
* Sun 05 Oct 2014 12:22:13 AM JST
0x4ca
* Sun 05 Oct 2014 12:22:13 AM JST
0x4cb
* Sun 05 Oct 2014 12:22:13 AM JST
0x4cc
* Sun 05 Oct 2014 12:22:14 AM JST
0x4cd
* Sun 05 Oct 2014 12:22:14 AM JST
0x4ce
* Sun 05 Oct 2014 12:22:14 AM JST
0x4cf
* Sun 05 Oct 2014 12:22:14 AM JST
0x4d0
* Sun 05 Oct 2014 12:22:14 AM JST
0x4d1
* Sun 05 Oct 2014 12:22:15 AM JST
0x4d2
* Sun 05 Oct 2014 12:22:15 AM JST
0x4d3
* Sun 05 Oct 2014 12:22:15 AM JST
0x4d4
* Sun 05 Oct 2014 12:22:15 AM JST
0x4d5
* Sun 05 Oct 2014 12:22:15 AM JST
0x4d6
* Sun 05 Oct 2014 12:22:15 AM JST
0x4d7
* Sun 05 Oct 2014 12:22:15 AM JST
0x4d8
* Sun 05 Oct 2014 12:22:16 AM JST
0x4d9
* Sun 05 Oct 2014 12:22:16 AM JST
0x4da
* Sun 05 Oct 2014 12:22:16 AM JST
0x4db
* Sun 05 Oct 2014 12:22:16 AM JST
0x4dc
* Sun 05 Oct 2014 12:22:16 AM JST
0x4dd
* Sun 05 Oct 2014 12:22:16 AM JST
0x4de
* Sun 05 Oct 2014 12:22:16 AM JST
0x4df
* Sun 05 Oct 2014 12:22:16 AM JST
0x590
* Sun 05 Oct 2014 12:22:16 AM JST
0x5a5
* Sun 05 Oct 2014 12:22:16 AM JST
0x5a6
* Sun 05 Oct 2014 12:22:17 AM JST
0x5a7
* Sun 05 Oct 2014 12:22:17 AM JST
0x5a8
* Sun 05 Oct 2014 12:22:17 AM JST
0x5a9
* Sun 05 Oct 2014 12:22:17 AM JST
0x5aa
* Sun 05 Oct 2014 12:22:17 AM JST
0x5ab
* Sun 05 Oct 2014 12:22:17 AM JST
0x5ac
* Sun 05 Oct 2014 12:22:17 AM JST
0x5ae
* Sun 05 Oct 2014 12:22:17 AM JST
0x5b0
* Sun 05 Oct 2014 12:22:17 AM JST
0x5bb
* Sun 05 Oct 2014 12:22:17 AM JST
0x5bf
* Sun 05 Oct 2014 12:22:18 AM JST
0x5c1
* Sun 05 Oct 2014 12:22:18 AM JST
0x5c2
* Sun 05 Oct 2014 12:22:18 AM JST
0x5c3
* Sun 05 Oct 2014 12:22:18 AM JST
0x5c4
* Sun 05 Oct 2014 12:22:18 AM JST
0x5c5
* Sun 05 Oct 2014 12:22:18 AM JST
0x5c6
* Sun 05 Oct 2014 12:22:18 AM JST
0x5c7
* Sun 05 Oct 2014 12:22:18 AM JST
0x5c8
* Sun 05 Oct 2014 12:22:18 AM JST
0x5c9
* Sun 05 Oct 2014 12:22:18 AM JST
0x5ca
* Sun 05 Oct 2014 12:22:19 AM JST
0x5cb
* Sun 05 Oct 2014 12:22:19 AM JST
0x5cc
* Sun 05 Oct 2014 12:22:19 AM JST
0x5cd
* Sun 05 Oct 2014 12:22:19 AM JST
0x5ce
* Sun 05 Oct 2014 12:22:19 AM JST
0x5cf
* Sun 05 Oct 2014 12:22:19 AM JST
0x5d0
* Sun 05 Oct 2014 12:22:19 AM JST
0x5d1
* Sun 05 Oct 2014 12:22:19 AM JST
0x5d2
* Sun 05 Oct 2014 12:22:19 AM JST
0x5d3
* Sun 05 Oct 2014 12:22:19 AM JST
0x5d4
* Sun 05 Oct 2014 12:22:20 AM JST
0x5d5
* Sun 05 Oct 2014 12:22:20 AM JST
0x5d6
* Sun 05 Oct 2014 12:22:20 AM JST
0x5d7
* Sun 05 Oct 2014 12:22:20 AM JST
0x5d8
* Sun 05 Oct 2014 12:22:20 AM JST
0x5d9
* Sun 05 Oct 2014 12:22:20 AM JST
0x5da
* Sun 05 Oct 2014 12:22:20 AM JST
0x5e0
* Sun 05 Oct 2014 12:22:21 AM JST
0x5e1
* Sun 05 Oct 2014 12:22:21 AM JST
0x5e2
* Sun 05 Oct 2014 12:22:21 AM JST
0x5e3
* Sun 05 Oct 2014 12:22:21 AM JST
0x5e4
* Sun 05 Oct 2014 12:22:21 AM JST
0x5e5
* Sun 05 Oct 2014 12:22:21 AM JST
0x5e6
* Sun 05 Oct 2014 12:22:21 AM JST
0x5e7
* Sun 05 Oct 2014 12:22:21 AM JST
0x5e8
* Sun 05 Oct 2014 12:22:21 AM JST
0x5e9
* Sun 05 Oct 2014 12:22:22 AM JST
0x5ea
* Sun 05 Oct 2014 12:22:22 AM JST
0x5eb
* Sun 05 Oct 2014 12:22:22 AM JST
0x5ec
* Sun 05 Oct 2014 12:22:22 AM JST
0x5ed
* Sun 05 Oct 2014 12:22:22 AM JST
0x5ee
* Sun 05 Oct 2014 12:22:22 AM JST
0x5ef
* Sun 05 Oct 2014 12:22:22 AM JST
0x5f0
* Sun 05 Oct 2014 12:22:22 AM JST
0x5f1
* Sun 05 Oct 2014 12:22:22 AM JST
0x5f2
* Sun 05 Oct 2014 12:22:22 AM JST
0x5f3
* Sun 05 Oct 2014 12:22:23 AM JST
0x5f4
* Sun 05 Oct 2014 12:22:23 AM JST
0x5f5
* Sun 05 Oct 2014 12:22:23 AM JST
0x5f6
* Sun 05 Oct 2014 12:22:23 AM JST
0x5f7
* Sun 05 Oct 2014 12:22:23 AM JST
0x5f8
* Sun 05 Oct 2014 12:22:23 AM JST
0x5f9
* Sun 05 Oct 2014 12:22:23 AM JST
0x5fa
* Sun 05 Oct 2014 12:22:24 AM JST
0x5fb
* Sun 05 Oct 2014 12:22:24 AM JST
0x5fc
* Sun 05 Oct 2014 12:22:24 AM JST
0x5fd
* Sun 05 Oct 2014 12:22:24 AM JST
0x5fe
* Sun 05 Oct 2014 12:22:24 AM JST
0x680
* Sun 05 Oct 2014 12:22:24 AM JST
0x690
* Sun 05 Oct 2014 12:22:24 AM JST
0x681
* Sun 05 Oct 2014 12:22:24 AM JST
0x691
* Sun 05 Oct 2014 12:22:25 AM JST
0x682
* Sun 05 Oct 2014 12:22:25 AM JST
0x692
* Sun 05 Oct 2014 12:22:25 AM JST
0x683
* Sun 05 Oct 2014 12:22:25 AM JST
0x693
* Sun 05 Oct 2014 12:22:25 AM JST
0x684
* Sun 05 Oct 2014 12:22:25 AM JST
0x694
* Sun 05 Oct 2014 12:22:25 AM JST
0x685
* Sun 05 Oct 2014 12:22:25 AM JST
0x695
* Sun 05 Oct 2014 12:22:25 AM JST
0x686
* Sun 05 Oct 2014 12:22:26 AM JST
0x696
* Sun 05 Oct 2014 12:22:26 AM JST
0x687
* Sun 05 Oct 2014 12:22:26 AM JST
0x697
* Sun 05 Oct 2014 12:22:26 AM JST
0x688
* Sun 05 Oct 2014 12:22:26 AM JST
0x698
* Sun 05 Oct 2014 12:22:26 AM JST
0x689
* Sun 05 Oct 2014 12:22:26 AM JST
0x699
* Sun 05 Oct 2014 12:22:26 AM JST
0x68a
* Sun 05 Oct 2014 12:22:26 AM JST
0x69a
* Sun 05 Oct 2014 12:22:26 AM JST
0x68c
* Sun 05 Oct 2014 12:22:26 AM JST
0x69c
* Sun 05 Oct 2014 12:22:27 AM JST
0x68d
* Sun 05 Oct 2014 12:22:27 AM JST
0x69d
* Sun 05 Oct 2014 12:22:27 AM JST
0x68e
* Sun 05 Oct 2014 12:22:27 AM JST
0x69e
* Sun 05 Oct 2014 12:22:27 AM JST
0x68f
* Sun 05 Oct 2014 12:22:27 AM JST
0x69f
* Sun 05 Oct 2014 12:22:27 AM JST
0x6a1
* Sun 05 Oct 2014 12:22:27 AM JST
0x6a2
* Sun 05 Oct 2014 12:22:27 AM JST
0x6a3
* Sun 05 Oct 2014 12:22:27 AM JST
0x6a4
* Sun 05 Oct 2014 12:22:28 AM JST
0x6a5
* Sun 05 Oct 2014 12:22:28 AM JST
0x6a6
* Sun 05 Oct 2014 12:22:28 AM JST
0x6a7
* Sun 05 Oct 2014 12:22:28 AM JST
0x6a8
* Sun 05 Oct 2014 12:22:28 AM JST
0x6a9
* Sun 05 Oct 2014 12:22:28 AM JST
0x6aa
* Sun 05 Oct 2014 12:22:28 AM JST
0x6ab
* Sun 05 Oct 2014 12:22:28 AM JST
0x6ac
* Sun 05 Oct 2014 12:22:29 AM JST
0x6ad
* Sun 05 Oct 2014 12:22:29 AM JST
0x6ae
* Sun 05 Oct 2014 12:22:29 AM JST
0x6af
* Sun 05 Oct 2014 12:22:29 AM JST
0x6b0
* Sun 05 Oct 2014 12:22:29 AM JST
0x6b1
* Sun 05 Oct 2014 12:22:29 AM JST
0x6b2
* Sun 05 Oct 2014 12:22:29 AM JST
0x6b3
* Sun 05 Oct 2014 12:22:29 AM JST
0x6b4
* Sun 05 Oct 2014 12:22:29 AM JST
0x6b5
* Sun 05 Oct 2014 12:22:29 AM JST
0x6b6
* Sun 05 Oct 2014 12:22:30 AM JST
0x6b7
* Sun 05 Oct 2014 12:22:30 AM JST
0x6b8
* Sun 05 Oct 2014 12:22:30 AM JST
0x6b9
* Sun 05 Oct 2014 12:22:30 AM JST
0x6ba
* Sun 05 Oct 2014 12:22:30 AM JST
0x6bb
* Sun 05 Oct 2014 12:22:30 AM JST
0x6bc
* Sun 05 Oct 2014 12:22:30 AM JST
0x6bd
* Sun 05 Oct 2014 12:22:30 AM JST
0x6be
* Sun 05 Oct 2014 12:22:31 AM JST
0x6bf
* Sun 05 Oct 2014 12:22:31 AM JST
0x6c0
* Sun 05 Oct 2014 12:22:31 AM JST
0x6c1
* Sun 05 Oct 2014 12:22:31 AM JST
0x6c2
* Sun 05 Oct 2014 12:22:31 AM JST
0x6c3
* Sun 05 Oct 2014 12:22:31 AM JST
0x6c4
* Sun 05 Oct 2014 12:22:31 AM JST
0x6c5
* Sun 05 Oct 2014 12:22:31 AM JST
0x6c6
* Sun 05 Oct 2014 12:22:31 AM JST
0x6c7
* Sun 05 Oct 2014 12:22:32 AM JST
0x6c8
* Sun 05 Oct 2014 12:22:32 AM JST
0x6c9
* Sun 05 Oct 2014 12:22:32 AM JST
0x6ca
* Sun 05 Oct 2014 12:22:32 AM JST
0x6cb
* Sun 05 Oct 2014 12:22:32 AM JST
0x6cc
* Sun 05 Oct 2014 12:22:32 AM JST
0x6cd
* Sun 05 Oct 2014 12:22:32 AM JST
0x6ce
* Sun 05 Oct 2014 12:22:32 AM JST
0x6cf
* Sun 05 Oct 2014 12:22:32 AM JST
0x6d0
* Sun 05 Oct 2014 12:22:33 AM JST
0x6d1
* Sun 05 Oct 2014 12:22:33 AM JST
0x6d2
* Sun 05 Oct 2014 12:22:33 AM JST
0x6d3
* Sun 05 Oct 2014 12:22:33 AM JST
0x6d4
* Sun 05 Oct 2014 12:22:33 AM JST
0x6d5
* Sun 05 Oct 2014 12:22:33 AM JST
0x6d6
* Sun 05 Oct 2014 12:22:33 AM JST
0x6d7
* Sun 05 Oct 2014 12:22:33 AM JST
0x6d8
* Sun 05 Oct 2014 12:22:33 AM JST
0x6d9
* Sun 05 Oct 2014 12:22:34 AM JST
0x6da
* Sun 05 Oct 2014 12:22:34 AM JST
0x6db
* Sun 05 Oct 2014 12:22:34 AM JST
0x6dc
* Sun 05 Oct 2014 12:22:34 AM JST
0x6dd
* Sun 05 Oct 2014 12:22:34 AM JST
0x6de
* Sun 05 Oct 2014 12:22:34 AM JST
0x6df
* Sun 05 Oct 2014 12:22:34 AM JST
0x6e0
* Sun 05 Oct 2014 12:22:34 AM JST
0x6e1
* Sun 05 Oct 2014 12:22:34 AM JST
0x6e2
* Sun 05 Oct 2014 12:22:35 AM JST
0x6e3
* Sun 05 Oct 2014 12:22:35 AM JST
0x6e4
* Sun 05 Oct 2014 12:22:35 AM JST
0x6e5
* Sun 05 Oct 2014 12:22:35 AM JST
0x6e6
* Sun 05 Oct 2014 12:22:35 AM JST
0x6e7
* Sun 05 Oct 2014 12:22:35 AM JST
0x6e8
* Sun 05 Oct 2014 12:22:36 AM JST
0x6e9
* Sun 05 Oct 2014 12:22:36 AM JST
0x6ea
* Sun 05 Oct 2014 12:22:36 AM JST
0x6eb
* Sun 05 Oct 2014 12:22:36 AM JST
0x6ec
* Sun 05 Oct 2014 12:22:36 AM JST
0x6ed
* Sun 05 Oct 2014 12:22:36 AM JST
0x6ee
* Sun 05 Oct 2014 12:22:36 AM JST
0x6ef
* Sun 05 Oct 2014 12:22:36 AM JST
0x6f0
* Sun 05 Oct 2014 12:22:36 AM JST
0x6f1
* Sun 05 Oct 2014 12:22:36 AM JST
0x6f2
* Sun 05 Oct 2014 12:22:37 AM JST
0x6f3
* Sun 05 Oct 2014 12:22:37 AM JST
0x6f4
* Sun 05 Oct 2014 12:22:37 AM JST
0x6f5
* Sun 05 Oct 2014 12:22:37 AM JST
0x6f6
* Sun 05 Oct 2014 12:22:37 AM JST
0x6f7
* Sun 05 Oct 2014 12:22:37 AM JST
0x6f8
* Sun 05 Oct 2014 12:22:37 AM JST
0x6f9
* Sun 05 Oct 2014 12:22:37 AM JST
0x6fa
* Sun 05 Oct 2014 12:22:37 AM JST
0x6fb
* Sun 05 Oct 2014 12:22:37 AM JST
0x6fc
* Sun 05 Oct 2014 12:22:38 AM JST
0x6fd
* Sun 05 Oct 2014 12:22:38 AM JST
0x6fe
* Sun 05 Oct 2014 12:22:38 AM JST
0x6ff
* Sun 05 Oct 2014 12:22:38 AM JST
0x7a1
* Sun 05 Oct 2014 12:22:38 AM JST
0x7a2
* Sun 05 Oct 2014 12:22:38 AM JST
0x7a3
* Sun 05 Oct 2014 12:22:38 AM JST
0x7a4
* Sun 05 Oct 2014 12:22:38 AM JST
0x7a5
* Sun 05 Oct 2014 12:22:38 AM JST
0x7a7
* Sun 05 Oct 2014 12:22:38 AM JST
0x7a8
* Sun 05 Oct 2014 12:22:39 AM JST
0x7a9
* Sun 05 Oct 2014 12:22:39 AM JST
0x7ab
* Sun 05 Oct 2014 12:22:39 AM JST
0x7ae
* Sun 05 Oct 2014 12:22:39 AM JST
0x7af
* Sun 05 Oct 2014 12:22:39 AM JST
0x7b1
* Sun 05 Oct 2014 12:22:39 AM JST
0x7b2
* Sun 05 Oct 2014 12:22:39 AM JST
0x7b3
* Sun 05 Oct 2014 12:22:39 AM JST
0x7b4
* Sun 05 Oct 2014 12:22:39 AM JST
0x7b5
* Sun 05 Oct 2014 12:22:40 AM JST
0x7b6
* Sun 05 Oct 2014 12:22:40 AM JST
0x7b7
* Sun 05 Oct 2014 12:22:40 AM JST
0x7b8
* Sun 05 Oct 2014 12:22:40 AM JST
0x7b9
* Sun 05 Oct 2014 12:22:40 AM JST
0x7ba
* Sun 05 Oct 2014 12:22:40 AM JST
0x7bb
* Sun 05 Oct 2014 12:22:40 AM JST
0x7c1
* Sun 05 Oct 2014 12:22:40 AM JST
0x7c2
* Sun 05 Oct 2014 12:22:41 AM JST
0x7c3
* Sun 05 Oct 2014 12:22:41 AM JST
0x7c4
* Sun 05 Oct 2014 12:22:41 AM JST
0x7c5
* Sun 05 Oct 2014 12:22:41 AM JST
0x7c6
* Sun 05 Oct 2014 12:22:41 AM JST
0x7c7
* Sun 05 Oct 2014 12:22:41 AM JST
0x7c8
* Sun 05 Oct 2014 12:22:41 AM JST
0x7c9
* Sun 05 Oct 2014 12:22:41 AM JST
0x7ca
* Sun 05 Oct 2014 12:22:41 AM JST
0x7cb
* Sun 05 Oct 2014 12:22:41 AM JST
0x7cc
* Sun 05 Oct 2014 12:22:42 AM JST
0x7cd
* Sun 05 Oct 2014 12:22:42 AM JST
0x7ce
* Sun 05 Oct 2014 12:22:42 AM JST
0x7cf
* Sun 05 Oct 2014 12:22:42 AM JST
0x7d0
* Sun 05 Oct 2014 12:22:42 AM JST
0x7d1
* Sun 05 Oct 2014 12:22:42 AM JST
0x7d2
* Sun 05 Oct 2014 12:22:42 AM JST
0x7d4
* Sun 05 Oct 2014 12:22:42 AM JST
0x7d5
* Sun 05 Oct 2014 12:22:42 AM JST
0x7d6
* Sun 05 Oct 2014 12:22:43 AM JST
0x7d7
* Sun 05 Oct 2014 12:22:43 AM JST
0x7d8
* Sun 05 Oct 2014 12:22:43 AM JST
0x7d9
* Sun 05 Oct 2014 12:22:43 AM JST
0x7e1
* Sun 05 Oct 2014 12:22:43 AM JST
0x7e2
* Sun 05 Oct 2014 12:22:43 AM JST
0x7e3
* Sun 05 Oct 2014 12:22:43 AM JST
0x7e4
* Sun 05 Oct 2014 12:22:43 AM JST
0x7e5
* Sun 05 Oct 2014 12:22:43 AM JST
0x7e6
* Sun 05 Oct 2014 12:22:43 AM JST
0x7e7
* Sun 05 Oct 2014 12:22:44 AM JST
0x7e8
* Sun 05 Oct 2014 12:22:44 AM JST
0x7e9
* Sun 05 Oct 2014 12:22:44 AM JST
0x7ea
* Sun 05 Oct 2014 12:22:44 AM JST
0x7eb
* Sun 05 Oct 2014 12:22:44 AM JST
0x7ec
* Sun 05 Oct 2014 12:22:44 AM JST
0x7ed
* Sun 05 Oct 2014 12:22:44 AM JST
0x7ee
* Sun 05 Oct 2014 12:22:44 AM JST
0x7ef
* Sun 05 Oct 2014 12:22:44 AM JST
0x7f0
* Sun 05 Oct 2014 12:22:45 AM JST
0x7f1
* Sun 05 Oct 2014 12:22:45 AM JST
0x7f2
* Sun 05 Oct 2014 12:22:45 AM JST
0x7f3
* Sun 05 Oct 2014 12:22:45 AM JST
0x7f4
* Sun 05 Oct 2014 12:22:45 AM JST
0x7f5
* Sun 05 Oct 2014 12:22:45 AM JST
0x7f6
* Sun 05 Oct 2014 12:22:45 AM JST
0x7f7
* Sun 05 Oct 2014 12:22:45 AM JST
0x7f8
* Sun 05 Oct 2014 12:22:45 AM JST
0x7f9
* Sun 05 Oct 2014 12:22:46 AM JST
0x8a1
* Sun 05 Oct 2014 12:22:46 AM JST
0x8a2
* Sun 05 Oct 2014 12:22:46 AM JST
0x8a3
* Sun 05 Oct 2014 12:22:46 AM JST
0x8a4
* Sun 05 Oct 2014 12:22:46 AM JST
0x8a5
* Sun 05 Oct 2014 12:22:46 AM JST
0x8a6
* Sun 05 Oct 2014 12:22:46 AM JST
0x8a7
* Sun 05 Oct 2014 12:22:46 AM JST
0x8a8
* Sun 05 Oct 2014 12:22:46 AM JST
0x8a9
* Sun 05 Oct 2014 12:22:47 AM JST
0x8aa
* Sun 05 Oct 2014 12:22:47 AM JST
0x8ab
* Sun 05 Oct 2014 12:22:47 AM JST
0x8ac
* Sun 05 Oct 2014 12:22:47 AM JST
0x8ad
* Sun 05 Oct 2014 12:22:47 AM JST
0x8ae
* Sun 05 Oct 2014 12:22:47 AM JST
0x8af
* Sun 05 Oct 2014 12:22:47 AM JST
0x8b0
* Sun 05 Oct 2014 12:22:48 AM JST
0x8b1
* Sun 05 Oct 2014 12:22:48 AM JST
0x8b2
* Sun 05 Oct 2014 12:22:48 AM JST
0x8b3
* Sun 05 Oct 2014 12:22:48 AM JST
0x8b4
* Sun 05 Oct 2014 12:22:48 AM JST
0x8b5
* Sun 05 Oct 2014 12:22:48 AM JST
0x8b6
* Sun 05 Oct 2014 12:22:48 AM JST
0x8b7
* Sun 05 Oct 2014 12:22:48 AM JST
0x8bc
* Sun 05 Oct 2014 12:22:48 AM JST
0x8bd
* Sun 05 Oct 2014 12:22:49 AM JST
0x8be
* Sun 05 Oct 2014 12:22:49 AM JST
0x8bf
* Sun 05 Oct 2014 12:22:49 AM JST
0x8c0
* Sun 05 Oct 2014 12:22:49 AM JST
0x8c1
* Sun 05 Oct 2014 12:22:49 AM JST
0x8c2
* Sun 05 Oct 2014 12:22:49 AM JST
0x8c5
* Sun 05 Oct 2014 12:22:49 AM JST
0x8c8
* Sun 05 Oct 2014 12:22:49 AM JST
0x8c9
* Sun 05 Oct 2014 12:22:49 AM JST
0x8cd
* Sun 05 Oct 2014 12:22:50 AM JST
0x8ce
* Sun 05 Oct 2014 12:22:50 AM JST
0x8cf
* Sun 05 Oct 2014 12:22:50 AM JST
0x8d6
* Sun 05 Oct 2014 12:22:50 AM JST
0x8da
* Sun 05 Oct 2014 12:22:50 AM JST
0x8db
* Sun 05 Oct 2014 12:22:50 AM JST
0x8dc
* Sun 05 Oct 2014 12:22:50 AM JST
0x8dd
* Sun 05 Oct 2014 12:22:51 AM JST
0x8de
* Sun 05 Oct 2014 12:22:51 AM JST
0x8df
* Sun 05 Oct 2014 12:22:51 AM JST
0x8ef
* Sun 05 Oct 2014 12:22:51 AM JST
0x8f6
* Sun 05 Oct 2014 12:22:51 AM JST
0x8fb
* Sun 05 Oct 2014 12:22:51 AM JST
0x8fc
* Sun 05 Oct 2014 12:22:51 AM JST
0x8fd
* Sun 05 Oct 2014 12:22:51 AM JST
0x8fe
* Sun 05 Oct 2014 12:22:51 AM JST
0x9df
* Sun 05 Oct 2014 12:22:52 AM JST
0x9e0
* Sun 05 Oct 2014 12:22:52 AM JST
0x9e1
* Sun 05 Oct 2014 12:22:52 AM JST
0x9e2
* Sun 05 Oct 2014 12:22:52 AM JST
0x9e3
* Sun 05 Oct 2014 12:22:52 AM JST
0x9e4
* Sun 05 Oct 2014 12:22:52 AM JST
0x9e5
* Sun 05 Oct 2014 12:22:52 AM JST
0x9e8
* Sun 05 Oct 2014 12:22:52 AM JST
0x9e9
* Sun 05 Oct 2014 12:22:52 AM JST
0x9ea
* Sun 05 Oct 2014 12:22:52 AM JST
0x9eb
* Sun 05 Oct 2014 12:22:53 AM JST
0x9ec
* Sun 05 Oct 2014 12:22:53 AM JST
0x9ed
* Sun 05 Oct 2014 12:22:53 AM JST
0x9ee
* Sun 05 Oct 2014 12:22:53 AM JST
0x9ef
* Sun 05 Oct 2014 12:22:53 AM JST
0x9f0
* Sun 05 Oct 2014 12:22:53 AM JST
0x9f1
* Sun 05 Oct 2014 12:22:53 AM JST
0x9f2
* Sun 05 Oct 2014 12:22:53 AM JST
0x9f3
* Sun 05 Oct 2014 12:22:53 AM JST
0x9f4
* Sun 05 Oct 2014 12:22:54 AM JST
0x9f5
* Sun 05 Oct 2014 12:22:54 AM JST
0x9f6
* Sun 05 Oct 2014 12:22:54 AM JST
0x9f7
* Sun 05 Oct 2014 12:22:54 AM JST
0x9f8
* Sun 05 Oct 2014 12:22:54 AM JST
0xaa1
* Sun 05 Oct 2014 12:22:54 AM JST
0xaa2
* Sun 05 Oct 2014 12:22:54 AM JST
0xaa3
* Sun 05 Oct 2014 12:22:54 AM JST
0xaa4
* Sun 05 Oct 2014 12:22:54 AM JST
0xaa5
* Sun 05 Oct 2014 12:22:54 AM JST
0xaa6
* Sun 05 Oct 2014 12:22:55 AM JST
0xaa7
* Sun 05 Oct 2014 12:22:55 AM JST
0xaa8
* Sun 05 Oct 2014 12:22:55 AM JST
0xaa9
* Sun 05 Oct 2014 12:22:55 AM JST
0xaaa
* Sun 05 Oct 2014 12:22:56 AM JST
0xaac
* Sun 05 Oct 2014 12:22:56 AM JST
0xaae
* Sun 05 Oct 2014 12:22:56 AM JST
0xaaf
* Sun 05 Oct 2014 12:22:56 AM JST
0xab0
* Sun 05 Oct 2014 12:22:56 AM JST
0xab1
* Sun 05 Oct 2014 12:22:56 AM JST
0xab2
* Sun 05 Oct 2014 12:22:56 AM JST
0xab3
* Sun 05 Oct 2014 12:22:56 AM JST
0xab4
* Sun 05 Oct 2014 12:22:56 AM JST
0xab5
* Sun 05 Oct 2014 12:22:57 AM JST
0xab6
* Sun 05 Oct 2014 12:22:57 AM JST
0xab7
* Sun 05 Oct 2014 12:22:57 AM JST
0xab8
* Sun 05 Oct 2014 12:22:57 AM JST
0xabb
* Sun 05 Oct 2014 12:22:57 AM JST
0xabc
* Sun 05 Oct 2014 12:22:57 AM JST
0xabd
* Sun 05 Oct 2014 12:22:57 AM JST
0xabe
* Sun 05 Oct 2014 12:22:57 AM JST
0xabf
* Sun 05 Oct 2014 12:23:01 AM JST
0xac3
* Sun 05 Oct 2014 12:23:02 AM JST
0xac4
* Sun 05 Oct 2014 12:23:02 AM JST
0xac5
* Sun 05 Oct 2014 12:23:02 AM JST
0xac6
* Sun 05 Oct 2014 12:23:02 AM JST
0xac9
* Sun 05 Oct 2014 12:23:03 AM JST
0xaca
* Sun 05 Oct 2014 12:23:03 AM JST
0xacb
* Sun 05 Oct 2014 12:23:03 AM JST
0xacc
* Sun 05 Oct 2014 12:23:03 AM JST
0xacd
* Sun 05 Oct 2014 12:23:03 AM JST
0xace
* Sun 05 Oct 2014 12:23:03 AM JST
0xacf
* Sun 05 Oct 2014 12:23:04 AM JST
0xad0
* Sun 05 Oct 2014 12:23:04 AM JST
0xad1
* Sun 05 Oct 2014 12:23:04 AM JST
0xad2
* Sun 05 Oct 2014 12:23:04 AM JST
0xad3
* Sun 05 Oct 2014 12:23:04 AM JST
0xad4
* Sun 05 Oct 2014 12:23:04 AM JST
0xad6
* Sun 05 Oct 2014 12:23:05 AM JST
0xad7
* Sun 05 Oct 2014 12:23:05 AM JST
0xad9
* Sun 05 Oct 2014 12:23:05 AM JST
0xada
* Sun 05 Oct 2014 12:23:05 AM JST
0xadb
* Sun 05 Oct 2014 12:23:05 AM JST
0xadc
* Sun 05 Oct 2014 12:23:06 AM JST
0xadd
* Sun 05 Oct 2014 12:23:06 AM JST
0xade
* Sun 05 Oct 2014 12:23:06 AM JST
0xadf
* Sun 05 Oct 2014 12:23:06 AM JST
0xae0
* Sun 05 Oct 2014 12:23:06 AM JST
0xae1
* Sun 05 Oct 2014 12:23:06 AM JST
0xae2
* Sun 05 Oct 2014 12:23:06 AM JST
0xae3
* Sun 05 Oct 2014 12:23:06 AM JST
0xae4
* Sun 05 Oct 2014 12:23:06 AM JST
0xae5
* Sun 05 Oct 2014 12:23:07 AM JST
0xae6
* Sun 05 Oct 2014 12:23:07 AM JST
0xae7
* Sun 05 Oct 2014 12:23:07 AM JST
0xae8
* Sun 05 Oct 2014 12:23:07 AM JST
0xae9
* Sun 05 Oct 2014 12:23:07 AM JST
0xaea
* Sun 05 Oct 2014 12:23:07 AM JST
0xaeb
* Sun 05 Oct 2014 12:23:07 AM JST
0xaec
* Sun 05 Oct 2014 12:23:07 AM JST
0xaed
* Sun 05 Oct 2014 12:23:07 AM JST
0xaee
* Sun 05 Oct 2014 12:23:07 AM JST
0xaf0
* Sun 05 Oct 2014 12:23:07 AM JST
0xaf1
* Sun 05 Oct 2014 12:23:08 AM JST
0xaf2
* Sun 05 Oct 2014 12:23:08 AM JST
0xaf3
* Sun 05 Oct 2014 12:23:08 AM JST
0xaf4
* Sun 05 Oct 2014 12:23:08 AM JST
0xaf5
* Sun 05 Oct 2014 12:23:08 AM JST
0xaf6
* Sun 05 Oct 2014 12:23:08 AM JST
0xaf7
* Sun 05 Oct 2014 12:23:08 AM JST
0xaf8
* Sun 05 Oct 2014 12:23:08 AM JST
0xaf9
* Sun 05 Oct 2014 12:23:08 AM JST
0xafa
* Sun 05 Oct 2014 12:23:09 AM JST
0xafb
* Sun 05 Oct 2014 12:23:09 AM JST
0xafc
* Sun 05 Oct 2014 12:23:09 AM JST
0xafd
* Sun 05 Oct 2014 12:23:09 AM JST
0xafe
* Sun 05 Oct 2014 12:23:09 AM JST
0xaff
* Sun 05 Oct 2014 12:23:09 AM JST
0xba3
* Sun 05 Oct 2014 12:23:09 AM JST
0xba6
* Sun 05 Oct 2014 12:23:09 AM JST
0xba8
* Sun 05 Oct 2014 12:23:09 AM JST
0xba9
* Sun 05 Oct 2014 12:23:09 AM JST
0xbc0
* Sun 05 Oct 2014 12:23:10 AM JST
0xbc2
* Sun 05 Oct 2014 12:23:10 AM JST
0xbc3
* Sun 05 Oct 2014 12:23:10 AM JST
0xbc4
* Sun 05 Oct 2014 12:23:10 AM JST
0xbc6
* Sun 05 Oct 2014 12:23:10 AM JST
0xbca
* Sun 05 Oct 2014 12:23:10 AM JST
0xbcc
* Sun 05 Oct 2014 12:23:10 AM JST
0xbce
* Sun 05 Oct 2014 12:23:11 AM JST
0xbcf
* Sun 05 Oct 2014 12:23:11 AM JST
0xbd3
* Sun 05 Oct 2014 12:23:11 AM JST
0xbd6
* Sun 05 Oct 2014 12:23:11 AM JST
0xbd8
* Sun 05 Oct 2014 12:23:11 AM JST
0xbda
* Sun 05 Oct 2014 12:23:11 AM JST
0xbdc
* Sun 05 Oct 2014 12:23:11 AM JST
0xbfc
* Sun 05 Oct 2014 12:23:11 AM JST
0xcdf
* Sun 05 Oct 2014 12:23:11 AM JST
0xce0
* Sun 05 Oct 2014 12:23:12 AM JST
0xce1
* Sun 05 Oct 2014 12:23:12 AM JST
0xce2
* Sun 05 Oct 2014 12:23:12 AM JST
0xce3
* Sun 05 Oct 2014 12:23:12 AM JST
0xce4
* Sun 05 Oct 2014 12:23:12 AM JST
0xce5
* Sun 05 Oct 2014 12:23:12 AM JST
0xce6
* Sun 05 Oct 2014 12:23:12 AM JST
0xce7
* Sun 05 Oct 2014 12:23:12 AM JST
0xce8
* Sun 05 Oct 2014 12:23:12 AM JST
0xce9
* Sun 05 Oct 2014 12:23:13 AM JST
0xcea
* Sun 05 Oct 2014 12:23:13 AM JST
0xceb
* Sun 05 Oct 2014 12:23:13 AM JST
0xcec
* Sun 05 Oct 2014 12:23:13 AM JST
0xced
* Sun 05 Oct 2014 12:23:13 AM JST
0xcee
* Sun 05 Oct 2014 12:23:13 AM JST
0xcef
* Sun 05 Oct 2014 12:23:13 AM JST
0xcf0
* Sun 05 Oct 2014 12:23:13 AM JST
0xcf1
* Sun 05 Oct 2014 12:23:13 AM JST
0xcf2
* Sun 05 Oct 2014 12:23:13 AM JST
0xcf3
* Sun 05 Oct 2014 12:23:14 AM JST
0xcf4
* Sun 05 Oct 2014 12:23:14 AM JST
0xcf5
* Sun 05 Oct 2014 12:23:14 AM JST
0xcf6
* Sun 05 Oct 2014 12:23:14 AM JST
0xcf7
* Sun 05 Oct 2014 12:23:14 AM JST
0xcf8
* Sun 05 Oct 2014 12:23:14 AM JST
0xcf9
* Sun 05 Oct 2014 12:23:14 AM JST
0xcfa
* Sun 05 Oct 2014 12:23:14 AM JST
0xda1
* Sun 05 Oct 2014 12:23:14 AM JST
0xda2
* Sun 05 Oct 2014 12:23:14 AM JST
0xda3
* Sun 05 Oct 2014 12:23:51 AM JST
0xda4
* Sun 05 Oct 2014 12:23:52 AM JST
0xda5
* Sun 05 Oct 2014 12:23:52 AM JST
0xda6
* Sun 05 Oct 2014 12:23:52 AM JST
0xda7
* Sun 05 Oct 2014 12:23:52 AM JST
0xda8
* Sun 05 Oct 2014 12:23:52 AM JST
0xda9
* Sun 05 Oct 2014 12:23:53 AM JST
0xdaa
* Sun 05 Oct 2014 12:23:53 AM JST
0xdab
* Sun 05 Oct 2014 12:23:53 AM JST
0xdac
* Sun 05 Oct 2014 12:23:53 AM JST
0xdad
* Sun 05 Oct 2014 12:23:53 AM JST
0xdae
* Sun 05 Oct 2014 12:23:53 AM JST
0xdaf
* Sun 05 Oct 2014 12:23:53 AM JST
0xdb0
* Sun 05 Oct 2014 12:23:54 AM JST
0xdb1
* Sun 05 Oct 2014 12:23:54 AM JST
0xdb2
* Sun 05 Oct 2014 12:23:54 AM JST
0xdb3
* Sun 05 Oct 2014 12:23:54 AM JST
0xdb4
* Sun 05 Oct 2014 12:23:54 AM JST
0xdb5
* Sun 05 Oct 2014 12:23:54 AM JST
0xdb6
* Sun 05 Oct 2014 12:23:55 AM JST
0xdb7
* Sun 05 Oct 2014 12:23:55 AM JST
0xdb8
* Sun 05 Oct 2014 12:23:55 AM JST
0xdb9
* Sun 05 Oct 2014 12:23:55 AM JST
0xdba
* Sun 05 Oct 2014 12:23:55 AM JST
0xdbb
* Sun 05 Oct 2014 12:23:56 AM JST
0xdbc
* Sun 05 Oct 2014 12:23:56 AM JST
0xdbd
* Sun 05 Oct 2014 12:23:56 AM JST
0xdbe
* Sun 05 Oct 2014 12:23:56 AM JST
0xdbf
* Sun 05 Oct 2014 12:23:56 AM JST
0xdc0
* Sun 05 Oct 2014 12:23:56 AM JST
0xdc1
* Sun 05 Oct 2014 12:23:56 AM JST
0xdc2
* Sun 05 Oct 2014 12:23:56 AM JST
0xdc3
* Sun 05 Oct 2014 12:23:56 AM JST
0xdc4
* Sun 05 Oct 2014 12:23:57 AM JST
0xdc5
* Sun 05 Oct 2014 12:23:57 AM JST
0xdc6
* Sun 05 Oct 2014 12:23:57 AM JST
0xdc7
* Sun 05 Oct 2014 12:23:57 AM JST
0xdc8
* Sun 05 Oct 2014 12:23:57 AM JST
0xdc9
* Sun 05 Oct 2014 12:23:57 AM JST
0xdca
* Sun 05 Oct 2014 12:23:57 AM JST
0xdcb
* Sun 05 Oct 2014 12:23:57 AM JST
0xdcc
* Sun 05 Oct 2014 12:23:57 AM JST
0xdcd
* Sun 05 Oct 2014 12:23:57 AM JST
0xdce
* Sun 05 Oct 2014 12:23:58 AM JST
0xdcf
* Sun 05 Oct 2014 12:23:58 AM JST
0xdd0
* Sun 05 Oct 2014 12:23:58 AM JST
0xdd1
* Sun 05 Oct 2014 12:23:58 AM JST
0xdd2
* Sun 05 Oct 2014 12:23:58 AM JST
0xdd3
* Sun 05 Oct 2014 12:23:58 AM JST
0xdd4
* Sun 05 Oct 2014 12:23:58 AM JST
0xdd5
* Sun 05 Oct 2014 12:23:58 AM JST
0xdd6
* Sun 05 Oct 2014 12:23:58 AM JST
0xdd7
* Sun 05 Oct 2014 12:23:59 AM JST
0xdd8
* Sun 05 Oct 2014 12:23:59 AM JST
0xdd9
* Sun 05 Oct 2014 12:23:59 AM JST
0xdda
* Sun 05 Oct 2014 12:23:59 AM JST
0xdde
* Sun 05 Oct 2014 12:23:59 AM JST
0xddf
* Sun 05 Oct 2014 12:23:59 AM JST
0xde0
* Sun 05 Oct 2014 12:23:59 AM JST
0xde1
* Sun 05 Oct 2014 12:23:59 AM JST
0xde2
* Sun 05 Oct 2014 12:23:59 AM JST
0xde3
* Sun 05 Oct 2014 12:24:00 AM JST
0xde4
* Sun 05 Oct 2014 12:24:00 AM JST
0xde5
* Sun 05 Oct 2014 12:24:00 AM JST
0xde6
* Sun 05 Oct 2014 12:24:00 AM JST
0xde7
* Sun 05 Oct 2014 12:24:00 AM JST
0xde8
* Sun 05 Oct 2014 12:24:00 AM JST
0xde9
* Sun 05 Oct 2014 12:24:00 AM JST
0xdea
* Sun 05 Oct 2014 12:24:00 AM JST
0xdeb
* Sun 05 Oct 2014 12:24:01 AM JST
0xdec
* Sun 05 Oct 2014 12:24:01 AM JST
0xded
* Sun 05 Oct 2014 12:24:01 AM JST
0xdf0
* Sun 05 Oct 2014 12:24:01 AM JST
0xdf1
* Sun 05 Oct 2014 12:24:01 AM JST
0xdf2
* Sun 05 Oct 2014 12:24:01 AM JST
0xdf3
* Sun 05 Oct 2014 12:24:01 AM JST
0xdf4
* Sun 05 Oct 2014 12:24:01 AM JST
0xdf5
* Sun 05 Oct 2014 12:24:02 AM JST
0xdf6
* Sun 05 Oct 2014 12:24:02 AM JST
0xdf7
* Sun 05 Oct 2014 12:24:02 AM JST
0xdf8
* Sun 05 Oct 2014 12:24:02 AM JST
0xdf9
* Sun 05 Oct 2014 12:24:02 AM JST
0xff31
* Sun 05 Oct 2014 12:24:02 AM JST
0xff32
* Sun 05 Oct 2014 12:24:02 AM JST
0xff33
* Sun 05 Oct 2014 12:24:02 AM JST
0xff34
* Sun 05 Oct 2014 12:24:02 AM JST
0xff35
* Sun 05 Oct 2014 12:24:02 AM JST
0xff36
* Sun 05 Oct 2014 12:24:03 AM JST
0xff37
* Sun 05 Oct 2014 12:24:03 AM JST
0xff38
* Sun 05 Oct 2014 12:24:03 AM JST
0xff39
* Sun 05 Oct 2014 12:24:03 AM JST
0xff3a
* Sun 05 Oct 2014 12:24:03 AM JST
0xff3b
* Sun 05 Oct 2014 12:24:03 AM JST
0xff3c
* Sun 05 Oct 2014 12:24:03 AM JST
0xff3d
* Sun 05 Oct 2014 12:24:03 AM JST
0xff3e
* Sun 05 Oct 2014 12:24:03 AM JST
0xff3f
* Sun 05 Oct 2014 12:24:04 AM JST
0xea1
* Sun 05 Oct 2014 12:24:04 AM JST
0xea2
* Sun 05 Oct 2014 12:24:04 AM JST
0xea3
* Sun 05 Oct 2014 12:24:04 AM JST
0xea4
* Sun 05 Oct 2014 12:24:04 AM JST
0xea5
* Sun 05 Oct 2014 12:24:04 AM JST
0xea6
* Sun 05 Oct 2014 12:24:04 AM JST
0xea7
* Sun 05 Oct 2014 12:24:04 AM JST
0xea8
* Sun 05 Oct 2014 12:24:04 AM JST
0xea9
* Sun 05 Oct 2014 12:24:05 AM JST
0xeaa
* Sun 05 Oct 2014 12:24:05 AM JST
0xeab
* Sun 05 Oct 2014 12:24:05 AM JST
0xeac
* Sun 05 Oct 2014 12:24:05 AM JST
0xead
* Sun 05 Oct 2014 12:24:05 AM JST
0xeae
* Sun 05 Oct 2014 12:24:05 AM JST
0xeaf
* Sun 05 Oct 2014 12:24:06 AM JST
0xeb0
* Sun 05 Oct 2014 12:24:06 AM JST
0xeb1
* Sun 05 Oct 2014 12:24:06 AM JST
0xeb2
* Sun 05 Oct 2014 12:24:06 AM JST
0xeb3
* Sun 05 Oct 2014 12:24:06 AM JST
0xeb4
* Sun 05 Oct 2014 12:24:06 AM JST
0xeb5
* Sun 05 Oct 2014 12:24:06 AM JST
0xeb6
* Sun 05 Oct 2014 12:24:06 AM JST
0xeb7
* Sun 05 Oct 2014 12:24:06 AM JST
0xeb8
* Sun 05 Oct 2014 12:24:06 AM JST
0xeb9
* Sun 05 Oct 2014 12:24:07 AM JST
0xeba
* Sun 05 Oct 2014 12:24:07 AM JST
0xebb
* Sun 05 Oct 2014 12:24:07 AM JST
0xebc
* Sun 05 Oct 2014 12:24:07 AM JST
0xebd
* Sun 05 Oct 2014 12:24:07 AM JST
0xebe
* Sun 05 Oct 2014 12:24:07 AM JST
0xebf
* Sun 05 Oct 2014 12:24:07 AM JST
0xec0
* Sun 05 Oct 2014 12:24:07 AM JST
0xec1
* Sun 05 Oct 2014 12:24:07 AM JST
0xec2
* Sun 05 Oct 2014 12:24:07 AM JST
0xec3
* Sun 05 Oct 2014 12:24:08 AM JST
0xec4
* Sun 05 Oct 2014 12:24:08 AM JST
0xec5
* Sun 05 Oct 2014 12:24:08 AM JST
0xec6
* Sun 05 Oct 2014 12:24:08 AM JST
0xec7
* Sun 05 Oct 2014 12:24:08 AM JST
0xec8
* Sun 05 Oct 2014 12:24:08 AM JST
0xec9
* Sun 05 Oct 2014 12:24:08 AM JST
0xeca
* Sun 05 Oct 2014 12:24:08 AM JST
0xecb
* Sun 05 Oct 2014 12:24:08 AM JST
0xecc
* Sun 05 Oct 2014 12:24:08 AM JST
0xecd
* Sun 05 Oct 2014 12:24:09 AM JST
0xece
* Sun 05 Oct 2014 12:24:09 AM JST
0xecf
* Sun 05 Oct 2014 12:24:09 AM JST
0xed0
* Sun 05 Oct 2014 12:24:09 AM JST
0xed1
* Sun 05 Oct 2014 12:24:09 AM JST
0xed2
* Sun 05 Oct 2014 12:24:09 AM JST
0xed3
* Sun 05 Oct 2014 12:24:09 AM JST
0xed4
* Sun 05 Oct 2014 12:24:09 AM JST
0xed5
* Sun 05 Oct 2014 12:24:09 AM JST
0xed6
* Sun 05 Oct 2014 12:24:09 AM JST
0xed7
* Sun 05 Oct 2014 12:24:10 AM JST
0xed8
* Sun 05 Oct 2014 12:24:10 AM JST
0xed9
* Sun 05 Oct 2014 12:24:10 AM JST
0xeda
* Sun 05 Oct 2014 12:24:10 AM JST
0xedb
* Sun 05 Oct 2014 12:24:10 AM JST
0xedc
* Sun 05 Oct 2014 12:24:10 AM JST
0xedd
* Sun 05 Oct 2014 12:24:10 AM JST
0xede
* Sun 05 Oct 2014 12:24:10 AM JST
0xedf
* Sun 05 Oct 2014 12:24:10 AM JST
0xee0
* Sun 05 Oct 2014 12:24:11 AM JST
0xee1
* Sun 05 Oct 2014 12:24:11 AM JST
0xee2
* Sun 05 Oct 2014 12:24:11 AM JST
0xee3
* Sun 05 Oct 2014 12:24:11 AM JST
0xee4
* Sun 05 Oct 2014 12:24:11 AM JST
0xee5
* Sun 05 Oct 2014 12:24:11 AM JST
0xee6
* Sun 05 Oct 2014 12:24:11 AM JST
0xee7
* Sun 05 Oct 2014 12:24:11 AM JST
0xee8
* Sun 05 Oct 2014 12:24:11 AM JST
0xee9
* Sun 05 Oct 2014 12:24:12 AM JST
0xeea
* Sun 05 Oct 2014 12:24:12 AM JST
0xeeb
* Sun 05 Oct 2014 12:24:12 AM JST
0xeec
* Sun 05 Oct 2014 12:24:12 AM JST
0xeed
* Sun 05 Oct 2014 12:24:12 AM JST
0xeee
* Sun 05 Oct 2014 12:24:12 AM JST
0xeef
* Sun 05 Oct 2014 12:24:12 AM JST
0xef0
* Sun 05 Oct 2014 12:24:12 AM JST
0xef1
* Sun 05 Oct 2014 12:24:12 AM JST
0xef2
* Sun 05 Oct 2014 12:24:12 AM JST
0xef3
* Sun 05 Oct 2014 12:24:13 AM JST
0xef4
* Sun 05 Oct 2014 12:24:13 AM JST
0xef5
* Sun 05 Oct 2014 12:24:13 AM JST
0xef6
* Sun 05 Oct 2014 12:24:13 AM JST
0xef7
* Sun 05 Oct 2014 12:24:13 AM JST
0xef8
* Sun 05 Oct 2014 12:24:13 AM JST
0xef9
* Sun 05 Oct 2014 12:24:13 AM JST
0xefa
* Sun 05 Oct 2014 12:24:13 AM JST
0xeff
* Sun 05 Oct 2014 12:24:13 AM JST
0x14a1
* Sun 05 Oct 2014 12:24:14 AM JST
0x14a2
* Sun 05 Oct 2014 12:24:14 AM JST
0x14a3
* Sun 05 Oct 2014 12:24:14 AM JST
0x14a4
* Sun 05 Oct 2014 12:24:14 AM JST
0x14a5
* Sun 05 Oct 2014 12:24:14 AM JST
0x14a6
* Sun 05 Oct 2014 12:24:14 AM JST
0x14a7
* Sun 05 Oct 2014 12:24:14 AM JST
0x14a8
* Sun 05 Oct 2014 12:24:14 AM JST
0x14a9
* Sun 05 Oct 2014 12:24:14 AM JST
0x14aa
* Sun 05 Oct 2014 12:24:14 AM JST
0x14ab
* Sun 05 Oct 2014 12:24:15 AM JST
0x14ac
* Sun 05 Oct 2014 12:24:15 AM JST
0x14ad
* Sun 05 Oct 2014 12:24:15 AM JST
0x14ae
* Sun 05 Oct 2014 12:24:15 AM JST
0x14af
* Sun 05 Oct 2014 12:24:15 AM JST
0x14b0
* Sun 05 Oct 2014 12:24:15 AM JST
0x14b1
* Sun 05 Oct 2014 12:24:15 AM JST
0x14b2
* Sun 05 Oct 2014 12:24:15 AM JST
0x14b3
* Sun 05 Oct 2014 12:24:15 AM JST
0x14b4
* Sun 05 Oct 2014 12:24:16 AM JST
0x14b5
* Sun 05 Oct 2014 12:24:16 AM JST
0x14b6
* Sun 05 Oct 2014 12:24:16 AM JST
0x14b7
* Sun 05 Oct 2014 12:24:16 AM JST
0x14b8
* Sun 05 Oct 2014 12:24:16 AM JST
0x14b9
* Sun 05 Oct 2014 12:24:16 AM JST
0x14ba
* Sun 05 Oct 2014 12:24:16 AM JST
0x14bb
* Sun 05 Oct 2014 12:24:17 AM JST
0x14bc
* Sun 05 Oct 2014 12:24:17 AM JST
0x14bd
* Sun 05 Oct 2014 12:24:17 AM JST
0x14be
* Sun 05 Oct 2014 12:24:17 AM JST
0x14bf
* Sun 05 Oct 2014 12:24:17 AM JST
0x14c0
* Sun 05 Oct 2014 12:24:17 AM JST
0x14c1
* Sun 05 Oct 2014 12:24:17 AM JST
0x14c2
* Sun 05 Oct 2014 12:24:17 AM JST
0x14c3
* Sun 05 Oct 2014 12:24:17 AM JST
0x14c4
* Sun 05 Oct 2014 12:24:17 AM JST
0x14c5
* Sun 05 Oct 2014 12:24:17 AM JST
0x14c6
* Sun 05 Oct 2014 12:24:18 AM JST
0x14c7
* Sun 05 Oct 2014 12:24:18 AM JST
0x14c8
* Sun 05 Oct 2014 12:24:18 AM JST
0x14c9
* Sun 05 Oct 2014 12:24:18 AM JST
0x14ca
* Sun 05 Oct 2014 12:24:18 AM JST
0x14cb
* Sun 05 Oct 2014 12:24:18 AM JST
0x14cc
* Sun 05 Oct 2014 12:24:18 AM JST
0x14cd
* Sun 05 Oct 2014 12:24:18 AM JST
0x14ce
* Sun 05 Oct 2014 12:24:18 AM JST
0x14cf
* Sun 05 Oct 2014 12:24:19 AM JST
0x14d0
* Sun 05 Oct 2014 12:24:19 AM JST
0x14d1
* Sun 05 Oct 2014 12:24:19 AM JST
0x14d2
* Sun 05 Oct 2014 12:24:19 AM JST
0x14d3
* Sun 05 Oct 2014 12:24:19 AM JST
0x14d4
* Sun 05 Oct 2014 12:24:19 AM JST
0x14d5
* Sun 05 Oct 2014 12:24:19 AM JST
0x14d6
* Sun 05 Oct 2014 12:24:19 AM JST
0x14d7
* Sun 05 Oct 2014 12:24:19 AM JST
0x14d8
* Sun 05 Oct 2014 12:24:19 AM JST
0x14d9
* Sun 05 Oct 2014 12:24:20 AM JST
0x14da
* Sun 05 Oct 2014 12:24:20 AM JST
0x14db
* Sun 05 Oct 2014 12:24:20 AM JST
0x14dc
* Sun 05 Oct 2014 12:24:20 AM JST
0x14dd
* Sun 05 Oct 2014 12:24:20 AM JST
0x14de
* Sun 05 Oct 2014 12:24:20 AM JST
0x14df
* Sun 05 Oct 2014 12:24:20 AM JST
0x14e0
* Sun 05 Oct 2014 12:24:20 AM JST
0x14e1
* Sun 05 Oct 2014 12:24:21 AM JST
0x14e2
* Sun 05 Oct 2014 12:24:21 AM JST
0x14e3
* Sun 05 Oct 2014 12:24:21 AM JST
0x14e4
* Sun 05 Oct 2014 12:24:21 AM JST
0x14e5
* Sun 05 Oct 2014 12:24:21 AM JST
0x14e6
* Sun 05 Oct 2014 12:24:21 AM JST
0x14e7
* Sun 05 Oct 2014 12:24:21 AM JST
0x14e8
* Sun 05 Oct 2014 12:24:21 AM JST
0x14e9
* Sun 05 Oct 2014 12:24:21 AM JST
0x14ea
* Sun 05 Oct 2014 12:24:22 AM JST
0x14eb
* Sun 05 Oct 2014 12:24:22 AM JST
0x14ec
* Sun 05 Oct 2014 12:24:22 AM JST
0x14ed
* Sun 05 Oct 2014 12:24:22 AM JST
0x14ee
* Sun 05 Oct 2014 12:24:22 AM JST
0x14ef
* Sun 05 Oct 2014 12:24:22 AM JST
0x14f0
* Sun 05 Oct 2014 12:24:22 AM JST
0x14f1
* Sun 05 Oct 2014 12:24:22 AM JST
0x14f2
* Sun 05 Oct 2014 12:24:22 AM JST
0x14f3
* Sun 05 Oct 2014 12:24:22 AM JST
0x14f4
* Sun 05 Oct 2014 12:24:23 AM JST
0x14f5
* Sun 05 Oct 2014 12:24:23 AM JST
0x14f6
* Sun 05 Oct 2014 12:24:23 AM JST
0x14f7
* Sun 05 Oct 2014 12:24:23 AM JST
0x14f8
* Sun 05 Oct 2014 12:24:23 AM JST
0x14f9
* Sun 05 Oct 2014 12:24:23 AM JST
0x14fa
* Sun 05 Oct 2014 12:24:23 AM JST
0x14fb
* Sun 05 Oct 2014 12:24:23 AM JST
0x14fc
* Sun 05 Oct 2014 12:24:23 AM JST
0x14fd
* Sun 05 Oct 2014 12:24:23 AM JST
0x14fe
* Sun 05 Oct 2014 12:24:24 AM JST
0x14ff
* Sun 05 Oct 2014 12:24:24 AM JST
0x15d0
* Sun 05 Oct 2014 12:24:24 AM JST
0x15d1
* Sun 05 Oct 2014 12:24:24 AM JST
0x15d2
* Sun 05 Oct 2014 12:24:24 AM JST
0x15d3
* Sun 05 Oct 2014 12:24:24 AM JST
0x15d4
* Sun 05 Oct 2014 12:24:24 AM JST
0x15d5
* Sun 05 Oct 2014 12:24:24 AM JST
0x15d6
* Sun 05 Oct 2014 12:24:24 AM JST
0x15d7
* Sun 05 Oct 2014 12:24:24 AM JST
0x15d8
* Sun 05 Oct 2014 12:24:25 AM JST
0x15d9
* Sun 05 Oct 2014 12:24:25 AM JST
0x15da
* Sun 05 Oct 2014 12:24:25 AM JST
0x15db
* Sun 05 Oct 2014 12:24:25 AM JST
0x15dc
* Sun 05 Oct 2014 12:24:25 AM JST
0x15dd
* Sun 05 Oct 2014 12:24:25 AM JST
0x15de
* Sun 05 Oct 2014 12:24:25 AM JST
0x15df
* Sun 05 Oct 2014 12:24:25 AM JST
0x15e0
* Sun 05 Oct 2014 12:24:25 AM JST
0x15e1
* Sun 05 Oct 2014 12:24:26 AM JST
0x15e2
* Sun 05 Oct 2014 12:24:26 AM JST
0x15e3
* Sun 05 Oct 2014 12:24:26 AM JST
0x15e4
* Sun 05 Oct 2014 12:24:26 AM JST
0x15e5
* Sun 05 Oct 2014 12:24:26 AM JST
0x15e6
* Sun 05 Oct 2014 12:24:26 AM JST
0x15e7
* Sun 05 Oct 2014 12:24:26 AM JST
0x15e8
* Sun 05 Oct 2014 12:24:26 AM JST
0x15e9
* Sun 05 Oct 2014 12:24:26 AM JST
0x15ea
* Sun 05 Oct 2014 12:24:26 AM JST
0x15eb
* Sun 05 Oct 2014 12:24:27 AM JST
0x15ec
* Sun 05 Oct 2014 12:24:27 AM JST
0x15ed
* Sun 05 Oct 2014 12:24:27 AM JST
0x15ee
* Sun 05 Oct 2014 12:24:27 AM JST
0x15ef
* Sun 05 Oct 2014 12:24:27 AM JST
0x15f0
* Sun 05 Oct 2014 12:24:27 AM JST
0x15f1
* Sun 05 Oct 2014 12:24:27 AM JST
0x15f2
* Sun 05 Oct 2014 12:24:28 AM JST
0x15f3
* Sun 05 Oct 2014 12:24:31 AM JST
0x15f4
* Sun 05 Oct 2014 12:24:31 AM JST
0x15f5
* Sun 05 Oct 2014 12:24:31 AM JST
0x15f6
* Sun 05 Oct 2014 12:24:32 AM JST
0x16a2
* Sun 05 Oct 2014 12:24:32 AM JST
0x16a3
* Sun 05 Oct 2014 12:24:32 AM JST
0x16a5
* Sun 05 Oct 2014 12:24:32 AM JST
0x16a7
* Sun 05 Oct 2014 12:24:33 AM JST
0x16a8
* Sun 05 Oct 2014 12:24:33 AM JST
0x16a9
* Sun 05 Oct 2014 12:24:33 AM JST
0x16b2
* Sun 05 Oct 2014 12:24:33 AM JST
0x16b3
* Sun 05 Oct 2014 12:24:33 AM JST
0x16b5
* Sun 05 Oct 2014 12:24:34 AM JST
0x16b7
* Sun 05 Oct 2014 12:24:34 AM JST
0x16b8
* Sun 05 Oct 2014 12:24:34 AM JST
0x16b9
* Sun 05 Oct 2014 12:24:34 AM JST
0x16c6
* Sun 05 Oct 2014 12:24:34 AM JST
0x16f6
* Sun 05 Oct 2014 12:24:35 AM JST
0x16d1
* Sun 05 Oct 2014 12:24:35 AM JST
0x16d2
* Sun 05 Oct 2014 12:24:35 AM JST
0x16e1
* Sun 05 Oct 2014 12:24:35 AM JST
0x16e2
* Sun 05 Oct 2014 12:24:35 AM JST
0x16d3
* Sun 05 Oct 2014 12:24:36 AM JST
0x16e3
* Sun 05 Oct 2014 12:24:36 AM JST
0x1ea0
* Sun 05 Oct 2014 12:24:36 AM JST
0x1ea1
* Sun 05 Oct 2014 12:24:37 AM JST
0x1ea2
* Sun 05 Oct 2014 12:24:37 AM JST
0x1ea3
* Sun 05 Oct 2014 12:24:37 AM JST
0x1ea4
* Sun 05 Oct 2014 12:24:37 AM JST
0x1ea5
* Sun 05 Oct 2014 12:24:37 AM JST
0x1ea6
* Sun 05 Oct 2014 12:24:38 AM JST
0x1ea7
* Sun 05 Oct 2014 12:24:38 AM JST
0x1ea8
* Sun 05 Oct 2014 12:24:38 AM JST
0x1ea9
* Sun 05 Oct 2014 12:24:38 AM JST
0x1eaa
* Sun 05 Oct 2014 12:24:39 AM JST
0x1eab
* Sun 05 Oct 2014 12:24:39 AM JST
0x1eac
* Sun 05 Oct 2014 12:24:39 AM JST
0x1ead
* Sun 05 Oct 2014 12:24:39 AM JST
0x1eae
* Sun 05 Oct 2014 12:24:40 AM JST
0x1eaf
* Sun 05 Oct 2014 12:24:40 AM JST
0x1eb0
* Sun 05 Oct 2014 12:24:40 AM JST
0x1eb1
* Sun 05 Oct 2014 12:24:40 AM JST
0x1eb2
* Sun 05 Oct 2014 12:24:41 AM JST
0x1eb3
* Sun 05 Oct 2014 12:24:41 AM JST
0x1eb4
* Sun 05 Oct 2014 12:24:41 AM JST
0x1eb5
* Sun 05 Oct 2014 12:24:41 AM JST
0x1eb6
* Sun 05 Oct 2014 12:24:42 AM JST
0x1eb7
* Sun 05 Oct 2014 12:24:42 AM JST
0x1eb8
* Sun 05 Oct 2014 12:24:42 AM JST
0x1eb9
* Sun 05 Oct 2014 12:24:42 AM JST
0x1eba
* Sun 05 Oct 2014 12:24:42 AM JST
0x1ebb
* Sun 05 Oct 2014 12:24:43 AM JST
0x1ebc
* Sun 05 Oct 2014 12:24:43 AM JST
0x1ebd
* Sun 05 Oct 2014 12:24:43 AM JST
0x1ebe
* Sun 05 Oct 2014 12:24:43 AM JST
0x1ebf
* Sun 05 Oct 2014 12:24:44 AM JST
0x1ec0
* Sun 05 Oct 2014 12:24:44 AM JST
0x1ec1
* Sun 05 Oct 2014 12:24:44 AM JST
0x1ec2
* Sun 05 Oct 2014 12:24:44 AM JST
0x1ec3
* Sun 05 Oct 2014 12:24:45 AM JST
0x1ec4
* Sun 05 Oct 2014 12:24:45 AM JST
0x1ec5
* Sun 05 Oct 2014 12:24:46 AM JST
0x1ec6
* Sun 05 Oct 2014 12:24:46 AM JST
0x1ec7
* Sun 05 Oct 2014 12:24:46 AM JST
0x1ec8
* Sun 05 Oct 2014 12:24:46 AM JST
0x1ec9
* Sun 05 Oct 2014 12:24:48 AM JST
0x1eca
* Sun 05 Oct 2014 12:24:48 AM JST
0x1ecb
* Sun 05 Oct 2014 12:24:48 AM JST
0x1ecc
* Sun 05 Oct 2014 12:24:48 AM JST
0x1ecd
* Sun 05 Oct 2014 12:24:48 AM JST
0x1ece
* Sun 05 Oct 2014 12:24:48 AM JST
0x1ecf
* Sun 05 Oct 2014 12:24:48 AM JST
0x1ed0
* Sun 05 Oct 2014 12:24:49 AM JST
0x1ed1
* Sun 05 Oct 2014 12:24:49 AM JST
0x1ed2
* Sun 05 Oct 2014 12:24:49 AM JST
0x1ed3
* Sun 05 Oct 2014 12:24:49 AM JST
0x1ed4
* Sun 05 Oct 2014 12:24:49 AM JST
0x1ed5
* Sun 05 Oct 2014 12:24:50 AM JST
0x1ed6
* Sun 05 Oct 2014 12:24:50 AM JST
0x1ed7
* Sun 05 Oct 2014 12:24:50 AM JST
0x1ed8
* Sun 05 Oct 2014 12:24:50 AM JST
0x1ed9
* Sun 05 Oct 2014 12:24:50 AM JST
0x1eda
* Sun 05 Oct 2014 12:24:50 AM JST
0x1edb
* Sun 05 Oct 2014 12:24:51 AM JST
0x1edc
* Sun 05 Oct 2014 12:24:51 AM JST
0x1edd
* Sun 05 Oct 2014 12:24:51 AM JST
0x1ede
* Sun 05 Oct 2014 12:24:51 AM JST
0x1edf
* Sun 05 Oct 2014 12:24:51 AM JST
0x1ee0
* Sun 05 Oct 2014 12:24:52 AM JST
0x1ee1
* Sun 05 Oct 2014 12:24:52 AM JST
0x1ee2
* Sun 05 Oct 2014 12:24:52 AM JST
0x1ee3
* Sun 05 Oct 2014 12:24:52 AM JST
0x1ee4
* Sun 05 Oct 2014 12:24:52 AM JST
0x1ee5
* Sun 05 Oct 2014 12:24:52 AM JST
0x1ee6
* Sun 05 Oct 2014 12:24:52 AM JST
0x1ee7
* Sun 05 Oct 2014 12:24:53 AM JST
0x1ee8
* Sun 05 Oct 2014 12:24:53 AM JST
0x1ee9
* Sun 05 Oct 2014 12:24:53 AM JST
0x1eea
* Sun 05 Oct 2014 12:24:53 AM JST
0x1eeb
* Sun 05 Oct 2014 12:24:53 AM JST
0x1eec
* Sun 05 Oct 2014 12:24:53 AM JST
0x1eed
* Sun 05 Oct 2014 12:24:54 AM JST
0x1eee
* Sun 05 Oct 2014 12:24:54 AM JST
0x1eef
* Sun 05 Oct 2014 12:24:54 AM JST
0x1ef0
* Sun 05 Oct 2014 12:24:54 AM JST
0x1ef1
* Sun 05 Oct 2014 12:24:54 AM JST
0x1ef4
* Sun 05 Oct 2014 12:24:54 AM JST
0x1ef5
* Sun 05 Oct 2014 12:24:55 AM JST
0x1ef6
* Sun 05 Oct 2014 12:24:55 AM JST
0x1ef7
* Sun 05 Oct 2014 12:24:55 AM JST
0x1ef8
* Sun 05 Oct 2014 12:24:55 AM JST
0x1ef9
* Sun 05 Oct 2014 12:24:55 AM JST
0x1efa
* Sun 05 Oct 2014 12:24:56 AM JST
0x1efb
* Sun 05 Oct 2014 12:24:56 AM JST
0x1efc
* Sun 05 Oct 2014 12:24:56 AM JST
0x1efd
* Sun 05 Oct 2014 12:24:56 AM JST
0x1e9f
* Sun 05 Oct 2014 12:24:56 AM JST
0x1ef2
* Sun 05 Oct 2014 12:24:56 AM JST
0x1ef3
* Sun 05 Oct 2014 12:24:57 AM JST
0x1efe
* Sun 05 Oct 2014 12:24:57 AM JST
0x1eff
* Sun 05 Oct 2014 12:24:57 AM JST
0x20a0
* Sun 05 Oct 2014 12:24:57 AM JST
0x20a1
* Sun 05 Oct 2014 12:24:57 AM JST
0x20a2
* Sun 05 Oct 2014 12:24:57 AM JST
0x20a3
* Sun 05 Oct 2014 12:24:58 AM JST
0x20a4
* Sun 05 Oct 2014 12:24:58 AM JST
0x20a5
* Sun 05 Oct 2014 12:24:58 AM JST
0x20a6
* Sun 05 Oct 2014 12:24:58 AM JST
0x20a7
* Sun 05 Oct 2014 12:24:58 AM JST
0x20a8
* Sun 05 Oct 2014 12:24:59 AM JST
0x20a9
* Sun 05 Oct 2014 12:24:59 AM JST
0x20aa
* Sun 05 Oct 2014 12:24:59 AM JST
0x20ab
* Sun 05 Oct 2014 12:24:59 AM JST
0x20ac
* Sun 05 Oct 2014 12:25:05 AM JST
0xFFFFFF, 0xFF08, 0xFF09, 0xFF0A, 0xFF0B, 0xFF0D, 0xFF13,
0xFF14, 0xFF15, 0xFF1B, 0xFFFF, 0xFF20, 0xFF37, 0xFF3C,
0xFF3D, 0xFF3E, 0xFF21, 0xFF22, 0xFF23, 0xFF24, 0xFF25,
0xFF26, 0xFF27, 0xFF28, 0xFF29, 0xFF2A, 0xFF2B, 0xFF2C,
0xFF2D, 0xFF2E, 0xFF2F, 0xFF30, 0xFF50, 0xFF51, 0xFF52,
0xFF53, 0xFF54, 0xFF55, 0xFF56, 0xFF57, 0xFF58, 0xFF60,
0xFF61, 0xFF62, 0xFF63, 0xFF65, 0xFF66, 0xFF67, 0xFF68,
0xFF69, 0xFF6A, 0xFF6B, 0xFF7E, 0xFF7F, 0xFF80, 0xFF89,
0xFF8D, 0xFF91, 0xFF92, 0xFF93, 0xFF94, 0xFF95, 0xFF96,
0xFF97, 0xFF98, 0xFF99, 0xFF9A, 0xFF9B, 0xFF9C, 0xFF9D,
0xFF9E, 0xFF9F, 0xFFBD, 0xFFAA, 0xFFAB, 0xFFAC, 0xFFAD,
0xFFAE, 0xFFAF, 0xFFB0, 0xFFBE, 0xFFE1, 0xFFE2, 0xFFE3,
0xFFE4, 0xFFE5, 0xFFE6, 0xFFE7, 0xFFE8, 0xFFE9, 0xFFEA,
0xFFEB, 0xFFEC, 0xFFED, 0xFFEE, 0xFE61, 0xFE62, 0xFD01,
0xFD02, 0xFD03, 0xFD04, 0xFD05, 0xFD06, 0xFD07, 0xFD08,
0xFD09, 0xFD0A, 0xFD0B, 0xFD0C, 0xFD0D, 0xFD0E, 0xFD0F,
0xFD10, 0xFD11, 0xFD12, 0xFD13, 0xFD14, 0xFD15, 0xFD16,
0xFD17, 0xFD18, 0xFD19, 0xFD1A, 0xFD1B, 0xFD1C, 0xFD1D,
0xFD1E, 0x020, 0x021, 0x022, 0x023, 0x024, 0x025, 0x026,
0x027, 0x028, 0x029, 0x02a, 0x02b, 0x02c, 0x02d, 0x02e,
0x02f, 0x030, 0x03a, 0x03b, 0x03c, 0x03d, 0x03e, 0x03f,
0x040, 0x041, 0x05b, 0x05c, 0x05d, 0x05e, 0x05f, 0x060,
0x061, 0x07b, 0x07c, 0x07d, 0x07e, 0x0a0, 0x0a1, 0x0a2,
0x0a3, 0x0a4, 0x0a5, 0x0a6, 0x0a7, 0x0a8, 0x0a9, 0x0aa,
0x0ab, 0x0ac, 0x0ad, 0x0ae, 0x0af, 0x0b0, 0x0b1, 0x0b2,
0x0b3, 0x0b4, 0x0b5, 0x0b6, 0x0b7, 0x0b8, 0x0b9, 0x0ba,
0x0bb, 0x0bc, 0x0bd, 0x0be, 0x0bf, 0x0c0, 0x0c1, 0x0c2,
0x0c3, 0x0c4, 0x0c5, 0x0c6, 0x0c7, 0x0c8, 0x0c9, 0x0ca,
0x0cb, 0x0cc, 0x0cd, 0x0ce, 0x0cf, 0x0d0, 0x0d1, 0x0d2,
0x0d3, 0x0d4, 0x0d5, 0x0d6, 0x0d7, 0x0d8, 0x0d9, 0x0da,
0x0db, 0x0dc, 0x0dd, 0x0de, 0x0df, 0x0e0, 0x0e1, 0x0e2,
0x0e3, 0x0e4, 0x0e5, 0x0e6, 0x0e7, 0x0e8, 0x0e9, 0x0ea,
0x0eb, 0x0ec, 0x0ed, 0x0ee, 0x0ef, 0x0f0, 0x0f1, 0x0f2,
0x0f3, 0x0f4, 0x0f5, 0x0f6, 0x0f7, 0x0f8, 0x0f9, 0x0fa,
0x0fb, 0x0fc, 0x0fd, 0x0fe, 0x0ff, 0x1a1, 0x1a2, 0x1a3,
0x1a5, 0x1a6, 0x1a9, 0x1aa, 0x1ab, 0x1ac, 0x1ae, 0x1af,
0x1b1, 0x1b2, 0x1b3, 0x1b5, 0x1b6, 0x1b7, 0x1b9, 0x1ba,
0x1bb, 0x1bc, 0x1bd, 0x1be, 0x1bf, 0x1c0, 0x1c3, 0x1c5,
0x1c6, 0x1c8, 0x1ca, 0x1cc, 0x1cf, 0x1d0, 0x1d1, 0x1d2,
0x1d5, 0x1d8, 0x1d9, 0x1db, 0x1de, 0x1e0, 0x1e3, 0x1e5,
0x1e6, 0x1e8, 0x1ea, 0x1ec, 0x1ef, 0x1f0, 0x1f1, 0x1f2,
0x1f5, 0x1fb, 0x1f8, 0x1f9, 0x1fe, 0x1ff, 0x2a1, 0x2a6,
0x2a9, 0x2ab, 0x2ac, 0x2b1, 0x2b6, 0x2b9, 0x2bb, 0x2bc,
0x2c5, 0x2c6, 0x2d5, 0x2d8, 0x2dd, 0x2de, 0x2e5, 0x2e6,
0x2f5, 0x2f8, 0x2fd, 0x2fe, 0x3a2, 0x3a3, 0x3a5, 0x3a6,
0x3aa, 0x3ab, 0x3ac, 0x3b3, 0x3b5, 0x3b6, 0x3ba, 0x3bb,
0x3bc, 0x3bd, 0x3bf, 0x3c0, 0x3c7, 0x3cc, 0x3cf, 0x3d1,
0x3d2, 0x3d3, 0x3d9, 0x3dd, 0x3de, 0x3e0, 0x3e7, 0x3ec,
0x3ef, 0x3f1, 0x3f2, 0x3f3, 0x3f9, 0x3fd, 0x3fe, 0x12a1,
0x12a2, 0x12a6, 0x12a8, 0x12aa, 0x12ab, 0x12ac, 0x12b0,
0x12b1, 0x12b4, 0x12b5, 0x12b7, 0x12b8, 0x12b9, 0x12ba,
0x12bb, 0x12bc, 0x12bd, 0x12be, 0x12bf, 0x12d0, 0x12d7,
0x12de, 0x12f0, 0x12f7, 0x12fe, 0x13bc, 0x13bd, 0x13be,
0x47e, 0x4a1, 0x4a2, 0x4a3, 0x4a4, 0x4a5, 0x4a6, 0x4a7,
0x4a8, 0x4a9, 0x4aa, 0x4ab, 0x4ac, 0x4ad, 0x4ae, 0x4af,
0x4b0, 0x4b1, 0x4b2, 0x4b3, 0x4b4, 0x4b5, 0x4b6, 0x4b7,
0x4b8, 0x4b9, 0x4ba, 0x4bb, 0x4bc, 0x4bd, 0x4be, 0x4bf,
0x4c0, 0x4c1, 0x4c2, 0x4c3, 0x4c4, 0x4c5, 0x4c6, 0x4c7,
0x4c8, 0x4c9, 0x4ca, 0x4cb, 0x4cc, 0x4cd, 0x4ce, 0x4cf,
0x4d0, 0x4d1, 0x4d2, 0x4d3, 0x4d4, 0x4d5, 0x4d6, 0x4d7,
0x4d8, 0x4d9, 0x4da, 0x4db, 0x4dc, 0x4dd, 0x4de, 0x4df,
0x590, 0x5a5, 0x5a6, 0x5a7, 0x5a8, 0x5a9, 0x5aa, 0x5ab,
0x5ac, 0x5ae, 0x5b0, 0x5bb, 0x5bf, 0x5c1, 0x5c2, 0x5c3,
0x5c4, 0x5c5, 0x5c6, 0x5c7, 0x5c8, 0x5c9, 0x5ca, 0x5cb,
0x5cc, 0x5cd, 0x5ce, 0x5cf, 0x5d0, 0x5d1, 0x5d2, 0x5d3,
0x5d4, 0x5d5, 0x5d6, 0x5d7, 0x5d8, 0x5d9, 0x5da, 0x5e0,
0x5e1, 0x5e2, 0x5e3, 0x5e4, 0x5e5, 0x5e6, 0x5e7, 0x5e8,
0x5e9, 0x5ea, 0x5eb, 0x5ec, 0x5ed, 0x5ee, 0x5ef, 0x5f0,
0x5f1, 0x5f2, 0x5f3, 0x5f4, 0x5f5, 0x5f6, 0x5f7, 0x5f8,
0x5f9, 0x5fa, 0x5fb, 0x5fc, 0x5fd, 0x5fe, 0x680, 0x690,
0x681, 0x691, 0x682, 0x692, 0x683, 0x693, 0x684, 0x694,
0x685, 0x695, 0x686, 0x696, 0x687, 0x697, 0x688, 0x698,
0x689, 0x699, 0x68a, 0x69a, 0x68c, 0x69c, 0x68d, 0x69d,
0x68e, 0x69e, 0x68f, 0x69f, 0x6a1, 0x6a2, 0x6a3, 0x6a4,
0x6a5, 0x6a6, 0x6a7, 0x6a8, 0x6a9, 0x6aa, 0x6ab, 0x6ac,
0x6ad, 0x6ae, 0x6af, 0x6b0, 0x6b1, 0x6b2, 0x6b3, 0x6b4,
0x6b5, 0x6b6, 0x6b7, 0x6b8, 0x6b9, 0x6ba, 0x6bb, 0x6bc,
0x6bd, 0x6be, 0x6bf, 0x6c0, 0x6c1, 0x6c2, 0x6c3, 0x6c4,
0x6c5, 0x6c6, 0x6c7, 0x6c8, 0x6c9, 0x6ca, 0x6cb, 0x6cc,
0x6cd, 0x6ce, 0x6cf, 0x6d0, 0x6d1, 0x6d2, 0x6d3, 0x6d4,
0x6d5, 0x6d6, 0x6d7, 0x6d8, 0x6d9, 0x6da, 0x6db, 0x6dc,
0x6dd, 0x6de, 0x6df, 0x6e0, 0x6e1, 0x6e2, 0x6e3, 0x6e4,
0x6e5, 0x6e6, 0x6e7, 0x6e8, 0x6e9, 0x6ea, 0x6eb, 0x6ec,
0x6ed, 0x6ee, 0x6ef, 0x6f0, 0x6f1, 0x6f2, 0x6f3, 0x6f4,
0x6f5, 0x6f6, 0x6f7, 0x6f8, 0x6f9, 0x6fa, 0x6fb, 0x6fc,
0x6fd, 0x6fe, 0x6ff, 0x7a1, 0x7a2, 0x7a3, 0x7a4, 0x7a5,
0x7a7, 0x7a8, 0x7a9, 0x7ab, 0x7ae, 0x7af, 0x7b1, 0x7b2,
0x7b3, 0x7b4, 0x7b5, 0x7b6, 0x7b7, 0x7b8, 0x7b9, 0x7ba,
0x7bb, 0x7c1, 0x7c2, 0x7c3, 0x7c4, 0x7c5, 0x7c6, 0x7c7,
0x7c8, 0x7c9, 0x7ca, 0x7cb, 0x7cc, 0x7cd, 0x7ce, 0x7cf,
0x7d0, 0x7d1, 0x7d2, 0x7d4, 0x7d5, 0x7d6, 0x7d7, 0x7d8,
0x7d9, 0x7e1, 0x7e2, 0x7e3, 0x7e4, 0x7e5, 0x7e6, 0x7e7,
0x7e8, 0x7e9, 0x7ea, 0x7eb, 0x7ec, 0x7ed, 0x7ee, 0x7ef,
0x7f0, 0x7f1, 0x7f2, 0x7f3, 0x7f4, 0x7f5, 0x7f6, 0x7f7,
0x7f8, 0x7f9, 0x8a1, 0x8a2, 0x8a3, 0x8a4, 0x8a5, 0x8a6,
0x8a7, 0x8a8, 0x8a9, 0x8aa, 0x8ab, 0x8ac, 0x8ad, 0x8ae,
0x8af, 0x8b0, 0x8b1, 0x8b2, 0x8b3, 0x8b4, 0x8b5, 0x8b6,
0x8b7, 0x8bc, 0x8bd, 0x8be, 0x8bf, 0x8c0, 0x8c1, 0x8c2,
0x8c5, 0x8c8, 0x8c9, 0x8cd, 0x8ce, 0x8cf, 0x8d6, 0x8da,
0x8db, 0x8dc, 0x8dd, 0x8de, 0x8df, 0x8ef, 0x8f6, 0x8fb,
0x8fc, 0x8fd, 0x8fe, 0x9df, 0x9e0, 0x9e1, 0x9e2, 0x9e3,
0x9e4, 0x9e5, 0x9e8, 0x9e9, 0x9ea, 0x9eb, 0x9ec, 0x9ed,
0x9ee, 0x9ef, 0x9f0, 0x9f1, 0x9f2, 0x9f3, 0x9f4, 0x9f5,
0x9f6, 0x9f7, 0x9f8, 0xaa1, 0xaa2, 0xaa3, 0xaa4, 0xaa5,
0xaa6, 0xaa7, 0xaa8, 0xaa9, 0xaaa, 0xaac, 0xaae, 0xaaf,
0xab0, 0xab1, 0xab2, 0xab3, 0xab4, 0xab5, 0xab6, 0xab7,
0xab8, 0xabb, 0xabc, 0xabd, 0xabe, 0xabf, 0xac3, 0xac4,
0xac5, 0xac6, 0xac9, 0xaca, 0xacb, 0xacc, 0xacd, 0xace,
0xacf, 0xad0, 0xad1, 0xad2, 0xad3, 0xad4, 0xad6, 0xad7,
0xad9, 0xada, 0xadb, 0xadc, 0xadd, 0xade, 0xadf, 0xae0,
0xae1, 0xae2, 0xae3, 0xae4, 0xae5, 0xae6, 0xae7, 0xae8,
0xae9, 0xaea, 0xaeb, 0xaec, 0xaed, 0xaee, 0xaf0, 0xaf1,
0xaf2, 0xaf3, 0xaf4, 0xaf5, 0xaf6, 0xaf7, 0xaf8, 0xaf9,
0xafa, 0xafb, 0xafc, 0xafd, 0xafe, 0xaff, 0xba3, 0xba6,
0xba8, 0xba9, 0xbc0, 0xbc2, 0xbc3, 0xbc4, 0xbc6, 0xbca,
0xbcc, 0xbce, 0xbcf, 0xbd3, 0xbd6, 0xbd8, 0xbda, 0xbdc,
0xbfc, 0xcdf, 0xce0, 0xce1, 0xce2, 0xce3, 0xce4, 0xce5,
0xce6, 0xce7, 0xce8, 0xce9, 0xcea, 0xceb, 0xcec, 0xced,
0xcee, 0xcef, 0xcf0, 0xcf1, 0xcf2, 0xcf3, 0xcf4, 0xcf5,
0xcf6, 0xcf7, 0xcf8, 0xcf9, 0xcfa, 0xda1, 0xda2, 0xda3,
0xda4, 0xda5, 0xda6, 0xda7, 0xda8, 0xda9, 0xdaa, 0xdab,
0xdac, 0xdad, 0xdae, 0xdaf, 0xdb0, 0xdb1, 0xdb2, 0xdb3,
0xdb4, 0xdb5, 0xdb6, 0xdb7, 0xdb8, 0xdb9, 0xdba, 0xdbb,
0xdbc, 0xdbd, 0xdbe, 0xdbf, 0xdc0, 0xdc1, 0xdc2, 0xdc3,
0xdc4, 0xdc5, 0xdc6, 0xdc7, 0xdc8, 0xdc9, 0xdca, 0xdcb,
0xdcc, 0xdcd, 0xdce, 0xdcf, 0xdd0, 0xdd1, 0xdd2, 0xdd3,
0xdd4, 0xdd5, 0xdd6, 0xdd7, 0xdd8, 0xdd9, 0xdda, 0xdde,
0xddf, 0xde0, 0xde1, 0xde2, 0xde3, 0xde4, 0xde5, 0xde6,
0xde7, 0xde8, 0xde9, 0xdea, 0xdeb, 0xdec, 0xded, 0xdf0,
0xdf1, 0xdf2, 0xdf3, 0xdf4, 0xdf5, 0xdf6, 0xdf7, 0xdf8,
0xdf9, 0xff31, 0xff32, 0xff33, 0xff34, 0xff35, 0xff36,
0xff37, 0xff38, 0xff39, 0xff3a, 0xff3b, 0xff3c, 0xff3d,
0xff3e, 0xff3f, 0xea1, 0xea2, 0xea3, 0xea4, 0xea5, 0xea6,
0xea7, 0xea8, 0xea9, 0xeaa, 0xeab, 0xeac, 0xead, 0xeae,
0xeaf, 0xeb0, 0xeb1, 0xeb2, 0xeb3, 0xeb4, 0xeb5, 0xeb6,
0xeb7, 0xeb8, 0xeb9, 0xeba, 0xebb, 0xebc, 0xebd, 0xebe,
0xebf, 0xec0, 0xec1, 0xec2, 0xec3, 0xec4, 0xec5, 0xec6,
0xec7, 0xec8, 0xec9, 0xeca, 0xecb, 0xecc, 0xecd, 0xece,
0xecf, 0xed0, 0xed1, 0xed2, 0xed3, 0xed4, 0xed5, 0xed6,
0xed7, 0xed8, 0xed9, 0xeda, 0xedb, 0xedc, 0xedd, 0xede,
0xedf, 0xee0, 0xee1, 0xee2, 0xee3, 0xee4, 0xee5, 0xee6,
0xee7, 0xee8, 0xee9, 0xeea, 0xeeb, 0xeec, 0xeed, 0xeee,
0xeef, 0xef0, 0xef1, 0xef2, 0xef3, 0xef4, 0xef5, 0xef6,
0xef7, 0xef8, 0xef9, 0xefa, 0xeff, 0x14a1, 0x14a2, 0x14a3,
0x14a4, 0x14a5, 0x14a6, 0x14a7, 0x14a8, 0x14a9, 0x14aa,
0x14ab, 0x14ac, 0x14ad, 0x14ae, 0x14af, 0x14b0, 0x14b1,
0x14b2, 0x14b3, 0x14b4, 0x14b5, 0x14b6, 0x14b7, 0x14b8,
0x14b9, 0x14ba, 0x14bb, 0x14bc, 0x14bd, 0x14be, 0x14bf,
0x14c0, 0x14c1, 0x14c2, 0x14c3, 0x14c4, 0x14c5, 0x14c6,
0x14c7, 0x14c8, 0x14c9, 0x14ca, 0x14cb, 0x14cc, 0x14cd,
0x14ce, 0x14cf, 0x14d0, 0x14d1, 0x14d2, 0x14d3, 0x14d4,
0x14d5, 0x14d6, 0x14d7, 0x14d8, 0x14d9, 0x14da, 0x14db,
0x14dc, 0x14dd, 0x14de, 0x14df, 0x14e0, 0x14e1, 0x14e2,
0x14e3, 0x14e4, 0x14e5, 0x14e6, 0x14e7, 0x14e8, 0x14e9,
0x14ea, 0x14eb, 0x14ec, 0x14ed, 0x14ee, 0x14ef, 0x14f0,
0x14f1, 0x14f2, 0x14f3, 0x14f4, 0x14f5, 0x14f6, 0x14f7,
0x14f8, 0x14f9, 0x14fa, 0x14fb, 0x14fc, 0x14fd, 0x14fe,
0x14ff, 0x15d0, 0x15d1, 0x15d2, 0x15d3, 0x15d4, 0x15d5,
0x15d6, 0x15d7, 0x15d8, 0x15d9, 0x15da, 0x15db, 0x15dc,
0x15dd, 0x15de, 0x15df, 0x15e0, 0x15e1, 0x15e2, 0x15e3,
0x15e4, 0x15e5, 0x15e6, 0x15e7, 0x15e8, 0x15e9, 0x15ea,
0x15eb, 0x15ec, 0x15ed, 0x15ee, 0x15ef, 0x15f0, 0x15f1,
0x15f2, 0x15f3, 0x15f4, 0x15f5, 0x15f6, 0x16a2, 0x16a3,
0x16a5, 0x16a7, 0x16a8, 0x16a9, 0x16b2, 0x16b3, 0x16b5,
0x16b7, 0x16b8, 0x16b9, 0x16c6, 0x16f6, 0x16d1, 0x16d2,
0x16e1, 0x16e2, 0x16d3, 0x16e3, 0x1ea0, 0x1ea1, 0x1ea2,
0x1ea3, 0x1ea4, 0x1ea5, 0x1ea6, 0x1ea7, 0x1ea8, 0x1ea9,
0x1eaa, 0x1eab, 0x1eac, 0x1ead, 0x1eae, 0x1eaf, 0x1eb0,
0x1eb1, 0x1eb2, 0x1eb3, 0x1eb4, 0x1eb5, 0x1eb6, 0x1eb7,
0x1eb8, 0x1eb9, 0x1eba, 0x1ebb, 0x1ebc, 0x1ebd, 0x1ebe,
0x1ebf, 0x1ec0, 0x1ec1, 0x1ec2, 0x1ec3, 0x1ec4, 0x1ec5,
0x1ec6, 0x1ec7, 0x1ec8, 0x1ec9, 0x1eca, 0x1ecb, 0x1ecc,
0x1ecd, 0x1ece, 0x1ecf, 0x1ed0, 0x1ed1, 0x1ed2, 0x1ed3,
0x1ed4, 0x1ed5, 0x1ed6, 0x1ed7, 0x1ed8, 0x1ed9, 0x1eda,
0x1edb, 0x1edc, 0x1edd, 0x1ede, 0x1edf, 0x1ee0, 0x1ee1,
0x1ee2, 0x1ee3, 0x1ee4, 0x1ee5, 0x1ee6, 0x1ee7, 0x1ee8,
0x1ee9, 0x1eea, 0x1eeb, 0x1eec, 0x1eed, 0x1eee, 0x1eef,
0x1ef0, 0x1ef1, 0x1ef4, 0x1ef5, 0x1ef6, 0x1ef7, 0x1ef8,
0x1ef9, 0x1efa, 0x1efb, 0x1efc, 0x1efd, 0x1e9f, 0x1ef2,
0x1ef3, 0x1efe, 0x1eff, 0x20a0, 0x20a1, 0x20a2, 0x20a3,
0x20a4, 0x20a5, 0x20a6, 0x20a7, 0x20a8, 0x20a9, 0x20aa,
0x20ab, 0x20ac, 
* Sun 05 Oct 2014 12:26:11 AM JST
0xFFFFFF, 0xFF08, 0xFF09, 0xFF0A, 0xFF0B, 0xFF0D, 0xFF13,
0xFF14, 0xFF15, 0xFF1B, 0xFFFF, 0xFF20, 0xFF37, 0xFF3C,
0xFF3D, 0xFF3E, 0xFF21, 0xFF22, 0xFF23, 0xFF24, 0xFF25,
0xFF26, 0xFF27, 0xFF28, 0xFF29, 0xFF2A, 0xFF2B, 0xFF2C,
0xFF2D, 0xFF2E, 0xFF2F, 0xFF30, 0xFF50, 0xFF51, 0xFF52,
0xFF53, 0xFF54, 0xFF55, 0xFF56, 0xFF57, 0xFF58, 0xFF60,
0xFF61, 0xFF62, 0xFF63, 0xFF65, 0xFF66, 0xFF67, 0xFF68,
0xFF69, 0xFF6A, 0xFF6B, 0xFF7E, 0xFF7F, 0xFF80, 0xFF89,
0xFF8D, 0xFF91, 0xFF92, 0xFF93, 0xFF94, 0xFF95, 0xFF96,
0xFF97, 0xFF98, 0xFF99, 0xFF9A, 0xFF9B, 0xFF9C, 0xFF9D,
0xFF9E, 0xFF9F, 0xFFBD, 0xFFAA, 0xFFAB, 0xFFAC, 0xFFAD,
0xFFAE, 0xFFAF, 0xFFB0, 0xFFBE, 0xFFE1, 0xFFE2, 0xFFE3,
0xFFE4, 0xFFE5, 0xFFE6, 0xFFE7, 0xFFE8, 0xFFE9, 0xFFEA,
0xFFEB, 0xFFEC, 0xFFED, 0xFFEE, 0xFE61, 0xFE62, 0xFD01,
0xFD02, 0xFD03, 0xFD04, 0xFD05, 0xFD06, 0xFD07, 0xFD08,
0xFD09, 0xFD0A, 0xFD0B, 0xFD0C, 0xFD0D, 0xFD0E, 0xFD0F,
0xFD10, 0xFD11, 0xFD12, 0xFD13, 0xFD14, 0xFD15, 0xFD16,
0xFD17, 0xFD18, 0xFD19, 0xFD1A, 0xFD1B, 0xFD1C, 0xFD1D,
0xFD1E, 0x020, 0x021, 0x022, 0x023, 0x024, 0x025, 0x026,
0x027, 0x028, 0x029, 0x02a, 0x02b, 0x02c, 0x02d, 0x02e,
0x02f, 0x030, 0x03a, 0x03b, 0x03c, 0x03d, 0x03e, 0x03f,
0x040, 0x041, 0x05b, 0x05c, 0x05d, 0x05e, 0x05f, 0x060,
0x061, 0x07b, 0x07c, 0x07d, 0x07e, 0x0a0, 0x0a1, 0x0a2,
0x0a3, 0x0a4, 0x0a5, 0x0a6, 0x0a7, 0x0a8, 0x0a9, 0x0aa,
0x0ab, 0x0ac, 0x0ad, 0x0ae, 0x0af, 0x0b0, 0x0b1, 0x0b2,
0x0b3, 0x0b4, 0x0b5, 0x0b6, 0x0b7, 0x0b8, 0x0b9, 0x0ba,
0x0bb, 0x0bc, 0x0bd, 0x0be, 0x0bf, 0x0c0, 0x0c1, 0x0c2,
0x0c3, 0x0c4, 0x0c5, 0x0c6, 0x0c7, 0x0c8, 0x0c9, 0x0ca,
0x0cb, 0x0cc, 0x0cd, 0x0ce, 0x0cf, 0x0d0, 0x0d1, 0x0d2,
0x0d3, 0x0d4, 0x0d5, 0x0d6, 0x0d7, 0x0d8, 0x0d9, 0x0da,
0x0db, 0x0dc, 0x0dd, 0x0de, 0x0df, 0x0e0, 0x0e1, 0x0e2,
0x0e3, 0x0e4, 0x0e5, 0x0e6, 0x0e7, 0x0e8, 0x0e9, 0x0ea,
0x0eb, 0x0ec, 0x0ed, 0x0ee, 0x0ef, 0x0f0, 0x0f1, 0x0f2,
0x0f3, 0x0f4, 0x0f5, 0x0f6, 0x0f7, 0x0f8, 0x0f9, 0x0fa,
0x0fb, 0x0fc, 0x0fd, 0x0fe, 0x0ff, 0x1a1, 0x1a2, 0x1a3,
0x1a5, 0x1a6, 0x1a9, 0x1aa, 0x1ab, 0x1ac, 0x1ae, 0x1af,
0x1b1, 0x1b2, 0x1b3, 0x1b5, 0x1b6, 0x1b7, 0x1b9, 0x1ba,
0x1bb, 0x1bc, 0x1bd, 0x1be, 0x1bf, 0x1c0, 0x1c3, 0x1c5,
0x1c6, 0x1c8, 0x1ca, 0x1cc, 0x1cf, 0x1d0, 0x1d1, 0x1d2,
* Sun 05 Oct 2014 12:27:16 AM JST
0x1d5, 0x1d8, 0x1d9, 0x1db, 0x1de, 0x1e0, 0x1e3, 0x1e5,
0x1e6, 0x1e8, 0x1ea, 0x1ec, 0x1ef, 0x1f0, 0x1f1, 0x1f2,
0x1f5, 0x1fb, 0x1f8, 0x1f9, 0x1fe, 0x1ff, 0x2a1, 0x2a6,
0x2a9, 0x2ab, 0x2ac, 0x2b1, 0x2b6, 0x2b9, 0x2bb, 0x2bc,
0x2c5, 0x2c6, 0x2d5, 0x2d8, 0x2dd, 0x2de, 0x2e5, 0x2e6,
0x2f5, 0x2f8, 0x2fd, 0x2fe, 0x3a2, 0x3a3, 0x3a5, 0x3a6,
0x3aa, 0x3ab, 0x3ac, 0x3b3, 0x3b5, 0x3b6, 0x3ba, 0x3bb,
0x3bc, 0x3bd, 0x3bf, 0x3c0, 0x3c7, 0x3cc, 0x3cf, 0x3d1,
0x3d2, 0x3d3, 0x3d9, 0x3dd, 0x3de, 0x3e0, 0x3e7, 0x3ec,
0x3ef, 0x3f1, 0x3f2, 0x3f3, 0x3f9, 0x3fd, 0x3fe, 0x12a1,
0x12a2, 0x12a6, 0x12a8, 0x12aa, 0x12ab, 0x12ac, 0x12b0,
0x12b1, 0x12b4, 0x12b5, 0x12b7, 0x12b8, 0x12b9, 0x12ba,
0x12bb, 0x12bc, 0x12bd, 0x12be, 0x12bf, 0x12d0, 0x12d7,
0x12de, 0x12f0, 0x12f7, 0x12fe, 0x13bc, 0x13bd, 0x13be,
0x47e, 0x4a1, 0x4a2, 0x4a3, 0x4a4, 0x4a5, 0x4a6, 0x4a7,
0x4a8, 0x4a9, 0x4aa, 0x4ab, 0x4ac, 0x4ad, 0x4ae, 0x4af,
0x4b0, 0x4b1, 0x4b2, 0x4b3, 0x4b4, 0x4b5, 0x4b6, 0x4b7,
0x4b8, 0x4b9, 0x4ba, 0x4bb, 0x4bc, 0x4bd, 0x4be, 0x4bf,
0x4c0, 0x4c1, 0x4c2, 0x4c3, 0x4c4, 0x4c5, 0x4c6, 0x4c7,
0x4c8, 0x4c9, 0x4ca, 0x4cb, 0x4cc, 0x4cd, 0x4ce, 0x4cf,
0x4d0, 0x4d1, 0x4d2, 0x4d3, 0x4d4, 0x4d5, 0x4d6, 0x4d7,
0x4d8, 0x4d9, 0x4da, 0x4db, 0x4dc, 0x4dd, 0x4de, 0x4df,
0x590, 0x5a5, 0x5a6, 0x5a7, 0x5a8, 0x5a9, 0x5aa, 0x5ab,
0x5ac, 0x5ae, 0x5b0, 0x5bb, 0x5bf, 0x5c1, 0x5c2, 0x5c3,
0x5c4, 0x5c5, 0x5c6, 0x5c7, 0x5c8, 0x5c9, 0x5ca, 0x5cb,
0x5cc, 0x5cd, 0x5ce, 0x5cf, 0x5d0, 0x5d1, 0x5d2, 0x5d3,
0x5d4, 0x5d5, 0x5d6, 0x5d7, 0x5d8, 0x5d9, 0x5da, 0x5e0,
0x5e1, 0x5e2, 0x5e3, 0x5e4, 0x5e5, 0x5e6, 0x5e7, 0x5e8,
0x5e9, 0x5ea, 0x5eb, 0x5ec, 0x5ed, 0x5ee, 0x5ef, 0x5f0,
0x5f1, 0x5f2, 0x5f3, 0x5f4, 0x5f5, 0x5f6, 0x5f7, 0x5f8,
0x5f9, 0x5fa, 0x5fb, 0x5fc, 0x5fd, 0x5fe, 0x680, 0x690,
0x681, 0x691, 0x682, 0x692, 0x683, 0x693, 0x684, 0x694,
0x685, 0x695, 0x686, 0x696, 0x687, 0x697, 0x688, 0x698,
0x689, 0x699, 0x68a, 0x69a, 0x68c, 0x69c, 0x68d, 0x69d,
0x68e, 0x69e, 0x68f, 0x69f, 0x6a1, 0x6a2, 0x6a3, 0x6a4,
0x6a5, 0x6a6, 0x6a7, 0x6a8, 0x6a9, 0x6aa, 0x6ab, 0x6ac,
0x6ad, 0x6ae, 0x6af, 0x6b0, 0x6b1, 0x6b2, 0x6b3, 0x6b4,
0x6b5, 0x6b6, 0x6b7, 0x6b8, 0x6b9, 0x6ba, 0x6bb, 0x6bc,
0x6bd, 0x6be, 0x6bf, 0x6c0, 0x6c1, 0x6c2, 0x6c3, 0x6c4,
0x6c5, 0x6c6, 0x6c7, 0x6c8, 0x6c9, 0x6ca, 0x6cb, 0x6cc,
0x6cd, 0x6ce, 0x6cf, 0x6d0, 0x6d1, 0x6d2, 0x6d3, 0x6d4,
0x6d5, 0x6d6, 0x6d7, 0x6d8, 0x6d9, 0x6da, 0x6db, 0x6dc,
0x6dd, 0x6de, 0x6df, 0x6e0, 0x6e1, 0x6e2, 0x6e3, 0x6e4,
0x6e5, 0x6e6, 0x6e7, 0x6e8, 0x6e9, 0x6ea, 0x6eb, 0x6ec,
0x6ed, 0x6ee, 0x6ef, 0x6f0, 0x6f1, 0x6f2, 0x6f3, 0x6f4,
0x6f5, 0x6f6, 0x6f7, 0x6f8, 0x6f9, 0x6fa, 0x6fb, 0x6fc,
0x6fd, 0x6fe, 0x6ff, 0x7a1, 0x7a2, 0x7a3, 0x7a4, 0x7a5,
0x7a7, 0x7a8, 0x7a9, 0x7ab, 0x7ae, 0x7af, 0x7b1, 0x7b2,
0x7b3, 0x7b4, 0x7b5, 0x7b6, 0x7b7, 0x7b8, 0x7b9, 0x7ba,
0x7bb, 0x7c1, 0x7c2, 0x7c3, 0x7c4, 0x7c5, 0x7c6, 0x7c7,
0x7c8, 0x7c9, 0x7ca, 0x7cb, 0x7cc, 0x7cd, 0x7ce, 0x7cf,
0x7d0, 0x7d1, 0x7d2, 0x7d4, 0x7d5, 0x7d6, 0x7d7, 0x7d8,
0x7d9, 0x7e1, 0x7e2, 0x7e3, 0x7e4, 0x7e5, 0x7e6, 0x7e7,
0x7e8, 0x7e9, 0x7ea, 0x7eb, 0x7ec, 0x7ed, 0x7ee, 0x7ef,
0x7f0, 0x7f1, 0x7f2, 0x7f3, 0x7f4, 0x7f5, 0x7f6, 0x7f7,
0x7f8, 0x7f9, 0x8a1, 0x8a2, 0x8a3, 0x8a4, 0x8a5, 0x8a6,
0x8a7, 0x8a8, 0x8a9, 0x8aa, 0x8ab, 0x8ac, 0x8ad, 0x8ae,
0x8af, 0x8b0, 0x8b1, 0x8b2, 0x8b3, 0x8b4, 0x8b5, 0x8b6,
0x8b7, 0x8bc, 0x8bd, 0x8be, 0x8bf, 0x8c0, 0x8c1, 0x8c2,
0x8c5, 0x8c8, 0x8c9, 0x8cd, 0x8ce, 0x8cf, 0x8d6, 0x8da,
0x8db, 0x8dc, 0x8dd, 0x8de, 0x8df, 0x8ef, 0x8f6, 0x8fb,
0x8fc, 0x8fd, 0x8fe, 0x9df, 0x9e0, 0x9e1, 0x9e2, 0x9e3,
0x9e4, 0x9e5, 0x9e8, 0x9e9, 0x9ea, 0x9eb, 0x9ec, 0x9ed,
0x9ee, 0x9ef, 0x9f0, 0x9f1, 0x9f2, 0x9f3, 0x9f4, 0x9f5,
0x9f6, 0x9f7, 0x9f8, 0xaa1, 0xaa2, 0xaa3, 0xaa4, 0xaa5,
0xaa6, 0xaa7, 0xaa8, 0xaa9, 0xaaa, 0xaac, 0xaae, 0xaaf,
0xab0, 0xab1, 0xab2, 0xab3, 0xab4, 0xab5, 0xab6, 0xab7,
0xab8, 0xabb, 0xabc, 0xabd, 0xabe, 0xabf, 0xac3, 0xac4,
0xac5, 0xac6, 0xac9, 0xaca, 0xacb, 0xacc, 0xacd, 0xace,
0xacf, 0xad0, 0xad1, 0xad2, 0xad3, 0xad4, 0xad6, 0xad7,
0xad9, 0xada, 0xadb, 0xadc, 0xadd, 0xade, 0xadf, 0xae0,
0xae1, 0xae2, 0xae3, 0xae4, 0xae5, 0xae6, 0xae7, 0xae8,
0xae9, 0xaea, 0xaeb, 0xaec, 0xaed, 0xaee, 0xaf0, 0xaf1,
0xaf2, 0xaf3, 0xaf4, 0xaf5, 0xaf6, 0xaf7, 0xaf8, 0xaf9,
0xafa, 0xafb, 0xafc, 0xafd, 0xafe, 0xaff, 0xba3, 0xba6,
0xba8, 0xba9, 0xbc0, 0xbc2, 0xbc3, 0xbc4, 0xbc6, 0xbca,
0xbcc, 0xbce, 0xbcf, 0xbd3, 0xbd6, 0xbd8, 0xbda, 0xbdc,
0xbfc, 0xcdf, 0xce0, 0xce1, 0xce2, 0xce3, 0xce4, 0xce5,
0xce6, 0xce7, 0xce8, 0xce9, 0xcea, 0xceb, 0xcec, 0xced,
0xcee, 0xcef, 0xcf0, 0xcf1, 0xcf2, 0xcf3, 0xcf4, 0xcf5,
0xcf6, 0xcf7, 0xcf8, 0xcf9, 0xcfa, 0xda1, 0xda2, 0xda3,
0xda4, 0xda5, 0xda6, 0xda7, 0xda8, 0xda9, 0xdaa, 0xdab,
0xdac, 0xdad, 0xdae, 0xdaf, 0xdb0, 0xdb1, 0xdb2, 0xdb3,
0xdb4, 0xdb5, 0xdb6, 0xdb7, 0xdb8, 0xdb9, 0xdba, 0xdbb,
0xdbc, 0xdbd, 0xdbe, 0xdbf, 0xdc0, 0xdc1, 0xdc2, 0xdc3,
0xdc4, 0xdc5, 0xdc6, 0xdc7, 0xdc8, 0xdc9, 0xdca, 0xdcb,
0xdcc, 0xdcd, 0xdce, 0xdcf, 0xdd0, 0xdd1, 0xdd2, 0xdd3,
0xdd4, 0xdd5, 0xdd6, 0xdd7, 0xdd8, 0xdd9, 0xdda, 0xdde,
0xddf, 0xde0, 0xde1, 0xde2, 0xde3, 0xde4, 0xde5, 0xde6,
0xde7, 0xde8, 0xde9, 0xdea, 0xdeb, 0xdec, 0xded, 0xdf0,
0xdf1, 0xdf2, 0xdf3, 0xdf4, 0xdf5, 0xdf6, 0xdf7, 0xdf8,

* Sun 05 Oct 2014 12:27:54 AM JST
0x12a1
0x12a2
0x12a6
0x12a8
0x12aa
0x12ab
0x12ac
0x12b0
0x12b1
0x12b4
0x12b5
0x12b7
0x12b8
0x12b9
0x12ba
0x12bb
0x12bc
0x12bd
0x12be
0x12bf
0x12d0
0x12d7
0x12de
0x12f0
0x12f7
0x12fe
0x590
0x5a5
0x5a6
0x5a7
0x5a8
0x5a9
0x5aa
0x5ab
0x5ae
0x5b0
0x5f3
0x5f4
0x5f5
0x5f6
0x5f7
0x5f8
0x5f9
0x5fa
0x5fb
0x5fc
0x5fd
0x5fe
0x680
0x690
0x681
0x691
0x682
0x692
0x683
0x693
0x684
0x694
0x685
0x695
0x686
0x696
0x687
0x697
0x688
0x698
0x689
0x699
0x68a
0x69a
0x68c
0x69c
0x68d
0x69d
0x68e
0x69e
0x68f
0x69f
* Sun 05 Oct 2014 12:28:07 AM JST
0xdf9, 0xff31, 0xff32, 0xff33, 0xff34, 0xff35, 0xff36,
0xff37, 0xff38, 0xff39, 0xff3a, 0xff3b, 0xff3c, 0xff3d,
0xff3e, 0xff3f, 0xea1, 0xea2, 0xea3, 0xea4, 0xea5, 0xea6,
0xea7, 0xea8, 0xea9, 0xeaa, 0xeab, 0xeac, 0xead, 0xeae,
0xeaf, 0xeb0, 0xeb1, 0xeb2, 0xeb3, 0xeb4, 0xeb5, 0xeb6,
0xeb7, 0xeb8, 0xeb9, 0xeba, 0xebb, 0xebc, 0xebd, 0xebe,
0xebf, 0xec0, 0xec1, 0xec2, 0xec3, 0xec4, 0xec5, 0xec6,
0xec7, 0xec8, 0xec9, 0xeca, 0xecb, 0xecc, 0xecd, 0xece,
0xecf, 0xed0, 0xed1, 0xed2, 0xed3, 0xed4, 0xed5, 0xed6,
0xed7, 0xed8, 0xed9, 0xeda, 0xedb, 0xedc, 0xedd, 0xede,
0xedf, 0xee0, 0xee1, 0xee2, 0xee3, 0xee4, 0xee5, 0xee6,
0xee7, 0xee8, 0xee9, 0xeea, 0xeeb, 0xeec, 0xeed, 0xeee,
0xeef, 0xef0, 0xef1, 0xef2, 0xef3, 0xef4, 0xef5, 0xef6,
0xef7, 0xef8, 0xef9, 0xefa, 0xeff, 0x14a1, 0x14a2, 0x14a3,
0x14a4, 0x14a5, 0x14a6, 0x14a7, 0x14a8, 0x14a9, 0x14aa,
0x14ab, 0x14ac, 0x14ad, 0x14ae, 0x14af, 0x14b0, 0x14b1,
0x14b2, 0x14b3, 0x14b4, 0x14b5, 0x14b6, 0x14b7, 0x14b8,
0x14b9, 0x14ba, 0x14bb, 0x14bc, 0x14bd, 0x14be, 0x14bf,
0x14c0, 0x14c1, 0x14c2, 0x14c3, 0x14c4, 0x14c5, 0x14c6,
0x14c7, 0x14c8, 0x14c9, 0x14ca, 0x14cb, 0x14cc, 0x14cd,
0x14ce, 0x14cf, 0x14d0, 0x14d1, 0x14d2, 0x14d3, 0x14d4,
0x14d5, 0x14d6, 0x14d7, 0x14d8, 0x14d9, 0x14da, 0x14db,
0x14dc, 0x14dd, 0x14de, 0x14df, 0x14e0, 0x14e1, 0x14e2,
0x14e3, 0x14e4, 0x14e5, 0x14e6, 0x14e7, 0x14e8, 0x14e9,
0x14ea, 0x14eb, 0x14ec, 0x14ed, 0x14ee, 0x14ef, 0x14f0,
0x14f1, 0x14f2, 0x14f3, 0x14f4, 0x14f5, 0x14f6, 0x14f7,
0x14f8, 0x14f9, 0x14fa, 0x14fb, 0x14fc, 0x14fd, 0x14fe,
0x14ff, 0x15d0, 0x15d1, 0x15d2, 0x15d3, 0x15d4, 0x15d5,
0x15d6, 0x15d7, 0x15d8, 0x15d9, 0x15da, 0x15db, 0x15dc,
0x15dd, 0x15de, 0x15df, 0x15e0, 0x15e1, 0x15e2, 0x15e3,
0x15e4, 0x15e5, 0x15e6, 0x15e7, 0x15e8, 0x15e9, 0x15ea,
0x15eb, 0x15ec, 0x15ed, 0x15ee, 0x15ef, 0x15f0, 0x15f1,
0x15f2, 0x15f3, 0x15f4, 0x15f5, 0x15f6, 0x16a2, 0x16a3,
0x16a5, 0x16a7, 0x16a8, 0x16a9, 0x16b2, 0x16b3, 0x16b5,
0x16b7, 0x16b8, 0x16b9, 0x16c6, 0x16f6, 0x16d1, 0x16d2,
0x16e1, 0x16e2, 0x16d3, 0x16e3, 0x1ea0, 0x1ea1, 0x1ea2,
0x1ea3, 0x1ea4, 0x1ea5, 0x1ea6, 0x1ea7, 0x1ea8, 0x1ea9,
0x1eaa, 0x1eab, 0x1eac, 0x1ead, 0x1eae, 0x1eaf, 0x1eb0,
0x1eb1, 0x1eb2, 0x1eb3, 0x1eb4, 0x1eb5, 0x1eb6, 0x1eb7,
0x1eb8, 0x1eb9, 0x1eba, 0x1ebb, 0x1ebc, 0x1ebd, 0x1ebe,
0x1ebf, 0x1ec0, 0x1ec1, 0x1ec2, 0x1ec3, 0x1ec4, 0x1ec5,
0x1ec6, 0x1ec7, 0x1ec8, 0x1ec9, 0x1eca, 0x1ecb, 0x1ecc,
0x1ecd, 0x1ece, 0x1ecf, 0x1ed0, 0x1ed1, 0x1ed2, 0x1ed3,
0x1ed4, 0x1ed5, 0x1ed6, 0x1ed7, 0x1ed8, 0x1ed9, 0x1eda,
0x1edb, 0x1edc, 0x1edd, 0x1ede, 0x1edf, 0x1ee0, 0x1ee1,
0x1ee2, 0x1ee3, 0x1ee4, 0x1ee5, 0x1ee6, 0x1ee7, 0x1ee8,
0x1ee9, 0x1eea, 0x1eeb, 0x1eec, 0x1eed, 0x1eee, 0x1eef,
0x1ef0, 0x1ef1, 0x1ef4, 0x1ef5, 0x1ef6, 0x1ef7, 0x1ef8,
0x1ef9, 0x1efa, 0x1efb, 0x1efc, 0x1efd, 0x1e9f, 0x1ef2,
0x1ef3, 0x1efe, 0x1eff, 0x20a0, 0x20a1, 0x20a2, 0x20a3,
0x20a4, 0x20a5, 0x20a6, 0x20a7, 0x20a8, 0x20a9, 0x20aa,
0x20ab, 0x20ac, 
* Sun 05 Oct 2014 12:28:38 AM JST
0x14a1
0x14a2
0x14a3
0x14a4
0x14a5
0x14a6
0x14a7
0x14a8
0x14a9
0x14aa
0x14ab
0x14ac
0x14ad
0x14ae
0x14af
0x14b0
0x14b1
0x14b2
0x14b3
0x14b4
0x14b5
0x14b6
0x14b7
0x14b8
0x14b9
0x14ba
0x14bb
0x14bc
0x14bd
0x14be
0x14bf
0x14c0
0x14c1
0x14c2
0x14c3
0x14c4
0x14c5
0x14c6
0x14c7
0x14c8
0x14c9
0x14ca
0x14cb
0x14cc
0x14cd
0x14ce
0x14cf
0x14d0
0x14d1
0x14d2
0x14d3
0x14d4
0x14d5
0x14d6
0x14d7
0x14d8
0x14d9
0x14da
0x14db
0x14dc
0x14dd
0x14de
0x14df
0x14e0
0x14e1
0x14e2
0x14e3
0x14e4
0x14e5
0x14e6
0x14e7
0x14e8
0x14e9
0x14ea
0x14eb
0x14ec
0x14ed
0x14ee
0x14ef
0x14f0
0x14f1
0x14f2
0x14f3
0x14f4
0x14f5
0x14f6
0x14f7
0x14f8
0x14f9
0x14fa
0x14fb
0x14fc
0x14fd
0x14fe
0x14ff
0x15d0
0x15d1
0x15d2
0x15d3
0x15d4
0x15d5
0x15d6
0x15d7
0x15d8
0x15d9
0x15da
0x15db
0x15dc
0x15dd
0x15de
0x15df
0x15e0
0x15e1
0x15e2
0x15e3
0x15e4
0x15e5
0x15e6
0x15e7
0x15e8
0x15e9
0x15ea
0x15eb
0x15ec
0x15ed
0x15ee
0x15ef
0x15f0
0x15f1
0x15f2
0x15f3
0x15f4
0x15f5
0x15f6
0x16a2
0x16a3
0x16a5
0x16a7
0x16a8
0x16a9
0x16b2
0x16b3
0x16b5
0x16b7
0x16b8
0x16b9
0x16c6
0x16f6
0x16d1
0x16d2
0x16e1
0x16e2
0x16d3
0x16e3
0x1ea0
0x1ea1
0x1ea2
0x1ea3
0x1ea4
0x1ea5
0x1ea6
0x1ea7
0x1ea8
0x1ea9
0x1eaa
0x1eab
0x1eac
0x1ead
0x1eae
0x1eaf
0x1eb0
0x1eb1
0x1eb2
0x1eb3
0x1eb4
0x1eb5
0x1eb6
0x1eb7
0x1eb8
0x1eb9
0x1eba
0x1ebb
0x1ebc
0x1ebd
0x1ebe
0x1ebf
0x1ec0
0x1ec1
0x1ec2
0x1ec3
0x1ec4
0x1ec5
0x1ec6
0x1ec7
0x1ec8
0x1ec9
0x1eca
0x1ecb
0x1ecc
0x1ecd
0x1ece
0x1ecf
0x1ed0
0x1ed1
0x1ed2
0x1ed3
0x1ed4
0x1ed5
0x1ed6
0x1ed7
0x1ed8
0x1ed9
0x1eda
0x1edb
0x1edc
0x1edd
0x1ede
0x1edf
0x1ee0
0x1ee1
0x1ee2
0x1ee3
0x1ee4
0x1ee5
0x1ee6
0x1ee7
0x1ee8
0x1ee9
0x1eea
0x1eeb
0x1eec
0x1eed
0x1eee
0x1eef
0x1ef0
0x1ef1
0x1ef4
0x1ef5
0x1ef6
0x1ef7
0x1ef8
0x1ef9
0x1efa
0x1efb
0x1efc
0x1efd
0x1e9f
0x1ef2
0x1ef3
0x1efe
0x1eff
0x20a0
0x20a1
0x20a2
0x20a3
0x20a4
0x20a5
0x20a6
0x20a7
0x20a8
0x20a9
0x20aa
0x20ab

* Sun 05 Oct 2014 12:32:23 AM JST
#define XK_VoidSymbol                  0xffffff  /* Void symbol */

#ifdef XK_MISCELLANY
/*
 * TTY function keys, cleverly chosen to map to ASCII, for convenience of
 * programming, but could have been arbitrary (at the cost of lookup
 * tables in client code).
 */

#define XK_BackSpace                     0xff08  /* Back space, back char */
#define XK_Tab                           0xff09
#define XK_Linefeed                      0xff0a  /* Linefeed, LF */
#define XK_Clear                         0xff0b
#define XK_Return                        0xff0d  /* Return, enter */
#define XK_Pause                         0xff13  /* Pause, hold */
#define XK_Scroll_Lock                   0xff14
#define XK_Sys_Req                       0xff15
#define XK_Escape                        0xff1b
#define XK_Delete                        0xffff  /* Delete, rubout */



/* International & multi-key character composition */

#define XK_Multi_key                     0xff20  /* Multi-key character compose */
#define XK_Codeinput                     0xff37
#define XK_SingleCandidate               0xff3c
#define XK_MultipleCandidate             0xff3d
#define XK_PreviousCandidate             0xff3e

/* Japanese keyboard support */

#define XK_Kanji                         0xff21  /* Kanji, Kanji convert */
#define XK_Muhenkan                      0xff22  /* Cancel Conversion */
#define XK_Henkan_Mode                   0xff23  /* Start/Stop Conversion */
#define XK_Henkan                        0xff23  /* Alias for Henkan_Mode */
#define XK_Romaji                        0xff24  /* to Romaji */
#define XK_Hiragana                      0xff25  /* to Hiragana */
#define XK_Katakana                      0xff26  /* to Katakana */
#define XK_Hiragana_Katakana             0xff27  /* Hiragana/Katakana toggle */
#define XK_Zenkaku                       0xff28  /* to Zenkaku */
#define XK_Hankaku                       0xff29  /* to Hankaku */
#define XK_Zenkaku_Hankaku               0xff2a  /* Zenkaku/Hankaku toggle */
#define XK_Touroku                       0xff2b  /* Add to Dictionary */
#define XK_Massyo                        0xff2c  /* Delete from Dictionary */
#define XK_Kana_Lock                     0xff2d  /* Kana Lock */
#define XK_Kana_Shift                    0xff2e  /* Kana Shift */
#define XK_Eisu_Shift                    0xff2f  /* Alphanumeric Shift */
#define XK_Eisu_toggle                   0xff30  /* Alphanumeric toggle */
#define XK_Kanji_Bangou                  0xff37  /* Codeinput */
#define XK_Zen_Koho                      0xff3d  /* Multiple/All Candidate(s) */
#define XK_Mae_Koho                      0xff3e  /* Previous Candidate */

/* 0xff31 thru 0xff3f are under XK_KOREAN */

/* Cursor control & motion */

#define XK_Home                          0xff50
#define XK_Left                          0xff51  /* Move left, left arrow */
#define XK_Up                            0xff52  /* Move up, up arrow */
#define XK_Right                         0xff53  /* Move right, right arrow */
#define XK_Down                          0xff54  /* Move down, down arrow */
#define XK_Prior                         0xff55  /* Prior, previous */
#define XK_Page_Up                       0xff55
#define XK_Next                          0xff56  /* Next */
#define XK_Page_Down                     0xff56
#define XK_End                           0xff57  /* EOL */
#define XK_Begin                         0xff58  /* BOL */


/* Misc functions */

#define XK_Select                        0xff60  /* Select, mark */
#define XK_Print                         0xff61
#define XK_Execute                       0xff62  /* Execute, run, do */
#define XK_Insert                        0xff63  /* Insert, insert here */
#define XK_Undo                          0xff65
#define XK_Redo                          0xff66  /* Redo, again */
#define XK_Menu                          0xff67
#define XK_Find                          0xff68  /* Find, search */
#define XK_Cancel                        0xff69  /* Cancel, stop, abort, exit */
#define XK_Help                          0xff6a  /* Help */
#define XK_Break                         0xff6b
#define XK_Mode_switch                   0xff7e  /* Character set switch */
#define XK_script_switch                 0xff7e  /* Alias for mode_switch */
#define XK_Num_Lock                      0xff7f

/* Keypad functions, keypad numbers cleverly chosen to map to ASCII */

#define XK_KP_Space                      0xff80  /* Space */
#define XK_KP_Tab                        0xff89
#define XK_KP_Enter                      0xff8d  /* Enter */
#define XK_KP_F1                         0xff91  /* PF1, KP_A, ... */
#define XK_KP_F2                         0xff92
#define XK_KP_F3                         0xff93
#define XK_KP_F4                         0xff94
#define XK_KP_Home                       0xff95
#define XK_KP_Left                       0xff96
#define XK_KP_Up                         0xff97
#define XK_KP_Right                      0xff98
#define XK_KP_Down                       0xff99
#define XK_KP_Prior                      0xff9a
#define XK_KP_Page_Up                    0xff9a
#define XK_KP_Next                       0xff9b
#define XK_KP_Page_Down                  0xff9b
#define XK_KP_End                        0xff9c
#define XK_KP_Begin                      0xff9d
#define XK_KP_Insert                     0xff9e
#define XK_KP_Delete                     0xff9f
#define XK_KP_Equal                      0xffbd  /* Equals */
#define XK_KP_Multiply                   0xffaa
#define XK_KP_Add                        0xffab
#define XK_KP_Separator                  0xffac  /* Separator, often comma */
#define XK_KP_Subtract                   0xffad
#define XK_KP_Decimal                    0xffae
#define XK_KP_Divide                     0xffaf

#define XK_KP_0                          0xffb0
#define XK_KP_1                          0xffb1
#define XK_KP_2                          0xffb2
#define XK_KP_3                          0xffb3
#define XK_KP_4                          0xffb4
#define XK_KP_5                          0xffb5
#define XK_KP_6                          0xffb6
#define XK_KP_7                          0xffb7
#define XK_KP_8                          0xffb8
#define XK_KP_9                          0xffb9



/*
 * Auxiliary functions; note the duplicate definitions for left and right
 * function keys;  Sun keyboards and a few other manufacturers have such
 * function key groups on the left and/or right sides of the keyboard.
 * We've not found a keyboard with more than 35 function keys total.
 */

#define XK_F1                            0xffbe
#define XK_F2                            0xffbf
#define XK_F3                            0xffc0
#define XK_F4                            0xffc1
#define XK_F5                            0xffc2
#define XK_F6                            0xffc3
#define XK_F7                            0xffc4
#define XK_F8                            0xffc5
#define XK_F9                            0xffc6
#define XK_F10                           0xffc7
#define XK_F11                           0xffc8
#define XK_L1                            0xffc8
#define XK_F12                           0xffc9
#define XK_L2                            0xffc9
#define XK_F13                           0xffca
#define XK_L3                            0xffca
#define XK_F14                           0xffcb
#define XK_L4                            0xffcb
#define XK_F15                           0xffcc
#define XK_L5                            0xffcc
#define XK_F16                           0xffcd
#define XK_L6                            0xffcd
#define XK_F17                           0xffce
#define XK_L7                            0xffce
#define XK_F18                           0xffcf
#define XK_L8                            0xffcf
#define XK_F19                           0xffd0
#define XK_L9                            0xffd0
#define XK_F20                           0xffd1
#define XK_L10                           0xffd1
#define XK_F21                           0xffd2
#define XK_R1                            0xffd2
#define XK_F22                           0xffd3
#define XK_R2                            0xffd3
#define XK_F23                           0xffd4
#define XK_R3                            0xffd4
#define XK_F24                           0xffd5
#define XK_R4                            0xffd5
#define XK_F25                           0xffd6
#define XK_R5                            0xffd6
#define XK_F26                           0xffd7
#define XK_R6                            0xffd7
#define XK_F27                           0xffd8
#define XK_R7                            0xffd8
#define XK_F28                           0xffd9
#define XK_R8                            0xffd9
#define XK_F29                           0xffda
#define XK_R9                            0xffda
#define XK_F30                           0xffdb
#define XK_R10                           0xffdb
#define XK_F31                           0xffdc
#define XK_R11                           0xffdc
#define XK_F32                           0xffdd
#define XK_R12                           0xffdd
#define XK_F33                           0xffde
#define XK_R13                           0xffde
#define XK_F34                           0xffdf
#define XK_R14                           0xffdf
#define XK_F35                           0xffe0
#define XK_R15                           0xffe0

/* Modifiers */

#define XK_Shift_L                       0xffe1  /* Left shift */
#define XK_Shift_R                       0xffe2  /* Right shift */
#define XK_Control_L                     0xffe3  /* Left control */
#define XK_Control_R                     0xffe4  /* Right control */
#define XK_Caps_Lock                     0xffe5  /* Caps lock */
#define XK_Shift_Lock                    0xffe6  /* Shift lock */

#define XK_Meta_L                        0xffe7  /* Left meta */
#define XK_Meta_R                        0xffe8  /* Right meta */
#define XK_Alt_L                         0xffe9  /* Left alt */
#define XK_Alt_R                         0xffea  /* Right alt */
#define XK_Super_L                       0xffeb  /* Left super */
#define XK_Super_R                       0xffec  /* Right super */
#define XK_Hyper_L                       0xffed  /* Left hyper */
#define XK_Hyper_R                       0xffee  /* Right hyper */
#endif /* XK_MISCELLANY */

/*
 * Keyboard (XKB) Extension function and modifier keys
 * (from Appendix C of "The X Keyboard Extension: Protocol Specification")
 * Byte 3 = 0xfe
 */

#ifdef XK_XKB_KEYS
#define XK_ISO_Lock                      0xfe01
#define XK_ISO_Level2_Latch              0xfe02
#define XK_ISO_Level3_Shift              0xfe03
#define XK_ISO_Level3_Latch              0xfe04
#define XK_ISO_Level3_Lock               0xfe05
#define XK_ISO_Level5_Shift              0xfe11
#define XK_ISO_Level5_Latch              0xfe12
#define XK_ISO_Level5_Lock               0xfe13
#define XK_ISO_Group_Shift               0xff7e  /* Alias for mode_switch */
#define XK_ISO_Group_Latch               0xfe06
#define XK_ISO_Group_Lock                0xfe07
#define XK_ISO_Next_Group                0xfe08
#define XK_ISO_Next_Group_Lock           0xfe09
#define XK_ISO_Prev_Group                0xfe0a
#define XK_ISO_Prev_Group_Lock           0xfe0b
#define XK_ISO_First_Group               0xfe0c
#define XK_ISO_First_Group_Lock          0xfe0d
#define XK_ISO_Last_Group                0xfe0e
#define XK_ISO_Last_Group_Lock           0xfe0f

#define XK_ISO_Left_Tab                  0xfe20
#define XK_ISO_Move_Line_Up              0xfe21
#define XK_ISO_Move_Line_Down            0xfe22
#define XK_ISO_Partial_Line_Up           0xfe23
#define XK_ISO_Partial_Line_Down         0xfe24
#define XK_ISO_Partial_Space_Left        0xfe25
#define XK_ISO_Partial_Space_Right       0xfe26
#define XK_ISO_Set_Margin_Left           0xfe27
#define XK_ISO_Set_Margin_Right          0xfe28
#define XK_ISO_Release_Margin_Left       0xfe29
#define XK_ISO_Release_Margin_Right      0xfe2a
#define XK_ISO_Release_Both_Margins      0xfe2b
#define XK_ISO_Fast_Cursor_Left          0xfe2c
#define XK_ISO_Fast_Cursor_Right         0xfe2d
#define XK_ISO_Fast_Cursor_Up            0xfe2e
#define XK_ISO_Fast_Cursor_Down          0xfe2f
#define XK_ISO_Continuous_Underline      0xfe30
#define XK_ISO_Discontinuous_Underline   0xfe31
#define XK_ISO_Emphasize                 0xfe32
#define XK_ISO_Center_Object             0xfe33
#define XK_ISO_Enter                     0xfe34

#define XK_dead_grave                    0xfe50
#define XK_dead_acute                    0xfe51
#define XK_dead_circumflex               0xfe52
#define XK_dead_tilde                    0xfe53
#define XK_dead_perispomeni              0xfe53  /* alias for dead_tilde */
#define XK_dead_macron                   0xfe54
#define XK_dead_breve                    0xfe55
#define XK_dead_abovedot                 0xfe56
#define XK_dead_diaeresis                0xfe57
#define XK_dead_abovering                0xfe58
#define XK_dead_doubleacute              0xfe59
#define XK_dead_caron                    0xfe5a
#define XK_dead_cedilla                  0xfe5b
#define XK_dead_ogonek                   0xfe5c
#define XK_dead_iota                     0xfe5d
#define XK_dead_voiced_sound             0xfe5e
#define XK_dead_semivoiced_sound         0xfe5f
#define XK_dead_belowdot                 0xfe60
#define XK_dead_hook                     0xfe61
#define XK_dead_horn                     0xfe62
#define XK_dead_stroke                   0xfe63
#define XK_dead_abovecomma               0xfe64
#define XK_dead_psili                    0xfe64  /* alias for dead_abovecomma */
#define XK_dead_abovereversedcomma       0xfe65
#define XK_dead_dasia                    0xfe65  /* alias for dead_abovereversedcomma */
#define XK_dead_doublegrave              0xfe66
#define XK_dead_belowring                0xfe67
#define XK_dead_belowmacron              0xfe68
#define XK_dead_belowcircumflex          0xfe69
#define XK_dead_belowtilde               0xfe6a
#define XK_dead_belowbreve               0xfe6b
#define XK_dead_belowdiaeresis           0xfe6c
#define XK_dead_invertedbreve            0xfe6d
#define XK_dead_belowcomma               0xfe6e
#define XK_dead_currency                 0xfe6f

/* dead vowels for universal syllable entry */
#define XK_dead_a                        0xfe80
#define XK_dead_A                        0xfe81
#define XK_dead_e                        0xfe82
#define XK_dead_E                        0xfe83
#define XK_dead_i                        0xfe84
#define XK_dead_I                        0xfe85
#define XK_dead_o                        0xfe86
#define XK_dead_O                        0xfe87
#define XK_dead_u                        0xfe88
#define XK_dead_U                        0xfe89
#define XK_dead_small_schwa              0xfe8a
#define XK_dead_capital_schwa            0xfe8b

#define XK_dead_greek                    0xfe8c

#define XK_First_Virtual_Screen          0xfed0
#define XK_Prev_Virtual_Screen           0xfed1
#define XK_Next_Virtual_Screen           0xfed2
#define XK_Last_Virtual_Screen           0xfed4
#define XK_Terminate_Server              0xfed5

#define XK_AccessX_Enable                0xfe70
#define XK_AccessX_Feedback_Enable       0xfe71
#define XK_RepeatKeys_Enable             0xfe72
#define XK_SlowKeys_Enable               0xfe73
#define XK_BounceKeys_Enable             0xfe74
#define XK_StickyKeys_Enable             0xfe75
#define XK_MouseKeys_Enable              0xfe76
#define XK_MouseKeys_Accel_Enable        0xfe77
#define XK_Overlay1_Enable               0xfe78
#define XK_Overlay2_Enable               0xfe79
#define XK_AudibleBell_Enable            0xfe7a

#define XK_Pointer_Left                  0xfee0
#define XK_Pointer_Right                 0xfee1
#define XK_Pointer_Up                    0xfee2
#define XK_Pointer_Down                  0xfee3
#define XK_Pointer_UpLeft                0xfee4
#define XK_Pointer_UpRight               0xfee5
#define XK_Pointer_DownLeft              0xfee6
#define XK_Pointer_DownRight             0xfee7
#define XK_Pointer_Button_Dflt           0xfee8
#define XK_Pointer_Button1               0xfee9
#define XK_Pointer_Button2               0xfeea
#define XK_Pointer_Button3               0xfeeb
#define XK_Pointer_Button4               0xfeec
#define XK_Pointer_Button5               0xfeed
#define XK_Pointer_DblClick_Dflt         0xfeee
#define XK_Pointer_DblClick1             0xfeef
#define XK_Pointer_DblClick2             0xfef0
#define XK_Pointer_DblClick3             0xfef1
#define XK_Pointer_DblClick4             0xfef2
#define XK_Pointer_DblClick5             0xfef3
#define XK_Pointer_Drag_Dflt             0xfef4
#define XK_Pointer_Drag1                 0xfef5
#define XK_Pointer_Drag2                 0xfef6
#define XK_Pointer_Drag3                 0xfef7
#define XK_Pointer_Drag4                 0xfef8
#define XK_Pointer_Drag5                 0xfefd

#define XK_Pointer_EnableKeys            0xfef9
#define XK_Pointer_Accelerate            0xfefa
#define XK_Pointer_DfltBtnNext           0xfefb
#define XK_Pointer_DfltBtnPrev           0xfefc

/* Single-Stroke Multiple-Character N-Graph Keysyms For The X Input Method */

#define XK_ch                            0xfea0
#define XK_Ch                            0xfea1
#define XK_CH                            0xfea2
#define XK_c_h                           0xfea3
#define XK_C_h                           0xfea4
#define XK_C_H                           0xfea5

#endif /* XK_XKB_KEYS */

/*
 * 3270 Terminal Keys
 * Byte 3 = 0xfd
 */

#ifdef XK_3270
#define XK_3270_Duplicate                0xfd01
#define XK_3270_FieldMark                0xfd02
#define XK_3270_Right2                   0xfd03
#define XK_3270_Left2                    0xfd04
#define XK_3270_BackTab                  0xfd05
#define XK_3270_EraseEOF                 0xfd06
#define XK_3270_EraseInput               0xfd07
#define XK_3270_Reset                    0xfd08
#define XK_3270_Quit                     0xfd09
#define XK_3270_PA1                      0xfd0a
#define XK_3270_PA2                      0xfd0b
#define XK_3270_PA3                      0xfd0c
#define XK_3270_Test                     0xfd0d
#define XK_3270_Attn                     0xfd0e
#define XK_3270_CursorBlink              0xfd0f
#define XK_3270_AltCursor                0xfd10
#define XK_3270_KeyClick                 0xfd11
#define XK_3270_Jump                     0xfd12
#define XK_3270_Ident                    0xfd13
#define XK_3270_Rule                     0xfd14
#define XK_3270_Copy                     0xfd15
#define XK_3270_Play                     0xfd16
#define XK_3270_Setup                    0xfd17
#define XK_3270_Record                   0xfd18
#define XK_3270_ChangeScreen             0xfd19
#define XK_3270_DeleteWord               0xfd1a
#define XK_3270_ExSelect                 0xfd1b
#define XK_3270_CursorSelect             0xfd1c
#define XK_3270_PrintScreen              0xfd1d
#define XK_3270_Enter                    0xfd1e
#endif /* XK_3270 */

/*
 * Latin 1
 * (ISO/IEC 8859-1 = Unicode U+0020..U+00FF)
 * Byte 3 = 0
 */
#ifdef XK_LATIN1
#define XK_space                         0x0020  /* U+0020 SPACE */
#define XK_exclam                        0x0021  /* U+0021 EXCLAMATION MARK */
#define XK_quotedbl                      0x0022  /* U+0022 QUOTATION MARK */
#define XK_numbersign                    0x0023  /* U+0023 NUMBER SIGN */
#define XK_dollar                        0x0024  /* U+0024 DOLLAR SIGN */
#define XK_percent                       0x0025  /* U+0025 PERCENT SIGN */
#define XK_ampersand                     0x0026  /* U+0026 AMPERSAND */
#define XK_apostrophe                    0x0027  /* U+0027 APOSTROPHE */
#define XK_quoteright                    0x0027  /* deprecated */
#define XK_parenleft                     0x0028  /* U+0028 LEFT PARENTHESIS */
#define XK_parenright                    0x0029  /* U+0029 RIGHT PARENTHESIS */
#define XK_asterisk                      0x002a  /* U+002A ASTERISK */
#define XK_plus                          0x002b  /* U+002B PLUS SIGN */
#define XK_comma                         0x002c  /* U+002C COMMA */
#define XK_minus                         0x002d  /* U+002D HYPHEN-MINUS */
#define XK_period                        0x002e  /* U+002E FULL STOP */
#define XK_slash                         0x002f  /* U+002F SOLIDUS */
#define XK_0                             0x0030  /* U+0030 DIGIT ZERO */
#define XK_1                             0x0031  /* U+0031 DIGIT ONE */
#define XK_2                             0x0032  /* U+0032 DIGIT TWO */
#define XK_3                             0x0033  /* U+0033 DIGIT THREE */
#define XK_4                             0x0034  /* U+0034 DIGIT FOUR */
#define XK_5                             0x0035  /* U+0035 DIGIT FIVE */
#define XK_6                             0x0036  /* U+0036 DIGIT SIX */
#define XK_7                             0x0037  /* U+0037 DIGIT SEVEN */
#define XK_8                             0x0038  /* U+0038 DIGIT EIGHT */
#define XK_9                             0x0039  /* U+0039 DIGIT NINE */
#define XK_colon                         0x003a  /* U+003A COLON */
#define XK_semicolon                     0x003b  /* U+003B SEMICOLON */
#define XK_less                          0x003c  /* U+003C LESS-THAN SIGN */
#define XK_equal                         0x003d  /* U+003D EQUALS SIGN */
#define XK_greater                       0x003e  /* U+003E GREATER-THAN SIGN */
#define XK_question                      0x003f  /* U+003F QUESTION MARK */
#define XK_at                            0x0040  /* U+0040 COMMERCIAL AT */
#define XK_A                             0x0041  /* U+0041 LATIN CAPITAL LETTER A */
#define XK_B                             0x0042  /* U+0042 LATIN CAPITAL LETTER B */
#define XK_C                             0x0043  /* U+0043 LATIN CAPITAL LETTER C */
#define XK_D                             0x0044  /* U+0044 LATIN CAPITAL LETTER D */
#define XK_E                             0x0045  /* U+0045 LATIN CAPITAL LETTER E */
#define XK_F                             0x0046  /* U+0046 LATIN CAPITAL LETTER F */
#define XK_G                             0x0047  /* U+0047 LATIN CAPITAL LETTER G */
#define XK_H                             0x0048  /* U+0048 LATIN CAPITAL LETTER H */
#define XK_I                             0x0049  /* U+0049 LATIN CAPITAL LETTER I */
#define XK_J                             0x004a  /* U+004A LATIN CAPITAL LETTER J */
#define XK_K                             0x004b  /* U+004B LATIN CAPITAL LETTER K */
#define XK_L                             0x004c  /* U+004C LATIN CAPITAL LETTER L */
#define XK_M                             0x004d  /* U+004D LATIN CAPITAL LETTER M */
#define XK_N                             0x004e  /* U+004E LATIN CAPITAL LETTER N */
#define XK_O                             0x004f  /* U+004F LATIN CAPITAL LETTER O */
#define XK_P                             0x0050  /* U+0050 LATIN CAPITAL LETTER P */
#define XK_Q                             0x0051  /* U+0051 LATIN CAPITAL LETTER Q */
#define XK_R                             0x0052  /* U+0052 LATIN CAPITAL LETTER R */
#define XK_S                             0x0053  /* U+0053 LATIN CAPITAL LETTER S */
#define XK_T                             0x0054  /* U+0054 LATIN CAPITAL LETTER T */
#define XK_U                             0x0055  /* U+0055 LATIN CAPITAL LETTER U */
#define XK_V                             0x0056  /* U+0056 LATIN CAPITAL LETTER V */
#define XK_W                             0x0057  /* U+0057 LATIN CAPITAL LETTER W */
#define XK_X                             0x0058  /* U+0058 LATIN CAPITAL LETTER X */
#define XK_Y                             0x0059  /* U+0059 LATIN CAPITAL LETTER Y */
#define XK_Z                             0x005a  /* U+005A LATIN CAPITAL LETTER Z */
#define XK_bracketleft                   0x005b  /* U+005B LEFT SQUARE BRACKET */
#define XK_backslash                     0x005c  /* U+005C REVERSE SOLIDUS */
#define XK_bracketright                  0x005d  /* U+005D RIGHT SQUARE BRACKET */
#define XK_asciicircum                   0x005e  /* U+005E CIRCUMFLEX ACCENT */
#define XK_underscore                    0x005f  /* U+005F LOW LINE */
#define XK_grave                         0x0060  /* U+0060 GRAVE ACCENT */
#define XK_quoteleft                     0x0060  /* deprecated */
#define XK_a                             0x0061  /* U+0061 LATIN SMALL LETTER A */
#define XK_b                             0x0062  /* U+0062 LATIN SMALL LETTER B */
#define XK_c                             0x0063  /* U+0063 LATIN SMALL LETTER C */
#define XK_d                             0x0064  /* U+0064 LATIN SMALL LETTER D */
#define XK_e                             0x0065  /* U+0065 LATIN SMALL LETTER E */
#define XK_f                             0x0066  /* U+0066 LATIN SMALL LETTER F */
#define XK_g                             0x0067  /* U+0067 LATIN SMALL LETTER G */
#define XK_h                             0x0068  /* U+0068 LATIN SMALL LETTER H */
#define XK_i                             0x0069  /* U+0069 LATIN SMALL LETTER I */
#define XK_j                             0x006a  /* U+006A LATIN SMALL LETTER J */
#define XK_k                             0x006b  /* U+006B LATIN SMALL LETTER K */
#define XK_l                             0x006c  /* U+006C LATIN SMALL LETTER L */
#define XK_m                             0x006d  /* U+006D LATIN SMALL LETTER M */
#define XK_n                             0x006e  /* U+006E LATIN SMALL LETTER N */
#define XK_o                             0x006f  /* U+006F LATIN SMALL LETTER O */
#define XK_p                             0x0070  /* U+0070 LATIN SMALL LETTER P */
#define XK_q                             0x0071  /* U+0071 LATIN SMALL LETTER Q */
#define XK_r                             0x0072  /* U+0072 LATIN SMALL LETTER R */
#define XK_s                             0x0073  /* U+0073 LATIN SMALL LETTER S */
#define XK_t                             0x0074  /* U+0074 LATIN SMALL LETTER T */
#define XK_u                             0x0075  /* U+0075 LATIN SMALL LETTER U */
#define XK_v                             0x0076  /* U+0076 LATIN SMALL LETTER V */
#define XK_w                             0x0077  /* U+0077 LATIN SMALL LETTER W */
#define XK_x                             0x0078  /* U+0078 LATIN SMALL LETTER X */
#define XK_y                             0x0079  /* U+0079 LATIN SMALL LETTER Y */
#define XK_z                             0x007a  /* U+007A LATIN SMALL LETTER Z */
#define XK_braceleft                     0x007b  /* U+007B LEFT CURLY BRACKET */
#define XK_bar                           0x007c  /* U+007C VERTICAL LINE */
#define XK_braceright                    0x007d  /* U+007D RIGHT CURLY BRACKET */
#define XK_asciitilde                    0x007e  /* U+007E TILDE */

#define XK_nobreakspace                  0x00a0  /* U+00A0 NO-BREAK SPACE */
#define XK_exclamdown                    0x00a1  /* U+00A1 INVERTED EXCLAMATION MARK */
#define XK_cent                          0x00a2  /* U+00A2 CENT SIGN */
#define XK_sterling                      0x00a3  /* U+00A3 POUND SIGN */
#define XK_currency                      0x00a4  /* U+00A4 CURRENCY SIGN */
#define XK_yen                           0x00a5  /* U+00A5 YEN SIGN */
#define XK_brokenbar                     0x00a6  /* U+00A6 BROKEN BAR */
#define XK_section                       0x00a7  /* U+00A7 SECTION SIGN */
#define XK_diaeresis                     0x00a8  /* U+00A8 DIAERESIS */
#define XK_copyright                     0x00a9  /* U+00A9 COPYRIGHT SIGN */
#define XK_ordfeminine                   0x00aa  /* U+00AA FEMININE ORDINAL INDICATOR */
#define XK_guillemotleft                 0x00ab  /* U+00AB LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */
#define XK_notsign                       0x00ac  /* U+00AC NOT SIGN */
#define XK_hyphen                        0x00ad  /* U+00AD SOFT HYPHEN */
#define XK_registered                    0x00ae  /* U+00AE REGISTERED SIGN */
#define XK_macron                        0x00af  /* U+00AF MACRON */
#define XK_degree                        0x00b0  /* U+00B0 DEGREE SIGN */
#define XK_plusminus                     0x00b1  /* U+00B1 PLUS-MINUS SIGN */
#define XK_twosuperior                   0x00b2  /* U+00B2 SUPERSCRIPT TWO */
#define XK_threesuperior                 0x00b3  /* U+00B3 SUPERSCRIPT THREE */
#define XK_acute                         0x00b4  /* U+00B4 ACUTE ACCENT */
#define XK_mu                            0x00b5  /* U+00B5 MICRO SIGN */
#define XK_paragraph                     0x00b6  /* U+00B6 PILCROW SIGN */
#define XK_periodcentered                0x00b7  /* U+00B7 MIDDLE DOT */
#define XK_cedilla                       0x00b8  /* U+00B8 CEDILLA */
#define XK_onesuperior                   0x00b9  /* U+00B9 SUPERSCRIPT ONE */
#define XK_masculine                     0x00ba  /* U+00BA MASCULINE ORDINAL INDICATOR */
#define XK_guillemotright                0x00bb  /* U+00BB RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */
#define XK_onequarter                    0x00bc  /* U+00BC VULGAR FRACTION ONE QUARTER */
#define XK_onehalf                       0x00bd  /* U+00BD VULGAR FRACTION ONE HALF */
#define XK_threequarters                 0x00be  /* U+00BE VULGAR FRACTION THREE QUARTERS */
#define XK_questiondown                  0x00bf  /* U+00BF INVERTED QUESTION MARK */
#define XK_Agrave                        0x00c0  /* U+00C0 LATIN CAPITAL LETTER A WITH GRAVE */
#define XK_Aacute                        0x00c1  /* U+00C1 LATIN CAPITAL LETTER A WITH ACUTE */
#define XK_Acircumflex                   0x00c2  /* U+00C2 LATIN CAPITAL LETTER A WITH CIRCUMFLEX */
#define XK_Atilde                        0x00c3  /* U+00C3 LATIN CAPITAL LETTER A WITH TILDE */
#define XK_Adiaeresis                    0x00c4  /* U+00C4 LATIN CAPITAL LETTER A WITH DIAERESIS */
#define XK_Aring                         0x00c5  /* U+00C5 LATIN CAPITAL LETTER A WITH RING ABOVE */
#define XK_AE                            0x00c6  /* U+00C6 LATIN CAPITAL LETTER AE */
#define XK_Ccedilla                      0x00c7  /* U+00C7 LATIN CAPITAL LETTER C WITH CEDILLA */
#define XK_Egrave                        0x00c8  /* U+00C8 LATIN CAPITAL LETTER E WITH GRAVE */
#define XK_Eacute                        0x00c9  /* U+00C9 LATIN CAPITAL LETTER E WITH ACUTE */
#define XK_Ecircumflex                   0x00ca  /* U+00CA LATIN CAPITAL LETTER E WITH CIRCUMFLEX */
#define XK_Ediaeresis                    0x00cb  /* U+00CB LATIN CAPITAL LETTER E WITH DIAERESIS */
#define XK_Igrave                        0x00cc  /* U+00CC LATIN CAPITAL LETTER I WITH GRAVE */
#define XK_Iacute                        0x00cd  /* U+00CD LATIN CAPITAL LETTER I WITH ACUTE */
#define XK_Icircumflex                   0x00ce  /* U+00CE LATIN CAPITAL LETTER I WITH CIRCUMFLEX */
#define XK_Idiaeresis                    0x00cf  /* U+00CF LATIN CAPITAL LETTER I WITH DIAERESIS */
#define XK_ETH                           0x00d0  /* U+00D0 LATIN CAPITAL LETTER ETH */
#define XK_Eth                           0x00d0  /* deprecated */
#define XK_Ntilde                        0x00d1  /* U+00D1 LATIN CAPITAL LETTER N WITH TILDE */
#define XK_Ograve                        0x00d2  /* U+00D2 LATIN CAPITAL LETTER O WITH GRAVE */
#define XK_Oacute                        0x00d3  /* U+00D3 LATIN CAPITAL LETTER O WITH ACUTE */
#define XK_Ocircumflex                   0x00d4  /* U+00D4 LATIN CAPITAL LETTER O WITH CIRCUMFLEX */
#define XK_Otilde                        0x00d5  /* U+00D5 LATIN CAPITAL LETTER O WITH TILDE */
#define XK_Odiaeresis                    0x00d6  /* U+00D6 LATIN CAPITAL LETTER O WITH DIAERESIS */
#define XK_multiply                      0x00d7  /* U+00D7 MULTIPLICATION SIGN */
#define XK_Oslash                        0x00d8  /* U+00D8 LATIN CAPITAL LETTER O WITH STROKE */
#define XK_Ooblique                      0x00d8  /* U+00D8 LATIN CAPITAL LETTER O WITH STROKE */
#define XK_Ugrave                        0x00d9  /* U+00D9 LATIN CAPITAL LETTER U WITH GRAVE */
#define XK_Uacute                        0x00da  /* U+00DA LATIN CAPITAL LETTER U WITH ACUTE */
#define XK_Ucircumflex                   0x00db  /* U+00DB LATIN CAPITAL LETTER U WITH CIRCUMFLEX */
#define XK_Udiaeresis                    0x00dc  /* U+00DC LATIN CAPITAL LETTER U WITH DIAERESIS */
#define XK_Yacute                        0x00dd  /* U+00DD LATIN CAPITAL LETTER Y WITH ACUTE */
#define XK_THORN                         0x00de  /* U+00DE LATIN CAPITAL LETTER THORN */
#define XK_Thorn                         0x00de  /* deprecated */
#define XK_ssharp                        0x00df  /* U+00DF LATIN SMALL LETTER SHARP S */
#define XK_agrave                        0x00e0  /* U+00E0 LATIN SMALL LETTER A WITH GRAVE */
#define XK_aacute                        0x00e1  /* U+00E1 LATIN SMALL LETTER A WITH ACUTE */
#define XK_acircumflex                   0x00e2  /* U+00E2 LATIN SMALL LETTER A WITH CIRCUMFLEX */
#define XK_atilde                        0x00e3  /* U+00E3 LATIN SMALL LETTER A WITH TILDE */
#define XK_adiaeresis                    0x00e4  /* U+00E4 LATIN SMALL LETTER A WITH DIAERESIS */
#define XK_aring                         0x00e5  /* U+00E5 LATIN SMALL LETTER A WITH RING ABOVE */
#define XK_ae                            0x00e6  /* U+00E6 LATIN SMALL LETTER AE */
#define XK_ccedilla                      0x00e7  /* U+00E7 LATIN SMALL LETTER C WITH CEDILLA */
#define XK_egrave                        0x00e8  /* U+00E8 LATIN SMALL LETTER E WITH GRAVE */
#define XK_eacute                        0x00e9  /* U+00E9 LATIN SMALL LETTER E WITH ACUTE */
#define XK_ecircumflex                   0x00ea  /* U+00EA LATIN SMALL LETTER E WITH CIRCUMFLEX */
#define XK_ediaeresis                    0x00eb  /* U+00EB LATIN SMALL LETTER E WITH DIAERESIS */
#define XK_igrave                        0x00ec  /* U+00EC LATIN SMALL LETTER I WITH GRAVE */
#define XK_iacute                        0x00ed  /* U+00ED LATIN SMALL LETTER I WITH ACUTE */
#define XK_icircumflex                   0x00ee  /* U+00EE LATIN SMALL LETTER I WITH CIRCUMFLEX */
#define XK_idiaeresis                    0x00ef  /* U+00EF LATIN SMALL LETTER I WITH DIAERESIS */
#define XK_eth                           0x00f0  /* U+00F0 LATIN SMALL LETTER ETH */
#define XK_ntilde                        0x00f1  /* U+00F1 LATIN SMALL LETTER N WITH TILDE */
#define XK_ograve                        0x00f2  /* U+00F2 LATIN SMALL LETTER O WITH GRAVE */
#define XK_oacute                        0x00f3  /* U+00F3 LATIN SMALL LETTER O WITH ACUTE */
#define XK_ocircumflex                   0x00f4  /* U+00F4 LATIN SMALL LETTER O WITH CIRCUMFLEX */
#define XK_otilde                        0x00f5  /* U+00F5 LATIN SMALL LETTER O WITH TILDE */
#define XK_odiaeresis                    0x00f6  /* U+00F6 LATIN SMALL LETTER O WITH DIAERESIS */
#define XK_division                      0x00f7  /* U+00F7 DIVISION SIGN */
#define XK_oslash                        0x00f8  /* U+00F8 LATIN SMALL LETTER O WITH STROKE */
#define XK_ooblique                      0x00f8  /* U+00F8 LATIN SMALL LETTER O WITH STROKE */
#define XK_ugrave                        0x00f9  /* U+00F9 LATIN SMALL LETTER U WITH GRAVE */
#define XK_uacute                        0x00fa  /* U+00FA LATIN SMALL LETTER U WITH ACUTE */
#define XK_ucircumflex                   0x00fb  /* U+00FB LATIN SMALL LETTER U WITH CIRCUMFLEX */
#define XK_udiaeresis                    0x00fc  /* U+00FC LATIN SMALL LETTER U WITH DIAERESIS */
#define XK_yacute                        0x00fd  /* U+00FD LATIN SMALL LETTER Y WITH ACUTE */
#define XK_thorn                         0x00fe  /* U+00FE LATIN SMALL LETTER THORN */
#define XK_ydiaeresis                    0x00ff  /* U+00FF LATIN SMALL LETTER Y WITH DIAERESIS */
#endif /* XK_LATIN1 */

/*
 * Latin 2
 * Byte 3 = 1
 */

#ifdef XK_LATIN2
#define XK_Aogonek                       0x01a1  /* U+0104 LATIN CAPITAL LETTER A WITH OGONEK */
#define XK_breve                         0x01a2  /* U+02D8 BREVE */
#define XK_Lstroke                       0x01a3  /* U+0141 LATIN CAPITAL LETTER L WITH STROKE */
#define XK_Lcaron                        0x01a5  /* U+013D LATIN CAPITAL LETTER L WITH CARON */
#define XK_Sacute                        0x01a6  /* U+015A LATIN CAPITAL LETTER S WITH ACUTE */
#define XK_Scaron                        0x01a9  /* U+0160 LATIN CAPITAL LETTER S WITH CARON */
#define XK_Scedilla                      0x01aa  /* U+015E LATIN CAPITAL LETTER S WITH CEDILLA */
#define XK_Tcaron                        0x01ab  /* U+0164 LATIN CAPITAL LETTER T WITH CARON */
#define XK_Zacute                        0x01ac  /* U+0179 LATIN CAPITAL LETTER Z WITH ACUTE */
#define XK_Zcaron                        0x01ae  /* U+017D LATIN CAPITAL LETTER Z WITH CARON */
#define XK_Zabovedot                     0x01af  /* U+017B LATIN CAPITAL LETTER Z WITH DOT ABOVE */
#define XK_aogonek                       0x01b1  /* U+0105 LATIN SMALL LETTER A WITH OGONEK */
#define XK_ogonek                        0x01b2  /* U+02DB OGONEK */
#define XK_lstroke                       0x01b3  /* U+0142 LATIN SMALL LETTER L WITH STROKE */
#define XK_lcaron                        0x01b5  /* U+013E LATIN SMALL LETTER L WITH CARON */
#define XK_sacute                        0x01b6  /* U+015B LATIN SMALL LETTER S WITH ACUTE */
#define XK_caron                         0x01b7  /* U+02C7 CARON */
#define XK_scaron                        0x01b9  /* U+0161 LATIN SMALL LETTER S WITH CARON */
#define XK_scedilla                      0x01ba  /* U+015F LATIN SMALL LETTER S WITH CEDILLA */
#define XK_tcaron                        0x01bb  /* U+0165 LATIN SMALL LETTER T WITH CARON */
#define XK_zacute                        0x01bc  /* U+017A LATIN SMALL LETTER Z WITH ACUTE */
#define XK_doubleacute                   0x01bd  /* U+02DD DOUBLE ACUTE ACCENT */
#define XK_zcaron                        0x01be  /* U+017E LATIN SMALL LETTER Z WITH CARON */
#define XK_zabovedot                     0x01bf  /* U+017C LATIN SMALL LETTER Z WITH DOT ABOVE */
#define XK_Racute                        0x01c0  /* U+0154 LATIN CAPITAL LETTER R WITH ACUTE */
#define XK_Abreve                        0x01c3  /* U+0102 LATIN CAPITAL LETTER A WITH BREVE */
#define XK_Lacute                        0x01c5  /* U+0139 LATIN CAPITAL LETTER L WITH ACUTE */
#define XK_Cacute                        0x01c6  /* U+0106 LATIN CAPITAL LETTER C WITH ACUTE */
#define XK_Ccaron                        0x01c8  /* U+010C LATIN CAPITAL LETTER C WITH CARON */
#define XK_Eogonek                       0x01ca  /* U+0118 LATIN CAPITAL LETTER E WITH OGONEK */
#define XK_Ecaron                        0x01cc  /* U+011A LATIN CAPITAL LETTER E WITH CARON */
#define XK_Dcaron                        0x01cf  /* U+010E LATIN CAPITAL LETTER D WITH CARON */
#define XK_Dstroke                       0x01d0  /* U+0110 LATIN CAPITAL LETTER D WITH STROKE */
#define XK_Nacute                        0x01d1  /* U+0143 LATIN CAPITAL LETTER N WITH ACUTE */
#define XK_Ncaron                        0x01d2  /* U+0147 LATIN CAPITAL LETTER N WITH CARON */
#define XK_Odoubleacute                  0x01d5  /* U+0150 LATIN CAPITAL LETTER O WITH DOUBLE ACUTE */
#define XK_Rcaron                        0x01d8  /* U+0158 LATIN CAPITAL LETTER R WITH CARON */
#define XK_Uring                         0x01d9  /* U+016E LATIN CAPITAL LETTER U WITH RING ABOVE */
#define XK_Udoubleacute                  0x01db  /* U+0170 LATIN CAPITAL LETTER U WITH DOUBLE ACUTE */
#define XK_Tcedilla                      0x01de  /* U+0162 LATIN CAPITAL LETTER T WITH CEDILLA */
#define XK_racute                        0x01e0  /* U+0155 LATIN SMALL LETTER R WITH ACUTE */
#define XK_abreve                        0x01e3  /* U+0103 LATIN SMALL LETTER A WITH BREVE */
#define XK_lacute                        0x01e5  /* U+013A LATIN SMALL LETTER L WITH ACUTE */
#define XK_cacute                        0x01e6  /* U+0107 LATIN SMALL LETTER C WITH ACUTE */
#define XK_ccaron                        0x01e8  /* U+010D LATIN SMALL LETTER C WITH CARON */
#define XK_eogonek                       0x01ea  /* U+0119 LATIN SMALL LETTER E WITH OGONEK */
#define XK_ecaron                        0x01ec  /* U+011B LATIN SMALL LETTER E WITH CARON */
#define XK_dcaron                        0x01ef  /* U+010F LATIN SMALL LETTER D WITH CARON */
#define XK_dstroke                       0x01f0  /* U+0111 LATIN SMALL LETTER D WITH STROKE */
#define XK_nacute                        0x01f1  /* U+0144 LATIN SMALL LETTER N WITH ACUTE */
#define XK_ncaron                        0x01f2  /* U+0148 LATIN SMALL LETTER N WITH CARON */
#define XK_odoubleacute                  0x01f5  /* U+0151 LATIN SMALL LETTER O WITH DOUBLE ACUTE */
#define XK_rcaron                        0x01f8  /* U+0159 LATIN SMALL LETTER R WITH CARON */
#define XK_uring                         0x01f9  /* U+016F LATIN SMALL LETTER U WITH RING ABOVE */
#define XK_udoubleacute                  0x01fb  /* U+0171 LATIN SMALL LETTER U WITH DOUBLE ACUTE */
#define XK_tcedilla                      0x01fe  /* U+0163 LATIN SMALL LETTER T WITH CEDILLA */
#define XK_abovedot                      0x01ff  /* U+02D9 DOT ABOVE */
#endif /* XK_LATIN2 */

/*
 * Latin 3
 * Byte 3 = 2
 */

#ifdef XK_LATIN3
#define XK_Hstroke                       0x02a1  /* U+0126 LATIN CAPITAL LETTER H WITH STROKE */
#define XK_Hcircumflex                   0x02a6  /* U+0124 LATIN CAPITAL LETTER H WITH CIRCUMFLEX */
#define XK_Iabovedot                     0x02a9  /* U+0130 LATIN CAPITAL LETTER I WITH DOT ABOVE */
#define XK_Gbreve                        0x02ab  /* U+011E LATIN CAPITAL LETTER G WITH BREVE */
#define XK_Jcircumflex                   0x02ac  /* U+0134 LATIN CAPITAL LETTER J WITH CIRCUMFLEX */
#define XK_hstroke                       0x02b1  /* U+0127 LATIN SMALL LETTER H WITH STROKE */
#define XK_hcircumflex                   0x02b6  /* U+0125 LATIN SMALL LETTER H WITH CIRCUMFLEX */
#define XK_idotless                      0x02b9  /* U+0131 LATIN SMALL LETTER DOTLESS I */
#define XK_gbreve                        0x02bb  /* U+011F LATIN SMALL LETTER G WITH BREVE */
#define XK_jcircumflex                   0x02bc  /* U+0135 LATIN SMALL LETTER J WITH CIRCUMFLEX */
#define XK_Cabovedot                     0x02c5  /* U+010A LATIN CAPITAL LETTER C WITH DOT ABOVE */
#define XK_Ccircumflex                   0x02c6  /* U+0108 LATIN CAPITAL LETTER C WITH CIRCUMFLEX */
#define XK_Gabovedot                     0x02d5  /* U+0120 LATIN CAPITAL LETTER G WITH DOT ABOVE */
#define XK_Gcircumflex                   0x02d8  /* U+011C LATIN CAPITAL LETTER G WITH CIRCUMFLEX */
#define XK_Ubreve                        0x02dd  /* U+016C LATIN CAPITAL LETTER U WITH BREVE */
#define XK_Scircumflex                   0x02de  /* U+015C LATIN CAPITAL LETTER S WITH CIRCUMFLEX */
#define XK_cabovedot                     0x02e5  /* U+010B LATIN SMALL LETTER C WITH DOT ABOVE */
#define XK_ccircumflex                   0x02e6  /* U+0109 LATIN SMALL LETTER C WITH CIRCUMFLEX */
#define XK_gabovedot                     0x02f5  /* U+0121 LATIN SMALL LETTER G WITH DOT ABOVE */
#define XK_gcircumflex                   0x02f8  /* U+011D LATIN SMALL LETTER G WITH CIRCUMFLEX */
#define XK_ubreve                        0x02fd  /* U+016D LATIN SMALL LETTER U WITH BREVE */
#define XK_scircumflex                   0x02fe  /* U+015D LATIN SMALL LETTER S WITH CIRCUMFLEX */
#endif /* XK_LATIN3 */


/*
 * Latin 4
 * Byte 3 = 3
 */

#ifdef XK_LATIN4
#define XK_kra                           0x03a2  /* U+0138 LATIN SMALL LETTER KRA */
#define XK_kappa                         0x03a2  /* deprecated */
#define XK_Rcedilla                      0x03a3  /* U+0156 LATIN CAPITAL LETTER R WITH CEDILLA */
#define XK_Itilde                        0x03a5  /* U+0128 LATIN CAPITAL LETTER I WITH TILDE */
#define XK_Lcedilla                      0x03a6  /* U+013B LATIN CAPITAL LETTER L WITH CEDILLA */
#define XK_Emacron                       0x03aa  /* U+0112 LATIN CAPITAL LETTER E WITH MACRON */
#define XK_Gcedilla                      0x03ab  /* U+0122 LATIN CAPITAL LETTER G WITH CEDILLA */
#define XK_Tslash                        0x03ac  /* U+0166 LATIN CAPITAL LETTER T WITH STROKE */
#define XK_rcedilla                      0x03b3  /* U+0157 LATIN SMALL LETTER R WITH CEDILLA */
#define XK_itilde                        0x03b5  /* U+0129 LATIN SMALL LETTER I WITH TILDE */
#define XK_lcedilla                      0x03b6  /* U+013C LATIN SMALL LETTER L WITH CEDILLA */
#define XK_emacron                       0x03ba  /* U+0113 LATIN SMALL LETTER E WITH MACRON */
#define XK_gcedilla                      0x03bb  /* U+0123 LATIN SMALL LETTER G WITH CEDILLA */
#define XK_tslash                        0x03bc  /* U+0167 LATIN SMALL LETTER T WITH STROKE */
#define XK_ENG                           0x03bd  /* U+014A LATIN CAPITAL LETTER ENG */
#define XK_eng                           0x03bf  /* U+014B LATIN SMALL LETTER ENG */
#define XK_Amacron                       0x03c0  /* U+0100 LATIN CAPITAL LETTER A WITH MACRON */
#define XK_Iogonek                       0x03c7  /* U+012E LATIN CAPITAL LETTER I WITH OGONEK */
#define XK_Eabovedot                     0x03cc  /* U+0116 LATIN CAPITAL LETTER E WITH DOT ABOVE */
#define XK_Imacron                       0x03cf  /* U+012A LATIN CAPITAL LETTER I WITH MACRON */
#define XK_Ncedilla                      0x03d1  /* U+0145 LATIN CAPITAL LETTER N WITH CEDILLA */
#define XK_Omacron                       0x03d2  /* U+014C LATIN CAPITAL LETTER O WITH MACRON */
#define XK_Kcedilla                      0x03d3  /* U+0136 LATIN CAPITAL LETTER K WITH CEDILLA */
#define XK_Uogonek                       0x03d9  /* U+0172 LATIN CAPITAL LETTER U WITH OGONEK */
#define XK_Utilde                        0x03dd  /* U+0168 LATIN CAPITAL LETTER U WITH TILDE */
#define XK_Umacron                       0x03de  /* U+016A LATIN CAPITAL LETTER U WITH MACRON */
#define XK_amacron                       0x03e0  /* U+0101 LATIN SMALL LETTER A WITH MACRON */
#define XK_iogonek                       0x03e7  /* U+012F LATIN SMALL LETTER I WITH OGONEK */
#define XK_eabovedot                     0x03ec  /* U+0117 LATIN SMALL LETTER E WITH DOT ABOVE */
#define XK_imacron                       0x03ef  /* U+012B LATIN SMALL LETTER I WITH MACRON */
#define XK_ncedilla                      0x03f1  /* U+0146 LATIN SMALL LETTER N WITH CEDILLA */
#define XK_omacron                       0x03f2  /* U+014D LATIN SMALL LETTER O WITH MACRON */
#define XK_kcedilla                      0x03f3  /* U+0137 LATIN SMALL LETTER K WITH CEDILLA */
#define XK_uogonek                       0x03f9  /* U+0173 LATIN SMALL LETTER U WITH OGONEK */
#define XK_utilde                        0x03fd  /* U+0169 LATIN SMALL LETTER U WITH TILDE */
#define XK_umacron                       0x03fe  /* U+016B LATIN SMALL LETTER U WITH MACRON */
#endif /* XK_LATIN4 */

/*
 * Latin 8
 */
#ifdef XK_LATIN8
#define XK_Wcircumflex                0x1000174  /* U+0174 LATIN CAPITAL LETTER W WITH CIRCUMFLEX */
#define XK_wcircumflex                0x1000175  /* U+0175 LATIN SMALL LETTER W WITH CIRCUMFLEX */
#define XK_Ycircumflex                0x1000176  /* U+0176 LATIN CAPITAL LETTER Y WITH CIRCUMFLEX */
#define XK_ycircumflex                0x1000177  /* U+0177 LATIN SMALL LETTER Y WITH CIRCUMFLEX */
#define XK_Babovedot                  0x1001e02  /* U+1E02 LATIN CAPITAL LETTER B WITH DOT ABOVE */
#define XK_babovedot                  0x1001e03  /* U+1E03 LATIN SMALL LETTER B WITH DOT ABOVE */
#define XK_Dabovedot                  0x1001e0a  /* U+1E0A LATIN CAPITAL LETTER D WITH DOT ABOVE */
#define XK_dabovedot                  0x1001e0b  /* U+1E0B LATIN SMALL LETTER D WITH DOT ABOVE */
#define XK_Fabovedot                  0x1001e1e  /* U+1E1E LATIN CAPITAL LETTER F WITH DOT ABOVE */
#define XK_fabovedot                  0x1001e1f  /* U+1E1F LATIN SMALL LETTER F WITH DOT ABOVE */
#define XK_Mabovedot                  0x1001e40  /* U+1E40 LATIN CAPITAL LETTER M WITH DOT ABOVE */
#define XK_mabovedot                  0x1001e41  /* U+1E41 LATIN SMALL LETTER M WITH DOT ABOVE */
#define XK_Pabovedot                  0x1001e56  /* U+1E56 LATIN CAPITAL LETTER P WITH DOT ABOVE */
#define XK_pabovedot                  0x1001e57  /* U+1E57 LATIN SMALL LETTER P WITH DOT ABOVE */
#define XK_Sabovedot                  0x1001e60  /* U+1E60 LATIN CAPITAL LETTER S WITH DOT ABOVE */
#define XK_sabovedot                  0x1001e61  /* U+1E61 LATIN SMALL LETTER S WITH DOT ABOVE */
#define XK_Tabovedot                  0x1001e6a  /* U+1E6A LATIN CAPITAL LETTER T WITH DOT ABOVE */
#define XK_tabovedot                  0x1001e6b  /* U+1E6B LATIN SMALL LETTER T WITH DOT ABOVE */
#define XK_Wgrave                     0x1001e80  /* U+1E80 LATIN CAPITAL LETTER W WITH GRAVE */
#define XK_wgrave                     0x1001e81  /* U+1E81 LATIN SMALL LETTER W WITH GRAVE */
#define XK_Wacute                     0x1001e82  /* U+1E82 LATIN CAPITAL LETTER W WITH ACUTE */
#define XK_wacute                     0x1001e83  /* U+1E83 LATIN SMALL LETTER W WITH ACUTE */
#define XK_Wdiaeresis                 0x1001e84  /* U+1E84 LATIN CAPITAL LETTER W WITH DIAERESIS */
#define XK_wdiaeresis                 0x1001e85  /* U+1E85 LATIN SMALL LETTER W WITH DIAERESIS */
#define XK_Ygrave                     0x1001ef2  /* U+1EF2 LATIN CAPITAL LETTER Y WITH GRAVE */
#define XK_ygrave                     0x1001ef3  /* U+1EF3 LATIN SMALL LETTER Y WITH GRAVE */
#endif /* XK_LATIN8 */

/*
 * Latin 9
 * Byte 3 = 0x13
 */

#ifdef XK_LATIN9
#define XK_OE                            0x13bc  /* U+0152 LATIN CAPITAL LIGATURE OE */
#define XK_oe                            0x13bd  /* U+0153 LATIN SMALL LIGATURE OE */
#define XK_Ydiaeresis                    0x13be  /* U+0178 LATIN CAPITAL LETTER Y WITH DIAERESIS */
#endif /* XK_LATIN9 */

/*
 * Katakana
 * Byte 3 = 4
 */

#ifdef XK_KATAKANA
#define XK_overline                      0x047e  /* U+203E OVERLINE */
#define XK_kana_fullstop                 0x04a1  /* U+3002 IDEOGRAPHIC FULL STOP */
#define XK_kana_openingbracket           0x04a2  /* U+300C LEFT CORNER BRACKET */
#define XK_kana_closingbracket           0x04a3  /* U+300D RIGHT CORNER BRACKET */
#define XK_kana_comma                    0x04a4  /* U+3001 IDEOGRAPHIC COMMA */
#define XK_kana_conjunctive              0x04a5  /* U+30FB KATAKANA MIDDLE DOT */
#define XK_kana_middledot                0x04a5  /* deprecated */
#define XK_kana_WO                       0x04a6  /* U+30F2 KATAKANA LETTER WO */
#define XK_kana_a                        0x04a7  /* U+30A1 KATAKANA LETTER SMALL A */
#define XK_kana_i                        0x04a8  /* U+30A3 KATAKANA LETTER SMALL I */
#define XK_kana_u                        0x04a9  /* U+30A5 KATAKANA LETTER SMALL U */
#define XK_kana_e                        0x04aa  /* U+30A7 KATAKANA LETTER SMALL E */
#define XK_kana_o                        0x04ab  /* U+30A9 KATAKANA LETTER SMALL O */
#define XK_kana_ya                       0x04ac  /* U+30E3 KATAKANA LETTER SMALL YA */
#define XK_kana_yu                       0x04ad  /* U+30E5 KATAKANA LETTER SMALL YU */
#define XK_kana_yo                       0x04ae  /* U+30E7 KATAKANA LETTER SMALL YO */
#define XK_kana_tsu                      0x04af  /* U+30C3 KATAKANA LETTER SMALL TU */
#define XK_kana_tu                       0x04af  /* deprecated */
#define XK_prolongedsound                0x04b0  /* U+30FC KATAKANA-HIRAGANA PROLONGED SOUND MARK */
#define XK_kana_A                        0x04b1  /* U+30A2 KATAKANA LETTER A */
#define XK_kana_I                        0x04b2  /* U+30A4 KATAKANA LETTER I */
#define XK_kana_U                        0x04b3  /* U+30A6 KATAKANA LETTER U */
#define XK_kana_E                        0x04b4  /* U+30A8 KATAKANA LETTER E */
#define XK_kana_O                        0x04b5  /* U+30AA KATAKANA LETTER O */
#define XK_kana_KA                       0x04b6  /* U+30AB KATAKANA LETTER KA */
#define XK_kana_KI                       0x04b7  /* U+30AD KATAKANA LETTER KI */
#define XK_kana_KU                       0x04b8  /* U+30AF KATAKANA LETTER KU */
#define XK_kana_KE                       0x04b9  /* U+30B1 KATAKANA LETTER KE */
#define XK_kana_KO                       0x04ba  /* U+30B3 KATAKANA LETTER KO */
#define XK_kana_SA                       0x04bb  /* U+30B5 KATAKANA LETTER SA */
#define XK_kana_SHI                      0x04bc  /* U+30B7 KATAKANA LETTER SI */
#define XK_kana_SU                       0x04bd  /* U+30B9 KATAKANA LETTER SU */
#define XK_kana_SE                       0x04be  /* U+30BB KATAKANA LETTER SE */
#define XK_kana_SO                       0x04bf  /* U+30BD KATAKANA LETTER SO */
#define XK_kana_TA                       0x04c0  /* U+30BF KATAKANA LETTER TA */
#define XK_kana_CHI                      0x04c1  /* U+30C1 KATAKANA LETTER TI */
#define XK_kana_TI                       0x04c1  /* deprecated */
#define XK_kana_TSU                      0x04c2  /* U+30C4 KATAKANA LETTER TU */
#define XK_kana_TU                       0x04c2  /* deprecated */
#define XK_kana_TE                       0x04c3  /* U+30C6 KATAKANA LETTER TE */
#define XK_kana_TO                       0x04c4  /* U+30C8 KATAKANA LETTER TO */
#define XK_kana_NA                       0x04c5  /* U+30CA KATAKANA LETTER NA */
#define XK_kana_NI                       0x04c6  /* U+30CB KATAKANA LETTER NI */
#define XK_kana_NU                       0x04c7  /* U+30CC KATAKANA LETTER NU */
#define XK_kana_NE                       0x04c8  /* U+30CD KATAKANA LETTER NE */
#define XK_kana_NO                       0x04c9  /* U+30CE KATAKANA LETTER NO */
#define XK_kana_HA                       0x04ca  /* U+30CF KATAKANA LETTER HA */
#define XK_kana_HI                       0x04cb  /* U+30D2 KATAKANA LETTER HI */
#define XK_kana_FU                       0x04cc  /* U+30D5 KATAKANA LETTER HU */
#define XK_kana_HU                       0x04cc  /* deprecated */
#define XK_kana_HE                       0x04cd  /* U+30D8 KATAKANA LETTER HE */
#define XK_kana_HO                       0x04ce  /* U+30DB KATAKANA LETTER HO */
#define XK_kana_MA                       0x04cf  /* U+30DE KATAKANA LETTER MA */
#define XK_kana_MI                       0x04d0  /* U+30DF KATAKANA LETTER MI */
#define XK_kana_MU                       0x04d1  /* U+30E0 KATAKANA LETTER MU */
#define XK_kana_ME                       0x04d2  /* U+30E1 KATAKANA LETTER ME */
#define XK_kana_MO                       0x04d3  /* U+30E2 KATAKANA LETTER MO */
#define XK_kana_YA                       0x04d4  /* U+30E4 KATAKANA LETTER YA */
#define XK_kana_YU                       0x04d5  /* U+30E6 KATAKANA LETTER YU */
#define XK_kana_YO                       0x04d6  /* U+30E8 KATAKANA LETTER YO */
#define XK_kana_RA                       0x04d7  /* U+30E9 KATAKANA LETTER RA */
#define XK_kana_RI                       0x04d8  /* U+30EA KATAKANA LETTER RI */
#define XK_kana_RU                       0x04d9  /* U+30EB KATAKANA LETTER RU */
#define XK_kana_RE                       0x04da  /* U+30EC KATAKANA LETTER RE */
#define XK_kana_RO                       0x04db  /* U+30ED KATAKANA LETTER RO */
#define XK_kana_WA                       0x04dc  /* U+30EF KATAKANA LETTER WA */
#define XK_kana_N                        0x04dd  /* U+30F3 KATAKANA LETTER N */
#define XK_voicedsound                   0x04de  /* U+309B KATAKANA-HIRAGANA VOICED SOUND MARK */
#define XK_semivoicedsound               0x04df  /* U+309C KATAKANA-HIRAGANA SEMI-VOICED SOUND MARK */
#define XK_kana_switch                   0xff7e  /* Alias for mode_switch */
#endif /* XK_KATAKANA */

/*
 * Arabic
 * Byte 3 = 5
 */

#ifdef XK_ARABIC
#define XK_Farsi_0                    0x10006f0  /* U+06F0 EXTENDED ARABIC-INDIC DIGIT ZERO */
#define XK_Farsi_1                    0x10006f1  /* U+06F1 EXTENDED ARABIC-INDIC DIGIT ONE */
#define XK_Farsi_2                    0x10006f2  /* U+06F2 EXTENDED ARABIC-INDIC DIGIT TWO */
#define XK_Farsi_3                    0x10006f3  /* U+06F3 EXTENDED ARABIC-INDIC DIGIT THREE */
#define XK_Farsi_4                    0x10006f4  /* U+06F4 EXTENDED ARABIC-INDIC DIGIT FOUR */
#define XK_Farsi_5                    0x10006f5  /* U+06F5 EXTENDED ARABIC-INDIC DIGIT FIVE */
#define XK_Farsi_6                    0x10006f6  /* U+06F6 EXTENDED ARABIC-INDIC DIGIT SIX */
#define XK_Farsi_7                    0x10006f7  /* U+06F7 EXTENDED ARABIC-INDIC DIGIT SEVEN */
#define XK_Farsi_8                    0x10006f8  /* U+06F8 EXTENDED ARABIC-INDIC DIGIT EIGHT */
#define XK_Farsi_9                    0x10006f9  /* U+06F9 EXTENDED ARABIC-INDIC DIGIT NINE */
#define XK_Arabic_percent             0x100066a  /* U+066A ARABIC PERCENT SIGN */
#define XK_Arabic_superscript_alef    0x1000670  /* U+0670 ARABIC LETTER SUPERSCRIPT ALEF */
#define XK_Arabic_tteh                0x1000679  /* U+0679 ARABIC LETTER TTEH */
#define XK_Arabic_peh                 0x100067e  /* U+067E ARABIC LETTER PEH */
#define XK_Arabic_tcheh               0x1000686  /* U+0686 ARABIC LETTER TCHEH */
#define XK_Arabic_ddal                0x1000688  /* U+0688 ARABIC LETTER DDAL */
#define XK_Arabic_rreh                0x1000691  /* U+0691 ARABIC LETTER RREH */
#define XK_Arabic_comma                  0x05ac  /* U+060C ARABIC COMMA */
#define XK_Arabic_fullstop            0x10006d4  /* U+06D4 ARABIC FULL STOP */
#define XK_Arabic_0                   0x1000660  /* U+0660 ARABIC-INDIC DIGIT ZERO */
#define XK_Arabic_1                   0x1000661  /* U+0661 ARABIC-INDIC DIGIT ONE */
#define XK_Arabic_2                   0x1000662  /* U+0662 ARABIC-INDIC DIGIT TWO */
#define XK_Arabic_3                   0x1000663  /* U+0663 ARABIC-INDIC DIGIT THREE */
#define XK_Arabic_4                   0x1000664  /* U+0664 ARABIC-INDIC DIGIT FOUR */
#define XK_Arabic_5                   0x1000665  /* U+0665 ARABIC-INDIC DIGIT FIVE */
#define XK_Arabic_6                   0x1000666  /* U+0666 ARABIC-INDIC DIGIT SIX */
#define XK_Arabic_7                   0x1000667  /* U+0667 ARABIC-INDIC DIGIT SEVEN */
#define XK_Arabic_8                   0x1000668  /* U+0668 ARABIC-INDIC DIGIT EIGHT */
#define XK_Arabic_9                   0x1000669  /* U+0669 ARABIC-INDIC DIGIT NINE */
#define XK_Arabic_semicolon              0x05bb  /* U+061B ARABIC SEMICOLON */
#define XK_Arabic_question_mark          0x05bf  /* U+061F ARABIC QUESTION MARK */
#define XK_Arabic_hamza                  0x05c1  /* U+0621 ARABIC LETTER HAMZA */
#define XK_Arabic_maddaonalef            0x05c2  /* U+0622 ARABIC LETTER ALEF WITH MADDA ABOVE */
#define XK_Arabic_hamzaonalef            0x05c3  /* U+0623 ARABIC LETTER ALEF WITH HAMZA ABOVE */
#define XK_Arabic_hamzaonwaw             0x05c4  /* U+0624 ARABIC LETTER WAW WITH HAMZA ABOVE */
#define XK_Arabic_hamzaunderalef         0x05c5  /* U+0625 ARABIC LETTER ALEF WITH HAMZA BELOW */
#define XK_Arabic_hamzaonyeh             0x05c6  /* U+0626 ARABIC LETTER YEH WITH HAMZA ABOVE */
#define XK_Arabic_alef                   0x05c7  /* U+0627 ARABIC LETTER ALEF */
#define XK_Arabic_beh                    0x05c8  /* U+0628 ARABIC LETTER BEH */
#define XK_Arabic_tehmarbuta             0x05c9  /* U+0629 ARABIC LETTER TEH MARBUTA */
#define XK_Arabic_teh                    0x05ca  /* U+062A ARABIC LETTER TEH */
#define XK_Arabic_theh                   0x05cb  /* U+062B ARABIC LETTER THEH */
#define XK_Arabic_jeem                   0x05cc  /* U+062C ARABIC LETTER JEEM */
#define XK_Arabic_hah                    0x05cd  /* U+062D ARABIC LETTER HAH */
#define XK_Arabic_khah                   0x05ce  /* U+062E ARABIC LETTER KHAH */
#define XK_Arabic_dal                    0x05cf  /* U+062F ARABIC LETTER DAL */
#define XK_Arabic_thal                   0x05d0  /* U+0630 ARABIC LETTER THAL */
#define XK_Arabic_ra                     0x05d1  /* U+0631 ARABIC LETTER REH */
#define XK_Arabic_zain                   0x05d2  /* U+0632 ARABIC LETTER ZAIN */
#define XK_Arabic_seen                   0x05d3  /* U+0633 ARABIC LETTER SEEN */
#define XK_Arabic_sheen                  0x05d4  /* U+0634 ARABIC LETTER SHEEN */
#define XK_Arabic_sad                    0x05d5  /* U+0635 ARABIC LETTER SAD */
#define XK_Arabic_dad                    0x05d6  /* U+0636 ARABIC LETTER DAD */
#define XK_Arabic_tah                    0x05d7  /* U+0637 ARABIC LETTER TAH */
#define XK_Arabic_zah                    0x05d8  /* U+0638 ARABIC LETTER ZAH */
#define XK_Arabic_ain                    0x05d9  /* U+0639 ARABIC LETTER AIN */
#define XK_Arabic_ghain                  0x05da  /* U+063A ARABIC LETTER GHAIN */
#define XK_Arabic_tatweel                0x05e0  /* U+0640 ARABIC TATWEEL */
#define XK_Arabic_feh                    0x05e1  /* U+0641 ARABIC LETTER FEH */
#define XK_Arabic_qaf                    0x05e2  /* U+0642 ARABIC LETTER QAF */
#define XK_Arabic_kaf                    0x05e3  /* U+0643 ARABIC LETTER KAF */
#define XK_Arabic_lam                    0x05e4  /* U+0644 ARABIC LETTER LAM */
#define XK_Arabic_meem                   0x05e5  /* U+0645 ARABIC LETTER MEEM */
#define XK_Arabic_noon                   0x05e6  /* U+0646 ARABIC LETTER NOON */
#define XK_Arabic_ha                     0x05e7  /* U+0647 ARABIC LETTER HEH */
#define XK_Arabic_heh                    0x05e7  /* deprecated */
#define XK_Arabic_waw                    0x05e8  /* U+0648 ARABIC LETTER WAW */
#define XK_Arabic_alefmaksura            0x05e9  /* U+0649 ARABIC LETTER ALEF MAKSURA */
#define XK_Arabic_yeh                    0x05ea  /* U+064A ARABIC LETTER YEH */
#define XK_Arabic_fathatan               0x05eb  /* U+064B ARABIC FATHATAN */
#define XK_Arabic_dammatan               0x05ec  /* U+064C ARABIC DAMMATAN */
#define XK_Arabic_kasratan               0x05ed  /* U+064D ARABIC KASRATAN */
#define XK_Arabic_fatha                  0x05ee  /* U+064E ARABIC FATHA */
#define XK_Arabic_damma                  0x05ef  /* U+064F ARABIC DAMMA */
#define XK_Arabic_kasra                  0x05f0  /* U+0650 ARABIC KASRA */
#define XK_Arabic_shadda                 0x05f1  /* U+0651 ARABIC SHADDA */
#define XK_Arabic_sukun                  0x05f2  /* U+0652 ARABIC SUKUN */
#define XK_Arabic_madda_above         0x1000653  /* U+0653 ARABIC MADDAH ABOVE */
#define XK_Arabic_hamza_above         0x1000654  /* U+0654 ARABIC HAMZA ABOVE */
#define XK_Arabic_hamza_below         0x1000655  /* U+0655 ARABIC HAMZA BELOW */
#define XK_Arabic_jeh                 0x1000698  /* U+0698 ARABIC LETTER JEH */
#define XK_Arabic_veh                 0x10006a4  /* U+06A4 ARABIC LETTER VEH */
#define XK_Arabic_keheh               0x10006a9  /* U+06A9 ARABIC LETTER KEHEH */
#define XK_Arabic_gaf                 0x10006af  /* U+06AF ARABIC LETTER GAF */
#define XK_Arabic_noon_ghunna         0x10006ba  /* U+06BA ARABIC LETTER NOON GHUNNA */
#define XK_Arabic_heh_doachashmee     0x10006be  /* U+06BE ARABIC LETTER HEH DOACHASHMEE */
#define XK_Farsi_yeh                  0x10006cc  /* U+06CC ARABIC LETTER FARSI YEH */
#define XK_Arabic_farsi_yeh           0x10006cc  /* U+06CC ARABIC LETTER FARSI YEH */
#define XK_Arabic_yeh_baree           0x10006d2  /* U+06D2 ARABIC LETTER YEH BARREE */
#define XK_Arabic_heh_goal            0x10006c1  /* U+06C1 ARABIC LETTER HEH GOAL */
#define XK_Arabic_switch                 0xff7e  /* Alias for mode_switch */
#endif /* XK_ARABIC */

/*
 * Cyrillic
 * Byte 3 = 6
 */
#ifdef XK_CYRILLIC
#define XK_Cyrillic_GHE_bar           0x1000492  /* U+0492 CYRILLIC CAPITAL LETTER GHE WITH STROKE */
#define XK_Cyrillic_ghe_bar           0x1000493  /* U+0493 CYRILLIC SMALL LETTER GHE WITH STROKE */
#define XK_Cyrillic_ZHE_descender     0x1000496  /* U+0496 CYRILLIC CAPITAL LETTER ZHE WITH DESCENDER */
#define XK_Cyrillic_zhe_descender     0x1000497  /* U+0497 CYRILLIC SMALL LETTER ZHE WITH DESCENDER */
#define XK_Cyrillic_KA_descender      0x100049a  /* U+049A CYRILLIC CAPITAL LETTER KA WITH DESCENDER */
#define XK_Cyrillic_ka_descender      0x100049b  /* U+049B CYRILLIC SMALL LETTER KA WITH DESCENDER */
#define XK_Cyrillic_KA_vertstroke     0x100049c  /* U+049C CYRILLIC CAPITAL LETTER KA WITH VERTICAL STROKE */
#define XK_Cyrillic_ka_vertstroke     0x100049d  /* U+049D CYRILLIC SMALL LETTER KA WITH VERTICAL STROKE */
#define XK_Cyrillic_EN_descender      0x10004a2  /* U+04A2 CYRILLIC CAPITAL LETTER EN WITH DESCENDER */
#define XK_Cyrillic_en_descender      0x10004a3  /* U+04A3 CYRILLIC SMALL LETTER EN WITH DESCENDER */
#define XK_Cyrillic_U_straight        0x10004ae  /* U+04AE CYRILLIC CAPITAL LETTER STRAIGHT U */
#define XK_Cyrillic_u_straight        0x10004af  /* U+04AF CYRILLIC SMALL LETTER STRAIGHT U */
#define XK_Cyrillic_U_straight_bar    0x10004b0  /* U+04B0 CYRILLIC CAPITAL LETTER STRAIGHT U WITH STROKE */
#define XK_Cyrillic_u_straight_bar    0x10004b1  /* U+04B1 CYRILLIC SMALL LETTER STRAIGHT U WITH STROKE */
#define XK_Cyrillic_HA_descender      0x10004b2  /* U+04B2 CYRILLIC CAPITAL LETTER HA WITH DESCENDER */
#define XK_Cyrillic_ha_descender      0x10004b3  /* U+04B3 CYRILLIC SMALL LETTER HA WITH DESCENDER */
#define XK_Cyrillic_CHE_descender     0x10004b6  /* U+04B6 CYRILLIC CAPITAL LETTER CHE WITH DESCENDER */
#define XK_Cyrillic_che_descender     0x10004b7  /* U+04B7 CYRILLIC SMALL LETTER CHE WITH DESCENDER */
#define XK_Cyrillic_CHE_vertstroke    0x10004b8  /* U+04B8 CYRILLIC CAPITAL LETTER CHE WITH VERTICAL STROKE */
#define XK_Cyrillic_che_vertstroke    0x10004b9  /* U+04B9 CYRILLIC SMALL LETTER CHE WITH VERTICAL STROKE */
#define XK_Cyrillic_SHHA              0x10004ba  /* U+04BA CYRILLIC CAPITAL LETTER SHHA */
#define XK_Cyrillic_shha              0x10004bb  /* U+04BB CYRILLIC SMALL LETTER SHHA */

#define XK_Cyrillic_SCHWA             0x10004d8  /* U+04D8 CYRILLIC CAPITAL LETTER SCHWA */
#define XK_Cyrillic_schwa             0x10004d9  /* U+04D9 CYRILLIC SMALL LETTER SCHWA */
#define XK_Cyrillic_I_macron          0x10004e2  /* U+04E2 CYRILLIC CAPITAL LETTER I WITH MACRON */
#define XK_Cyrillic_i_macron          0x10004e3  /* U+04E3 CYRILLIC SMALL LETTER I WITH MACRON */
#define XK_Cyrillic_O_bar             0x10004e8  /* U+04E8 CYRILLIC CAPITAL LETTER BARRED O */
#define XK_Cyrillic_o_bar             0x10004e9  /* U+04E9 CYRILLIC SMALL LETTER BARRED O */
#define XK_Cyrillic_U_macron          0x10004ee  /* U+04EE CYRILLIC CAPITAL LETTER U WITH MACRON */
#define XK_Cyrillic_u_macron          0x10004ef  /* U+04EF CYRILLIC SMALL LETTER U WITH MACRON */

#define XK_Serbian_dje                   0x06a1  /* U+0452 CYRILLIC SMALL LETTER DJE */
#define XK_Macedonia_gje                 0x06a2  /* U+0453 CYRILLIC SMALL LETTER GJE */
#define XK_Cyrillic_io                   0x06a3  /* U+0451 CYRILLIC SMALL LETTER IO */
#define XK_Ukrainian_ie                  0x06a4  /* U+0454 CYRILLIC SMALL LETTER UKRAINIAN IE */
#define XK_Ukranian_je                   0x06a4  /* deprecated */
#define XK_Macedonia_dse                 0x06a5  /* U+0455 CYRILLIC SMALL LETTER DZE */
#define XK_Ukrainian_i                   0x06a6  /* U+0456 CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I */
#define XK_Ukranian_i                    0x06a6  /* deprecated */
#define XK_Ukrainian_yi                  0x06a7  /* U+0457 CYRILLIC SMALL LETTER YI */
#define XK_Ukranian_yi                   0x06a7  /* deprecated */
#define XK_Cyrillic_je                   0x06a8  /* U+0458 CYRILLIC SMALL LETTER JE */
#define XK_Serbian_je                    0x06a8  /* deprecated */
#define XK_Cyrillic_lje                  0x06a9  /* U+0459 CYRILLIC SMALL LETTER LJE */
#define XK_Serbian_lje                   0x06a9  /* deprecated */
#define XK_Cyrillic_nje                  0x06aa  /* U+045A CYRILLIC SMALL LETTER NJE */
#define XK_Serbian_nje                   0x06aa  /* deprecated */
#define XK_Serbian_tshe                  0x06ab  /* U+045B CYRILLIC SMALL LETTER TSHE */
#define XK_Macedonia_kje                 0x06ac  /* U+045C CYRILLIC SMALL LETTER KJE */
#define XK_Ukrainian_ghe_with_upturn     0x06ad  /* U+0491 CYRILLIC SMALL LETTER GHE WITH UPTURN */
#define XK_Byelorussian_shortu           0x06ae  /* U+045E CYRILLIC SMALL LETTER SHORT U */
#define XK_Cyrillic_dzhe                 0x06af  /* U+045F CYRILLIC SMALL LETTER DZHE */
#define XK_Serbian_dze                   0x06af  /* deprecated */
#define XK_numerosign                    0x06b0  /* U+2116 NUMERO SIGN */
#define XK_Serbian_DJE                   0x06b1  /* U+0402 CYRILLIC CAPITAL LETTER DJE */
#define XK_Macedonia_GJE                 0x06b2  /* U+0403 CYRILLIC CAPITAL LETTER GJE */
#define XK_Cyrillic_IO                   0x06b3  /* U+0401 CYRILLIC CAPITAL LETTER IO */
#define XK_Ukrainian_IE                  0x06b4  /* U+0404 CYRILLIC CAPITAL LETTER UKRAINIAN IE */
#define XK_Ukranian_JE                   0x06b4  /* deprecated */
#define XK_Macedonia_DSE                 0x06b5  /* U+0405 CYRILLIC CAPITAL LETTER DZE */
#define XK_Ukrainian_I                   0x06b6  /* U+0406 CYRILLIC CAPITAL LETTER BYELORUSSIAN-UKRAINIAN I */
#define XK_Ukranian_I                    0x06b6  /* deprecated */
#define XK_Ukrainian_YI                  0x06b7  /* U+0407 CYRILLIC CAPITAL LETTER YI */
#define XK_Ukranian_YI                   0x06b7  /* deprecated */
#define XK_Cyrillic_JE                   0x06b8  /* U+0408 CYRILLIC CAPITAL LETTER JE */
#define XK_Serbian_JE                    0x06b8  /* deprecated */
#define XK_Cyrillic_LJE                  0x06b9  /* U+0409 CYRILLIC CAPITAL LETTER LJE */
#define XK_Serbian_LJE                   0x06b9  /* deprecated */
#define XK_Cyrillic_NJE                  0x06ba  /* U+040A CYRILLIC CAPITAL LETTER NJE */
#define XK_Serbian_NJE                   0x06ba  /* deprecated */
#define XK_Serbian_TSHE                  0x06bb  /* U+040B CYRILLIC CAPITAL LETTER TSHE */
#define XK_Macedonia_KJE                 0x06bc  /* U+040C CYRILLIC CAPITAL LETTER KJE */
#define XK_Ukrainian_GHE_WITH_UPTURN     0x06bd  /* U+0490 CYRILLIC CAPITAL LETTER GHE WITH UPTURN */
#define XK_Byelorussian_SHORTU           0x06be  /* U+040E CYRILLIC CAPITAL LETTER SHORT U */
#define XK_Cyrillic_DZHE                 0x06bf  /* U+040F CYRILLIC CAPITAL LETTER DZHE */
#define XK_Serbian_DZE                   0x06bf  /* deprecated */
#define XK_Cyrillic_yu                   0x06c0  /* U+044E CYRILLIC SMALL LETTER YU */
#define XK_Cyrillic_a                    0x06c1  /* U+0430 CYRILLIC SMALL LETTER A */
#define XK_Cyrillic_be                   0x06c2  /* U+0431 CYRILLIC SMALL LETTER BE */
#define XK_Cyrillic_tse                  0x06c3  /* U+0446 CYRILLIC SMALL LETTER TSE */
#define XK_Cyrillic_de                   0x06c4  /* U+0434 CYRILLIC SMALL LETTER DE */
#define XK_Cyrillic_ie                   0x06c5  /* U+0435 CYRILLIC SMALL LETTER IE */
#define XK_Cyrillic_ef                   0x06c6  /* U+0444 CYRILLIC SMALL LETTER EF */
#define XK_Cyrillic_ghe                  0x06c7  /* U+0433 CYRILLIC SMALL LETTER GHE */
#define XK_Cyrillic_ha                   0x06c8  /* U+0445 CYRILLIC SMALL LETTER HA */
#define XK_Cyrillic_i                    0x06c9  /* U+0438 CYRILLIC SMALL LETTER I */
#define XK_Cyrillic_shorti               0x06ca  /* U+0439 CYRILLIC SMALL LETTER SHORT I */
#define XK_Cyrillic_ka                   0x06cb  /* U+043A CYRILLIC SMALL LETTER KA */
#define XK_Cyrillic_el                   0x06cc  /* U+043B CYRILLIC SMALL LETTER EL */
#define XK_Cyrillic_em                   0x06cd  /* U+043C CYRILLIC SMALL LETTER EM */
#define XK_Cyrillic_en                   0x06ce  /* U+043D CYRILLIC SMALL LETTER EN */
#define XK_Cyrillic_o                    0x06cf  /* U+043E CYRILLIC SMALL LETTER O */
#define XK_Cyrillic_pe                   0x06d0  /* U+043F CYRILLIC SMALL LETTER PE */
#define XK_Cyrillic_ya                   0x06d1  /* U+044F CYRILLIC SMALL LETTER YA */
#define XK_Cyrillic_er                   0x06d2  /* U+0440 CYRILLIC SMALL LETTER ER */
#define XK_Cyrillic_es                   0x06d3  /* U+0441 CYRILLIC SMALL LETTER ES */
#define XK_Cyrillic_te                   0x06d4  /* U+0442 CYRILLIC SMALL LETTER TE */
#define XK_Cyrillic_u                    0x06d5  /* U+0443 CYRILLIC SMALL LETTER U */
#define XK_Cyrillic_zhe                  0x06d6  /* U+0436 CYRILLIC SMALL LETTER ZHE */
#define XK_Cyrillic_ve                   0x06d7  /* U+0432 CYRILLIC SMALL LETTER VE */
#define XK_Cyrillic_softsign             0x06d8  /* U+044C CYRILLIC SMALL LETTER SOFT SIGN */
#define XK_Cyrillic_yeru                 0x06d9  /* U+044B CYRILLIC SMALL LETTER YERU */
#define XK_Cyrillic_ze                   0x06da  /* U+0437 CYRILLIC SMALL LETTER ZE */
#define XK_Cyrillic_sha                  0x06db  /* U+0448 CYRILLIC SMALL LETTER SHA */
#define XK_Cyrillic_e                    0x06dc  /* U+044D CYRILLIC SMALL LETTER E */
#define XK_Cyrillic_shcha                0x06dd  /* U+0449 CYRILLIC SMALL LETTER SHCHA */
#define XK_Cyrillic_che                  0x06de  /* U+0447 CYRILLIC SMALL LETTER CHE */
#define XK_Cyrillic_hardsign             0x06df  /* U+044A CYRILLIC SMALL LETTER HARD SIGN */
#define XK_Cyrillic_YU                   0x06e0  /* U+042E CYRILLIC CAPITAL LETTER YU */
#define XK_Cyrillic_A                    0x06e1  /* U+0410 CYRILLIC CAPITAL LETTER A */
#define XK_Cyrillic_BE                   0x06e2  /* U+0411 CYRILLIC CAPITAL LETTER BE */
#define XK_Cyrillic_TSE                  0x06e3  /* U+0426 CYRILLIC CAPITAL LETTER TSE */
#define XK_Cyrillic_DE                   0x06e4  /* U+0414 CYRILLIC CAPITAL LETTER DE */
#define XK_Cyrillic_IE                   0x06e5  /* U+0415 CYRILLIC CAPITAL LETTER IE */
#define XK_Cyrillic_EF                   0x06e6  /* U+0424 CYRILLIC CAPITAL LETTER EF */
#define XK_Cyrillic_GHE                  0x06e7  /* U+0413 CYRILLIC CAPITAL LETTER GHE */
#define XK_Cyrillic_HA                   0x06e8  /* U+0425 CYRILLIC CAPITAL LETTER HA */
#define XK_Cyrillic_I                    0x06e9  /* U+0418 CYRILLIC CAPITAL LETTER I */
#define XK_Cyrillic_SHORTI               0x06ea  /* U+0419 CYRILLIC CAPITAL LETTER SHORT I */
#define XK_Cyrillic_KA                   0x06eb  /* U+041A CYRILLIC CAPITAL LETTER KA */
#define XK_Cyrillic_EL                   0x06ec  /* U+041B CYRILLIC CAPITAL LETTER EL */
#define XK_Cyrillic_EM                   0x06ed  /* U+041C CYRILLIC CAPITAL LETTER EM */
#define XK_Cyrillic_EN                   0x06ee  /* U+041D CYRILLIC CAPITAL LETTER EN */
#define XK_Cyrillic_O                    0x06ef  /* U+041E CYRILLIC CAPITAL LETTER O */
#define XK_Cyrillic_PE                   0x06f0  /* U+041F CYRILLIC CAPITAL LETTER PE */
#define XK_Cyrillic_YA                   0x06f1  /* U+042F CYRILLIC CAPITAL LETTER YA */
#define XK_Cyrillic_ER                   0x06f2  /* U+0420 CYRILLIC CAPITAL LETTER ER */
#define XK_Cyrillic_ES                   0x06f3  /* U+0421 CYRILLIC CAPITAL LETTER ES */
#define XK_Cyrillic_TE                   0x06f4  /* U+0422 CYRILLIC CAPITAL LETTER TE */
#define XK_Cyrillic_U                    0x06f5  /* U+0423 CYRILLIC CAPITAL LETTER U */
#define XK_Cyrillic_ZHE                  0x06f6  /* U+0416 CYRILLIC CAPITAL LETTER ZHE */
#define XK_Cyrillic_VE                   0x06f7  /* U+0412 CYRILLIC CAPITAL LETTER VE */
#define XK_Cyrillic_SOFTSIGN             0x06f8  /* U+042C CYRILLIC CAPITAL LETTER SOFT SIGN */
#define XK_Cyrillic_YERU                 0x06f9  /* U+042B CYRILLIC CAPITAL LETTER YERU */
#define XK_Cyrillic_ZE                   0x06fa  /* U+0417 CYRILLIC CAPITAL LETTER ZE */
#define XK_Cyrillic_SHA                  0x06fb  /* U+0428 CYRILLIC CAPITAL LETTER SHA */
#define XK_Cyrillic_E                    0x06fc  /* U+042D CYRILLIC CAPITAL LETTER E */
#define XK_Cyrillic_SHCHA                0x06fd  /* U+0429 CYRILLIC CAPITAL LETTER SHCHA */
#define XK_Cyrillic_CHE                  0x06fe  /* U+0427 CYRILLIC CAPITAL LETTER CHE */
#define XK_Cyrillic_HARDSIGN             0x06ff  /* U+042A CYRILLIC CAPITAL LETTER HARD SIGN */
#endif /* XK_CYRILLIC */

/*
 * Greek
 * (based on an early draft of, and not quite identical to, ISO/IEC 8859-7)
 * Byte 3 = 7
 */

#ifdef XK_GREEK
#define XK_Greek_ALPHAaccent             0x07a1  /* U+0386 GREEK CAPITAL LETTER ALPHA WITH TONOS */
#define XK_Greek_EPSILONaccent           0x07a2  /* U+0388 GREEK CAPITAL LETTER EPSILON WITH TONOS */
#define XK_Greek_ETAaccent               0x07a3  /* U+0389 GREEK CAPITAL LETTER ETA WITH TONOS */
#define XK_Greek_IOTAaccent              0x07a4  /* U+038A GREEK CAPITAL LETTER IOTA WITH TONOS */
#define XK_Greek_IOTAdieresis            0x07a5  /* U+03AA GREEK CAPITAL LETTER IOTA WITH DIALYTIKA */
#define XK_Greek_IOTAdiaeresis           0x07a5  /* old typo */
#define XK_Greek_OMICRONaccent           0x07a7  /* U+038C GREEK CAPITAL LETTER OMICRON WITH TONOS */
#define XK_Greek_UPSILONaccent           0x07a8  /* U+038E GREEK CAPITAL LETTER UPSILON WITH TONOS */
#define XK_Greek_UPSILONdieresis         0x07a9  /* U+03AB GREEK CAPITAL LETTER UPSILON WITH DIALYTIKA */
#define XK_Greek_OMEGAaccent             0x07ab  /* U+038F GREEK CAPITAL LETTER OMEGA WITH TONOS */
#define XK_Greek_accentdieresis          0x07ae  /* U+0385 GREEK DIALYTIKA TONOS */
#define XK_Greek_horizbar                0x07af  /* U+2015 HORIZONTAL BAR */
#define XK_Greek_alphaaccent             0x07b1  /* U+03AC GREEK SMALL LETTER ALPHA WITH TONOS */
#define XK_Greek_epsilonaccent           0x07b2  /* U+03AD GREEK SMALL LETTER EPSILON WITH TONOS */
#define XK_Greek_etaaccent               0x07b3  /* U+03AE GREEK SMALL LETTER ETA WITH TONOS */
#define XK_Greek_iotaaccent              0x07b4  /* U+03AF GREEK SMALL LETTER IOTA WITH TONOS */
#define XK_Greek_iotadieresis            0x07b5  /* U+03CA GREEK SMALL LETTER IOTA WITH DIALYTIKA */
#define XK_Greek_iotaaccentdieresis      0x07b6  /* U+0390 GREEK SMALL LETTER IOTA WITH DIALYTIKA AND TONOS */
#define XK_Greek_omicronaccent           0x07b7  /* U+03CC GREEK SMALL LETTER OMICRON WITH TONOS */
#define XK_Greek_upsilonaccent           0x07b8  /* U+03CD GREEK SMALL LETTER UPSILON WITH TONOS */
#define XK_Greek_upsilondieresis         0x07b9  /* U+03CB GREEK SMALL LETTER UPSILON WITH DIALYTIKA */
#define XK_Greek_upsilonaccentdieresis   0x07ba  /* U+03B0 GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND TONOS */
#define XK_Greek_omegaaccent             0x07bb  /* U+03CE GREEK SMALL LETTER OMEGA WITH TONOS */
#define XK_Greek_ALPHA                   0x07c1  /* U+0391 GREEK CAPITAL LETTER ALPHA */
#define XK_Greek_BETA                    0x07c2  /* U+0392 GREEK CAPITAL LETTER BETA */
#define XK_Greek_GAMMA                   0x07c3  /* U+0393 GREEK CAPITAL LETTER GAMMA */
#define XK_Greek_DELTA                   0x07c4  /* U+0394 GREEK CAPITAL LETTER DELTA */
#define XK_Greek_EPSILON                 0x07c5  /* U+0395 GREEK CAPITAL LETTER EPSILON */
#define XK_Greek_ZETA                    0x07c6  /* U+0396 GREEK CAPITAL LETTER ZETA */
#define XK_Greek_ETA                     0x07c7  /* U+0397 GREEK CAPITAL LETTER ETA */
#define XK_Greek_THETA                   0x07c8  /* U+0398 GREEK CAPITAL LETTER THETA */
#define XK_Greek_IOTA                    0x07c9  /* U+0399 GREEK CAPITAL LETTER IOTA */
#define XK_Greek_KAPPA                   0x07ca  /* U+039A GREEK CAPITAL LETTER KAPPA */
#define XK_Greek_LAMDA                   0x07cb  /* U+039B GREEK CAPITAL LETTER LAMDA */
#define XK_Greek_LAMBDA                  0x07cb  /* U+039B GREEK CAPITAL LETTER LAMDA */
#define XK_Greek_MU                      0x07cc  /* U+039C GREEK CAPITAL LETTER MU */
#define XK_Greek_NU                      0x07cd  /* U+039D GREEK CAPITAL LETTER NU */
#define XK_Greek_XI                      0x07ce  /* U+039E GREEK CAPITAL LETTER XI */
#define XK_Greek_OMICRON                 0x07cf  /* U+039F GREEK CAPITAL LETTER OMICRON */
#define XK_Greek_PI                      0x07d0  /* U+03A0 GREEK CAPITAL LETTER PI */
#define XK_Greek_RHO                     0x07d1  /* U+03A1 GREEK CAPITAL LETTER RHO */
#define XK_Greek_SIGMA                   0x07d2  /* U+03A3 GREEK CAPITAL LETTER SIGMA */
#define XK_Greek_TAU                     0x07d4  /* U+03A4 GREEK CAPITAL LETTER TAU */
#define XK_Greek_UPSILON                 0x07d5  /* U+03A5 GREEK CAPITAL LETTER UPSILON */
#define XK_Greek_PHI                     0x07d6  /* U+03A6 GREEK CAPITAL LETTER PHI */
#define XK_Greek_CHI                     0x07d7  /* U+03A7 GREEK CAPITAL LETTER CHI */
#define XK_Greek_PSI                     0x07d8  /* U+03A8 GREEK CAPITAL LETTER PSI */
#define XK_Greek_OMEGA                   0x07d9  /* U+03A9 GREEK CAPITAL LETTER OMEGA */
#define XK_Greek_alpha                   0x07e1  /* U+03B1 GREEK SMALL LETTER ALPHA */
#define XK_Greek_beta                    0x07e2  /* U+03B2 GREEK SMALL LETTER BETA */
#define XK_Greek_gamma                   0x07e3  /* U+03B3 GREEK SMALL LETTER GAMMA */
#define XK_Greek_delta                   0x07e4  /* U+03B4 GREEK SMALL LETTER DELTA */
#define XK_Greek_epsilon                 0x07e5  /* U+03B5 GREEK SMALL LETTER EPSILON */
#define XK_Greek_zeta                    0x07e6  /* U+03B6 GREEK SMALL LETTER ZETA */
#define XK_Greek_eta                     0x07e7  /* U+03B7 GREEK SMALL LETTER ETA */
#define XK_Greek_theta                   0x07e8  /* U+03B8 GREEK SMALL LETTER THETA */
#define XK_Greek_iota                    0x07e9  /* U+03B9 GREEK SMALL LETTER IOTA */
#define XK_Greek_kappa                   0x07ea  /* U+03BA GREEK SMALL LETTER KAPPA */
#define XK_Greek_lamda                   0x07eb  /* U+03BB GREEK SMALL LETTER LAMDA */
#define XK_Greek_lambda                  0x07eb  /* U+03BB GREEK SMALL LETTER LAMDA */
#define XK_Greek_mu                      0x07ec  /* U+03BC GREEK SMALL LETTER MU */
#define XK_Greek_nu                      0x07ed  /* U+03BD GREEK SMALL LETTER NU */
#define XK_Greek_xi                      0x07ee  /* U+03BE GREEK SMALL LETTER XI */
#define XK_Greek_omicron                 0x07ef  /* U+03BF GREEK SMALL LETTER OMICRON */
#define XK_Greek_pi                      0x07f0  /* U+03C0 GREEK SMALL LETTER PI */
#define XK_Greek_rho                     0x07f1  /* U+03C1 GREEK SMALL LETTER RHO */
#define XK_Greek_sigma                   0x07f2  /* U+03C3 GREEK SMALL LETTER SIGMA */
#define XK_Greek_finalsmallsigma         0x07f3  /* U+03C2 GREEK SMALL LETTER FINAL SIGMA */
#define XK_Greek_tau                     0x07f4  /* U+03C4 GREEK SMALL LETTER TAU */
#define XK_Greek_upsilon                 0x07f5  /* U+03C5 GREEK SMALL LETTER UPSILON */
#define XK_Greek_phi                     0x07f6  /* U+03C6 GREEK SMALL LETTER PHI */
#define XK_Greek_chi                     0x07f7  /* U+03C7 GREEK SMALL LETTER CHI */
#define XK_Greek_psi                     0x07f8  /* U+03C8 GREEK SMALL LETTER PSI */
#define XK_Greek_omega                   0x07f9  /* U+03C9 GREEK SMALL LETTER OMEGA */
#define XK_Greek_switch                  0xff7e  /* Alias for mode_switch */
#endif /* XK_GREEK */

/*
 * Technical
 * (from the DEC VT330/VT420 Technical Character Set, http://vt100.net/charsets/technical.html)
 * Byte 3 = 8
 */

#ifdef XK_TECHNICAL
#define XK_leftradical                   0x08a1  /* U+23B7 RADICAL SYMBOL BOTTOM */
#define XK_topleftradical                0x08a2  /*(U+250C BOX DRAWINGS LIGHT DOWN AND RIGHT)*/
#define XK_horizconnector                0x08a3  /*(U+2500 BOX DRAWINGS LIGHT HORIZONTAL)*/
#define XK_topintegral                   0x08a4  /* U+2320 TOP HALF INTEGRAL */
#define XK_botintegral                   0x08a5  /* U+2321 BOTTOM HALF INTEGRAL */
#define XK_vertconnector                 0x08a6  /*(U+2502 BOX DRAWINGS LIGHT VERTICAL)*/
#define XK_topleftsqbracket              0x08a7  /* U+23A1 LEFT SQUARE BRACKET UPPER CORNER */
#define XK_botleftsqbracket              0x08a8  /* U+23A3 LEFT SQUARE BRACKET LOWER CORNER */
#define XK_toprightsqbracket             0x08a9  /* U+23A4 RIGHT SQUARE BRACKET UPPER CORNER */
#define XK_botrightsqbracket             0x08aa  /* U+23A6 RIGHT SQUARE BRACKET LOWER CORNER */
#define XK_topleftparens                 0x08ab  /* U+239B LEFT PARENTHESIS UPPER HOOK */
#define XK_botleftparens                 0x08ac  /* U+239D LEFT PARENTHESIS LOWER HOOK */
#define XK_toprightparens                0x08ad  /* U+239E RIGHT PARENTHESIS UPPER HOOK */
#define XK_botrightparens                0x08ae  /* U+23A0 RIGHT PARENTHESIS LOWER HOOK */
#define XK_leftmiddlecurlybrace          0x08af  /* U+23A8 LEFT CURLY BRACKET MIDDLE PIECE */
#define XK_rightmiddlecurlybrace         0x08b0  /* U+23AC RIGHT CURLY BRACKET MIDDLE PIECE */
#define XK_topleftsummation              0x08b1
#define XK_botleftsummation              0x08b2
#define XK_topvertsummationconnector     0x08b3
#define XK_botvertsummationconnector     0x08b4
#define XK_toprightsummation             0x08b5
#define XK_botrightsummation             0x08b6
#define XK_rightmiddlesummation          0x08b7
#define XK_lessthanequal                 0x08bc  /* U+2264 LESS-THAN OR EQUAL TO */
#define XK_notequal                      0x08bd  /* U+2260 NOT EQUAL TO */
#define XK_greaterthanequal              0x08be  /* U+2265 GREATER-THAN OR EQUAL TO */
#define XK_integral                      0x08bf  /* U+222B INTEGRAL */
#define XK_therefore                     0x08c0  /* U+2234 THEREFORE */
#define XK_variation                     0x08c1  /* U+221D PROPORTIONAL TO */
#define XK_infinity                      0x08c2  /* U+221E INFINITY */
#define XK_nabla                         0x08c5  /* U+2207 NABLA */
#define XK_approximate                   0x08c8  /* U+223C TILDE OPERATOR */
#define XK_similarequal                  0x08c9  /* U+2243 ASYMPTOTICALLY EQUAL TO */
#define XK_ifonlyif                      0x08cd  /* U+21D4 LEFT RIGHT DOUBLE ARROW */
#define XK_implies                       0x08ce  /* U+21D2 RIGHTWARDS DOUBLE ARROW */
#define XK_identical                     0x08cf  /* U+2261 IDENTICAL TO */
#define XK_radical                       0x08d6  /* U+221A SQUARE ROOT */
#define XK_includedin                    0x08da  /* U+2282 SUBSET OF */
#define XK_includes                      0x08db  /* U+2283 SUPERSET OF */
#define XK_intersection                  0x08dc  /* U+2229 INTERSECTION */
#define XK_union                         0x08dd  /* U+222A UNION */
#define XK_logicaland                    0x08de  /* U+2227 LOGICAL AND */
#define XK_logicalor                     0x08df  /* U+2228 LOGICAL OR */
#define XK_partialderivative             0x08ef  /* U+2202 PARTIAL DIFFERENTIAL */
#define XK_function                      0x08f6  /* U+0192 LATIN SMALL LETTER F WITH HOOK */
#define XK_leftarrow                     0x08fb  /* U+2190 LEFTWARDS ARROW */
#define XK_uparrow                       0x08fc  /* U+2191 UPWARDS ARROW */
#define XK_rightarrow                    0x08fd  /* U+2192 RIGHTWARDS ARROW */
#define XK_downarrow                     0x08fe  /* U+2193 DOWNWARDS ARROW */
#endif /* XK_TECHNICAL */

/*
 * Special
 * (from the DEC VT100 Special Graphics Character Set)
 * Byte 3 = 9
 */

#ifdef XK_SPECIAL
#define XK_blank                         0x09df
#define XK_soliddiamond                  0x09e0  /* U+25C6 BLACK DIAMOND */
#define XK_checkerboard                  0x09e1  /* U+2592 MEDIUM SHADE */
#define XK_ht                            0x09e2  /* U+2409 SYMBOL FOR HORIZONTAL TABULATION */
#define XK_ff                            0x09e3  /* U+240C SYMBOL FOR FORM FEED */
#define XK_cr                            0x09e4  /* U+240D SYMBOL FOR CARRIAGE RETURN */
#define XK_lf                            0x09e5  /* U+240A SYMBOL FOR LINE FEED */
#define XK_nl                            0x09e8  /* U+2424 SYMBOL FOR NEWLINE */
#define XK_vt                            0x09e9  /* U+240B SYMBOL FOR VERTICAL TABULATION */
#define XK_lowrightcorner                0x09ea  /* U+2518 BOX DRAWINGS LIGHT UP AND LEFT */
#define XK_uprightcorner                 0x09eb  /* U+2510 BOX DRAWINGS LIGHT DOWN AND LEFT */
#define XK_upleftcorner                  0x09ec  /* U+250C BOX DRAWINGS LIGHT DOWN AND RIGHT */
#define XK_lowleftcorner                 0x09ed  /* U+2514 BOX DRAWINGS LIGHT UP AND RIGHT */
#define XK_crossinglines                 0x09ee  /* U+253C BOX DRAWINGS LIGHT VERTICAL AND HORIZONTAL */
#define XK_horizlinescan1                0x09ef  /* U+23BA HORIZONTAL SCAN LINE-1 */
#define XK_horizlinescan3                0x09f0  /* U+23BB HORIZONTAL SCAN LINE-3 */
#define XK_horizlinescan5                0x09f1  /* U+2500 BOX DRAWINGS LIGHT HORIZONTAL */
#define XK_horizlinescan7                0x09f2  /* U+23BC HORIZONTAL SCAN LINE-7 */
#define XK_horizlinescan9                0x09f3  /* U+23BD HORIZONTAL SCAN LINE-9 */
#define XK_leftt                         0x09f4  /* U+251C BOX DRAWINGS LIGHT VERTICAL AND RIGHT */
#define XK_rightt                        0x09f5  /* U+2524 BOX DRAWINGS LIGHT VERTICAL AND LEFT */
#define XK_bott                          0x09f6  /* U+2534 BOX DRAWINGS LIGHT UP AND HORIZONTAL */
#define XK_topt                          0x09f7  /* U+252C BOX DRAWINGS LIGHT DOWN AND HORIZONTAL */
#define XK_vertbar                       0x09f8  /* U+2502 BOX DRAWINGS LIGHT VERTICAL */
#endif /* XK_SPECIAL */

/*
 * Publishing
 * (these are probably from a long forgotten DEC Publishing
 * font that once shipped with DECwrite)
 * Byte 3 = 0x0a
 */

#ifdef XK_PUBLISHING
#define XK_emspace                       0x0aa1  /* U+2003 EM SPACE */
#define XK_enspace                       0x0aa2  /* U+2002 EN SPACE */
#define XK_em3space                      0x0aa3  /* U+2004 THREE-PER-EM SPACE */
#define XK_em4space                      0x0aa4  /* U+2005 FOUR-PER-EM SPACE */
#define XK_digitspace                    0x0aa5  /* U+2007 FIGURE SPACE */
#define XK_punctspace                    0x0aa6  /* U+2008 PUNCTUATION SPACE */
#define XK_thinspace                     0x0aa7  /* U+2009 THIN SPACE */
#define XK_hairspace                     0x0aa8  /* U+200A HAIR SPACE */
#define XK_emdash                        0x0aa9  /* U+2014 EM DASH */
#define XK_endash                        0x0aaa  /* U+2013 EN DASH */
#define XK_signifblank                   0x0aac  /*(U+2423 OPEN BOX)*/
#define XK_ellipsis                      0x0aae  /* U+2026 HORIZONTAL ELLIPSIS */
#define XK_doubbaselinedot               0x0aaf  /* U+2025 TWO DOT LEADER */
#define XK_onethird                      0x0ab0  /* U+2153 VULGAR FRACTION ONE THIRD */
#define XK_twothirds                     0x0ab1  /* U+2154 VULGAR FRACTION TWO THIRDS */
#define XK_onefifth                      0x0ab2  /* U+2155 VULGAR FRACTION ONE FIFTH */
#define XK_twofifths                     0x0ab3  /* U+2156 VULGAR FRACTION TWO FIFTHS */
#define XK_threefifths                   0x0ab4  /* U+2157 VULGAR FRACTION THREE FIFTHS */
#define XK_fourfifths                    0x0ab5  /* U+2158 VULGAR FRACTION FOUR FIFTHS */
#define XK_onesixth                      0x0ab6  /* U+2159 VULGAR FRACTION ONE SIXTH */
#define XK_fivesixths                    0x0ab7  /* U+215A VULGAR FRACTION FIVE SIXTHS */
#define XK_careof                        0x0ab8  /* U+2105 CARE OF */
#define XK_figdash                       0x0abb  /* U+2012 FIGURE DASH */
#define XK_leftanglebracket              0x0abc  /*(U+27E8 MATHEMATICAL LEFT ANGLE BRACKET)*/
#define XK_decimalpoint                  0x0abd  /*(U+002E FULL STOP)*/
#define XK_rightanglebracket             0x0abe  /*(U+27E9 MATHEMATICAL RIGHT ANGLE BRACKET)*/
#define XK_marker                        0x0abf
#define XK_oneeighth                     0x0ac3  /* U+215B VULGAR FRACTION ONE EIGHTH */
#define XK_threeeighths                  0x0ac4  /* U+215C VULGAR FRACTION THREE EIGHTHS */
#define XK_fiveeighths                   0x0ac5  /* U+215D VULGAR FRACTION FIVE EIGHTHS */
#define XK_seveneighths                  0x0ac6  /* U+215E VULGAR FRACTION SEVEN EIGHTHS */
#define XK_trademark                     0x0ac9  /* U+2122 TRADE MARK SIGN */
#define XK_signaturemark                 0x0aca  /*(U+2613 SALTIRE)*/
#define XK_trademarkincircle             0x0acb
#define XK_leftopentriangle              0x0acc  /*(U+25C1 WHITE LEFT-POINTING TRIANGLE)*/
#define XK_rightopentriangle             0x0acd  /*(U+25B7 WHITE RIGHT-POINTING TRIANGLE)*/
#define XK_emopencircle                  0x0ace  /*(U+25CB WHITE CIRCLE)*/
#define XK_emopenrectangle               0x0acf  /*(U+25AF WHITE VERTICAL RECTANGLE)*/
#define XK_leftsinglequotemark           0x0ad0  /* U+2018 LEFT SINGLE QUOTATION MARK */
#define XK_rightsinglequotemark          0x0ad1  /* U+2019 RIGHT SINGLE QUOTATION MARK */
#define XK_leftdoublequotemark           0x0ad2  /* U+201C LEFT DOUBLE QUOTATION MARK */
#define XK_rightdoublequotemark          0x0ad3  /* U+201D RIGHT DOUBLE QUOTATION MARK */
#define XK_prescription                  0x0ad4  /* U+211E PRESCRIPTION TAKE */
#define XK_permille                      0x0ad5  /* U+2030 PER MILLE SIGN */
#define XK_minutes                       0x0ad6  /* U+2032 PRIME */
#define XK_seconds                       0x0ad7  /* U+2033 DOUBLE PRIME */
#define XK_latincross                    0x0ad9  /* U+271D LATIN CROSS */
#define XK_hexagram                      0x0ada
#define XK_filledrectbullet              0x0adb  /*(U+25AC BLACK RECTANGLE)*/
#define XK_filledlefttribullet           0x0adc  /*(U+25C0 BLACK LEFT-POINTING TRIANGLE)*/
#define XK_filledrighttribullet          0x0add  /*(U+25B6 BLACK RIGHT-POINTING TRIANGLE)*/
#define XK_emfilledcircle                0x0ade  /*(U+25CF BLACK CIRCLE)*/
#define XK_emfilledrect                  0x0adf  /*(U+25AE BLACK VERTICAL RECTANGLE)*/
#define XK_enopencircbullet              0x0ae0  /*(U+25E6 WHITE BULLET)*/
#define XK_enopensquarebullet            0x0ae1  /*(U+25AB WHITE SMALL SQUARE)*/
#define XK_openrectbullet                0x0ae2  /*(U+25AD WHITE RECTANGLE)*/
#define XK_opentribulletup               0x0ae3  /*(U+25B3 WHITE UP-POINTING TRIANGLE)*/
#define XK_opentribulletdown             0x0ae4  /*(U+25BD WHITE DOWN-POINTING TRIANGLE)*/
#define XK_openstar                      0x0ae5  /*(U+2606 WHITE STAR)*/
#define XK_enfilledcircbullet            0x0ae6  /*(U+2022 BULLET)*/
#define XK_enfilledsqbullet              0x0ae7  /*(U+25AA BLACK SMALL SQUARE)*/
#define XK_filledtribulletup             0x0ae8  /*(U+25B2 BLACK UP-POINTING TRIANGLE)*/
#define XK_filledtribulletdown           0x0ae9  /*(U+25BC BLACK DOWN-POINTING TRIANGLE)*/
#define XK_leftpointer                   0x0aea  /*(U+261C WHITE LEFT POINTING INDEX)*/
#define XK_rightpointer                  0x0aeb  /*(U+261E WHITE RIGHT POINTING INDEX)*/
#define XK_club                          0x0aec  /* U+2663 BLACK CLUB SUIT */
#define XK_diamond                       0x0aed  /* U+2666 BLACK DIAMOND SUIT */
#define XK_heart                         0x0aee  /* U+2665 BLACK HEART SUIT */
#define XK_maltesecross                  0x0af0  /* U+2720 MALTESE CROSS */
#define XK_dagger                        0x0af1  /* U+2020 DAGGER */
#define XK_doubledagger                  0x0af2  /* U+2021 DOUBLE DAGGER */
#define XK_checkmark                     0x0af3  /* U+2713 CHECK MARK */
#define XK_ballotcross                   0x0af4  /* U+2717 BALLOT X */
#define XK_musicalsharp                  0x0af5  /* U+266F MUSIC SHARP SIGN */
#define XK_musicalflat                   0x0af6  /* U+266D MUSIC FLAT SIGN */
#define XK_malesymbol                    0x0af7  /* U+2642 MALE SIGN */
#define XK_femalesymbol                  0x0af8  /* U+2640 FEMALE SIGN */
#define XK_telephone                     0x0af9  /* U+260E BLACK TELEPHONE */
#define XK_telephonerecorder             0x0afa  /* U+2315 TELEPHONE RECORDER */
#define XK_phonographcopyright           0x0afb  /* U+2117 SOUND RECORDING COPYRIGHT */
#define XK_caret                         0x0afc  /* U+2038 CARET */
#define XK_singlelowquotemark            0x0afd  /* U+201A SINGLE LOW-9 QUOTATION MARK */
#define XK_doublelowquotemark            0x0afe  /* U+201E DOUBLE LOW-9 QUOTATION MARK */
#define XK_cursor                        0x0aff
#endif /* XK_PUBLISHING */

/*
 * APL
 * Byte 3 = 0x0b
 */

#ifdef XK_APL
#define XK_leftcaret                     0x0ba3  /*(U+003C LESS-THAN SIGN)*/
#define XK_rightcaret                    0x0ba6  /*(U+003E GREATER-THAN SIGN)*/
#define XK_downcaret                     0x0ba8  /*(U+2228 LOGICAL OR)*/
#define XK_upcaret                       0x0ba9  /*(U+2227 LOGICAL AND)*/
#define XK_overbar                       0x0bc0  /*(U+00AF MACRON)*/
#define XK_downtack                      0x0bc2  /* U+22A4 DOWN TACK */
#define XK_upshoe                        0x0bc3  /*(U+2229 INTERSECTION)*/
#define XK_downstile                     0x0bc4  /* U+230A LEFT FLOOR */
#define XK_underbar                      0x0bc6  /*(U+005F LOW LINE)*/
#define XK_jot                           0x0bca  /* U+2218 RING OPERATOR */
#define XK_quad                          0x0bcc  /* U+2395 APL FUNCTIONAL SYMBOL QUAD */
#define XK_uptack                        0x0bce  /* U+22A5 UP TACK */
#define XK_circle                        0x0bcf  /* U+25CB WHITE CIRCLE */
#define XK_upstile                       0x0bd3  /* U+2308 LEFT CEILING */
#define XK_downshoe                      0x0bd6  /*(U+222A UNION)*/
#define XK_rightshoe                     0x0bd8  /*(U+2283 SUPERSET OF)*/
#define XK_leftshoe                      0x0bda  /*(U+2282 SUBSET OF)*/
#define XK_lefttack                      0x0bdc  /* U+22A3 LEFT TACK */
#define XK_righttack                     0x0bfc  /* U+22A2 RIGHT TACK */
#endif /* XK_APL */

/*
 * Hebrew
 * Byte 3 = 0x0c
 */

#ifdef XK_HEBREW
#define XK_hebrew_doublelowline          0x0cdf  /* U+2017 DOUBLE LOW LINE */
#define XK_hebrew_aleph                  0x0ce0  /* U+05D0 HEBREW LETTER ALEF */
#define XK_hebrew_bet                    0x0ce1  /* U+05D1 HEBREW LETTER BET */
#define XK_hebrew_beth                   0x0ce1  /* deprecated */
#define XK_hebrew_gimel                  0x0ce2  /* U+05D2 HEBREW LETTER GIMEL */
#define XK_hebrew_gimmel                 0x0ce2  /* deprecated */
#define XK_hebrew_dalet                  0x0ce3  /* U+05D3 HEBREW LETTER DALET */
#define XK_hebrew_daleth                 0x0ce3  /* deprecated */
#define XK_hebrew_he                     0x0ce4  /* U+05D4 HEBREW LETTER HE */
#define XK_hebrew_waw                    0x0ce5  /* U+05D5 HEBREW LETTER VAV */
#define XK_hebrew_zain                   0x0ce6  /* U+05D6 HEBREW LETTER ZAYIN */
#define XK_hebrew_zayin                  0x0ce6  /* deprecated */
#define XK_hebrew_chet                   0x0ce7  /* U+05D7 HEBREW LETTER HET */
#define XK_hebrew_het                    0x0ce7  /* deprecated */
#define XK_hebrew_tet                    0x0ce8  /* U+05D8 HEBREW LETTER TET */
#define XK_hebrew_teth                   0x0ce8  /* deprecated */
#define XK_hebrew_yod                    0x0ce9  /* U+05D9 HEBREW LETTER YOD */
#define XK_hebrew_finalkaph              0x0cea  /* U+05DA HEBREW LETTER FINAL KAF */
#define XK_hebrew_kaph                   0x0ceb  /* U+05DB HEBREW LETTER KAF */
#define XK_hebrew_lamed                  0x0cec  /* U+05DC HEBREW LETTER LAMED */
#define XK_hebrew_finalmem               0x0ced  /* U+05DD HEBREW LETTER FINAL MEM */
#define XK_hebrew_mem                    0x0cee  /* U+05DE HEBREW LETTER MEM */
#define XK_hebrew_finalnun               0x0cef  /* U+05DF HEBREW LETTER FINAL NUN */
#define XK_hebrew_nun                    0x0cf0  /* U+05E0 HEBREW LETTER NUN */
#define XK_hebrew_samech                 0x0cf1  /* U+05E1 HEBREW LETTER SAMEKH */
#define XK_hebrew_samekh                 0x0cf1  /* deprecated */
#define XK_hebrew_ayin                   0x0cf2  /* U+05E2 HEBREW LETTER AYIN */
#define XK_hebrew_finalpe                0x0cf3  /* U+05E3 HEBREW LETTER FINAL PE */
#define XK_hebrew_pe                     0x0cf4  /* U+05E4 HEBREW LETTER PE */
#define XK_hebrew_finalzade              0x0cf5  /* U+05E5 HEBREW LETTER FINAL TSADI */
#define XK_hebrew_finalzadi              0x0cf5  /* deprecated */
#define XK_hebrew_zade                   0x0cf6  /* U+05E6 HEBREW LETTER TSADI */
#define XK_hebrew_zadi                   0x0cf6  /* deprecated */
#define XK_hebrew_qoph                   0x0cf7  /* U+05E7 HEBREW LETTER QOF */
#define XK_hebrew_kuf                    0x0cf7  /* deprecated */
#define XK_hebrew_resh                   0x0cf8  /* U+05E8 HEBREW LETTER RESH */
#define XK_hebrew_shin                   0x0cf9  /* U+05E9 HEBREW LETTER SHIN */
#define XK_hebrew_taw                    0x0cfa  /* U+05EA HEBREW LETTER TAV */
#define XK_hebrew_taf                    0x0cfa  /* deprecated */
#define XK_Hebrew_switch                 0xff7e  /* Alias for mode_switch */
#endif /* XK_HEBREW */

/*
 * Thai
 * Byte 3 = 0x0d
 */

#ifdef XK_THAI
#define XK_Thai_kokai                    0x0da1  /* U+0E01 THAI CHARACTER KO KAI */
#define XK_Thai_khokhai                  0x0da2  /* U+0E02 THAI CHARACTER KHO KHAI */
#define XK_Thai_khokhuat                 0x0da3  /* U+0E03 THAI CHARACTER KHO KHUAT */
#define XK_Thai_khokhwai                 0x0da4  /* U+0E04 THAI CHARACTER KHO KHWAI */
#define XK_Thai_khokhon                  0x0da5  /* U+0E05 THAI CHARACTER KHO KHON */
#define XK_Thai_khorakhang               0x0da6  /* U+0E06 THAI CHARACTER KHO RAKHANG */
#define XK_Thai_ngongu                   0x0da7  /* U+0E07 THAI CHARACTER NGO NGU */
#define XK_Thai_chochan                  0x0da8  /* U+0E08 THAI CHARACTER CHO CHAN */
#define XK_Thai_choching                 0x0da9  /* U+0E09 THAI CHARACTER CHO CHING */
#define XK_Thai_chochang                 0x0daa  /* U+0E0A THAI CHARACTER CHO CHANG */
#define XK_Thai_soso                     0x0dab  /* U+0E0B THAI CHARACTER SO SO */
#define XK_Thai_chochoe                  0x0dac  /* U+0E0C THAI CHARACTER CHO CHOE */
#define XK_Thai_yoying                   0x0dad  /* U+0E0D THAI CHARACTER YO YING */
#define XK_Thai_dochada                  0x0dae  /* U+0E0E THAI CHARACTER DO CHADA */
#define XK_Thai_topatak                  0x0daf  /* U+0E0F THAI CHARACTER TO PATAK */
#define XK_Thai_thothan                  0x0db0  /* U+0E10 THAI CHARACTER THO THAN */
#define XK_Thai_thonangmontho            0x0db1  /* U+0E11 THAI CHARACTER THO NANGMONTHO */
#define XK_Thai_thophuthao               0x0db2  /* U+0E12 THAI CHARACTER THO PHUTHAO */
#define XK_Thai_nonen                    0x0db3  /* U+0E13 THAI CHARACTER NO NEN */
#define XK_Thai_dodek                    0x0db4  /* U+0E14 THAI CHARACTER DO DEK */
#define XK_Thai_totao                    0x0db5  /* U+0E15 THAI CHARACTER TO TAO */
#define XK_Thai_thothung                 0x0db6  /* U+0E16 THAI CHARACTER THO THUNG */
#define XK_Thai_thothahan                0x0db7  /* U+0E17 THAI CHARACTER THO THAHAN */
#define XK_Thai_thothong                 0x0db8  /* U+0E18 THAI CHARACTER THO THONG */
#define XK_Thai_nonu                     0x0db9  /* U+0E19 THAI CHARACTER NO NU */
#define XK_Thai_bobaimai                 0x0dba  /* U+0E1A THAI CHARACTER BO BAIMAI */
#define XK_Thai_popla                    0x0dbb  /* U+0E1B THAI CHARACTER PO PLA */
#define XK_Thai_phophung                 0x0dbc  /* U+0E1C THAI CHARACTER PHO PHUNG */
#define XK_Thai_fofa                     0x0dbd  /* U+0E1D THAI CHARACTER FO FA */
#define XK_Thai_phophan                  0x0dbe  /* U+0E1E THAI CHARACTER PHO PHAN */
#define XK_Thai_fofan                    0x0dbf  /* U+0E1F THAI CHARACTER FO FAN */
#define XK_Thai_phosamphao               0x0dc0  /* U+0E20 THAI CHARACTER PHO SAMPHAO */
#define XK_Thai_moma                     0x0dc1  /* U+0E21 THAI CHARACTER MO MA */
#define XK_Thai_yoyak                    0x0dc2  /* U+0E22 THAI CHARACTER YO YAK */
#define XK_Thai_rorua                    0x0dc3  /* U+0E23 THAI CHARACTER RO RUA */
#define XK_Thai_ru                       0x0dc4  /* U+0E24 THAI CHARACTER RU */
#define XK_Thai_loling                   0x0dc5  /* U+0E25 THAI CHARACTER LO LING */
#define XK_Thai_lu                       0x0dc6  /* U+0E26 THAI CHARACTER LU */
#define XK_Thai_wowaen                   0x0dc7  /* U+0E27 THAI CHARACTER WO WAEN */
#define XK_Thai_sosala                   0x0dc8  /* U+0E28 THAI CHARACTER SO SALA */
#define XK_Thai_sorusi                   0x0dc9  /* U+0E29 THAI CHARACTER SO RUSI */
#define XK_Thai_sosua                    0x0dca  /* U+0E2A THAI CHARACTER SO SUA */
#define XK_Thai_hohip                    0x0dcb  /* U+0E2B THAI CHARACTER HO HIP */
#define XK_Thai_lochula                  0x0dcc  /* U+0E2C THAI CHARACTER LO CHULA */
#define XK_Thai_oang                     0x0dcd  /* U+0E2D THAI CHARACTER O ANG */
#define XK_Thai_honokhuk                 0x0dce  /* U+0E2E THAI CHARACTER HO NOKHUK */
#define XK_Thai_paiyannoi                0x0dcf  /* U+0E2F THAI CHARACTER PAIYANNOI */
#define XK_Thai_saraa                    0x0dd0  /* U+0E30 THAI CHARACTER SARA A */
#define XK_Thai_maihanakat               0x0dd1  /* U+0E31 THAI CHARACTER MAI HAN-AKAT */
#define XK_Thai_saraaa                   0x0dd2  /* U+0E32 THAI CHARACTER SARA AA */
#define XK_Thai_saraam                   0x0dd3  /* U+0E33 THAI CHARACTER SARA AM */
#define XK_Thai_sarai                    0x0dd4  /* U+0E34 THAI CHARACTER SARA I */
#define XK_Thai_saraii                   0x0dd5  /* U+0E35 THAI CHARACTER SARA II */
#define XK_Thai_saraue                   0x0dd6  /* U+0E36 THAI CHARACTER SARA UE */
#define XK_Thai_sarauee                  0x0dd7  /* U+0E37 THAI CHARACTER SARA UEE */
#define XK_Thai_sarau                    0x0dd8  /* U+0E38 THAI CHARACTER SARA U */
#define XK_Thai_sarauu                   0x0dd9  /* U+0E39 THAI CHARACTER SARA UU */
#define XK_Thai_phinthu                  0x0dda  /* U+0E3A THAI CHARACTER PHINTHU */
#define XK_Thai_maihanakat_maitho        0x0dde
#define XK_Thai_baht                     0x0ddf  /* U+0E3F THAI CURRENCY SYMBOL BAHT */
#define XK_Thai_sarae                    0x0de0  /* U+0E40 THAI CHARACTER SARA E */
#define XK_Thai_saraae                   0x0de1  /* U+0E41 THAI CHARACTER SARA AE */
#define XK_Thai_sarao                    0x0de2  /* U+0E42 THAI CHARACTER SARA O */
#define XK_Thai_saraaimaimuan            0x0de3  /* U+0E43 THAI CHARACTER SARA AI MAIMUAN */
#define XK_Thai_saraaimaimalai           0x0de4  /* U+0E44 THAI CHARACTER SARA AI MAIMALAI */
#define XK_Thai_lakkhangyao              0x0de5  /* U+0E45 THAI CHARACTER LAKKHANGYAO */
#define XK_Thai_maiyamok                 0x0de6  /* U+0E46 THAI CHARACTER MAIYAMOK */
#define XK_Thai_maitaikhu                0x0de7  /* U+0E47 THAI CHARACTER MAITAIKHU */
#define XK_Thai_maiek                    0x0de8  /* U+0E48 THAI CHARACTER MAI EK */
#define XK_Thai_maitho                   0x0de9  /* U+0E49 THAI CHARACTER MAI THO */
#define XK_Thai_maitri                   0x0dea  /* U+0E4A THAI CHARACTER MAI TRI */
#define XK_Thai_maichattawa              0x0deb  /* U+0E4B THAI CHARACTER MAI CHATTAWA */
#define XK_Thai_thanthakhat              0x0dec  /* U+0E4C THAI CHARACTER THANTHAKHAT */
#define XK_Thai_nikhahit                 0x0ded  /* U+0E4D THAI CHARACTER NIKHAHIT */
#define XK_Thai_leksun                   0x0df0  /* U+0E50 THAI DIGIT ZERO */
#define XK_Thai_leknung                  0x0df1  /* U+0E51 THAI DIGIT ONE */
#define XK_Thai_leksong                  0x0df2  /* U+0E52 THAI DIGIT TWO */
#define XK_Thai_leksam                   0x0df3  /* U+0E53 THAI DIGIT THREE */
#define XK_Thai_leksi                    0x0df4  /* U+0E54 THAI DIGIT FOUR */
#define XK_Thai_lekha                    0x0df5  /* U+0E55 THAI DIGIT FIVE */
#define XK_Thai_lekhok                   0x0df6  /* U+0E56 THAI DIGIT SIX */
#define XK_Thai_lekchet                  0x0df7  /* U+0E57 THAI DIGIT SEVEN */
#define XK_Thai_lekpaet                  0x0df8  /* U+0E58 THAI DIGIT EIGHT */
#define XK_Thai_lekkao                   0x0df9  /* U+0E59 THAI DIGIT NINE */
#endif /* XK_THAI */

/*
 * Korean
 * Byte 3 = 0x0e
 */

#ifdef XK_KOREAN

#define XK_Hangul                        0xff31  /* Hangul start/stop(toggle) */
#define XK_Hangul_Start                  0xff32  /* Hangul start */
#define XK_Hangul_End                    0xff33  /* Hangul end, English start */
#define XK_Hangul_Hanja                  0xff34  /* Start Hangul->Hanja Conversion */
#define XK_Hangul_Jamo                   0xff35  /* Hangul Jamo mode */
#define XK_Hangul_Romaja                 0xff36  /* Hangul Romaja mode */
#define XK_Hangul_Codeinput              0xff37  /* Hangul code input mode */
#define XK_Hangul_Jeonja                 0xff38  /* Jeonja mode */
#define XK_Hangul_Banja                  0xff39  /* Banja mode */
#define XK_Hangul_PreHanja               0xff3a  /* Pre Hanja conversion */
#define XK_Hangul_PostHanja              0xff3b  /* Post Hanja conversion */
#define XK_Hangul_SingleCandidate        0xff3c  /* Single candidate */
#define XK_Hangul_MultipleCandidate      0xff3d  /* Multiple candidate */
#define XK_Hangul_PreviousCandidate      0xff3e  /* Previous candidate */
#define XK_Hangul_Special                0xff3f  /* Special symbols */
#define XK_Hangul_switch                 0xff7e  /* Alias for mode_switch */

/* Hangul Consonant Characters */
#define XK_Hangul_Kiyeog                 0x0ea1
#define XK_Hangul_SsangKiyeog            0x0ea2
#define XK_Hangul_KiyeogSios             0x0ea3
#define XK_Hangul_Nieun                  0x0ea4
#define XK_Hangul_NieunJieuj             0x0ea5
#define XK_Hangul_NieunHieuh             0x0ea6
#define XK_Hangul_Dikeud                 0x0ea7
#define XK_Hangul_SsangDikeud            0x0ea8
#define XK_Hangul_Rieul                  0x0ea9
#define XK_Hangul_RieulKiyeog            0x0eaa
#define XK_Hangul_RieulMieum             0x0eab
#define XK_Hangul_RieulPieub             0x0eac
#define XK_Hangul_RieulSios              0x0ead
#define XK_Hangul_RieulTieut             0x0eae
#define XK_Hangul_RieulPhieuf            0x0eaf
#define XK_Hangul_RieulHieuh             0x0eb0
#define XK_Hangul_Mieum                  0x0eb1
#define XK_Hangul_Pieub                  0x0eb2
#define XK_Hangul_SsangPieub             0x0eb3
#define XK_Hangul_PieubSios              0x0eb4
#define XK_Hangul_Sios                   0x0eb5
#define XK_Hangul_SsangSios              0x0eb6
#define XK_Hangul_Ieung                  0x0eb7
#define XK_Hangul_Jieuj                  0x0eb8
#define XK_Hangul_SsangJieuj             0x0eb9
#define XK_Hangul_Cieuc                  0x0eba
#define XK_Hangul_Khieuq                 0x0ebb
#define XK_Hangul_Tieut                  0x0ebc
#define XK_Hangul_Phieuf                 0x0ebd
#define XK_Hangul_Hieuh                  0x0ebe

/* Hangul Vowel Characters */
#define XK_Hangul_A                      0x0ebf
#define XK_Hangul_AE                     0x0ec0
#define XK_Hangul_YA                     0x0ec1
#define XK_Hangul_YAE                    0x0ec2
#define XK_Hangul_EO                     0x0ec3
#define XK_Hangul_E                      0x0ec4
#define XK_Hangul_YEO                    0x0ec5
#define XK_Hangul_YE                     0x0ec6
#define XK_Hangul_O                      0x0ec7
#define XK_Hangul_WA                     0x0ec8
#define XK_Hangul_WAE                    0x0ec9
#define XK_Hangul_OE                     0x0eca
#define XK_Hangul_YO                     0x0ecb
#define XK_Hangul_U                      0x0ecc
#define XK_Hangul_WEO                    0x0ecd
#define XK_Hangul_WE                     0x0ece
#define XK_Hangul_WI                     0x0ecf
#define XK_Hangul_YU                     0x0ed0
#define XK_Hangul_EU                     0x0ed1
#define XK_Hangul_YI                     0x0ed2
#define XK_Hangul_I                      0x0ed3

/* Hangul syllable-final (JongSeong) Characters */
#define XK_Hangul_J_Kiyeog               0x0ed4
#define XK_Hangul_J_SsangKiyeog          0x0ed5
#define XK_Hangul_J_KiyeogSios           0x0ed6
#define XK_Hangul_J_Nieun                0x0ed7
#define XK_Hangul_J_NieunJieuj           0x0ed8
#define XK_Hangul_J_NieunHieuh           0x0ed9
#define XK_Hangul_J_Dikeud               0x0eda
#define XK_Hangul_J_Rieul                0x0edb
#define XK_Hangul_J_RieulKiyeog          0x0edc
#define XK_Hangul_J_RieulMieum           0x0edd
#define XK_Hangul_J_RieulPieub           0x0ede
#define XK_Hangul_J_RieulSios            0x0edf
#define XK_Hangul_J_RieulTieut           0x0ee0
#define XK_Hangul_J_RieulPhieuf          0x0ee1
#define XK_Hangul_J_RieulHieuh           0x0ee2
#define XK_Hangul_J_Mieum                0x0ee3
#define XK_Hangul_J_Pieub                0x0ee4
#define XK_Hangul_J_PieubSios            0x0ee5
#define XK_Hangul_J_Sios                 0x0ee6
#define XK_Hangul_J_SsangSios            0x0ee7
#define XK_Hangul_J_Ieung                0x0ee8
#define XK_Hangul_J_Jieuj                0x0ee9
#define XK_Hangul_J_Cieuc                0x0eea
#define XK_Hangul_J_Khieuq               0x0eeb
#define XK_Hangul_J_Tieut                0x0eec
#define XK_Hangul_J_Phieuf               0x0eed
#define XK_Hangul_J_Hieuh                0x0eee

/* Ancient Hangul Consonant Characters */
#define XK_Hangul_RieulYeorinHieuh       0x0eef
#define XK_Hangul_SunkyeongeumMieum      0x0ef0
#define XK_Hangul_SunkyeongeumPieub      0x0ef1
#define XK_Hangul_PanSios                0x0ef2
#define XK_Hangul_KkogjiDalrinIeung      0x0ef3
#define XK_Hangul_SunkyeongeumPhieuf     0x0ef4
#define XK_Hangul_YeorinHieuh            0x0ef5

/* Ancient Hangul Vowel Characters */
#define XK_Hangul_AraeA                  0x0ef6
#define XK_Hangul_AraeAE                 0x0ef7

/* Ancient Hangul syllable-final (JongSeong) Characters */
#define XK_Hangul_J_PanSios              0x0ef8
#define XK_Hangul_J_KkogjiDalrinIeung    0x0ef9
#define XK_Hangul_J_YeorinHieuh          0x0efa

/* Korean currency symbol */
#define XK_Korean_Won                    0x0eff  /*(U+20A9 WON SIGN)*/

#endif /* XK_KOREAN */

/*
 * Armenian
 */

#ifdef XK_ARMENIAN
#define XK_Armenian_ligature_ew       0x1000587  /* U+0587 ARMENIAN SMALL LIGATURE ECH YIWN */
#define XK_Armenian_full_stop         0x1000589  /* U+0589 ARMENIAN FULL STOP */
#define XK_Armenian_verjaket          0x1000589  /* U+0589 ARMENIAN FULL STOP */
#define XK_Armenian_separation_mark   0x100055d  /* U+055D ARMENIAN COMMA */
#define XK_Armenian_but               0x100055d  /* U+055D ARMENIAN COMMA */
#define XK_Armenian_hyphen            0x100058a  /* U+058A ARMENIAN HYPHEN */
#define XK_Armenian_yentamna          0x100058a  /* U+058A ARMENIAN HYPHEN */
#define XK_Armenian_exclam            0x100055c  /* U+055C ARMENIAN EXCLAMATION MARK */
#define XK_Armenian_amanak            0x100055c  /* U+055C ARMENIAN EXCLAMATION MARK */
#define XK_Armenian_accent            0x100055b  /* U+055B ARMENIAN EMPHASIS MARK */
#define XK_Armenian_shesht            0x100055b  /* U+055B ARMENIAN EMPHASIS MARK */
#define XK_Armenian_question          0x100055e  /* U+055E ARMENIAN QUESTION MARK */
#define XK_Armenian_paruyk            0x100055e  /* U+055E ARMENIAN QUESTION MARK */
#define XK_Armenian_AYB               0x1000531  /* U+0531 ARMENIAN CAPITAL LETTER AYB */
#define XK_Armenian_ayb               0x1000561  /* U+0561 ARMENIAN SMALL LETTER AYB */
#define XK_Armenian_BEN               0x1000532  /* U+0532 ARMENIAN CAPITAL LETTER BEN */
#define XK_Armenian_ben               0x1000562  /* U+0562 ARMENIAN SMALL LETTER BEN */
#define XK_Armenian_GIM               0x1000533  /* U+0533 ARMENIAN CAPITAL LETTER GIM */
#define XK_Armenian_gim               0x1000563  /* U+0563 ARMENIAN SMALL LETTER GIM */
#define XK_Armenian_DA                0x1000534  /* U+0534 ARMENIAN CAPITAL LETTER DA */
#define XK_Armenian_da                0x1000564  /* U+0564 ARMENIAN SMALL LETTER DA */
#define XK_Armenian_YECH              0x1000535  /* U+0535 ARMENIAN CAPITAL LETTER ECH */
#define XK_Armenian_yech              0x1000565  /* U+0565 ARMENIAN SMALL LETTER ECH */
#define XK_Armenian_ZA                0x1000536  /* U+0536 ARMENIAN CAPITAL LETTER ZA */
#define XK_Armenian_za                0x1000566  /* U+0566 ARMENIAN SMALL LETTER ZA */
#define XK_Armenian_E                 0x1000537  /* U+0537 ARMENIAN CAPITAL LETTER EH */
#define XK_Armenian_e                 0x1000567  /* U+0567 ARMENIAN SMALL LETTER EH */
#define XK_Armenian_AT                0x1000538  /* U+0538 ARMENIAN CAPITAL LETTER ET */
#define XK_Armenian_at                0x1000568  /* U+0568 ARMENIAN SMALL LETTER ET */
#define XK_Armenian_TO                0x1000539  /* U+0539 ARMENIAN CAPITAL LETTER TO */
#define XK_Armenian_to                0x1000569  /* U+0569 ARMENIAN SMALL LETTER TO */
#define XK_Armenian_ZHE               0x100053a  /* U+053A ARMENIAN CAPITAL LETTER ZHE */
#define XK_Armenian_zhe               0x100056a  /* U+056A ARMENIAN SMALL LETTER ZHE */
#define XK_Armenian_INI               0x100053b  /* U+053B ARMENIAN CAPITAL LETTER INI */
#define XK_Armenian_ini               0x100056b  /* U+056B ARMENIAN SMALL LETTER INI */
#define XK_Armenian_LYUN              0x100053c  /* U+053C ARMENIAN CAPITAL LETTER LIWN */
#define XK_Armenian_lyun              0x100056c  /* U+056C ARMENIAN SMALL LETTER LIWN */
#define XK_Armenian_KHE               0x100053d  /* U+053D ARMENIAN CAPITAL LETTER XEH */
#define XK_Armenian_khe               0x100056d  /* U+056D ARMENIAN SMALL LETTER XEH */
#define XK_Armenian_TSA               0x100053e  /* U+053E ARMENIAN CAPITAL LETTER CA */
#define XK_Armenian_tsa               0x100056e  /* U+056E ARMENIAN SMALL LETTER CA */
#define XK_Armenian_KEN               0x100053f  /* U+053F ARMENIAN CAPITAL LETTER KEN */
#define XK_Armenian_ken               0x100056f  /* U+056F ARMENIAN SMALL LETTER KEN */
#define XK_Armenian_HO                0x1000540  /* U+0540 ARMENIAN CAPITAL LETTER HO */
#define XK_Armenian_ho                0x1000570  /* U+0570 ARMENIAN SMALL LETTER HO */
#define XK_Armenian_DZA               0x1000541  /* U+0541 ARMENIAN CAPITAL LETTER JA */
#define XK_Armenian_dza               0x1000571  /* U+0571 ARMENIAN SMALL LETTER JA */
#define XK_Armenian_GHAT              0x1000542  /* U+0542 ARMENIAN CAPITAL LETTER GHAD */
#define XK_Armenian_ghat              0x1000572  /* U+0572 ARMENIAN SMALL LETTER GHAD */
#define XK_Armenian_TCHE              0x1000543  /* U+0543 ARMENIAN CAPITAL LETTER CHEH */
#define XK_Armenian_tche              0x1000573  /* U+0573 ARMENIAN SMALL LETTER CHEH */
#define XK_Armenian_MEN               0x1000544  /* U+0544 ARMENIAN CAPITAL LETTER MEN */
#define XK_Armenian_men               0x1000574  /* U+0574 ARMENIAN SMALL LETTER MEN */
#define XK_Armenian_HI                0x1000545  /* U+0545 ARMENIAN CAPITAL LETTER YI */
#define XK_Armenian_hi                0x1000575  /* U+0575 ARMENIAN SMALL LETTER YI */
#define XK_Armenian_NU                0x1000546  /* U+0546 ARMENIAN CAPITAL LETTER NOW */
#define XK_Armenian_nu                0x1000576  /* U+0576 ARMENIAN SMALL LETTER NOW */
#define XK_Armenian_SHA               0x1000547  /* U+0547 ARMENIAN CAPITAL LETTER SHA */
#define XK_Armenian_sha               0x1000577  /* U+0577 ARMENIAN SMALL LETTER SHA */
#define XK_Armenian_VO                0x1000548  /* U+0548 ARMENIAN CAPITAL LETTER VO */
#define XK_Armenian_vo                0x1000578  /* U+0578 ARMENIAN SMALL LETTER VO */
#define XK_Armenian_CHA               0x1000549  /* U+0549 ARMENIAN CAPITAL LETTER CHA */
#define XK_Armenian_cha               0x1000579  /* U+0579 ARMENIAN SMALL LETTER CHA */
#define XK_Armenian_PE                0x100054a  /* U+054A ARMENIAN CAPITAL LETTER PEH */
#define XK_Armenian_pe                0x100057a  /* U+057A ARMENIAN SMALL LETTER PEH */
#define XK_Armenian_JE                0x100054b  /* U+054B ARMENIAN CAPITAL LETTER JHEH */
#define XK_Armenian_je                0x100057b  /* U+057B ARMENIAN SMALL LETTER JHEH */
#define XK_Armenian_RA                0x100054c  /* U+054C ARMENIAN CAPITAL LETTER RA */
#define XK_Armenian_ra                0x100057c  /* U+057C ARMENIAN SMALL LETTER RA */
#define XK_Armenian_SE                0x100054d  /* U+054D ARMENIAN CAPITAL LETTER SEH */
#define XK_Armenian_se                0x100057d  /* U+057D ARMENIAN SMALL LETTER SEH */
#define XK_Armenian_VEV               0x100054e  /* U+054E ARMENIAN CAPITAL LETTER VEW */
#define XK_Armenian_vev               0x100057e  /* U+057E ARMENIAN SMALL LETTER VEW */
#define XK_Armenian_TYUN              0x100054f  /* U+054F ARMENIAN CAPITAL LETTER TIWN */
#define XK_Armenian_tyun              0x100057f  /* U+057F ARMENIAN SMALL LETTER TIWN */
#define XK_Armenian_RE                0x1000550  /* U+0550 ARMENIAN CAPITAL LETTER REH */
#define XK_Armenian_re                0x1000580  /* U+0580 ARMENIAN SMALL LETTER REH */
#define XK_Armenian_TSO               0x1000551  /* U+0551 ARMENIAN CAPITAL LETTER CO */
#define XK_Armenian_tso               0x1000581  /* U+0581 ARMENIAN SMALL LETTER CO */
#define XK_Armenian_VYUN              0x1000552  /* U+0552 ARMENIAN CAPITAL LETTER YIWN */
#define XK_Armenian_vyun              0x1000582  /* U+0582 ARMENIAN SMALL LETTER YIWN */
#define XK_Armenian_PYUR              0x1000553  /* U+0553 ARMENIAN CAPITAL LETTER PIWR */
#define XK_Armenian_pyur              0x1000583  /* U+0583 ARMENIAN SMALL LETTER PIWR */
#define XK_Armenian_KE                0x1000554  /* U+0554 ARMENIAN CAPITAL LETTER KEH */
#define XK_Armenian_ke                0x1000584  /* U+0584 ARMENIAN SMALL LETTER KEH */
#define XK_Armenian_O                 0x1000555  /* U+0555 ARMENIAN CAPITAL LETTER OH */
#define XK_Armenian_o                 0x1000585  /* U+0585 ARMENIAN SMALL LETTER OH */
#define XK_Armenian_FE                0x1000556  /* U+0556 ARMENIAN CAPITAL LETTER FEH */
#define XK_Armenian_fe                0x1000586  /* U+0586 ARMENIAN SMALL LETTER FEH */
#define XK_Armenian_apostrophe        0x100055a  /* U+055A ARMENIAN APOSTROPHE */
#endif /* XK_ARMENIAN */

/*
 * Georgian
 */

#ifdef XK_GEORGIAN
#define XK_Georgian_an                0x10010d0  /* U+10D0 GEORGIAN LETTER AN */
#define XK_Georgian_ban               0x10010d1  /* U+10D1 GEORGIAN LETTER BAN */
#define XK_Georgian_gan               0x10010d2  /* U+10D2 GEORGIAN LETTER GAN */
#define XK_Georgian_don               0x10010d3  /* U+10D3 GEORGIAN LETTER DON */
#define XK_Georgian_en                0x10010d4  /* U+10D4 GEORGIAN LETTER EN */
#define XK_Georgian_vin               0x10010d5  /* U+10D5 GEORGIAN LETTER VIN */
#define XK_Georgian_zen               0x10010d6  /* U+10D6 GEORGIAN LETTER ZEN */
#define XK_Georgian_tan               0x10010d7  /* U+10D7 GEORGIAN LETTER TAN */
#define XK_Georgian_in                0x10010d8  /* U+10D8 GEORGIAN LETTER IN */
#define XK_Georgian_kan               0x10010d9  /* U+10D9 GEORGIAN LETTER KAN */
#define XK_Georgian_las               0x10010da  /* U+10DA GEORGIAN LETTER LAS */
#define XK_Georgian_man               0x10010db  /* U+10DB GEORGIAN LETTER MAN */
#define XK_Georgian_nar               0x10010dc  /* U+10DC GEORGIAN LETTER NAR */
#define XK_Georgian_on                0x10010dd  /* U+10DD GEORGIAN LETTER ON */
#define XK_Georgian_par               0x10010de  /* U+10DE GEORGIAN LETTER PAR */
#define XK_Georgian_zhar              0x10010df  /* U+10DF GEORGIAN LETTER ZHAR */
#define XK_Georgian_rae               0x10010e0  /* U+10E0 GEORGIAN LETTER RAE */
#define XK_Georgian_san               0x10010e1  /* U+10E1 GEORGIAN LETTER SAN */
#define XK_Georgian_tar               0x10010e2  /* U+10E2 GEORGIAN LETTER TAR */
#define XK_Georgian_un                0x10010e3  /* U+10E3 GEORGIAN LETTER UN */
#define XK_Georgian_phar              0x10010e4  /* U+10E4 GEORGIAN LETTER PHAR */
#define XK_Georgian_khar              0x10010e5  /* U+10E5 GEORGIAN LETTER KHAR */
#define XK_Georgian_ghan              0x10010e6  /* U+10E6 GEORGIAN LETTER GHAN */
#define XK_Georgian_qar               0x10010e7  /* U+10E7 GEORGIAN LETTER QAR */
#define XK_Georgian_shin              0x10010e8  /* U+10E8 GEORGIAN LETTER SHIN */
#define XK_Georgian_chin              0x10010e9  /* U+10E9 GEORGIAN LETTER CHIN */
#define XK_Georgian_can               0x10010ea  /* U+10EA GEORGIAN LETTER CAN */
#define XK_Georgian_jil               0x10010eb  /* U+10EB GEORGIAN LETTER JIL */
#define XK_Georgian_cil               0x10010ec  /* U+10EC GEORGIAN LETTER CIL */
#define XK_Georgian_char              0x10010ed  /* U+10ED GEORGIAN LETTER CHAR */
#define XK_Georgian_xan               0x10010ee  /* U+10EE GEORGIAN LETTER XAN */
#define XK_Georgian_jhan              0x10010ef  /* U+10EF GEORGIAN LETTER JHAN */
#define XK_Georgian_hae               0x10010f0  /* U+10F0 GEORGIAN LETTER HAE */
#define XK_Georgian_he                0x10010f1  /* U+10F1 GEORGIAN LETTER HE */
#define XK_Georgian_hie               0x10010f2  /* U+10F2 GEORGIAN LETTER HIE */
#define XK_Georgian_we                0x10010f3  /* U+10F3 GEORGIAN LETTER WE */
#define XK_Georgian_har               0x10010f4  /* U+10F4 GEORGIAN LETTER HAR */
#define XK_Georgian_hoe               0x10010f5  /* U+10F5 GEORGIAN LETTER HOE */
#define XK_Georgian_fi                0x10010f6  /* U+10F6 GEORGIAN LETTER FI */
#endif /* XK_GEORGIAN */

/*
 * Azeri (and other Turkic or Caucasian languages)
 */

#ifdef XK_CAUCASUS
/* latin */
#define XK_Xabovedot                  0x1001e8a  /* U+1E8A LATIN CAPITAL LETTER X WITH DOT ABOVE */
#define XK_Ibreve                     0x100012c  /* U+012C LATIN CAPITAL LETTER I WITH BREVE */
#define XK_Zstroke                    0x10001b5  /* U+01B5 LATIN CAPITAL LETTER Z WITH STROKE */
#define XK_Gcaron                     0x10001e6  /* U+01E6 LATIN CAPITAL LETTER G WITH CARON */
#define XK_Ocaron                     0x10001d1  /* U+01D2 LATIN CAPITAL LETTER O WITH CARON */
#define XK_Obarred                    0x100019f  /* U+019F LATIN CAPITAL LETTER O WITH MIDDLE TILDE */
#define XK_xabovedot                  0x1001e8b  /* U+1E8B LATIN SMALL LETTER X WITH DOT ABOVE */
#define XK_ibreve                     0x100012d  /* U+012D LATIN SMALL LETTER I WITH BREVE */
#define XK_zstroke                    0x10001b6  /* U+01B6 LATIN SMALL LETTER Z WITH STROKE */
#define XK_gcaron                     0x10001e7  /* U+01E7 LATIN SMALL LETTER G WITH CARON */
#define XK_ocaron                     0x10001d2  /* U+01D2 LATIN SMALL LETTER O WITH CARON */
#define XK_obarred                    0x1000275  /* U+0275 LATIN SMALL LETTER BARRED O */
#define XK_SCHWA                      0x100018f  /* U+018F LATIN CAPITAL LETTER SCHWA */
#define XK_schwa                      0x1000259  /* U+0259 LATIN SMALL LETTER SCHWA */
#define XK_EZH                        0x10001b7  /* U+01B7 LATIN CAPITAL LETTER EZH */
#define XK_ezh                        0x1000292  /* U+0292 LATIN SMALL LETTER EZH */
/* those are not really Caucasus */
/* For Inupiak */
#define XK_Lbelowdot                  0x1001e36  /* U+1E36 LATIN CAPITAL LETTER L WITH DOT BELOW */
#define XK_lbelowdot                  0x1001e37  /* U+1E37 LATIN SMALL LETTER L WITH DOT BELOW */
#endif /* XK_CAUCASUS */

/*
 * Vietnamese
 */
 
#ifdef XK_VIETNAMESE
#define XK_Abelowdot                  0x1001ea0  /* U+1EA0 LATIN CAPITAL LETTER A WITH DOT BELOW */
#define XK_abelowdot                  0x1001ea1  /* U+1EA1 LATIN SMALL LETTER A WITH DOT BELOW */
#define XK_Ahook                      0x1001ea2  /* U+1EA2 LATIN CAPITAL LETTER A WITH HOOK ABOVE */
#define XK_ahook                      0x1001ea3  /* U+1EA3 LATIN SMALL LETTER A WITH HOOK ABOVE */
#define XK_Acircumflexacute           0x1001ea4  /* U+1EA4 LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND ACUTE */
#define XK_acircumflexacute           0x1001ea5  /* U+1EA5 LATIN SMALL LETTER A WITH CIRCUMFLEX AND ACUTE */
#define XK_Acircumflexgrave           0x1001ea6  /* U+1EA6 LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND GRAVE */
#define XK_acircumflexgrave           0x1001ea7  /* U+1EA7 LATIN SMALL LETTER A WITH CIRCUMFLEX AND GRAVE */
#define XK_Acircumflexhook            0x1001ea8  /* U+1EA8 LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND HOOK ABOVE */
#define XK_acircumflexhook            0x1001ea9  /* U+1EA9 LATIN SMALL LETTER A WITH CIRCUMFLEX AND HOOK ABOVE */
#define XK_Acircumflextilde           0x1001eaa  /* U+1EAA LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND TILDE */
#define XK_acircumflextilde           0x1001eab  /* U+1EAB LATIN SMALL LETTER A WITH CIRCUMFLEX AND TILDE */
#define XK_Acircumflexbelowdot        0x1001eac  /* U+1EAC LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND DOT BELOW */
#define XK_acircumflexbelowdot        0x1001ead  /* U+1EAD LATIN SMALL LETTER A WITH CIRCUMFLEX AND DOT BELOW */
#define XK_Abreveacute                0x1001eae  /* U+1EAE LATIN CAPITAL LETTER A WITH BREVE AND ACUTE */
#define XK_abreveacute                0x1001eaf  /* U+1EAF LATIN SMALL LETTER A WITH BREVE AND ACUTE */
#define XK_Abrevegrave                0x1001eb0  /* U+1EB0 LATIN CAPITAL LETTER A WITH BREVE AND GRAVE */
#define XK_abrevegrave                0x1001eb1  /* U+1EB1 LATIN SMALL LETTER A WITH BREVE AND GRAVE */
#define XK_Abrevehook                 0x1001eb2  /* U+1EB2 LATIN CAPITAL LETTER A WITH BREVE AND HOOK ABOVE */
#define XK_abrevehook                 0x1001eb3  /* U+1EB3 LATIN SMALL LETTER A WITH BREVE AND HOOK ABOVE */
#define XK_Abrevetilde                0x1001eb4  /* U+1EB4 LATIN CAPITAL LETTER A WITH BREVE AND TILDE */
#define XK_abrevetilde                0x1001eb5  /* U+1EB5 LATIN SMALL LETTER A WITH BREVE AND TILDE */
#define XK_Abrevebelowdot             0x1001eb6  /* U+1EB6 LATIN CAPITAL LETTER A WITH BREVE AND DOT BELOW */
#define XK_abrevebelowdot             0x1001eb7  /* U+1EB7 LATIN SMALL LETTER A WITH BREVE AND DOT BELOW */
#define XK_Ebelowdot                  0x1001eb8  /* U+1EB8 LATIN CAPITAL LETTER E WITH DOT BELOW */
#define XK_ebelowdot                  0x1001eb9  /* U+1EB9 LATIN SMALL LETTER E WITH DOT BELOW */
#define XK_Ehook                      0x1001eba  /* U+1EBA LATIN CAPITAL LETTER E WITH HOOK ABOVE */
#define XK_ehook                      0x1001ebb  /* U+1EBB LATIN SMALL LETTER E WITH HOOK ABOVE */
#define XK_Etilde                     0x1001ebc  /* U+1EBC LATIN CAPITAL LETTER E WITH TILDE */
#define XK_etilde                     0x1001ebd  /* U+1EBD LATIN SMALL LETTER E WITH TILDE */
#define XK_Ecircumflexacute           0x1001ebe  /* U+1EBE LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND ACUTE */
#define XK_ecircumflexacute           0x1001ebf  /* U+1EBF LATIN SMALL LETTER E WITH CIRCUMFLEX AND ACUTE */
#define XK_Ecircumflexgrave           0x1001ec0  /* U+1EC0 LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND GRAVE */
#define XK_ecircumflexgrave           0x1001ec1  /* U+1EC1 LATIN SMALL LETTER E WITH CIRCUMFLEX AND GRAVE */
#define XK_Ecircumflexhook            0x1001ec2  /* U+1EC2 LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND HOOK ABOVE */
#define XK_ecircumflexhook            0x1001ec3  /* U+1EC3 LATIN SMALL LETTER E WITH CIRCUMFLEX AND HOOK ABOVE */
#define XK_Ecircumflextilde           0x1001ec4  /* U+1EC4 LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND TILDE */
#define XK_ecircumflextilde           0x1001ec5  /* U+1EC5 LATIN SMALL LETTER E WITH CIRCUMFLEX AND TILDE */
#define XK_Ecircumflexbelowdot        0x1001ec6  /* U+1EC6 LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND DOT BELOW */
#define XK_ecircumflexbelowdot        0x1001ec7  /* U+1EC7 LATIN SMALL LETTER E WITH CIRCUMFLEX AND DOT BELOW */
#define XK_Ihook                      0x1001ec8  /* U+1EC8 LATIN CAPITAL LETTER I WITH HOOK ABOVE */
#define XK_ihook                      0x1001ec9  /* U+1EC9 LATIN SMALL LETTER I WITH HOOK ABOVE */
#define XK_Ibelowdot                  0x1001eca  /* U+1ECA LATIN CAPITAL LETTER I WITH DOT BELOW */
#define XK_ibelowdot                  0x1001ecb  /* U+1ECB LATIN SMALL LETTER I WITH DOT BELOW */
#define XK_Obelowdot                  0x1001ecc  /* U+1ECC LATIN CAPITAL LETTER O WITH DOT BELOW */
#define XK_obelowdot                  0x1001ecd  /* U+1ECD LATIN SMALL LETTER O WITH DOT BELOW */
#define XK_Ohook                      0x1001ece  /* U+1ECE LATIN CAPITAL LETTER O WITH HOOK ABOVE */
#define XK_ohook                      0x1001ecf  /* U+1ECF LATIN SMALL LETTER O WITH HOOK ABOVE */
#define XK_Ocircumflexacute           0x1001ed0  /* U+1ED0 LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND ACUTE */
#define XK_ocircumflexacute           0x1001ed1  /* U+1ED1 LATIN SMALL LETTER O WITH CIRCUMFLEX AND ACUTE */
#define XK_Ocircumflexgrave           0x1001ed2  /* U+1ED2 LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND GRAVE */
#define XK_ocircumflexgrave           0x1001ed3  /* U+1ED3 LATIN SMALL LETTER O WITH CIRCUMFLEX AND GRAVE */
#define XK_Ocircumflexhook            0x1001ed4  /* U+1ED4 LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND HOOK ABOVE */
#define XK_ocircumflexhook            0x1001ed5  /* U+1ED5 LATIN SMALL LETTER O WITH CIRCUMFLEX AND HOOK ABOVE */
#define XK_Ocircumflextilde           0x1001ed6  /* U+1ED6 LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND TILDE */
#define XK_ocircumflextilde           0x1001ed7  /* U+1ED7 LATIN SMALL LETTER O WITH CIRCUMFLEX AND TILDE */
#define XK_Ocircumflexbelowdot        0x1001ed8  /* U+1ED8 LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND DOT BELOW */
#define XK_ocircumflexbelowdot        0x1001ed9  /* U+1ED9 LATIN SMALL LETTER O WITH CIRCUMFLEX AND DOT BELOW */
#define XK_Ohornacute                 0x1001eda  /* U+1EDA LATIN CAPITAL LETTER O WITH HORN AND ACUTE */
#define XK_ohornacute                 0x1001edb  /* U+1EDB LATIN SMALL LETTER O WITH HORN AND ACUTE */
#define XK_Ohorngrave                 0x1001edc  /* U+1EDC LATIN CAPITAL LETTER O WITH HORN AND GRAVE */
#define XK_ohorngrave                 0x1001edd  /* U+1EDD LATIN SMALL LETTER O WITH HORN AND GRAVE */
#define XK_Ohornhook                  0x1001ede  /* U+1EDE LATIN CAPITAL LETTER O WITH HORN AND HOOK ABOVE */
#define XK_ohornhook                  0x1001edf  /* U+1EDF LATIN SMALL LETTER O WITH HORN AND HOOK ABOVE */
#define XK_Ohorntilde                 0x1001ee0  /* U+1EE0 LATIN CAPITAL LETTER O WITH HORN AND TILDE */
#define XK_ohorntilde                 0x1001ee1  /* U+1EE1 LATIN SMALL LETTER O WITH HORN AND TILDE */
#define XK_Ohornbelowdot              0x1001ee2  /* U+1EE2 LATIN CAPITAL LETTER O WITH HORN AND DOT BELOW */
#define XK_ohornbelowdot              0x1001ee3  /* U+1EE3 LATIN SMALL LETTER O WITH HORN AND DOT BELOW */
#define XK_Ubelowdot                  0x1001ee4  /* U+1EE4 LATIN CAPITAL LETTER U WITH DOT BELOW */
#define XK_ubelowdot                  0x1001ee5  /* U+1EE5 LATIN SMALL LETTER U WITH DOT BELOW */
#define XK_Uhook                      0x1001ee6  /* U+1EE6 LATIN CAPITAL LETTER U WITH HOOK ABOVE */
#define XK_uhook                      0x1001ee7  /* U+1EE7 LATIN SMALL LETTER U WITH HOOK ABOVE */
#define XK_Uhornacute                 0x1001ee8  /* U+1EE8 LATIN CAPITAL LETTER U WITH HORN AND ACUTE */
#define XK_uhornacute                 0x1001ee9  /* U+1EE9 LATIN SMALL LETTER U WITH HORN AND ACUTE */
#define XK_Uhorngrave                 0x1001eea  /* U+1EEA LATIN CAPITAL LETTER U WITH HORN AND GRAVE */
#define XK_uhorngrave                 0x1001eeb  /* U+1EEB LATIN SMALL LETTER U WITH HORN AND GRAVE */
#define XK_Uhornhook                  0x1001eec  /* U+1EEC LATIN CAPITAL LETTER U WITH HORN AND HOOK ABOVE */
#define XK_uhornhook                  0x1001eed  /* U+1EED LATIN SMALL LETTER U WITH HORN AND HOOK ABOVE */
#define XK_Uhorntilde                 0x1001eee  /* U+1EEE LATIN CAPITAL LETTER U WITH HORN AND TILDE */
#define XK_uhorntilde                 0x1001eef  /* U+1EEF LATIN SMALL LETTER U WITH HORN AND TILDE */
#define XK_Uhornbelowdot              0x1001ef0  /* U+1EF0 LATIN CAPITAL LETTER U WITH HORN AND DOT BELOW */
#define XK_uhornbelowdot              0x1001ef1  /* U+1EF1 LATIN SMALL LETTER U WITH HORN AND DOT BELOW */
#define XK_Ybelowdot                  0x1001ef4  /* U+1EF4 LATIN CAPITAL LETTER Y WITH DOT BELOW */
#define XK_ybelowdot                  0x1001ef5  /* U+1EF5 LATIN SMALL LETTER Y WITH DOT BELOW */
#define XK_Yhook                      0x1001ef6  /* U+1EF6 LATIN CAPITAL LETTER Y WITH HOOK ABOVE */
#define XK_yhook                      0x1001ef7  /* U+1EF7 LATIN SMALL LETTER Y WITH HOOK ABOVE */
#define XK_Ytilde                     0x1001ef8  /* U+1EF8 LATIN CAPITAL LETTER Y WITH TILDE */
#define XK_ytilde                     0x1001ef9  /* U+1EF9 LATIN SMALL LETTER Y WITH TILDE */
#define XK_Ohorn                      0x10001a0  /* U+01A0 LATIN CAPITAL LETTER O WITH HORN */
#define XK_ohorn                      0x10001a1  /* U+01A1 LATIN SMALL LETTER O WITH HORN */
#define XK_Uhorn                      0x10001af  /* U+01AF LATIN CAPITAL LETTER U WITH HORN */
#define XK_uhorn                      0x10001b0  /* U+01B0 LATIN SMALL LETTER U WITH HORN */

#endif /* XK_VIETNAMESE */

#ifdef XK_CURRENCY
#define XK_EcuSign                    0x10020a0  /* U+20A0 EURO-CURRENCY SIGN */
#define XK_ColonSign                  0x10020a1  /* U+20A1 COLON SIGN */
#define XK_CruzeiroSign               0x10020a2  /* U+20A2 CRUZEIRO SIGN */
#define XK_FFrancSign                 0x10020a3  /* U+20A3 FRENCH FRANC SIGN */
#define XK_LiraSign                   0x10020a4  /* U+20A4 LIRA SIGN */
#define XK_MillSign                   0x10020a5  /* U+20A5 MILL SIGN */
#define XK_NairaSign                  0x10020a6  /* U+20A6 NAIRA SIGN */
#define XK_PesetaSign                 0x10020a7  /* U+20A7 PESETA SIGN */
#define XK_RupeeSign                  0x10020a8  /* U+20A8 RUPEE SIGN */
#define XK_WonSign                    0x10020a9  /* U+20A9 WON SIGN */
#define XK_NewSheqelSign              0x10020aa  /* U+20AA NEW SHEQEL SIGN */
#define XK_DongSign                   0x10020ab  /* U+20AB DONG SIGN */
#define XK_EuroSign                      0x20ac  /* U+20AC EURO SIGN */
#endif /* XK_CURRENCY */

#ifdef XK_MATHEMATICAL
/* one, two and three are defined above. */
#define XK_zerosuperior               0x1002070  /* U+2070 SUPERSCRIPT ZERO */
#define XK_foursuperior               0x1002074  /* U+2074 SUPERSCRIPT FOUR */
#define XK_fivesuperior               0x1002075  /* U+2075 SUPERSCRIPT FIVE */
#define XK_sixsuperior                0x1002076  /* U+2076 SUPERSCRIPT SIX */
#define XK_sevensuperior              0x1002077  /* U+2077 SUPERSCRIPT SEVEN */
#define XK_eightsuperior              0x1002078  /* U+2078 SUPERSCRIPT EIGHT */
#define XK_ninesuperior               0x1002079  /* U+2079 SUPERSCRIPT NINE */
#define XK_zerosubscript              0x1002080  /* U+2080 SUBSCRIPT ZERO */
#define XK_onesubscript               0x1002081  /* U+2081 SUBSCRIPT ONE */
#define XK_twosubscript               0x1002082  /* U+2082 SUBSCRIPT TWO */
#define XK_threesubscript             0x1002083  /* U+2083 SUBSCRIPT THREE */
#define XK_foursubscript              0x1002084  /* U+2084 SUBSCRIPT FOUR */
#define XK_fivesubscript              0x1002085  /* U+2085 SUBSCRIPT FIVE */
#define XK_sixsubscript               0x1002086  /* U+2086 SUBSCRIPT SIX */
#define XK_sevensubscript             0x1002087  /* U+2087 SUBSCRIPT SEVEN */
#define XK_eightsubscript             0x1002088  /* U+2088 SUBSCRIPT EIGHT */
#define XK_ninesubscript              0x1002089  /* U+2089 SUBSCRIPT NINE */
#define XK_partdifferential           0x1002202  /* U+2202 PARTIAL DIFFERENTIAL */
#define XK_emptyset                   0x1002205  /* U+2205 NULL SET */
#define XK_elementof                  0x1002208  /* U+2208 ELEMENT OF */
#define XK_notelementof               0x1002209  /* U+2209 NOT AN ELEMENT OF */
#define XK_containsas                 0x100220B  /* U+220B CONTAINS AS MEMBER */
#define XK_squareroot                 0x100221A  /* U+221A SQUARE ROOT */
#define XK_cuberoot                   0x100221B  /* U+221B CUBE ROOT */
#define XK_fourthroot                 0x100221C  /* U+221C FOURTH ROOT */
#define XK_dintegral                  0x100222C  /* U+222C DOUBLE INTEGRAL */
#define XK_tintegral                  0x100222D  /* U+222D TRIPLE INTEGRAL */
#define XK_because                    0x1002235  /* U+2235 BECAUSE */
#define XK_approxeq                   0x1002248  /* U+2245 ALMOST EQUAL TO */
#define XK_notapproxeq                0x1002247  /* U+2247 NOT ALMOST EQUAL TO */
#define XK_notidentical               0x1002262  /* U+2262 NOT IDENTICAL TO */
#define XK_stricteq                   0x1002263  /* U+2263 STRICTLY EQUIVALENT TO */          
#endif /* XK_MATHEMATICAL */

#ifdef XK_BRAILLE
#define XK_braille_dot_1                 0xfff1
#define XK_braille_dot_2                 0xfff2
#define XK_braille_dot_3                 0xfff3
#define XK_braille_dot_4                 0xfff4
#define XK_braille_dot_5                 0xfff5
#define XK_braille_dot_6                 0xfff6
#define XK_braille_dot_7                 0xfff7
#define XK_braille_dot_8                 0xfff8
#define XK_braille_dot_9                 0xfff9
#define XK_braille_dot_10                0xfffa
#define XK_braille_blank              0x1002800  /* U+2800 BRAILLE PATTERN BLANK */
#define XK_braille_dots_1             0x1002801  /* U+2801 BRAILLE PATTERN DOTS-1 */
#define XK_braille_dots_2             0x1002802  /* U+2802 BRAILLE PATTERN DOTS-2 */
#define XK_braille_dots_12            0x1002803  /* U+2803 BRAILLE PATTERN DOTS-12 */
#define XK_braille_dots_3             0x1002804  /* U+2804 BRAILLE PATTERN DOTS-3 */
#define XK_braille_dots_13            0x1002805  /* U+2805 BRAILLE PATTERN DOTS-13 */
#define XK_braille_dots_23            0x1002806  /* U+2806 BRAILLE PATTERN DOTS-23 */
#define XK_braille_dots_123           0x1002807  /* U+2807 BRAILLE PATTERN DOTS-123 */
#define XK_braille_dots_4             0x1002808  /* U+2808 BRAILLE PATTERN DOTS-4 */
#define XK_braille_dots_14            0x1002809  /* U+2809 BRAILLE PATTERN DOTS-14 */
#define XK_braille_dots_24            0x100280a  /* U+280a BRAILLE PATTERN DOTS-24 */
#define XK_braille_dots_124           0x100280b  /* U+280b BRAILLE PATTERN DOTS-124 */
#define XK_braille_dots_34            0x100280c  /* U+280c BRAILLE PATTERN DOTS-34 */
#define XK_braille_dots_134           0x100280d  /* U+280d BRAILLE PATTERN DOTS-134 */
#define XK_braille_dots_234           0x100280e  /* U+280e BRAILLE PATTERN DOTS-234 */
#define XK_braille_dots_1234          0x100280f  /* U+280f BRAILLE PATTERN DOTS-1234 */
#define XK_braille_dots_5             0x1002810  /* U+2810 BRAILLE PATTERN DOTS-5 */
#define XK_braille_dots_15            0x1002811  /* U+2811 BRAILLE PATTERN DOTS-15 */
#define XK_braille_dots_25            0x1002812  /* U+2812 BRAILLE PATTERN DOTS-25 */
#define XK_braille_dots_125           0x1002813  /* U+2813 BRAILLE PATTERN DOTS-125 */
#define XK_braille_dots_35            0x1002814  /* U+2814 BRAILLE PATTERN DOTS-35 */
#define XK_braille_dots_135           0x1002815  /* U+2815 BRAILLE PATTERN DOTS-135 */
#define XK_braille_dots_235           0x1002816  /* U+2816 BRAILLE PATTERN DOTS-235 */
#define XK_braille_dots_1235          0x1002817  /* U+2817 BRAILLE PATTERN DOTS-1235 */
#define XK_braille_dots_45            0x1002818  /* U+2818 BRAILLE PATTERN DOTS-45 */
#define XK_braille_dots_145           0x1002819  /* U+2819 BRAILLE PATTERN DOTS-145 */
#define XK_braille_dots_245           0x100281a  /* U+281a BRAILLE PATTERN DOTS-245 */
#define XK_braille_dots_1245          0x100281b  /* U+281b BRAILLE PATTERN DOTS-1245 */
#define XK_braille_dots_345           0x100281c  /* U+281c BRAILLE PATTERN DOTS-345 */
#define XK_braille_dots_1345          0x100281d  /* U+281d BRAILLE PATTERN DOTS-1345 */
#define XK_braille_dots_2345          0x100281e  /* U+281e BRAILLE PATTERN DOTS-2345 */
#define XK_braille_dots_12345         0x100281f  /* U+281f BRAILLE PATTERN DOTS-12345 */
#define XK_braille_dots_6             0x1002820  /* U+2820 BRAILLE PATTERN DOTS-6 */
#define XK_braille_dots_16            0x1002821  /* U+2821 BRAILLE PATTERN DOTS-16 */
#define XK_braille_dots_26            0x1002822  /* U+2822 BRAILLE PATTERN DOTS-26 */
#define XK_braille_dots_126           0x1002823  /* U+2823 BRAILLE PATTERN DOTS-126 */
#define XK_braille_dots_36            0x1002824  /* U+2824 BRAILLE PATTERN DOTS-36 */
#define XK_braille_dots_136           0x1002825  /* U+2825 BRAILLE PATTERN DOTS-136 */
#define XK_braille_dots_236           0x1002826  /* U+2826 BRAILLE PATTERN DOTS-236 */
#define XK_braille_dots_1236          0x1002827  /* U+2827 BRAILLE PATTERN DOTS-1236 */
#define XK_braille_dots_46            0x1002828  /* U+2828 BRAILLE PATTERN DOTS-46 */
#define XK_braille_dots_146           0x1002829  /* U+2829 BRAILLE PATTERN DOTS-146 */
#define XK_braille_dots_246           0x100282a  /* U+282a BRAILLE PATTERN DOTS-246 */
#define XK_braille_dots_1246          0x100282b  /* U+282b BRAILLE PATTERN DOTS-1246 */
#define XK_braille_dots_346           0x100282c  /* U+282c BRAILLE PATTERN DOTS-346 */
#define XK_braille_dots_1346          0x100282d  /* U+282d BRAILLE PATTERN DOTS-1346 */
#define XK_braille_dots_2346          0x100282e  /* U+282e BRAILLE PATTERN DOTS-2346 */
#define XK_braille_dots_12346         0x100282f  /* U+282f BRAILLE PATTERN DOTS-12346 */
#define XK_braille_dots_56            0x1002830  /* U+2830 BRAILLE PATTERN DOTS-56 */
#define XK_braille_dots_156           0x1002831  /* U+2831 BRAILLE PATTERN DOTS-156 */
#define XK_braille_dots_256           0x1002832  /* U+2832 BRAILLE PATTERN DOTS-256 */
#define XK_braille_dots_1256          0x1002833  /* U+2833 BRAILLE PATTERN DOTS-1256 */
#define XK_braille_dots_356           0x1002834  /* U+2834 BRAILLE PATTERN DOTS-356 */
#define XK_braille_dots_1356          0x1002835  /* U+2835 BRAILLE PATTERN DOTS-1356 */
#define XK_braille_dots_2356          0x1002836  /* U+2836 BRAILLE PATTERN DOTS-2356 */
#define XK_braille_dots_12356         0x1002837  /* U+2837 BRAILLE PATTERN DOTS-12356 */
#define XK_braille_dots_456           0x1002838  /* U+2838 BRAILLE PATTERN DOTS-456 */
#define XK_braille_dots_1456          0x1002839  /* U+2839 BRAILLE PATTERN DOTS-1456 */
#define XK_braille_dots_2456          0x100283a  /* U+283a BRAILLE PATTERN DOTS-2456 */
#define XK_braille_dots_12456         0x100283b  /* U+283b BRAILLE PATTERN DOTS-12456 */
#define XK_braille_dots_3456          0x100283c  /* U+283c BRAILLE PATTERN DOTS-3456 */
#define XK_braille_dots_13456         0x100283d  /* U+283d BRAILLE PATTERN DOTS-13456 */
#define XK_braille_dots_23456         0x100283e  /* U+283e BRAILLE PATTERN DOTS-23456 */
#define XK_braille_dots_123456        0x100283f  /* U+283f BRAILLE PATTERN DOTS-123456 */
#define XK_braille_dots_7             0x1002840  /* U+2840 BRAILLE PATTERN DOTS-7 */
#define XK_braille_dots_17            0x1002841  /* U+2841 BRAILLE PATTERN DOTS-17 */
#define XK_braille_dots_27            0x1002842  /* U+2842 BRAILLE PATTERN DOTS-27 */
#define XK_braille_dots_127           0x1002843  /* U+2843 BRAILLE PATTERN DOTS-127 */
#define XK_braille_dots_37            0x1002844  /* U+2844 BRAILLE PATTERN DOTS-37 */
#define XK_braille_dots_137           0x1002845  /* U+2845 BRAILLE PATTERN DOTS-137 */
#define XK_braille_dots_237           0x1002846  /* U+2846 BRAILLE PATTERN DOTS-237 */
#define XK_braille_dots_1237          0x1002847  /* U+2847 BRAILLE PATTERN DOTS-1237 */
#define XK_braille_dots_47            0x1002848  /* U+2848 BRAILLE PATTERN DOTS-47 */
#define XK_braille_dots_147           0x1002849  /* U+2849 BRAILLE PATTERN DOTS-147 */
#define XK_braille_dots_247           0x100284a  /* U+284a BRAILLE PATTERN DOTS-247 */
#define XK_braille_dots_1247          0x100284b  /* U+284b BRAILLE PATTERN DOTS-1247 */
#define XK_braille_dots_347           0x100284c  /* U+284c BRAILLE PATTERN DOTS-347 */
#define XK_braille_dots_1347          0x100284d  /* U+284d BRAILLE PATTERN DOTS-1347 */
#define XK_braille_dots_2347          0x100284e  /* U+284e BRAILLE PATTERN DOTS-2347 */
#define XK_braille_dots_12347         0x100284f  /* U+284f BRAILLE PATTERN DOTS-12347 */
#define XK_braille_dots_57            0x1002850  /* U+2850 BRAILLE PATTERN DOTS-57 */
#define XK_braille_dots_157           0x1002851  /* U+2851 BRAILLE PATTERN DOTS-157 */
#define XK_braille_dots_257           0x1002852  /* U+2852 BRAILLE PATTERN DOTS-257 */
#define XK_braille_dots_1257          0x1002853  /* U+2853 BRAILLE PATTERN DOTS-1257 */
#define XK_braille_dots_357           0x1002854  /* U+2854 BRAILLE PATTERN DOTS-357 */
#define XK_braille_dots_1357          0x1002855  /* U+2855 BRAILLE PATTERN DOTS-1357 */
#define XK_braille_dots_2357          0x1002856  /* U+2856 BRAILLE PATTERN DOTS-2357 */
#define XK_braille_dots_12357         0x1002857  /* U+2857 BRAILLE PATTERN DOTS-12357 */
#define XK_braille_dots_457           0x1002858  /* U+2858 BRAILLE PATTERN DOTS-457 */
#define XK_braille_dots_1457          0x1002859  /* U+2859 BRAILLE PATTERN DOTS-1457 */
#define XK_braille_dots_2457          0x100285a  /* U+285a BRAILLE PATTERN DOTS-2457 */
#define XK_braille_dots_12457         0x100285b  /* U+285b BRAILLE PATTERN DOTS-12457 */
#define XK_braille_dots_3457          0x100285c  /* U+285c BRAILLE PATTERN DOTS-3457 */
#define XK_braille_dots_13457         0x100285d  /* U+285d BRAILLE PATTERN DOTS-13457 */
#define XK_braille_dots_23457         0x100285e  /* U+285e BRAILLE PATTERN DOTS-23457 */
#define XK_braille_dots_123457        0x100285f  /* U+285f BRAILLE PATTERN DOTS-123457 */
#define XK_braille_dots_67            0x1002860  /* U+2860 BRAILLE PATTERN DOTS-67 */
#define XK_braille_dots_167           0x1002861  /* U+2861 BRAILLE PATTERN DOTS-167 */
#define XK_braille_dots_267           0x1002862  /* U+2862 BRAILLE PATTERN DOTS-267 */
#define XK_braille_dots_1267          0x1002863  /* U+2863 BRAILLE PATTERN DOTS-1267 */
#define XK_braille_dots_367           0x1002864  /* U+2864 BRAILLE PATTERN DOTS-367 */
#define XK_braille_dots_1367          0x1002865  /* U+2865 BRAILLE PATTERN DOTS-1367 */
#define XK_braille_dots_2367          0x1002866  /* U+2866 BRAILLE PATTERN DOTS-2367 */
#define XK_braille_dots_12367         0x1002867  /* U+2867 BRAILLE PATTERN DOTS-12367 */
#define XK_braille_dots_467           0x1002868  /* U+2868 BRAILLE PATTERN DOTS-467 */
#define XK_braille_dots_1467          0x1002869  /* U+2869 BRAILLE PATTERN DOTS-1467 */
#define XK_braille_dots_2467          0x100286a  /* U+286a BRAILLE PATTERN DOTS-2467 */
#define XK_braille_dots_12467         0x100286b  /* U+286b BRAILLE PATTERN DOTS-12467 */
#define XK_braille_dots_3467          0x100286c  /* U+286c BRAILLE PATTERN DOTS-3467 */
#define XK_braille_dots_13467         0x100286d  /* U+286d BRAILLE PATTERN DOTS-13467 */
#define XK_braille_dots_23467         0x100286e  /* U+286e BRAILLE PATTERN DOTS-23467 */
#define XK_braille_dots_123467        0x100286f  /* U+286f BRAILLE PATTERN DOTS-123467 */
#define XK_braille_dots_567           0x1002870  /* U+2870 BRAILLE PATTERN DOTS-567 */
#define XK_braille_dots_1567          0x1002871  /* U+2871 BRAILLE PATTERN DOTS-1567 */
#define XK_braille_dots_2567          0x1002872  /* U+2872 BRAILLE PATTERN DOTS-2567 */
#define XK_braille_dots_12567         0x1002873  /* U+2873 BRAILLE PATTERN DOTS-12567 */
#define XK_braille_dots_3567          0x1002874  /* U+2874 BRAILLE PATTERN DOTS-3567 */
#define XK_braille_dots_13567         0x1002875  /* U+2875 BRAILLE PATTERN DOTS-13567 */
#define XK_braille_dots_23567         0x1002876  /* U+2876 BRAILLE PATTERN DOTS-23567 */
#define XK_braille_dots_123567        0x1002877  /* U+2877 BRAILLE PATTERN DOTS-123567 */
#define XK_braille_dots_4567          0x1002878  /* U+2878 BRAILLE PATTERN DOTS-4567 */
#define XK_braille_dots_14567         0x1002879  /* U+2879 BRAILLE PATTERN DOTS-14567 */
#define XK_braille_dots_24567         0x100287a  /* U+287a BRAILLE PATTERN DOTS-24567 */
#define XK_braille_dots_124567        0x100287b  /* U+287b BRAILLE PATTERN DOTS-124567 */
#define XK_braille_dots_34567         0x100287c  /* U+287c BRAILLE PATTERN DOTS-34567 */
#define XK_braille_dots_134567        0x100287d  /* U+287d BRAILLE PATTERN DOTS-134567 */
#define XK_braille_dots_234567        0x100287e  /* U+287e BRAILLE PATTERN DOTS-234567 */
#define XK_braille_dots_1234567       0x100287f  /* U+287f BRAILLE PATTERN DOTS-1234567 */
#define XK_braille_dots_8             0x1002880  /* U+2880 BRAILLE PATTERN DOTS-8 */
#define XK_braille_dots_18            0x1002881  /* U+2881 BRAILLE PATTERN DOTS-18 */
#define XK_braille_dots_28            0x1002882  /* U+2882 BRAILLE PATTERN DOTS-28 */
#define XK_braille_dots_128           0x1002883  /* U+2883 BRAILLE PATTERN DOTS-128 */
#define XK_braille_dots_38            0x1002884  /* U+2884 BRAILLE PATTERN DOTS-38 */
#define XK_braille_dots_138           0x1002885  /* U+2885 BRAILLE PATTERN DOTS-138 */
#define XK_braille_dots_238           0x1002886  /* U+2886 BRAILLE PATTERN DOTS-238 */
#define XK_braille_dots_1238          0x1002887  /* U+2887 BRAILLE PATTERN DOTS-1238 */
#define XK_braille_dots_48            0x1002888  /* U+2888 BRAILLE PATTERN DOTS-48 */
#define XK_braille_dots_148           0x1002889  /* U+2889 BRAILLE PATTERN DOTS-148 */
#define XK_braille_dots_248           0x100288a  /* U+288a BRAILLE PATTERN DOTS-248 */
#define XK_braille_dots_1248          0x100288b  /* U+288b BRAILLE PATTERN DOTS-1248 */
#define XK_braille_dots_348           0x100288c  /* U+288c BRAILLE PATTERN DOTS-348 */
#define XK_braille_dots_1348          0x100288d  /* U+288d BRAILLE PATTERN DOTS-1348 */
#define XK_braille_dots_2348          0x100288e  /* U+288e BRAILLE PATTERN DOTS-2348 */
#define XK_braille_dots_12348         0x100288f  /* U+288f BRAILLE PATTERN DOTS-12348 */
#define XK_braille_dots_58            0x1002890  /* U+2890 BRAILLE PATTERN DOTS-58 */
#define XK_braille_dots_158           0x1002891  /* U+2891 BRAILLE PATTERN DOTS-158 */
#define XK_braille_dots_258           0x1002892  /* U+2892 BRAILLE PATTERN DOTS-258 */
#define XK_braille_dots_1258          0x1002893  /* U+2893 BRAILLE PATTERN DOTS-1258 */
#define XK_braille_dots_358           0x1002894  /* U+2894 BRAILLE PATTERN DOTS-358 */
#define XK_braille_dots_1358          0x1002895  /* U+2895 BRAILLE PATTERN DOTS-1358 */
#define XK_braille_dots_2358          0x1002896  /* U+2896 BRAILLE PATTERN DOTS-2358 */
#define XK_braille_dots_12358         0x1002897  /* U+2897 BRAILLE PATTERN DOTS-12358 */
#define XK_braille_dots_458           0x1002898  /* U+2898 BRAILLE PATTERN DOTS-458 */
#define XK_braille_dots_1458          0x1002899  /* U+2899 BRAILLE PATTERN DOTS-1458 */
#define XK_braille_dots_2458          0x100289a  /* U+289a BRAILLE PATTERN DOTS-2458 */
#define XK_braille_dots_12458         0x100289b  /* U+289b BRAILLE PATTERN DOTS-12458 */
#define XK_braille_dots_3458          0x100289c  /* U+289c BRAILLE PATTERN DOTS-3458 */
#define XK_braille_dots_13458         0x100289d  /* U+289d BRAILLE PATTERN DOTS-13458 */
#define XK_braille_dots_23458         0x100289e  /* U+289e BRAILLE PATTERN DOTS-23458 */
#define XK_braille_dots_123458        0x100289f  /* U+289f BRAILLE PATTERN DOTS-123458 */
#define XK_braille_dots_68            0x10028a0  /* U+28a0 BRAILLE PATTERN DOTS-68 */
#define XK_braille_dots_168           0x10028a1  /* U+28a1 BRAILLE PATTERN DOTS-168 */
#define XK_braille_dots_268           0x10028a2  /* U+28a2 BRAILLE PATTERN DOTS-268 */
#define XK_braille_dots_1268          0x10028a3  /* U+28a3 BRAILLE PATTERN DOTS-1268 */
#define XK_braille_dots_368           0x10028a4  /* U+28a4 BRAILLE PATTERN DOTS-368 */
#define XK_braille_dots_1368          0x10028a5  /* U+28a5 BRAILLE PATTERN DOTS-1368 */
#define XK_braille_dots_2368          0x10028a6  /* U+28a6 BRAILLE PATTERN DOTS-2368 */
#define XK_braille_dots_12368         0x10028a7  /* U+28a7 BRAILLE PATTERN DOTS-12368 */
#define XK_braille_dots_468           0x10028a8  /* U+28a8 BRAILLE PATTERN DOTS-468 */
#define XK_braille_dots_1468          0x10028a9  /* U+28a9 BRAILLE PATTERN DOTS-1468 */
#define XK_braille_dots_2468          0x10028aa  /* U+28aa BRAILLE PATTERN DOTS-2468 */
#define XK_braille_dots_12468         0x10028ab  /* U+28ab BRAILLE PATTERN DOTS-12468 */
#define XK_braille_dots_3468          0x10028ac  /* U+28ac BRAILLE PATTERN DOTS-3468 */
#define XK_braille_dots_13468         0x10028ad  /* U+28ad BRAILLE PATTERN DOTS-13468 */
#define XK_braille_dots_23468         0x10028ae  /* U+28ae BRAILLE PATTERN DOTS-23468 */
#define XK_braille_dots_123468        0x10028af  /* U+28af BRAILLE PATTERN DOTS-123468 */
#define XK_braille_dots_568           0x10028b0  /* U+28b0 BRAILLE PATTERN DOTS-568 */
#define XK_braille_dots_1568          0x10028b1  /* U+28b1 BRAILLE PATTERN DOTS-1568 */
#define XK_braille_dots_2568          0x10028b2  /* U+28b2 BRAILLE PATTERN DOTS-2568 */
#define XK_braille_dots_12568         0x10028b3  /* U+28b3 BRAILLE PATTERN DOTS-12568 */
#define XK_braille_dots_3568          0x10028b4  /* U+28b4 BRAILLE PATTERN DOTS-3568 */
#define XK_braille_dots_13568         0x10028b5  /* U+28b5 BRAILLE PATTERN DOTS-13568 */
#define XK_braille_dots_23568         0x10028b6  /* U+28b6 BRAILLE PATTERN DOTS-23568 */
#define XK_braille_dots_123568        0x10028b7  /* U+28b7 BRAILLE PATTERN DOTS-123568 */
#define XK_braille_dots_4568          0x10028b8  /* U+28b8 BRAILLE PATTERN DOTS-4568 */
#define XK_braille_dots_14568         0x10028b9  /* U+28b9 BRAILLE PATTERN DOTS-14568 */
#define XK_braille_dots_24568         0x10028ba  /* U+28ba BRAILLE PATTERN DOTS-24568 */
#define XK_braille_dots_124568        0x10028bb  /* U+28bb BRAILLE PATTERN DOTS-124568 */
#define XK_braille_dots_34568         0x10028bc  /* U+28bc BRAILLE PATTERN DOTS-34568 */
#define XK_braille_dots_134568        0x10028bd  /* U+28bd BRAILLE PATTERN DOTS-134568 */
#define XK_braille_dots_234568        0x10028be  /* U+28be BRAILLE PATTERN DOTS-234568 */
#define XK_braille_dots_1234568       0x10028bf  /* U+28bf BRAILLE PATTERN DOTS-1234568 */
#define XK_braille_dots_78            0x10028c0  /* U+28c0 BRAILLE PATTERN DOTS-78 */
#define XK_braille_dots_178           0x10028c1  /* U+28c1 BRAILLE PATTERN DOTS-178 */
#define XK_braille_dots_278           0x10028c2  /* U+28c2 BRAILLE PATTERN DOTS-278 */
#define XK_braille_dots_1278          0x10028c3  /* U+28c3 BRAILLE PATTERN DOTS-1278 */
#define XK_braille_dots_378           0x10028c4  /* U+28c4 BRAILLE PATTERN DOTS-378 */
#define XK_braille_dots_1378          0x10028c5  /* U+28c5 BRAILLE PATTERN DOTS-1378 */
#define XK_braille_dots_2378          0x10028c6  /* U+28c6 BRAILLE PATTERN DOTS-2378 */
#define XK_braille_dots_12378         0x10028c7  /* U+28c7 BRAILLE PATTERN DOTS-12378 */
#define XK_braille_dots_478           0x10028c8  /* U+28c8 BRAILLE PATTERN DOTS-478 */
#define XK_braille_dots_1478          0x10028c9  /* U+28c9 BRAILLE PATTERN DOTS-1478 */
#define XK_braille_dots_2478          0x10028ca  /* U+28ca BRAILLE PATTERN DOTS-2478 */
#define XK_braille_dots_12478         0x10028cb  /* U+28cb BRAILLE PATTERN DOTS-12478 */
#define XK_braille_dots_3478          0x10028cc  /* U+28cc BRAILLE PATTERN DOTS-3478 */
#define XK_braille_dots_13478         0x10028cd  /* U+28cd BRAILLE PATTERN DOTS-13478 */
#define XK_braille_dots_23478         0x10028ce  /* U+28ce BRAILLE PATTERN DOTS-23478 */
#define XK_braille_dots_123478        0x10028cf  /* U+28cf BRAILLE PATTERN DOTS-123478 */
#define XK_braille_dots_578           0x10028d0  /* U+28d0 BRAILLE PATTERN DOTS-578 */
#define XK_braille_dots_1578          0x10028d1  /* U+28d1 BRAILLE PATTERN DOTS-1578 */
#define XK_braille_dots_2578          0x10028d2  /* U+28d2 BRAILLE PATTERN DOTS-2578 */
#define XK_braille_dots_12578         0x10028d3  /* U+28d3 BRAILLE PATTERN DOTS-12578 */
#define XK_braille_dots_3578          0x10028d4  /* U+28d4 BRAILLE PATTERN DOTS-3578 */
#define XK_braille_dots_13578         0x10028d5  /* U+28d5 BRAILLE PATTERN DOTS-13578 */
#define XK_braille_dots_23578         0x10028d6  /* U+28d6 BRAILLE PATTERN DOTS-23578 */
#define XK_braille_dots_123578        0x10028d7  /* U+28d7 BRAILLE PATTERN DOTS-123578 */
#define XK_braille_dots_4578          0x10028d8  /* U+28d8 BRAILLE PATTERN DOTS-4578 */
#define XK_braille_dots_14578         0x10028d9  /* U+28d9 BRAILLE PATTERN DOTS-14578 */
#define XK_braille_dots_24578         0x10028da  /* U+28da BRAILLE PATTERN DOTS-24578 */
#define XK_braille_dots_124578        0x10028db  /* U+28db BRAILLE PATTERN DOTS-124578 */
#define XK_braille_dots_34578         0x10028dc  /* U+28dc BRAILLE PATTERN DOTS-34578 */
#define XK_braille_dots_134578        0x10028dd  /* U+28dd BRAILLE PATTERN DOTS-134578 */
#define XK_braille_dots_234578        0x10028de  /* U+28de BRAILLE PATTERN DOTS-234578 */
#define XK_braille_dots_1234578       0x10028df  /* U+28df BRAILLE PATTERN DOTS-1234578 */
#define XK_braille_dots_678           0x10028e0  /* U+28e0 BRAILLE PATTERN DOTS-678 */
#define XK_braille_dots_1678          0x10028e1  /* U+28e1 BRAILLE PATTERN DOTS-1678 */
#define XK_braille_dots_2678          0x10028e2  /* U+28e2 BRAILLE PATTERN DOTS-2678 */
#define XK_braille_dots_12678         0x10028e3  /* U+28e3 BRAILLE PATTERN DOTS-12678 */
#define XK_braille_dots_3678          0x10028e4  /* U+28e4 BRAILLE PATTERN DOTS-3678 */
#define XK_braille_dots_13678         0x10028e5  /* U+28e5 BRAILLE PATTERN DOTS-13678 */
#define XK_braille_dots_23678         0x10028e6  /* U+28e6 BRAILLE PATTERN DOTS-23678 */
#define XK_braille_dots_123678        0x10028e7  /* U+28e7 BRAILLE PATTERN DOTS-123678 */
#define XK_braille_dots_4678          0x10028e8  /* U+28e8 BRAILLE PATTERN DOTS-4678 */
#define XK_braille_dots_14678         0x10028e9  /* U+28e9 BRAILLE PATTERN DOTS-14678 */
#define XK_braille_dots_24678         0x10028ea  /* U+28ea BRAILLE PATTERN DOTS-24678 */
#define XK_braille_dots_124678        0x10028eb  /* U+28eb BRAILLE PATTERN DOTS-124678 */
#define XK_braille_dots_34678         0x10028ec  /* U+28ec BRAILLE PATTERN DOTS-34678 */
#define XK_braille_dots_134678        0x10028ed  /* U+28ed BRAILLE PATTERN DOTS-134678 */
#define XK_braille_dots_234678        0x10028ee  /* U+28ee BRAILLE PATTERN DOTS-234678 */
#define XK_braille_dots_1234678       0x10028ef  /* U+28ef BRAILLE PATTERN DOTS-1234678 */
#define XK_braille_dots_5678          0x10028f0  /* U+28f0 BRAILLE PATTERN DOTS-5678 */
#define XK_braille_dots_15678         0x10028f1  /* U+28f1 BRAILLE PATTERN DOTS-15678 */
#define XK_braille_dots_25678         0x10028f2  /* U+28f2 BRAILLE PATTERN DOTS-25678 */
#define XK_braille_dots_125678        0x10028f3  /* U+28f3 BRAILLE PATTERN DOTS-125678 */
#define XK_braille_dots_35678         0x10028f4  /* U+28f4 BRAILLE PATTERN DOTS-35678 */
#define XK_braille_dots_135678        0x10028f5  /* U+28f5 BRAILLE PATTERN DOTS-135678 */
#define XK_braille_dots_235678        0x10028f6  /* U+28f6 BRAILLE PATTERN DOTS-235678 */
#define XK_braille_dots_1235678       0x10028f7  /* U+28f7 BRAILLE PATTERN DOTS-1235678 */
#define XK_braille_dots_45678         0x10028f8  /* U+28f8 BRAILLE PATTERN DOTS-45678 */
#define XK_braille_dots_145678        0x10028f9  /* U+28f9 BRAILLE PATTERN DOTS-145678 */
#define XK_braille_dots_245678        0x10028fa  /* U+28fa BRAILLE PATTERN DOTS-245678 */
#define XK_braille_dots_1245678       0x10028fb  /* U+28fb BRAILLE PATTERN DOTS-1245678 */
#define XK_braille_dots_345678        0x10028fc  /* U+28fc BRAILLE PATTERN DOTS-345678 */
#define XK_braille_dots_1345678       0x10028fd  /* U+28fd BRAILLE PATTERN DOTS-1345678 */
#define XK_braille_dots_2345678       0x10028fe  /* U+28fe BRAILLE PATTERN DOTS-2345678 */
#define XK_braille_dots_12345678      0x10028ff  /* U+28ff BRAILLE PATTERN DOTS-12345678 */
#endif /* XK_BRAILLE */

/*
 * Sinhala (http://unicode.org/charts/PDF/U0D80.pdf)
 * http://www.nongnu.org/sinhala/doc/transliteration/sinhala-transliteration_6.html
 */

#ifdef XK_SINHALA
#define XK_Sinh_ng            0x1000d82  /* U+0D82 SINHALA ANUSVARAYA */
#define XK_Sinh_h2            0x1000d83  /* U+0D83 SINHALA VISARGAYA */
#define XK_Sinh_a             0x1000d85  /* U+0D85 SINHALA AYANNA */
#define XK_Sinh_aa            0x1000d86  /* U+0D86 SINHALA AAYANNA */
#define XK_Sinh_ae            0x1000d87  /* U+0D87 SINHALA AEYANNA */
#define XK_Sinh_aee           0x1000d88  /* U+0D88 SINHALA AEEYANNA */
#define XK_Sinh_i             0x1000d89  /* U+0D89 SINHALA IYANNA */
#define XK_Sinh_ii            0x1000d8a  /* U+0D8A SINHALA IIYANNA */
#define XK_Sinh_u             0x1000d8b  /* U+0D8B SINHALA UYANNA */
#define XK_Sinh_uu            0x1000d8c  /* U+0D8C SINHALA UUYANNA */
#define XK_Sinh_ri            0x1000d8d  /* U+0D8D SINHALA IRUYANNA */
#define XK_Sinh_rii           0x1000d8e  /* U+0D8E SINHALA IRUUYANNA */
#define XK_Sinh_lu            0x1000d8f  /* U+0D8F SINHALA ILUYANNA */
#define XK_Sinh_luu           0x1000d90  /* U+0D90 SINHALA ILUUYANNA */
#define XK_Sinh_e             0x1000d91  /* U+0D91 SINHALA EYANNA */
#define XK_Sinh_ee            0x1000d92  /* U+0D92 SINHALA EEYANNA */
#define XK_Sinh_ai            0x1000d93  /* U+0D93 SINHALA AIYANNA */
#define XK_Sinh_o             0x1000d94  /* U+0D94 SINHALA OYANNA */
#define XK_Sinh_oo            0x1000d95  /* U+0D95 SINHALA OOYANNA */
#define XK_Sinh_au            0x1000d96  /* U+0D96 SINHALA AUYANNA */
#define XK_Sinh_ka            0x1000d9a  /* U+0D9A SINHALA KAYANNA */
#define XK_Sinh_kha           0x1000d9b  /* U+0D9B SINHALA MAHA. KAYANNA */
#define XK_Sinh_ga            0x1000d9c  /* U+0D9C SINHALA GAYANNA */
#define XK_Sinh_gha           0x1000d9d  /* U+0D9D SINHALA MAHA. GAYANNA */
#define XK_Sinh_ng2           0x1000d9e  /* U+0D9E SINHALA KANTAJA NAASIKYAYA */
#define XK_Sinh_nga           0x1000d9f  /* U+0D9F SINHALA SANYAKA GAYANNA */
#define XK_Sinh_ca            0x1000da0  /* U+0DA0 SINHALA CAYANNA */
#define XK_Sinh_cha           0x1000da1  /* U+0DA1 SINHALA MAHA. CAYANNA */
#define XK_Sinh_ja            0x1000da2  /* U+0DA2 SINHALA JAYANNA */
#define XK_Sinh_jha           0x1000da3  /* U+0DA3 SINHALA MAHA. JAYANNA */
#define XK_Sinh_nya           0x1000da4  /* U+0DA4 SINHALA TAALUJA NAASIKYAYA */
#define XK_Sinh_jnya          0x1000da5  /* U+0DA5 SINHALA TAALUJA SANYOOGA NAASIKYAYA */
#define XK_Sinh_nja           0x1000da6  /* U+0DA6 SINHALA SANYAKA JAYANNA */
#define XK_Sinh_tta           0x1000da7  /* U+0DA7 SINHALA TTAYANNA */
#define XK_Sinh_ttha          0x1000da8  /* U+0DA8 SINHALA MAHA. TTAYANNA */
#define XK_Sinh_dda           0x1000da9  /* U+0DA9 SINHALA DDAYANNA */
#define XK_Sinh_ddha          0x1000daa  /* U+0DAA SINHALA MAHA. DDAYANNA */
#define XK_Sinh_nna           0x1000dab  /* U+0DAB SINHALA MUURDHAJA NAYANNA */
#define XK_Sinh_ndda          0x1000dac  /* U+0DAC SINHALA SANYAKA DDAYANNA */
#define XK_Sinh_tha           0x1000dad  /* U+0DAD SINHALA TAYANNA */
#define XK_Sinh_thha          0x1000dae  /* U+0DAE SINHALA MAHA. TAYANNA */
#define XK_Sinh_dha           0x1000daf  /* U+0DAF SINHALA DAYANNA */
#define XK_Sinh_dhha          0x1000db0  /* U+0DB0 SINHALA MAHA. DAYANNA */
#define XK_Sinh_na            0x1000db1  /* U+0DB1 SINHALA DANTAJA NAYANNA */
#define XK_Sinh_ndha          0x1000db3  /* U+0DB3 SINHALA SANYAKA DAYANNA */
#define XK_Sinh_pa            0x1000db4  /* U+0DB4 SINHALA PAYANNA */
#define XK_Sinh_pha           0x1000db5  /* U+0DB5 SINHALA MAHA. PAYANNA */
#define XK_Sinh_ba            0x1000db6  /* U+0DB6 SINHALA BAYANNA */
#define XK_Sinh_bha           0x1000db7  /* U+0DB7 SINHALA MAHA. BAYANNA */
#define XK_Sinh_ma            0x1000db8  /* U+0DB8 SINHALA MAYANNA */
#define XK_Sinh_mba           0x1000db9  /* U+0DB9 SINHALA AMBA BAYANNA */
#define XK_Sinh_ya            0x1000dba  /* U+0DBA SINHALA YAYANNA */
#define XK_Sinh_ra            0x1000dbb  /* U+0DBB SINHALA RAYANNA */
#define XK_Sinh_la            0x1000dbd  /* U+0DBD SINHALA DANTAJA LAYANNA */
#define XK_Sinh_va            0x1000dc0  /* U+0DC0 SINHALA VAYANNA */
#define XK_Sinh_sha           0x1000dc1  /* U+0DC1 SINHALA TAALUJA SAYANNA */
#define XK_Sinh_ssha          0x1000dc2  /* U+0DC2 SINHALA MUURDHAJA SAYANNA */
#define XK_Sinh_sa            0x1000dc3  /* U+0DC3 SINHALA DANTAJA SAYANNA */
#define XK_Sinh_ha            0x1000dc4  /* U+0DC4 SINHALA HAYANNA */
#define XK_Sinh_lla           0x1000dc5  /* U+0DC5 SINHALA MUURDHAJA LAYANNA */
#define XK_Sinh_fa            0x1000dc6  /* U+0DC6 SINHALA FAYANNA */
#define XK_Sinh_al            0x1000dca  /* U+0DCA SINHALA AL-LAKUNA */
#define XK_Sinh_aa2           0x1000dcf  /* U+0DCF SINHALA AELA-PILLA */
#define XK_Sinh_ae2           0x1000dd0  /* U+0DD0 SINHALA AEDA-PILLA */
#define XK_Sinh_aee2          0x1000dd1  /* U+0DD1 SINHALA DIGA AEDA-PILLA */
#define XK_Sinh_i2            0x1000dd2  /* U+0DD2 SINHALA IS-PILLA */
#define XK_Sinh_ii2           0x1000dd3  /* U+0DD3 SINHALA DIGA IS-PILLA */
#define XK_Sinh_u2            0x1000dd4  /* U+0DD4 SINHALA PAA-PILLA */
#define XK_Sinh_uu2           0x1000dd6  /* U+0DD6 SINHALA DIGA PAA-PILLA */
#define XK_Sinh_ru2           0x1000dd8  /* U+0DD8 SINHALA GAETTA-PILLA */
#define XK_Sinh_e2            0x1000dd9  /* U+0DD9 SINHALA KOMBUVA */
#define XK_Sinh_ee2           0x1000dda  /* U+0DDA SINHALA DIGA KOMBUVA */
#define XK_Sinh_ai2           0x1000ddb  /* U+0DDB SINHALA KOMBU DEKA */
#define XK_Sinh_o2            0x1000ddc  /* U+0DDC SINHALA KOMBUVA HAA AELA-PILLA*/
#define XK_Sinh_oo2           0x1000ddd  /* U+0DDD SINHALA KOMBUVA HAA DIGA AELA-PILLA*/
#define XK_Sinh_au2           0x1000dde  /* U+0DDE SINHALA KOMBUVA HAA GAYANUKITTA */
#define XK_Sinh_lu2           0x1000ddf  /* U+0DDF SINHALA GAYANUKITTA */
#define XK_Sinh_ruu2          0x1000df2  /* U+0DF2 SINHALA DIGA GAETTA-PILLA */
#define XK_Sinh_luu2          0x1000df3  /* U+0DF3 SINHALA DIGA GAYANUKITTA */
#define XK_Sinh_kunddaliya    0x1000df4  /* U+0DF4 SINHALA KUNDDALIYA */

* Sun 05 Oct 2014 12:39:54 AM JST
0xff08
* Sun 05 Oct 2014 12:40:10 AM JST
0xff09
* Sun 05 Oct 2014 12:40:18 AM JST
0xff0a
* Sun 05 Oct 2014 12:40:18 AM JST
0xff0b
* Sun 05 Oct 2014 12:40:18 AM JST
0xff0d
* Sun 05 Oct 2014 12:40:18 AM JST
0xff13
* Sun 05 Oct 2014 12:40:19 AM JST
0xff14
* Sun 05 Oct 2014 12:40:19 AM JST
0xff15
* Sun 05 Oct 2014 12:40:19 AM JST
0xff1b
* Sun 05 Oct 2014 12:40:19 AM JST
0xffff
* Sun 05 Oct 2014 12:40:19 AM JST
0xff20
* Sun 05 Oct 2014 12:40:20 AM JST
0xff37
* Sun 05 Oct 2014 12:40:20 AM JST
0xff3c
* Sun 05 Oct 2014 12:40:20 AM JST
0xff3d
* Sun 05 Oct 2014 12:40:20 AM JST
0xff3e
* Sun 05 Oct 2014 12:40:20 AM JST
0xff21
* Sun 05 Oct 2014 12:40:20 AM JST
0xff22
* Sun 05 Oct 2014 12:40:21 AM JST
0xff23
* Sun 05 Oct 2014 12:40:21 AM JST
0xff23
* Sun 05 Oct 2014 12:40:21 AM JST
0xff24
* Sun 05 Oct 2014 12:40:21 AM JST
0xff25
* Sun 05 Oct 2014 12:40:21 AM JST
0xff26
* Sun 05 Oct 2014 12:40:22 AM JST
0xff27
* Sun 05 Oct 2014 12:40:22 AM JST
0xff28
* Sun 05 Oct 2014 12:40:22 AM JST
0xff29
* Sun 05 Oct 2014 12:40:22 AM JST
0xff2a
* Sun 05 Oct 2014 12:40:22 AM JST
0xff2b
* Sun 05 Oct 2014 12:40:23 AM JST
0xff2c
* Sun 05 Oct 2014 12:40:23 AM JST
0xff2d
* Sun 05 Oct 2014 12:40:23 AM JST
0xff2e
* Sun 05 Oct 2014 12:40:23 AM JST
0xff2f
* Sun 05 Oct 2014 12:40:23 AM JST
0xff30
* Sun 05 Oct 2014 12:40:24 AM JST
0xff37
* Sun 05 Oct 2014 12:40:24 AM JST
0xff3d
* Sun 05 Oct 2014 12:40:24 AM JST
0xff3e
* Sun 05 Oct 2014 12:40:24 AM JST
0xff50
* Sun 05 Oct 2014 12:40:24 AM JST
0xff51
* Sun 05 Oct 2014 12:40:25 AM JST
0xff52
* Sun 05 Oct 2014 12:40:25 AM JST
0xff53
* Sun 05 Oct 2014 12:40:25 AM JST
0xff54
* Sun 05 Oct 2014 12:40:25 AM JST
0xff55
* Sun 05 Oct 2014 12:40:25 AM JST
0xff55
* Sun 05 Oct 2014 12:40:26 AM JST
0xff56
* Sun 05 Oct 2014 12:40:26 AM JST
0xff56
* Sun 05 Oct 2014 12:40:26 AM JST
0xff57
* Sun 05 Oct 2014 12:40:26 AM JST
0xff58
* Sun 05 Oct 2014 12:40:27 AM JST
0xff60
* Sun 05 Oct 2014 12:40:27 AM JST
0xff61
* Sun 05 Oct 2014 12:40:27 AM JST
0xff62
* Sun 05 Oct 2014 12:40:27 AM JST
0xff63
* Sun 05 Oct 2014 12:40:28 AM JST
0xff65
* Sun 05 Oct 2014 12:40:28 AM JST
0xff66
* Sun 05 Oct 2014 12:40:28 AM JST
0xff67
* Sun 05 Oct 2014 12:40:28 AM JST
0xff68
* Sun 05 Oct 2014 12:40:29 AM JST
0xff69
* Sun 05 Oct 2014 12:40:29 AM JST
0xff6a
* Sun 05 Oct 2014 12:40:29 AM JST
0xff6b
* Sun 05 Oct 2014 12:40:29 AM JST
0xff7e
* Sun 05 Oct 2014 12:40:29 AM JST
0xff7e
* Sun 05 Oct 2014 12:40:29 AM JST
0xff7f
* Sun 05 Oct 2014 12:40:30 AM JST
0xff80
* Sun 05 Oct 2014 12:40:30 AM JST
0xff89
* Sun 05 Oct 2014 12:40:30 AM JST
0xff8d
* Sun 05 Oct 2014 12:40:31 AM JST
0xff91
* Sun 05 Oct 2014 12:40:31 AM JST
0xff92
* Sun 05 Oct 2014 12:40:31 AM JST
0xff93
* Sun 05 Oct 2014 12:40:31 AM JST
0xff94
* Sun 05 Oct 2014 12:40:31 AM JST
0xff95
* Sun 05 Oct 2014 12:40:31 AM JST
0xff96
* Sun 05 Oct 2014 12:40:32 AM JST
0xff97
* Sun 05 Oct 2014 12:40:32 AM JST
0xff98
* Sun 05 Oct 2014 12:40:32 AM JST
0xff99
* Sun 05 Oct 2014 12:40:32 AM JST
0xff9a
* Sun 05 Oct 2014 12:40:33 AM JST
0xff9a
* Sun 05 Oct 2014 12:40:33 AM JST
0xff9b
* Sun 05 Oct 2014 12:40:33 AM JST
0xff9b
* Sun 05 Oct 2014 12:40:33 AM JST
0xff9c
* Sun 05 Oct 2014 12:40:33 AM JST
0xff9d
* Sun 05 Oct 2014 12:40:33 AM JST
0xff9e
* Sun 05 Oct 2014 12:40:34 AM JST
0xff9f
* Sun 05 Oct 2014 12:40:34 AM JST
0xffbd
* Sun 05 Oct 2014 12:40:34 AM JST
0xffaa
* Sun 05 Oct 2014 12:40:34 AM JST
0xffab
* Sun 05 Oct 2014 12:40:34 AM JST
0xffac
* Sun 05 Oct 2014 12:40:34 AM JST
0xffad
* Sun 05 Oct 2014 12:40:35 AM JST
0xffae
* Sun 05 Oct 2014 12:40:35 AM JST
0xffaf
* Sun 05 Oct 2014 12:40:35 AM JST
0xffb0
* Sun 05 Oct 2014 12:40:35 AM JST
0xffb1
* Sun 05 Oct 2014 12:40:36 AM JST
0xffb2
* Sun 05 Oct 2014 12:40:36 AM JST
0xffb3
* Sun 05 Oct 2014 12:40:36 AM JST
0xffb4
* Sun 05 Oct 2014 12:40:36 AM JST
0xffb5
* Sun 05 Oct 2014 12:40:36 AM JST
0xffb6
* Sun 05 Oct 2014 12:40:37 AM JST
0xffb7
* Sun 05 Oct 2014 12:40:37 AM JST
0xffb8
* Sun 05 Oct 2014 12:40:38 AM JST
0xffb9
* Sun 05 Oct 2014 12:40:38 AM JST
0xffbe
* Sun 05 Oct 2014 12:40:38 AM JST
0xffbf
* Sun 05 Oct 2014 12:40:38 AM JST
0xffc0
* Sun 05 Oct 2014 12:40:39 AM JST
0xffc1
* Sun 05 Oct 2014 12:40:39 AM JST
0xffc2
* Sun 05 Oct 2014 12:40:39 AM JST
0xffc3
* Sun 05 Oct 2014 12:40:39 AM JST
0xffc4
* Sun 05 Oct 2014 12:40:40 AM JST
0xffc5
* Sun 05 Oct 2014 12:40:40 AM JST
0xffc6
* Sun 05 Oct 2014 12:40:40 AM JST
0xffc7
* Sun 05 Oct 2014 12:40:40 AM JST
0xffc8
* Sun 05 Oct 2014 12:40:41 AM JST
0xffc8
* Sun 05 Oct 2014 12:40:41 AM JST
0xffc9
* Sun 05 Oct 2014 12:40:41 AM JST
0xffc9
* Sun 05 Oct 2014 12:40:41 AM JST
0xffca
* Sun 05 Oct 2014 12:40:42 AM JST
0xffca
* Sun 05 Oct 2014 12:40:42 AM JST
0xffcb
* Sun 05 Oct 2014 12:40:43 AM JST
0xffcb
* Sun 05 Oct 2014 12:40:43 AM JST
0xffcc
* Sun 05 Oct 2014 12:40:43 AM JST
0xffcc
* Sun 05 Oct 2014 12:40:43 AM JST
0xffcd
* Sun 05 Oct 2014 12:40:44 AM JST
0xffcd
* Sun 05 Oct 2014 12:40:44 AM JST
0xffce
* Sun 05 Oct 2014 12:40:44 AM JST
0xffce
* Sun 05 Oct 2014 12:40:45 AM JST
0xffcf
* Sun 05 Oct 2014 12:40:45 AM JST
0xffcf
* Sun 05 Oct 2014 12:40:45 AM JST
0xffd0
* Sun 05 Oct 2014 12:40:46 AM JST
0xffd0
* Sun 05 Oct 2014 12:40:46 AM JST
0xffd1
* Sun 05 Oct 2014 12:40:46 AM JST
0xffd1
* Sun 05 Oct 2014 12:40:47 AM JST
0xffd2
* Sun 05 Oct 2014 12:40:47 AM JST
0xffd2
* Sun 05 Oct 2014 12:40:47 AM JST
0xffd3
* Sun 05 Oct 2014 12:40:47 AM JST
0xffd3
* Sun 05 Oct 2014 12:40:48 AM JST
0xffd4
* Sun 05 Oct 2014 12:40:48 AM JST
0xffd4
* Sun 05 Oct 2014 12:40:48 AM JST
0xffd5
* Sun 05 Oct 2014 12:40:49 AM JST
0xffd5
* Sun 05 Oct 2014 12:40:49 AM JST
0xffd6
* Sun 05 Oct 2014 12:40:50 AM JST
0xffd6
* Sun 05 Oct 2014 12:40:50 AM JST
0xffd7
* Sun 05 Oct 2014 12:40:50 AM JST
0xffd7
* Sun 05 Oct 2014 12:40:51 AM JST
0xffd8
* Sun 05 Oct 2014 12:40:51 AM JST
0xffd8
* Sun 05 Oct 2014 12:40:51 AM JST
0xffd9
* Sun 05 Oct 2014 12:40:52 AM JST
0xffd9
* Sun 05 Oct 2014 12:40:52 AM JST
0xffda
* Sun 05 Oct 2014 12:40:52 AM JST
0xffda
* Sun 05 Oct 2014 12:40:53 AM JST
0xffdb
* Sun 05 Oct 2014 12:40:53 AM JST
0xffdb
* Sun 05 Oct 2014 12:40:53 AM JST
0xffdc
* Sun 05 Oct 2014 12:40:54 AM JST
0xffdc
* Sun 05 Oct 2014 12:40:54 AM JST
0xffdd
* Sun 05 Oct 2014 12:40:55 AM JST
0xffdd
* Sun 05 Oct 2014 12:40:55 AM JST
0xffde
* Sun 05 Oct 2014 12:40:55 AM JST
0xffde
* Sun 05 Oct 2014 12:40:56 AM JST
0xffdf
* Sun 05 Oct 2014 12:40:56 AM JST
0xffdf
* Sun 05 Oct 2014 12:40:57 AM JST
0xffe0
* Sun 05 Oct 2014 12:40:57 AM JST
0xffe0
* Sun 05 Oct 2014 12:40:57 AM JST
0xffe1
* Sun 05 Oct 2014 12:40:58 AM JST
0xffe2
* Sun 05 Oct 2014 12:40:58 AM JST
0xffe3
* Sun 05 Oct 2014 12:40:59 AM JST
0xffe4
* Sun 05 Oct 2014 12:40:59 AM JST
0xffe5
* Sun 05 Oct 2014 12:40:59 AM JST
0xffe6
* Sun 05 Oct 2014 12:41:00 AM JST
0xffe7
* Sun 05 Oct 2014 12:41:00 AM JST
0xffe8
* Sun 05 Oct 2014 12:41:01 AM JST
0xffe9
* Sun 05 Oct 2014 12:41:01 AM JST
0xffea
* Sun 05 Oct 2014 12:41:02 AM JST
0xffeb
* Sun 05 Oct 2014 12:41:02 AM JST
0xffec
* Sun 05 Oct 2014 12:41:03 AM JST
0xffed
* Sun 05 Oct 2014 12:41:03 AM JST
0xffee
* Sun 05 Oct 2014 12:41:04 AM JST
0xfe01
* Sun 05 Oct 2014 12:41:04 AM JST
0xfe02
* Sun 05 Oct 2014 12:41:05 AM JST
0xfe03
* Sun 05 Oct 2014 12:41:05 AM JST
0xfe04
* Sun 05 Oct 2014 12:41:06 AM JST
0xfe05
* Sun 05 Oct 2014 12:41:06 AM JST
0xfe11
* Sun 05 Oct 2014 12:41:07 AM JST
0xfe12
* Sun 05 Oct 2014 12:41:07 AM JST
0xfe13
* Sun 05 Oct 2014 12:41:08 AM JST
0xff7e
* Sun 05 Oct 2014 12:41:08 AM JST
0xfe06
* Sun 05 Oct 2014 12:41:09 AM JST
0xfe07
* Sun 05 Oct 2014 12:41:09 AM JST
0xfe08
* Sun 05 Oct 2014 12:41:10 AM JST
0xfe09
* Sun 05 Oct 2014 12:41:10 AM JST
0xfe0a
* Sun 05 Oct 2014 12:41:11 AM JST
0xfe0b
* Sun 05 Oct 2014 12:41:12 AM JST
0xfe0c
* Sun 05 Oct 2014 12:41:12 AM JST
0xfe0d
* Sun 05 Oct 2014 12:41:13 AM JST
0xfe0e
* Sun 05 Oct 2014 12:41:13 AM JST
0xfe0f
* Sun 05 Oct 2014 12:41:14 AM JST
0xfe20
* Sun 05 Oct 2014 12:41:15 AM JST
0xfe21
* Sun 05 Oct 2014 12:41:15 AM JST
0xfe22
* Sun 05 Oct 2014 12:41:16 AM JST
0xfe23
* Sun 05 Oct 2014 12:41:16 AM JST
0xfe24
* Sun 05 Oct 2014 12:41:17 AM JST
0xfe25
* Sun 05 Oct 2014 12:41:17 AM JST
0xfe26
* Sun 05 Oct 2014 12:41:18 AM JST
0xfe27
* Sun 05 Oct 2014 12:41:19 AM JST
0xfe28
* Sun 05 Oct 2014 12:41:19 AM JST
0xfe29
* Sun 05 Oct 2014 12:41:20 AM JST
0xfe2a
* Sun 05 Oct 2014 12:41:20 AM JST
0xfe2b
* Sun 05 Oct 2014 12:41:21 AM JST
0xfe2c
* Sun 05 Oct 2014 12:41:22 AM JST
0xfe2d
* Sun 05 Oct 2014 12:41:22 AM JST
0xfe2e
* Sun 05 Oct 2014 12:41:23 AM JST
0xfe2f
* Sun 05 Oct 2014 12:41:24 AM JST
0xfe30
* Sun 05 Oct 2014 12:41:24 AM JST
0xfe31
* Sun 05 Oct 2014 12:41:25 AM JST
0xfe32
* Sun 05 Oct 2014 12:41:26 AM JST
0xfe33
* Sun 05 Oct 2014 12:41:26 AM JST
0xfe34
* Sun 05 Oct 2014 12:41:27 AM JST
0xfe50
* Sun 05 Oct 2014 12:41:28 AM JST
0xfe51
* Sun 05 Oct 2014 12:41:29 AM JST
0xfe52
* Sun 05 Oct 2014 12:41:29 AM JST
0xfe53
* Sun 05 Oct 2014 12:41:30 AM JST
0xfe53
* Sun 05 Oct 2014 12:41:31 AM JST
0xfe54
* Sun 05 Oct 2014 12:41:31 AM JST
0xfe55
* Sun 05 Oct 2014 12:41:32 AM JST
0xfe56
* Sun 05 Oct 2014 12:41:33 AM JST
0xfe57
* Sun 05 Oct 2014 12:41:34 AM JST
0xfe58
* Sun 05 Oct 2014 12:41:34 AM JST
0xfe59
* Sun 05 Oct 2014 12:41:35 AM JST
0xfe5a
* Sun 05 Oct 2014 12:41:36 AM JST
0xfe5b
* Sun 05 Oct 2014 12:41:36 AM JST
0xfe5c
* Sun 05 Oct 2014 12:41:37 AM JST
0xfe5d
* Sun 05 Oct 2014 12:41:38 AM JST
0xfe5e
* Sun 05 Oct 2014 12:41:39 AM JST
0xfe5f
* Sun 05 Oct 2014 12:41:39 AM JST
0xfe60
* Sun 05 Oct 2014 12:41:40 AM JST
0xfe61
* Sun 05 Oct 2014 12:41:41 AM JST
0xfe62
* Sun 05 Oct 2014 12:41:42 AM JST
0xfe63
* Sun 05 Oct 2014 12:41:43 AM JST
0xfe64
* Sun 05 Oct 2014 12:41:43 AM JST
0xfe64
* Sun 05 Oct 2014 12:41:44 AM JST
0xfe65
* Sun 05 Oct 2014 12:41:45 AM JST
0xfe65
* Sun 05 Oct 2014 12:41:46 AM JST
0xfe66
* Sun 05 Oct 2014 12:41:47 AM JST
0xfe67
* Sun 05 Oct 2014 12:41:48 AM JST
0xfe68
* Sun 05 Oct 2014 12:41:48 AM JST
0xfe69
* Sun 05 Oct 2014 12:41:49 AM JST
0xfe6a
* Sun 05 Oct 2014 12:41:50 AM JST
0xfe6b
* Sun 05 Oct 2014 12:41:51 AM JST
0xfe6c
* Sun 05 Oct 2014 12:41:52 AM JST
0xfe6d
* Sun 05 Oct 2014 12:41:53 AM JST
0xfe6e
* Sun 05 Oct 2014 12:41:53 AM JST
0xfe6f
* Sun 05 Oct 2014 12:41:54 AM JST
0xfe80
* Sun 05 Oct 2014 12:41:55 AM JST
0xfe81
* Sun 05 Oct 2014 12:41:56 AM JST
0xfe82
* Sun 05 Oct 2014 12:41:57 AM JST
0xfe83
* Sun 05 Oct 2014 12:41:58 AM JST
0xfe84
* Sun 05 Oct 2014 12:41:59 AM JST
0xfe85
* Sun 05 Oct 2014 12:42:00 AM JST
0xfe86
* Sun 05 Oct 2014 12:42:00 AM JST
0xfe87
* Sun 05 Oct 2014 12:42:01 AM JST
0xfe88
* Sun 05 Oct 2014 12:42:02 AM JST
0xfe89
* Sun 05 Oct 2014 12:42:03 AM JST
0xfe8a
* Sun 05 Oct 2014 12:42:04 AM JST
0xfe8b
* Sun 05 Oct 2014 12:42:05 AM JST
0xfe8c
* Sun 05 Oct 2014 12:42:06 AM JST
0xfed0
* Sun 05 Oct 2014 12:42:07 AM JST
0xfed1
* Sun 05 Oct 2014 12:42:08 AM JST
0xfed2
* Sun 05 Oct 2014 12:42:09 AM JST
0xfed4
* Sun 05 Oct 2014 12:42:10 AM JST
0xfed5
* Sun 05 Oct 2014 12:42:11 AM JST
0xfe70
* Sun 05 Oct 2014 12:42:12 AM JST
0xfe71
* Sun 05 Oct 2014 12:42:13 AM JST
0xfe72
* Sun 05 Oct 2014 12:42:14 AM JST
0xfe73
* Sun 05 Oct 2014 12:42:15 AM JST
0xfe74
* Sun 05 Oct 2014 12:42:17 AM JST
0xfe75
* Sun 05 Oct 2014 12:42:17 AM JST
0xfe76
* Sun 05 Oct 2014 12:42:18 AM JST
0xfe77
* Sun 05 Oct 2014 12:42:20 AM JST
0xfe78
* Sun 05 Oct 2014 12:42:21 AM JST
0xfe79
* Sun 05 Oct 2014 12:42:22 AM JST
0xfe7a
* Sun 05 Oct 2014 12:42:23 AM JST
0xfee0
* Sun 05 Oct 2014 12:42:24 AM JST
0xfee1
* Sun 05 Oct 2014 12:42:26 AM JST
0xfee2
* Sun 05 Oct 2014 12:42:27 AM JST
0xfee3
* Sun 05 Oct 2014 12:42:28 AM JST
0xfee4
* Sun 05 Oct 2014 12:42:29 AM JST
0xfee5
* Sun 05 Oct 2014 12:42:30 AM JST
0xfee6
* Sun 05 Oct 2014 12:42:31 AM JST
0xfee7
* Sun 05 Oct 2014 12:42:32 AM JST
0xfee8
* Sun 05 Oct 2014 12:42:33 AM JST
0xfee9
* Sun 05 Oct 2014 12:42:35 AM JST
0xfeea
* Sun 05 Oct 2014 12:42:36 AM JST
0xfeeb
* Sun 05 Oct 2014 12:42:37 AM JST
0xfeec
* Sun 05 Oct 2014 12:42:38 AM JST
0xfeed
* Sun 05 Oct 2014 12:42:39 AM JST
0xfeee
* Sun 05 Oct 2014 12:42:41 AM JST
0xfeef
* Sun 05 Oct 2014 12:42:42 AM JST
0xfef0
* Sun 05 Oct 2014 12:42:43 AM JST
0xfef1
* Sun 05 Oct 2014 12:42:44 AM JST
0xfef2
* Sun 05 Oct 2014 12:42:45 AM JST
0xfef3
* Sun 05 Oct 2014 12:42:46 AM JST
0xfef4
* Sun 05 Oct 2014 12:42:48 AM JST
0xfef5
* Sun 05 Oct 2014 12:42:49 AM JST
0xfef6
* Sun 05 Oct 2014 12:42:50 AM JST
0xfef7
* Sun 05 Oct 2014 12:42:51 AM JST
0xfef8
* Sun 05 Oct 2014 12:42:52 AM JST
0xfefd
* Sun 05 Oct 2014 12:42:53 AM JST
0xfef9
* Sun 05 Oct 2014 12:42:55 AM JST
0xfefa
* Sun 05 Oct 2014 12:42:56 AM JST
0xfefb
* Sun 05 Oct 2014 12:42:57 AM JST
0xfefc
* Sun 05 Oct 2014 12:42:58 AM JST
0xfea0
* Sun 05 Oct 2014 12:43:00 AM JST
0xfea1
* Sun 05 Oct 2014 12:43:01 AM JST
0xfea2
* Sun 05 Oct 2014 12:43:02 AM JST
0xfea3
* Sun 05 Oct 2014 12:43:03 AM JST
0xfea4
* Sun 05 Oct 2014 12:43:05 AM JST
0xfea5
* Sun 05 Oct 2014 12:43:06 AM JST
0xfd01
* Sun 05 Oct 2014 12:43:07 AM JST
0xfd02
* Sun 05 Oct 2014 12:43:09 AM JST
0xfd03
* Sun 05 Oct 2014 12:43:10 AM JST
0xfd04
* Sun 05 Oct 2014 12:43:11 AM JST
0xfd05
* Sun 05 Oct 2014 12:43:13 AM JST
0xfd06
* Sun 05 Oct 2014 12:43:14 AM JST
0xfd07
* Sun 05 Oct 2014 12:43:15 AM JST
0xfd08
* Sun 05 Oct 2014 12:43:17 AM JST
0xfd09
* Sun 05 Oct 2014 12:43:18 AM JST
0xfd0a
* Sun 05 Oct 2014 12:43:20 AM JST
0xfd0b
* Sun 05 Oct 2014 12:43:21 AM JST
0xfd0c
* Sun 05 Oct 2014 12:43:22 AM JST
0xfd0d
* Sun 05 Oct 2014 12:43:24 AM JST
0xfd0e
* Sun 05 Oct 2014 12:43:26 AM JST
0xfd0f
* Sun 05 Oct 2014 12:43:27 AM JST
0xfd10
* Sun 05 Oct 2014 12:43:29 AM JST
0xfd11
* Sun 05 Oct 2014 12:43:30 AM JST
0xfd12
* Sun 05 Oct 2014 12:43:32 AM JST
0xfd13
* Sun 05 Oct 2014 12:43:33 AM JST
0xfd14
* Sun 05 Oct 2014 12:43:35 AM JST
0xfd15
* Sun 05 Oct 2014 12:43:36 AM JST
0xfd16
* Sun 05 Oct 2014 12:43:38 AM JST
0xfd17
* Sun 05 Oct 2014 12:43:40 AM JST
0xfd18
* Sun 05 Oct 2014 12:43:41 AM JST
0xfd19
* Sun 05 Oct 2014 12:43:42 AM JST
0xfd1a
* Sun 05 Oct 2014 12:43:44 AM JST
0xfd1b
* Sun 05 Oct 2014 12:43:46 AM JST
0xfd1c
* Sun 05 Oct 2014 12:43:47 AM JST
0xfd1d
* Sun 05 Oct 2014 12:43:49 AM JST
0xfd1e
* Sun 05 Oct 2014 12:43:50 AM JST
0x0020
* Sun 05 Oct 2014 12:43:52 AM JST
0x0021
* Sun 05 Oct 2014 12:43:54 AM JST
0x0022
* Sun 05 Oct 2014 12:43:55 AM JST
0x0023
* Sun 05 Oct 2014 12:43:57 AM JST
0x0024
* Sun 05 Oct 2014 12:43:59 AM JST
0x0025
* Sun 05 Oct 2014 12:44:00 AM JST
0x0026
* Sun 05 Oct 2014 12:44:02 AM JST
0x0027
* Sun 05 Oct 2014 12:44:04 AM JST
0x0027
* Sun 05 Oct 2014 12:44:06 AM JST
0x0028
* Sun 05 Oct 2014 12:44:07 AM JST
0x0029
* Sun 05 Oct 2014 12:44:09 AM JST
0x002a
* Sun 05 Oct 2014 12:44:11 AM JST
0x002b
* Sun 05 Oct 2014 12:44:13 AM JST
0x002c
* Sun 05 Oct 2014 12:44:14 AM JST
0x002d
* Sun 05 Oct 2014 12:44:16 AM JST
0x002e
* Sun 05 Oct 2014 12:44:18 AM JST
0x002f
* Sun 05 Oct 2014 12:44:20 AM JST
0x0030
* Sun 05 Oct 2014 12:44:22 AM JST
0x0031
* Sun 05 Oct 2014 12:44:24 AM JST
0x0032
* Sun 05 Oct 2014 12:44:25 AM JST
0x0033
* Sun 05 Oct 2014 12:44:27 AM JST
0x0034
* Sun 05 Oct 2014 12:44:29 AM JST
0x0035
* Sun 05 Oct 2014 12:44:30 AM JST
0x0036
* Sun 05 Oct 2014 12:44:33 AM JST
0x0037
* Sun 05 Oct 2014 12:44:34 AM JST
0x0038
* Sun 05 Oct 2014 12:44:36 AM JST
0x0039
* Sun 05 Oct 2014 12:44:38 AM JST
0x003a
* Sun 05 Oct 2014 12:44:40 AM JST
0x003b
* Sun 05 Oct 2014 12:44:42 AM JST
0x003c
* Sun 05 Oct 2014 12:44:44 AM JST
0x003d
* Sun 05 Oct 2014 12:44:45 AM JST
0x003e
* Sun 05 Oct 2014 12:44:47 AM JST
0x003f
* Sun 05 Oct 2014 12:44:49 AM JST
0x0040
* Sun 05 Oct 2014 12:44:51 AM JST
0x0041
* Sun 05 Oct 2014 12:44:53 AM JST
0x0042
* Sun 05 Oct 2014 12:44:55 AM JST
0x0043
* Sun 05 Oct 2014 12:44:57 AM JST
0x0044
* Sun 05 Oct 2014 12:44:59 AM JST
0x0045
* Sun 05 Oct 2014 12:45:01 AM JST
0x0046
* Sun 05 Oct 2014 12:45:03 AM JST
0x0047
* Sun 05 Oct 2014 12:45:05 AM JST
0x0048
* Sun 05 Oct 2014 12:45:07 AM JST
0x0049
* Sun 05 Oct 2014 12:45:09 AM JST
0x004a
* Sun 05 Oct 2014 12:45:11 AM JST
0x004b
* Sun 05 Oct 2014 12:45:13 AM JST
0x004c
* Sun 05 Oct 2014 12:45:15 AM JST
0x004d
* Sun 05 Oct 2014 12:45:17 AM JST
0x004e
* Sun 05 Oct 2014 12:45:19 AM JST
0x004f
* Sun 05 Oct 2014 12:45:21 AM JST
0x0050
* Sun 05 Oct 2014 12:45:24 AM JST
0x0051
* Sun 05 Oct 2014 12:45:26 AM JST
0x0052
* Sun 05 Oct 2014 12:45:29 AM JST
0x0053
* Sun 05 Oct 2014 12:45:31 AM JST
0x0054
* Sun 05 Oct 2014 12:45:34 AM JST
0x0055
* Sun 05 Oct 2014 12:45:36 AM JST
0x0056
* Sun 05 Oct 2014 12:45:38 AM JST
0x0057
* Sun 05 Oct 2014 12:45:41 AM JST
0x0058
* Sun 05 Oct 2014 12:45:45 AM JST
0x0059
* Sun 05 Oct 2014 12:45:47 AM JST
0x005a
* Sun 05 Oct 2014 12:45:49 AM JST
0x005b
* Sun 05 Oct 2014 12:45:52 AM JST
0x005c
* Sun 05 Oct 2014 12:45:55 AM JST
0x005d
* Sun 05 Oct 2014 12:45:58 AM JST
0x005e
* Sun 05 Oct 2014 12:46:00 AM JST
0x005f
* Sun 05 Oct 2014 12:46:02 AM JST
0x0060
* Sun 05 Oct 2014 12:46:04 AM JST
0x0060
* Sun 05 Oct 2014 12:46:06 AM JST
0x0061
* Sun 05 Oct 2014 12:46:08 AM JST
0x0062
* Sun 05 Oct 2014 12:46:11 AM JST
0x0063
* Sun 05 Oct 2014 12:46:13 AM JST
0x0064
* Sun 05 Oct 2014 12:46:16 AM JST
0x0065
* Sun 05 Oct 2014 12:46:18 AM JST
0x0066
* Sun 05 Oct 2014 12:46:20 AM JST
0x0067
* Sun 05 Oct 2014 12:46:23 AM JST
0x0068
* Sun 05 Oct 2014 12:46:26 AM JST
0x0069
* Sun 05 Oct 2014 12:46:28 AM JST
0x006a
* Sun 05 Oct 2014 12:46:31 AM JST
0x006b
* Sun 05 Oct 2014 12:46:33 AM JST
0x006c
* Sun 05 Oct 2014 12:46:36 AM JST
0x006d
* Sun 05 Oct 2014 12:46:39 AM JST
0x006e
* Sun 05 Oct 2014 12:46:42 AM JST
0x006f
* Sun 05 Oct 2014 12:46:44 AM JST
0x0070
* Sun 05 Oct 2014 12:46:46 AM JST
0x0071
* Sun 05 Oct 2014 12:46:49 AM JST
0x0072
* Sun 05 Oct 2014 12:46:52 AM JST
0x0073
* Sun 05 Oct 2014 12:46:55 AM JST
0x0074
* Sun 05 Oct 2014 12:46:58 AM JST
0x0075
* Sun 05 Oct 2014 12:47:02 AM JST
0x0076
* Sun 05 Oct 2014 12:47:06 AM JST
0x0077
* Sun 05 Oct 2014 12:47:08 AM JST
0x0078
* Sun 05 Oct 2014 12:47:11 AM JST
0x0079
* Sun 05 Oct 2014 12:47:13 AM JST
0x007a
* Sun 05 Oct 2014 12:47:16 AM JST
0x007b
* Sun 05 Oct 2014 12:47:18 AM JST
0x007c
* Sun 05 Oct 2014 12:47:20 AM JST
0x007d
* Sun 05 Oct 2014 12:47:23 AM JST
0x007e
* Sun 05 Oct 2014 12:47:25 AM JST
0x00a0
* Sun 05 Oct 2014 12:47:28 AM JST
0x00a1
* Sun 05 Oct 2014 12:47:32 AM JST
0x00a2
* Sun 05 Oct 2014 12:47:35 AM JST
0x00a3
* Sun 05 Oct 2014 12:47:39 AM JST
0x00a4
* Sun 05 Oct 2014 12:47:42 AM JST
0x00a5
* Sun 05 Oct 2014 12:47:45 AM JST
0x00a6
* Sun 05 Oct 2014 12:47:47 AM JST
0x00a7
* Sun 05 Oct 2014 12:47:50 AM JST
0x00a8
* Sun 05 Oct 2014 12:47:53 AM JST
0x00a9
* Sun 05 Oct 2014 12:47:56 AM JST
0x00aa
* Sun 05 Oct 2014 12:47:59 AM JST
0x00ab
* Sun 05 Oct 2014 12:48:02 AM JST
0x00ac
* Sun 05 Oct 2014 12:48:04 AM JST
0x00ad
* Sun 05 Oct 2014 12:48:08 AM JST
0x00ae
* Sun 05 Oct 2014 12:48:10 AM JST
0x00af
* Sun 05 Oct 2014 12:48:13 AM JST
0x00b0
* Sun 05 Oct 2014 12:48:16 AM JST
0x00b1
* Sun 05 Oct 2014 12:48:19 AM JST
0x00b2
* Sun 05 Oct 2014 12:48:22 AM JST
0x00b3
* Sun 05 Oct 2014 12:48:25 AM JST
0x00b4
* Sun 05 Oct 2014 12:48:28 AM JST
0x00b5
* Sun 05 Oct 2014 12:48:31 AM JST
0x00b6
* Sun 05 Oct 2014 12:48:34 AM JST
0x00b7
* Sun 05 Oct 2014 12:48:37 AM JST
0x00b8
* Sun 05 Oct 2014 12:48:40 AM JST
0x00b9
* Sun 05 Oct 2014 12:48:43 AM JST
0x00ba
* Sun 05 Oct 2014 12:48:46 AM JST
0x00bb
* Sun 05 Oct 2014 12:48:49 AM JST
0x00bc
* Sun 05 Oct 2014 12:48:52 AM JST
0x00bd
* Sun 05 Oct 2014 12:48:56 AM JST
0x00be
* Sun 05 Oct 2014 12:48:58 AM JST
0x00bf
* Sun 05 Oct 2014 12:49:01 AM JST
0x00c0
* Sun 05 Oct 2014 12:49:04 AM JST
0x00c1
* Sun 05 Oct 2014 12:49:07 AM JST
0x00c2
* Sun 05 Oct 2014 12:49:10 AM JST
0x00c3
* Sun 05 Oct 2014 12:49:13 AM JST
0x00c4
* Sun 05 Oct 2014 12:49:16 AM JST
0x00c5
* Sun 05 Oct 2014 12:49:19 AM JST
0x00c6
* Sun 05 Oct 2014 12:49:22 AM JST
0x00c7
* Sun 05 Oct 2014 12:49:25 AM JST
0x00c8
* Sun 05 Oct 2014 12:49:28 AM JST
0x00c9
* Sun 05 Oct 2014 12:49:31 AM JST
0x00ca
* Sun 05 Oct 2014 12:49:34 AM JST
0x00cb
* Sun 05 Oct 2014 12:49:38 AM JST
0x00cc
* Sun 05 Oct 2014 12:49:40 AM JST
0x00cd
* Sun 05 Oct 2014 12:49:44 AM JST
0x00ce
* Sun 05 Oct 2014 12:49:47 AM JST
0x00cf
* Sun 05 Oct 2014 12:49:50 AM JST
0x00d0
* Sun 05 Oct 2014 12:49:53 AM JST
0x00d0
* Sun 05 Oct 2014 12:49:56 AM JST
0x00d1
* Sun 05 Oct 2014 12:49:59 AM JST
0x00d2
* Sun 05 Oct 2014 12:50:01 AM JST
0x00d3
* Sun 05 Oct 2014 12:50:05 AM JST
0x00d4
* Sun 05 Oct 2014 12:50:08 AM JST
0x00d5
* Sun 05 Oct 2014 12:50:11 AM JST
0x00d6
* Sun 05 Oct 2014 12:50:14 AM JST
0x00d7
* Sun 05 Oct 2014 12:50:18 AM JST
0x00d8
* Sun 05 Oct 2014 12:50:21 AM JST
0x00d8
* Sun 05 Oct 2014 12:50:25 AM JST
0x00d9
* Sun 05 Oct 2014 12:50:29 AM JST
0x00da
* Sun 05 Oct 2014 12:50:33 AM JST
0x00db
* Sun 05 Oct 2014 12:50:36 AM JST
0x00dc
* Sun 05 Oct 2014 12:50:39 AM JST
0x00dd
* Sun 05 Oct 2014 12:50:42 AM JST
0x00de
* Sun 05 Oct 2014 12:50:46 AM JST
0x00de
* Sun 05 Oct 2014 12:50:49 AM JST
0x00df
* Sun 05 Oct 2014 12:50:53 AM JST
0x00e0
* Sun 05 Oct 2014 12:50:56 AM JST
0x00e1
* Sun 05 Oct 2014 12:50:59 AM JST
0x00e2
* Sun 05 Oct 2014 12:51:02 AM JST
0x00e3
* Sun 05 Oct 2014 12:51:06 AM JST
0x00e4
* Sun 05 Oct 2014 12:51:10 AM JST
0x00e5
* Sun 05 Oct 2014 12:51:13 AM JST
0x00e6
* Sun 05 Oct 2014 12:51:16 AM JST
0x00e7
* Sun 05 Oct 2014 12:51:20 AM JST
0x00e8
* Sun 05 Oct 2014 12:51:23 AM JST
0x00e9
* Sun 05 Oct 2014 12:51:26 AM JST
0x00ea
* Sun 05 Oct 2014 12:51:30 AM JST
0x00eb
* Sun 05 Oct 2014 12:51:33 AM JST
0x00ec
* Sun 05 Oct 2014 12:51:37 AM JST
0x00ed
* Sun 05 Oct 2014 12:51:41 AM JST
0x00ee
* Sun 05 Oct 2014 12:51:45 AM JST
0x00ef
* Sun 05 Oct 2014 12:51:48 AM JST
0x00f0
* Sun 05 Oct 2014 12:51:52 AM JST
0x00f1
* Sun 05 Oct 2014 12:51:57 AM JST
0x00f2
* Sun 05 Oct 2014 12:52:00 AM JST
0x00f3
* Sun 05 Oct 2014 12:52:04 AM JST
0x00f4
* Sun 05 Oct 2014 12:52:08 AM JST
0x00f5
* Sun 05 Oct 2014 12:52:12 AM JST
0x00f6
* Sun 05 Oct 2014 12:52:16 AM JST
0x00f7
* Sun 05 Oct 2014 12:52:19 AM JST
0x00f8
* Sun 05 Oct 2014 12:52:23 AM JST
0x00f8
* Sun 05 Oct 2014 12:52:27 AM JST
0x00f9
* Sun 05 Oct 2014 12:52:30 AM JST
0x00fa
* Sun 05 Oct 2014 12:52:34 AM JST
0x00fb
* Sun 05 Oct 2014 12:52:37 AM JST
0x00fc
* Sun 05 Oct 2014 12:52:41 AM JST
0x00fd
* Sun 05 Oct 2014 12:52:45 AM JST
0x00fe
* Sun 05 Oct 2014 12:52:48 AM JST
0x00ff
* Sun 05 Oct 2014 12:52:52 AM JST
0x01a1
* Sun 05 Oct 2014 12:52:56 AM JST
0x01a2
* Sun 05 Oct 2014 12:53:00 AM JST
0x01a3
* Sun 05 Oct 2014 12:53:05 AM JST
0x01a5
* Sun 05 Oct 2014 12:53:08 AM JST
0x01a6
* Sun 05 Oct 2014 12:53:12 AM JST
0x01a9
* Sun 05 Oct 2014 12:53:17 AM JST
0x01aa
* Sun 05 Oct 2014 12:53:20 AM JST
0x01ab
* Sun 05 Oct 2014 12:53:25 AM JST
0x01ac
* Sun 05 Oct 2014 12:53:30 AM JST
0x01ae
* Sun 05 Oct 2014 12:53:34 AM JST
0x01af
* Sun 05 Oct 2014 12:53:38 AM JST
0x01b1
* Sun 05 Oct 2014 12:53:41 AM JST
0x01b2
* Sun 05 Oct 2014 12:53:45 AM JST
0x01b3
* Sun 05 Oct 2014 12:53:50 AM JST
0x01b5
* Sun 05 Oct 2014 12:53:54 AM JST
0x01b6
* Sun 05 Oct 2014 12:53:58 AM JST
0x01b7
* Sun 05 Oct 2014 12:54:02 AM JST
0x01b9
* Sun 05 Oct 2014 12:54:06 AM JST
0x01ba
* Sun 05 Oct 2014 12:54:10 AM JST
0x01bb
* Sun 05 Oct 2014 12:54:15 AM JST
0x01bc
* Sun 05 Oct 2014 12:54:19 AM JST
0x01bd
* Sun 05 Oct 2014 12:54:22 AM JST
0x01be
* Sun 05 Oct 2014 12:54:26 AM JST
0x01bf
* Sun 05 Oct 2014 12:54:30 AM JST
0x01c0
* Sun 05 Oct 2014 12:54:35 AM JST
0x01c3
* Sun 05 Oct 2014 12:54:40 AM JST
0x01c5
* Sun 05 Oct 2014 12:54:44 AM JST
0x01c6
* Sun 05 Oct 2014 12:54:48 AM JST
0x01c8
* Sun 05 Oct 2014 12:54:53 AM JST
0x01ca
* Sun 05 Oct 2014 12:54:58 AM JST
0x01cc
* Sun 05 Oct 2014 12:55:02 AM JST
0x01cf
* Sun 05 Oct 2014 12:55:07 AM JST
0x01d0
* Sun 05 Oct 2014 12:55:11 AM JST
0x01d1
* Sun 05 Oct 2014 12:55:15 AM JST
0x01d2
* Sun 05 Oct 2014 12:55:19 AM JST
0x01d5
* Sun 05 Oct 2014 12:55:23 AM JST
0x01d8
* Sun 05 Oct 2014 12:55:27 AM JST
0x01d9
* Sun 05 Oct 2014 12:55:32 AM JST
0x01db
* Sun 05 Oct 2014 12:55:36 AM JST
0x01de
* Sun 05 Oct 2014 12:55:42 AM JST
0x01e0
* Sun 05 Oct 2014 12:55:46 AM JST
0x01e3
* Sun 05 Oct 2014 12:55:51 AM JST
0x01e5
* Sun 05 Oct 2014 12:55:56 AM JST
0x01e6
* Sun 05 Oct 2014 12:56:01 AM JST
0x01e8
* Sun 05 Oct 2014 12:56:06 AM JST
0x01ea
* Sun 05 Oct 2014 12:56:11 AM JST
0x01ec
* Sun 05 Oct 2014 12:56:16 AM JST
0x01ef
* Sun 05 Oct 2014 12:56:21 AM JST
0x01f0
* Sun 05 Oct 2014 12:56:25 AM JST
0x01f1
* Sun 05 Oct 2014 12:56:30 AM JST
0x01f2
* Sun 05 Oct 2014 12:56:36 AM JST
0x01f5
* Sun 05 Oct 2014 12:56:41 AM JST
0x01f8
* Sun 05 Oct 2014 12:56:45 AM JST
0x01f9
* Sun 05 Oct 2014 12:56:50 AM JST
0x01fb
* Sun 05 Oct 2014 12:56:55 AM JST
0x01fe
* Sun 05 Oct 2014 12:57:00 AM JST
0x01ff
* Sun 05 Oct 2014 12:57:05 AM JST
0x02a1
* Sun 05 Oct 2014 12:57:09 AM JST
0x02a6
* Sun 05 Oct 2014 12:57:14 AM JST
0x02a9
* Sun 05 Oct 2014 12:57:19 AM JST
0x02ab
* Sun 05 Oct 2014 12:57:24 AM JST
0x02ac
* Sun 05 Oct 2014 12:57:28 AM JST
0x02b1
* Sun 05 Oct 2014 12:57:33 AM JST
0x02b6
* Sun 05 Oct 2014 12:57:38 AM JST
0x02b9
* Sun 05 Oct 2014 12:57:43 AM JST
0x02bb
* Sun 05 Oct 2014 12:57:48 AM JST
0x02bc
* Sun 05 Oct 2014 12:57:52 AM JST
0x02c5
* Sun 05 Oct 2014 12:57:57 AM JST
0x02c6
* Sun 05 Oct 2014 12:58:01 AM JST
0x02d5
* Sun 05 Oct 2014 12:58:06 AM JST
0x02d8
* Sun 05 Oct 2014 12:58:11 AM JST
0x02dd
* Sun 05 Oct 2014 12:58:16 AM JST
0x02de
* Sun 05 Oct 2014 12:58:21 AM JST
0x02e5
* Sun 05 Oct 2014 12:58:26 AM JST
0x02e6
* Sun 05 Oct 2014 12:58:31 AM JST
0x02f5
* Sun 05 Oct 2014 12:58:35 AM JST
0x02f8
* Sun 05 Oct 2014 12:58:40 AM JST
0x02fd
* Sun 05 Oct 2014 12:58:45 AM JST
0x02fe
* Sun 05 Oct 2014 12:58:50 AM JST
0x03a2
* Sun 05 Oct 2014 12:58:56 AM JST
0x03a2
* Sun 05 Oct 2014 12:59:01 AM JST
0x03a3
* Sun 05 Oct 2014 12:59:05 AM JST
0x03a5
* Sun 05 Oct 2014 12:59:10 AM JST
0x03a6
* Sun 05 Oct 2014 12:59:15 AM JST
0x03aa
* Sun 05 Oct 2014 12:59:19 AM JST
0x03ab
* Sun 05 Oct 2014 12:59:24 AM JST
0x03ac
* Sun 05 Oct 2014 12:59:29 AM JST
0x03b3
* Sun 05 Oct 2014 12:59:34 AM JST
0x03b5
* Sun 05 Oct 2014 12:59:39 AM JST
0x03b6
* Sun 05 Oct 2014 12:59:43 AM JST
0x03ba
* Sun 05 Oct 2014 12:59:49 AM JST
0x03bb
* Sun 05 Oct 2014 12:59:54 AM JST
0x03bc
* Sun 05 Oct 2014 12:59:59 AM JST
0x03bd
* Sun 05 Oct 2014 01:00:04 AM JST
0x03bf
* Sun 05 Oct 2014 01:00:10 AM JST
0x03c0
* Sun 05 Oct 2014 01:00:16 AM JST
0x03c7
* Sun 05 Oct 2014 01:00:21 AM JST
0x03cc
* Sun 05 Oct 2014 01:00:27 AM JST
0x03cf
* Sun 05 Oct 2014 01:00:33 AM JST
0x03d1
* Sun 05 Oct 2014 01:00:39 AM JST
0x03d2
* Sun 05 Oct 2014 01:00:44 AM JST
0x03d3
* Sun 05 Oct 2014 01:00:49 AM JST
0x03d9
* Sun 05 Oct 2014 01:00:54 AM JST
0x03dd
* Sun 05 Oct 2014 01:00:59 AM JST
0x03de
* Sun 05 Oct 2014 01:01:05 AM JST
0x03e0
* Sun 05 Oct 2014 01:01:11 AM JST
0x03e7
* Sun 05 Oct 2014 01:01:16 AM JST
0x03ec
* Sun 05 Oct 2014 01:01:22 AM JST
0x03ef
* Sun 05 Oct 2014 01:01:27 AM JST
0x03f1
* Sun 05 Oct 2014 01:01:34 AM JST
0x03f2
* Sun 05 Oct 2014 01:01:39 AM JST
0x03f3
* Sun 05 Oct 2014 01:01:44 AM JST
0x03f9
* Sun 05 Oct 2014 01:01:50 AM JST
0x03fd
* Sun 05 Oct 2014 01:01:56 AM JST
0x03fe
* Sun 05 Oct 2014 01:02:01 AM JST
0x1000174
* Sun 05 Oct 2014 01:02:08 AM JST
0x1000175
* Sun 05 Oct 2014 01:02:13 AM JST
0x1000176
* Sun 05 Oct 2014 01:02:20 AM JST
0x1000177
* Sun 05 Oct 2014 01:02:26 AM JST
0x1001e02
* Sun 05 Oct 2014 01:02:33 AM JST
0x1001e03
* Sun 05 Oct 2014 01:02:38 AM JST
0x1001e0a
* Sun 05 Oct 2014 01:02:44 AM JST
0x1001e0b
* Sun 05 Oct 2014 01:02:49 AM JST
0x1001e1e
* Sun 05 Oct 2014 01:02:55 AM JST
0x1001e1f
* Sun 05 Oct 2014 01:03:02 AM JST
0x1001e40
* Sun 05 Oct 2014 01:03:08 AM JST
0x1001e41
* Sun 05 Oct 2014 01:03:14 AM JST
0x1001e56
* Sun 05 Oct 2014 01:03:19 AM JST
0x1001e57
* Sun 05 Oct 2014 01:03:26 AM JST
0x1001e60
* Sun 05 Oct 2014 01:03:32 AM JST
0x1001e61
* Sun 05 Oct 2014 01:03:39 AM JST
0x1001e6a
* Sun 05 Oct 2014 01:03:45 AM JST
0x1001e6b
* Sun 05 Oct 2014 01:03:50 AM JST
0x1001e80
* Sun 05 Oct 2014 01:03:57 AM JST
0x1001e81
* Sun 05 Oct 2014 01:04:02 AM JST
0x1001e82
* Sun 05 Oct 2014 01:04:08 AM JST
0x1001e83
* Sun 05 Oct 2014 01:04:15 AM JST
0x1001e84
* Sun 05 Oct 2014 01:04:21 AM JST
0x1001e85
* Sun 05 Oct 2014 01:04:26 AM JST
0x1001ef2
* Sun 05 Oct 2014 01:04:34 AM JST
0x1001ef3
* Sun 05 Oct 2014 01:04:40 AM JST
0x13bc
* Sun 05 Oct 2014 01:04:47 AM JST
0x13bd
* Sun 05 Oct 2014 01:04:54 AM JST
0x13be
* Sun 05 Oct 2014 01:05:01 AM JST
0x047e
* Sun 05 Oct 2014 01:05:08 AM JST
0x04a1
* Sun 05 Oct 2014 01:05:14 AM JST
0x04a2
* Sun 05 Oct 2014 01:05:20 AM JST
0x04a3
* Sun 05 Oct 2014 01:05:26 AM JST
0x04a4
* Sun 05 Oct 2014 01:05:32 AM JST
0x04a5
* Sun 05 Oct 2014 01:05:38 AM JST
0x04a5
* Sun 05 Oct 2014 01:05:44 AM JST
0x04a6
* Sun 05 Oct 2014 01:05:50 AM JST
0x04a7
* Sun 05 Oct 2014 01:05:57 AM JST
0x04a8
* Sun 05 Oct 2014 01:06:03 AM JST
0x04a9
* Sun 05 Oct 2014 01:06:09 AM JST
0x04aa
* Sun 05 Oct 2014 01:06:17 AM JST
0x04ab
* Sun 05 Oct 2014 01:06:22 AM JST
0x04ac
* Sun 05 Oct 2014 01:06:28 AM JST
0x04ad
* Sun 05 Oct 2014 01:06:34 AM JST
0x04ae
* Sun 05 Oct 2014 01:06:42 AM JST
0x04af
* Sun 05 Oct 2014 01:06:48 AM JST
0x04af
* Sun 05 Oct 2014 01:06:54 AM JST
0x04b0
* Sun 05 Oct 2014 01:07:00 AM JST
0x04b1
* Sun 05 Oct 2014 01:07:08 AM JST
0x04b2
* Sun 05 Oct 2014 01:07:14 AM JST
0x04b3
* Sun 05 Oct 2014 01:07:20 AM JST
0x04b4
* Sun 05 Oct 2014 01:07:28 AM JST
0x04b5
* Sun 05 Oct 2014 01:07:34 AM JST
0x04b6
* Sun 05 Oct 2014 01:07:41 AM JST
0x04b7
* Sun 05 Oct 2014 01:07:48 AM JST
0x04b8
* Sun 05 Oct 2014 01:07:54 AM JST
0x04b9
* Sun 05 Oct 2014 01:08:01 AM JST
0x04ba
* Sun 05 Oct 2014 01:08:07 AM JST
0x04bb
* Sun 05 Oct 2014 01:08:14 AM JST
0x04bc
* Sun 05 Oct 2014 01:08:21 AM JST
0x04bd
* Sun 05 Oct 2014 01:08:27 AM JST
0x04be
* Sun 05 Oct 2014 01:08:34 AM JST
0x04bf
* Sun 05 Oct 2014 01:08:41 AM JST
0x04c0
* Sun 05 Oct 2014 01:08:49 AM JST
0x04c1
* Sun 05 Oct 2014 01:08:57 AM JST
0x04c1
* Sun 05 Oct 2014 01:09:05 AM JST
0x04c2
* Sun 05 Oct 2014 01:09:12 AM JST
0x04c2
* Sun 05 Oct 2014 01:09:19 AM JST
0x04c3
* Sun 05 Oct 2014 01:09:26 AM JST
0x04c4
* Sun 05 Oct 2014 01:09:33 AM JST
0x04c5
* Sun 05 Oct 2014 01:09:40 AM JST
0x04c6
* Sun 05 Oct 2014 01:09:47 AM JST
0x04c7
* Sun 05 Oct 2014 01:09:55 AM JST
0x04c8
* Sun 05 Oct 2014 01:10:03 AM JST
0x04c9
* Sun 05 Oct 2014 01:10:10 AM JST
0x04ca
* Sun 05 Oct 2014 01:10:17 AM JST
0x04cb
* Sun 05 Oct 2014 01:10:23 AM JST
0x04cc
* Sun 05 Oct 2014 01:10:30 AM JST
0x04cc
* Sun 05 Oct 2014 01:10:36 AM JST
0x04cd
* Sun 05 Oct 2014 01:10:43 AM JST
0x04ce
* Sun 05 Oct 2014 01:10:51 AM JST
0x04cf
* Sun 05 Oct 2014 01:10:57 AM JST
0x04d0
* Sun 05 Oct 2014 01:11:04 AM JST
0x04d1
* Sun 05 Oct 2014 01:11:11 AM JST
0x04d2
* Sun 05 Oct 2014 01:11:19 AM JST
0x04d3
* Sun 05 Oct 2014 01:11:28 AM JST
0x04d4
* Sun 05 Oct 2014 01:11:35 AM JST
0x04d5
* Sun 05 Oct 2014 01:11:43 AM JST
0x04d6
* Sun 05 Oct 2014 01:11:51 AM JST
0x04d7
* Sun 05 Oct 2014 01:12:00 AM JST
0x04d8
* Sun 05 Oct 2014 01:12:08 AM JST
0x04d9
* Sun 05 Oct 2014 01:12:16 AM JST
0x04da
* Sun 05 Oct 2014 01:12:24 AM JST
0x04db
* Sun 05 Oct 2014 01:12:31 AM JST
0x04dc
* Sun 05 Oct 2014 01:12:39 AM JST
0x04dd
* Sun 05 Oct 2014 01:12:46 AM JST
0x04de
* Sun 05 Oct 2014 01:12:53 AM JST
0x04df
* Sun 05 Oct 2014 01:13:01 AM JST
0xff7e
* Sun 05 Oct 2014 01:13:10 AM JST
0x10006f0
* Sun 05 Oct 2014 01:13:17 AM JST
0x10006f1
* Sun 05 Oct 2014 01:13:26 AM JST
0x10006f2
* Sun 05 Oct 2014 01:13:33 AM JST
0x10006f3
* Sun 05 Oct 2014 01:13:40 AM JST
0x10006f4
* Sun 05 Oct 2014 01:13:48 AM JST
0x10006f5
* Sun 05 Oct 2014 01:13:57 AM JST
0x10006f6
* Sun 05 Oct 2014 01:14:04 AM JST
0x10006f7
* Sun 05 Oct 2014 01:14:13 AM JST
0x10006f8
* Sun 05 Oct 2014 01:14:23 AM JST
0x10006f9
* Sun 05 Oct 2014 01:14:30 AM JST
0x100066a
* Sun 05 Oct 2014 01:14:38 AM JST
0x1000670
* Sun 05 Oct 2014 01:14:47 AM JST
0x1000679
* Sun 05 Oct 2014 01:14:56 AM JST
0x100067e
* Sun 05 Oct 2014 01:15:05 AM JST
0x1000686
* Sun 05 Oct 2014 01:15:13 AM JST
0x1000688
* Sun 05 Oct 2014 01:15:23 AM JST
0x1000691
* Sun 05 Oct 2014 01:18:05 AM JST
#define XK_VoidSymbol                  0xffffff  /* Void symbol */

#ifdef XK_MISCELLANY
/*
 * TTY function keys, cleverly chosen to map to ASCII, for convenience of
 * programming, but could have been arbitrary (at the cost of lookup
 * tables in client code).
 */

#define XK_BackSpace                     0xff08  /* Back space, back char */
#define XK_Tab                           0xff09
#define XK_Linefeed                      0xff0a  /* Linefeed, LF */
#define XK_Clear                         0xff0b
#define XK_Return                        0xff0d  /* Return, enter */
#define XK_Pause                         0xff13  /* Pause, hold */
#define XK_Scroll_Lock                   0xff14
#define XK_Sys_Req                       0xff15
#define XK_Escape                        0xff1b
#define XK_Delete                        0xffff  /* Delete, rubout */



/* International & multi-key character composition */

#define XK_Multi_key                     0xff20  /* Multi-key character compose */
#define XK_Codeinput                     0xff37
#define XK_SingleCandidate               0xff3c
#define XK_MultipleCandidate             0xff3d
#define XK_PreviousCandidate             0xff3e

/* Japanese keyboard support */

#define XK_Kanji                         0xff21  /* Kanji, Kanji convert */
#define XK_Muhenkan                      0xff22  /* Cancel Conversion */
#define XK_Henkan_Mode                   0xff23  /* Start/Stop Conversion */
#define XK_Henkan                        0xff23  /* Alias for Henkan_Mode */
#define XK_Romaji                        0xff24  /* to Romaji */
#define XK_Hiragana                      0xff25  /* to Hiragana */
#define XK_Katakana                      0xff26  /* to Katakana */
#define XK_Hiragana_Katakana             0xff27  /* Hiragana/Katakana toggle */
#define XK_Zenkaku                       0xff28  /* to Zenkaku */
#define XK_Hankaku                       0xff29  /* to Hankaku */
#define XK_Zenkaku_Hankaku               0xff2a  /* Zenkaku/Hankaku toggle */
#define XK_Touroku                       0xff2b  /* Add to Dictionary */
#define XK_Massyo                        0xff2c  /* Delete from Dictionary */
#define XK_Kana_Lock                     0xff2d  /* Kana Lock */
#define XK_Kana_Shift                    0xff2e  /* Kana Shift */
#define XK_Eisu_Shift                    0xff2f  /* Alphanumeric Shift */
#define XK_Eisu_toggle                   0xff30  /* Alphanumeric toggle */
#define XK_Kanji_Bangou                  0xff37  /* Codeinput */
#define XK_Zen_Koho                      0xff3d  /* Multiple/All Candidate(s) */
#define XK_Mae_Koho                      0xff3e  /* Previous Candidate */

/* 0xff31 thru 0xff3f are under XK_KOREAN */

/* Cursor control & motion */

#define XK_Home                          0xff50
#define XK_Left                          0xff51  /* Move left, left arrow */
#define XK_Up                            0xff52  /* Move up, up arrow */
#define XK_Right                         0xff53  /* Move right, right arrow */
#define XK_Down                          0xff54  /* Move down, down arrow */
#define XK_Prior                         0xff55  /* Prior, previous */
#define XK_Page_Up                       0xff55
#define XK_Next                          0xff56  /* Next */
#define XK_Page_Down                     0xff56
#define XK_End                           0xff57  /* EOL */
#define XK_Begin                         0xff58  /* BOL */


/* Misc functions */

#define XK_Select                        0xff60  /* Select, mark */
#define XK_Print                         0xff61
#define XK_Execute                       0xff62  /* Execute, run, do */
#define XK_Insert                        0xff63  /* Insert, insert here */
#define XK_Undo                          0xff65
#define XK_Redo                          0xff66  /* Redo, again */
#define XK_Menu                          0xff67
#define XK_Find                          0xff68  /* Find, search */
#define XK_Cancel                        0xff69  /* Cancel, stop, abort, exit */
#define XK_Help                          0xff6a  /* Help */
#define XK_Break                         0xff6b
#define XK_Mode_switch                   0xff7e  /* Character set switch */
#define XK_script_switch                 0xff7e  /* Alias for mode_switch */
#define XK_Num_Lock                      0xff7f

/* Keypad functions, keypad numbers cleverly chosen to map to ASCII */

#define XK_KP_Space                      0xff80  /* Space */
#define XK_KP_Tab                        0xff89
#define XK_KP_Enter                      0xff8d  /* Enter */
#define XK_KP_F1                         0xff91  /* PF1, KP_A, ... */
#define XK_KP_F2                         0xff92
#define XK_KP_F3                         0xff93
#define XK_KP_F4                         0xff94
#define XK_KP_Home                       0xff95
#define XK_KP_Left                       0xff96
#define XK_KP_Up                         0xff97
#define XK_KP_Right                      0xff98
#define XK_KP_Down                       0xff99
#define XK_KP_Prior                      0xff9a
#define XK_KP_Page_Up                    0xff9a
#define XK_KP_Next                       0xff9b
#define XK_KP_Page_Down                  0xff9b
#define XK_KP_End                        0xff9c
#define XK_KP_Begin                      0xff9d
#define XK_KP_Insert                     0xff9e
#define XK_KP_Delete                     0xff9f
#define XK_KP_Equal                      0xffbd  /* Equals */
#define XK_KP_Multiply                   0xffaa
#define XK_KP_Add                        0xffab
#define XK_KP_Separator                  0xffac  /* Separator, often comma */
#define XK_KP_Subtract                   0xffad
#define XK_KP_Decimal                    0xffae
#define XK_KP_Divide                     0xffaf

#define XK_KP_0                          0xffb0
#define XK_KP_1                          0xffb1
#define XK_KP_2                          0xffb2
#define XK_KP_3                          0xffb3
#define XK_KP_4                          0xffb4
#define XK_KP_5                          0xffb5
#define XK_KP_6                          0xffb6
#define XK_KP_7                          0xffb7
#define XK_KP_8                          0xffb8
#define XK_KP_9                          0xffb9



/*
 * Auxiliary functions; note the duplicate definitions for left and right
 * function keys;  Sun keyboards and a few other manufacturers have such
 * function key groups on the left and/or right sides of the keyboard.
 * We've not found a keyboard with more than 35 function keys total.
 */

#define XK_F1                            0xffbe
#define XK_F2                            0xffbf
#define XK_F3                            0xffc0
#define XK_F4                            0xffc1
#define XK_F5                            0xffc2
#define XK_F6                            0xffc3
#define XK_F7                            0xffc4
#define XK_F8                            0xffc5
#define XK_F9                            0xffc6
#define XK_F10                           0xffc7
#define XK_F11                           0xffc8
#define XK_L1                            0xffc8
#define XK_F12                           0xffc9
#define XK_L2                            0xffc9
#define XK_F13                           0xffca
#define XK_L3                            0xffca
#define XK_F14                           0xffcb
#define XK_L4                            0xffcb
#define XK_F15                           0xffcc
#define XK_L5                            0xffcc
#define XK_F16                           0xffcd
#define XK_L6                            0xffcd
#define XK_F17                           0xffce
#define XK_L7                            0xffce
#define XK_F18                           0xffcf
#define XK_L8                            0xffcf
#define XK_F19                           0xffd0
#define XK_L9                            0xffd0
#define XK_F20                           0xffd1
#define XK_L10                           0xffd1
#define XK_F21                           0xffd2
#define XK_R1                            0xffd2
#define XK_F22                           0xffd3
#define XK_R2                            0xffd3
#define XK_F23                           0xffd4
#define XK_R3                            0xffd4
#define XK_F24                           0xffd5
#define XK_R4                            0xffd5
#define XK_F25                           0xffd6
#define XK_R5                            0xffd6
#define XK_F26                           0xffd7
#define XK_R6                            0xffd7
#define XK_F27                           0xffd8
#define XK_R7                            0xffd8
#define XK_F28                           0xffd9
#define XK_R8                            0xffd9
#define XK_F29                           0xffda
#define XK_R9                            0xffda
#define XK_F30                           0xffdb
#define XK_R10                           0xffdb
#define XK_F31                           0xffdc
#define XK_R11                           0xffdc
#define XK_F32                           0xffdd
#define XK_R12                           0xffdd
#define XK_F33                           0xffde
#define XK_R13                           0xffde
#define XK_F34                           0xffdf
#define XK_R14                           0xffdf
#define XK_F35                           0xffe0
#define XK_R15                           0xffe0

/* Modifiers */

#define XK_Shift_L                       0xffe1  /* Left shift */
#define XK_Shift_R                       0xffe2  /* Right shift */
#define XK_Control_L                     0xffe3  /* Left control */
#define XK_Control_R                     0xffe4  /* Right control */
#define XK_Caps_Lock                     0xffe5  /* Caps lock */
#define XK_Shift_Lock                    0xffe6  /* Shift lock */

#define XK_Meta_L                        0xffe7  /* Left meta */
#define XK_Meta_R                        0xffe8  /* Right meta */
#define XK_Alt_L                         0xffe9  /* Left alt */
#define XK_Alt_R                         0xffea  /* Right alt */
#define XK_Super_L                       0xffeb  /* Left super */
#define XK_Super_R                       0xffec  /* Right super */
#define XK_Hyper_L                       0xffed  /* Left hyper */
#define XK_Hyper_R                       0xffee  /* Right hyper */
#endif /* XK_MISCELLANY */

/*
 * Keyboard (XKB) Extension function and modifier keys
 * (from Appendix C of "The X Keyboard Extension: Protocol Specification")
 * Byte 3 = 0xfe
 */

#ifdef XK_XKB_KEYS
#define XK_ISO_Lock                      0xfe01
#define XK_ISO_Level2_Latch              0xfe02
#define XK_ISO_Level3_Shift              0xfe03
#define XK_ISO_Level3_Latch              0xfe04
#define XK_ISO_Level3_Lock               0xfe05
#define XK_ISO_Level5_Shift              0xfe11
#define XK_ISO_Level5_Latch              0xfe12
#define XK_ISO_Level5_Lock               0xfe13
#define XK_ISO_Group_Shift               0xff7e  /* Alias for mode_switch */
#define XK_ISO_Group_Latch               0xfe06
#define XK_ISO_Group_Lock                0xfe07
#define XK_ISO_Next_Group                0xfe08
#define XK_ISO_Next_Group_Lock           0xfe09
#define XK_ISO_Prev_Group                0xfe0a
#define XK_ISO_Prev_Group_Lock           0xfe0b
#define XK_ISO_First_Group               0xfe0c
#define XK_ISO_First_Group_Lock          0xfe0d
#define XK_ISO_Last_Group                0xfe0e
#define XK_ISO_Last_Group_Lock           0xfe0f

#define XK_ISO_Left_Tab                  0xfe20
#define XK_ISO_Move_Line_Up              0xfe21
#define XK_ISO_Move_Line_Down            0xfe22
#define XK_ISO_Partial_Line_Up           0xfe23
#define XK_ISO_Partial_Line_Down         0xfe24
#define XK_ISO_Partial_Space_Left        0xfe25
#define XK_ISO_Partial_Space_Right       0xfe26
#define XK_ISO_Set_Margin_Left           0xfe27
#define XK_ISO_Set_Margin_Right          0xfe28
#define XK_ISO_Release_Margin_Left       0xfe29
#define XK_ISO_Release_Margin_Right      0xfe2a
#define XK_ISO_Release_Both_Margins      0xfe2b
#define XK_ISO_Fast_Cursor_Left          0xfe2c
#define XK_ISO_Fast_Cursor_Right         0xfe2d
#define XK_ISO_Fast_Cursor_Up            0xfe2e
#define XK_ISO_Fast_Cursor_Down          0xfe2f
#define XK_ISO_Continuous_Underline      0xfe30
#define XK_ISO_Discontinuous_Underline   0xfe31
#define XK_ISO_Emphasize                 0xfe32
#define XK_ISO_Center_Object             0xfe33
#define XK_ISO_Enter                     0xfe34

#define XK_dead_grave                    0xfe50
#define XK_dead_acute                    0xfe51
#define XK_dead_circumflex               0xfe52
#define XK_dead_tilde                    0xfe53
#define XK_dead_perispomeni              0xfe53  /* alias for dead_tilde */
#define XK_dead_macron                   0xfe54
#define XK_dead_breve                    0xfe55
#define XK_dead_abovedot                 0xfe56
#define XK_dead_diaeresis                0xfe57
#define XK_dead_abovering                0xfe58
#define XK_dead_doubleacute              0xfe59
#define XK_dead_caron                    0xfe5a
#define XK_dead_cedilla                  0xfe5b
#define XK_dead_ogonek                   0xfe5c
#define XK_dead_iota                     0xfe5d
#define XK_dead_voiced_sound             0xfe5e
#define XK_dead_semivoiced_sound         0xfe5f
#define XK_dead_belowdot                 0xfe60
#define XK_dead_hook                     0xfe61
#define XK_dead_horn                     0xfe62
#define XK_dead_stroke                   0xfe63
#define XK_dead_abovecomma               0xfe64
#define XK_dead_psili                    0xfe64  /* alias for dead_abovecomma */
#define XK_dead_abovereversedcomma       0xfe65
#define XK_dead_dasia                    0xfe65  /* alias for dead_abovereversedcomma */
#define XK_dead_doublegrave              0xfe66
#define XK_dead_belowring                0xfe67
#define XK_dead_belowmacron              0xfe68
#define XK_dead_belowcircumflex          0xfe69
#define XK_dead_belowtilde               0xfe6a
#define XK_dead_belowbreve               0xfe6b
#define XK_dead_belowdiaeresis           0xfe6c
#define XK_dead_invertedbreve            0xfe6d
#define XK_dead_belowcomma               0xfe6e
#define XK_dead_currency                 0xfe6f

/* dead vowels for universal syllable entry */
#define XK_dead_a                        0xfe80
#define XK_dead_A                        0xfe81
#define XK_dead_e                        0xfe82
#define XK_dead_E                        0xfe83
#define XK_dead_i                        0xfe84
#define XK_dead_I                        0xfe85
#define XK_dead_o                        0xfe86
#define XK_dead_O                        0xfe87
#define XK_dead_u                        0xfe88
#define XK_dead_U                        0xfe89
#define XK_dead_small_schwa              0xfe8a
#define XK_dead_capital_schwa            0xfe8b

#define XK_dead_greek                    0xfe8c

#define XK_First_Virtual_Screen          0xfed0
#define XK_Prev_Virtual_Screen           0xfed1
#define XK_Next_Virtual_Screen           0xfed2
#define XK_Last_Virtual_Screen           0xfed4
#define XK_Terminate_Server              0xfed5

#define XK_AccessX_Enable                0xfe70
#define XK_AccessX_Feedback_Enable       0xfe71
#define XK_RepeatKeys_Enable             0xfe72
#define XK_SlowKeys_Enable               0xfe73
#define XK_BounceKeys_Enable             0xfe74
#define XK_StickyKeys_Enable             0xfe75
#define XK_MouseKeys_Enable              0xfe76
#define XK_MouseKeys_Accel_Enable        0xfe77
#define XK_Overlay1_Enable               0xfe78
#define XK_Overlay2_Enable               0xfe79
#define XK_AudibleBell_Enable            0xfe7a

#define XK_Pointer_Left                  0xfee0
#define XK_Pointer_Right                 0xfee1
#define XK_Pointer_Up                    0xfee2
#define XK_Pointer_Down                  0xfee3
#define XK_Pointer_UpLeft                0xfee4
#define XK_Pointer_UpRight               0xfee5
#define XK_Pointer_DownLeft              0xfee6
#define XK_Pointer_DownRight             0xfee7
#define XK_Pointer_Button_Dflt           0xfee8
#define XK_Pointer_Button1               0xfee9
#define XK_Pointer_Button2               0xfeea
#define XK_Pointer_Button3               0xfeeb
#define XK_Pointer_Button4               0xfeec
#define XK_Pointer_Button5               0xfeed
#define XK_Pointer_DblClick_Dflt         0xfeee
#define XK_Pointer_DblClick1             0xfeef
#define XK_Pointer_DblClick2             0xfef0
#define XK_Pointer_DblClick3             0xfef1
#define XK_Pointer_DblClick4             0xfef2
#define XK_Pointer_DblClick5             0xfef3
#define XK_Pointer_Drag_Dflt             0xfef4
#define XK_Pointer_Drag1                 0xfef5
#define XK_Pointer_Drag2                 0xfef6
#define XK_Pointer_Drag3                 0xfef7
#define XK_Pointer_Drag4                 0xfef8
#define XK_Pointer_Drag5                 0xfefd

#define XK_Pointer_EnableKeys            0xfef9
#define XK_Pointer_Accelerate            0xfefa
#define XK_Pointer_DfltBtnNext           0xfefb
#define XK_Pointer_DfltBtnPrev           0xfefc

/* Single-Stroke Multiple-Character N-Graph Keysyms For The X Input Method */

#define XK_ch                            0xfea0
#define XK_Ch                            0xfea1
#define XK_CH                            0xfea2
#define XK_c_h                           0xfea3
#define XK_C_h                           0xfea4
#define XK_C_H                           0xfea5

#endif /* XK_XKB_KEYS */

/*
 * 3270 Terminal Keys
 * Byte 3 = 0xfd
 */

#ifdef XK_3270
#define XK_3270_Duplicate                0xfd01
#define XK_3270_FieldMark                0xfd02
#define XK_3270_Right2                   0xfd03
#define XK_3270_Left2                    0xfd04
#define XK_3270_BackTab                  0xfd05
#define XK_3270_EraseEOF                 0xfd06
#define XK_3270_EraseInput               0xfd07
#define XK_3270_Reset                    0xfd08
#define XK_3270_Quit                     0xfd09
#define XK_3270_PA1                      0xfd0a
#define XK_3270_PA2                      0xfd0b
#define XK_3270_PA3                      0xfd0c
#define XK_3270_Test                     0xfd0d
#define XK_3270_Attn                     0xfd0e
#define XK_3270_CursorBlink              0xfd0f
#define XK_3270_AltCursor                0xfd10
#define XK_3270_KeyClick                 0xfd11
#define XK_3270_Jump                     0xfd12
#define XK_3270_Ident                    0xfd13
#define XK_3270_Rule                     0xfd14
#define XK_3270_Copy                     0xfd15
#define XK_3270_Play                     0xfd16
#define XK_3270_Setup                    0xfd17
#define XK_3270_Record                   0xfd18
#define XK_3270_ChangeScreen             0xfd19
#define XK_3270_DeleteWord               0xfd1a
#define XK_3270_ExSelect                 0xfd1b
#define XK_3270_CursorSelect             0xfd1c
#define XK_3270_PrintScreen              0xfd1d
#define XK_3270_Enter                    0xfd1e
#endif /* XK_3270 */

/*
 * Latin 1
 * (ISO/IEC 8859-1 = Unicode U+0020..U+00FF)
 * Byte 3 = 0
 */
#ifdef XK_LATIN1
#define XK_space                         0x0020  /* U+0020 SPACE */
#define XK_exclam                        0x0021  /* U+0021 EXCLAMATION MARK */
#define XK_quotedbl                      0x0022  /* U+0022 QUOTATION MARK */
#define XK_numbersign                    0x0023  /* U+0023 NUMBER SIGN */
#define XK_dollar                        0x0024  /* U+0024 DOLLAR SIGN */
#define XK_percent                       0x0025  /* U+0025 PERCENT SIGN */
#define XK_ampersand                     0x0026  /* U+0026 AMPERSAND */
#define XK_apostrophe                    0x0027  /* U+0027 APOSTROPHE */
#define XK_quoteright                    0x0027  /* deprecated */
#define XK_parenleft                     0x0028  /* U+0028 LEFT PARENTHESIS */
#define XK_parenright                    0x0029  /* U+0029 RIGHT PARENTHESIS */
#define XK_asterisk                      0x002a  /* U+002A ASTERISK */
#define XK_plus                          0x002b  /* U+002B PLUS SIGN */
#define XK_comma                         0x002c  /* U+002C COMMA */
#define XK_minus                         0x002d  /* U+002D HYPHEN-MINUS */
#define XK_period                        0x002e  /* U+002E FULL STOP */
#define XK_slash                         0x002f  /* U+002F SOLIDUS */
#define XK_0                             0x0030  /* U+0030 DIGIT ZERO */
#define XK_1                             0x0031  /* U+0031 DIGIT ONE */
#define XK_2                             0x0032  /* U+0032 DIGIT TWO */
#define XK_3                             0x0033  /* U+0033 DIGIT THREE */
#define XK_4                             0x0034  /* U+0034 DIGIT FOUR */
#define XK_5                             0x0035  /* U+0035 DIGIT FIVE */
#define XK_6                             0x0036  /* U+0036 DIGIT SIX */
#define XK_7                             0x0037  /* U+0037 DIGIT SEVEN */
#define XK_8                             0x0038  /* U+0038 DIGIT EIGHT */
#define XK_9                             0x0039  /* U+0039 DIGIT NINE */
#define XK_colon                         0x003a  /* U+003A COLON */
#define XK_semicolon                     0x003b  /* U+003B SEMICOLON */
#define XK_less                          0x003c  /* U+003C LESS-THAN SIGN */
#define XK_equal                         0x003d  /* U+003D EQUALS SIGN */
#define XK_greater                       0x003e  /* U+003E GREATER-THAN SIGN */
#define XK_question                      0x003f  /* U+003F QUESTION MARK */
#define XK_at                            0x0040  /* U+0040 COMMERCIAL AT */
#define XK_A                             0x0041  /* U+0041 LATIN CAPITAL LETTER A */
#define XK_B                             0x0042  /* U+0042 LATIN CAPITAL LETTER B */
#define XK_C                             0x0043  /* U+0043 LATIN CAPITAL LETTER C */
#define XK_D                             0x0044  /* U+0044 LATIN CAPITAL LETTER D */
#define XK_E                             0x0045  /* U+0045 LATIN CAPITAL LETTER E */
#define XK_F                             0x0046  /* U+0046 LATIN CAPITAL LETTER F */
#define XK_G                             0x0047  /* U+0047 LATIN CAPITAL LETTER G */
#define XK_H                             0x0048  /* U+0048 LATIN CAPITAL LETTER H */
#define XK_I                             0x0049  /* U+0049 LATIN CAPITAL LETTER I */
#define XK_J                             0x004a  /* U+004A LATIN CAPITAL LETTER J */
#define XK_K                             0x004b  /* U+004B LATIN CAPITAL LETTER K */
#define XK_L                             0x004c  /* U+004C LATIN CAPITAL LETTER L */
#define XK_M                             0x004d  /* U+004D LATIN CAPITAL LETTER M */
#define XK_N                             0x004e  /* U+004E LATIN CAPITAL LETTER N */
#define XK_O                             0x004f  /* U+004F LATIN CAPITAL LETTER O */
#define XK_P                             0x0050  /* U+0050 LATIN CAPITAL LETTER P */
#define XK_Q                             0x0051  /* U+0051 LATIN CAPITAL LETTER Q */
#define XK_R                             0x0052  /* U+0052 LATIN CAPITAL LETTER R */
#define XK_S                             0x0053  /* U+0053 LATIN CAPITAL LETTER S */
#define XK_T                             0x0054  /* U+0054 LATIN CAPITAL LETTER T */
#define XK_U                             0x0055  /* U+0055 LATIN CAPITAL LETTER U */
#define XK_V                             0x0056  /* U+0056 LATIN CAPITAL LETTER V */
#define XK_W                             0x0057  /* U+0057 LATIN CAPITAL LETTER W */
#define XK_X                             0x0058  /* U+0058 LATIN CAPITAL LETTER X */
#define XK_Y                             0x0059  /* U+0059 LATIN CAPITAL LETTER Y */
#define XK_Z                             0x005a  /* U+005A LATIN CAPITAL LETTER Z */
#define XK_bracketleft                   0x005b  /* U+005B LEFT SQUARE BRACKET */
#define XK_backslash                     0x005c  /* U+005C REVERSE SOLIDUS */
#define XK_bracketright                  0x005d  /* U+005D RIGHT SQUARE BRACKET */
#define XK_asciicircum                   0x005e  /* U+005E CIRCUMFLEX ACCENT */
#define XK_underscore                    0x005f  /* U+005F LOW LINE */
#define XK_grave                         0x0060  /* U+0060 GRAVE ACCENT */
#define XK_quoteleft                     0x0060  /* deprecated */
#define XK_a                             0x0061  /* U+0061 LATIN SMALL LETTER A */
#define XK_b                             0x0062  /* U+0062 LATIN SMALL LETTER B */
#define XK_c                             0x0063  /* U+0063 LATIN SMALL LETTER C */
#define XK_d                             0x0064  /* U+0064 LATIN SMALL LETTER D */
#define XK_e                             0x0065  /* U+0065 LATIN SMALL LETTER E */
#define XK_f                             0x0066  /* U+0066 LATIN SMALL LETTER F */
#define XK_g                             0x0067  /* U+0067 LATIN SMALL LETTER G */
#define XK_h                             0x0068  /* U+0068 LATIN SMALL LETTER H */
#define XK_i                             0x0069  /* U+0069 LATIN SMALL LETTER I */
#define XK_j                             0x006a  /* U+006A LATIN SMALL LETTER J */
#define XK_k                             0x006b  /* U+006B LATIN SMALL LETTER K */
#define XK_l                             0x006c  /* U+006C LATIN SMALL LETTER L */
#define XK_m                             0x006d  /* U+006D LATIN SMALL LETTER M */
#define XK_n                             0x006e  /* U+006E LATIN SMALL LETTER N */
#define XK_o                             0x006f  /* U+006F LATIN SMALL LETTER O */
#define XK_p                             0x0070  /* U+0070 LATIN SMALL LETTER P */
#define XK_q                             0x0071  /* U+0071 LATIN SMALL LETTER Q */
#define XK_r                             0x0072  /* U+0072 LATIN SMALL LETTER R */
#define XK_s                             0x0073  /* U+0073 LATIN SMALL LETTER S */
#define XK_t                             0x0074  /* U+0074 LATIN SMALL LETTER T */
#define XK_u                             0x0075  /* U+0075 LATIN SMALL LETTER U */
#define XK_v                             0x0076  /* U+0076 LATIN SMALL LETTER V */
#define XK_w                             0x0077  /* U+0077 LATIN SMALL LETTER W */
#define XK_x                             0x0078  /* U+0078 LATIN SMALL LETTER X */
#define XK_y                             0x0079  /* U+0079 LATIN SMALL LETTER Y */
#define XK_z                             0x007a  /* U+007A LATIN SMALL LETTER Z */
#define XK_braceleft                     0x007b  /* U+007B LEFT CURLY BRACKET */
#define XK_bar                           0x007c  /* U+007C VERTICAL LINE */
#define XK_braceright                    0x007d  /* U+007D RIGHT CURLY BRACKET */
#define XK_asciitilde                    0x007e  /* U+007E TILDE */

#define XK_nobreakspace                  0x00a0  /* U+00A0 NO-BREAK SPACE */
#define XK_exclamdown                    0x00a1  /* U+00A1 INVERTED EXCLAMATION MARK */
#define XK_cent                          0x00a2  /* U+00A2 CENT SIGN */
#define XK_sterling                      0x00a3  /* U+00A3 POUND SIGN */
#define XK_currency                      0x00a4  /* U+00A4 CURRENCY SIGN */
#define XK_yen                           0x00a5  /* U+00A5 YEN SIGN */
#define XK_brokenbar                     0x00a6  /* U+00A6 BROKEN BAR */
#define XK_section                       0x00a7  /* U+00A7 SECTION SIGN */
#define XK_diaeresis                     0x00a8  /* U+00A8 DIAERESIS */
#define XK_copyright                     0x00a9  /* U+00A9 COPYRIGHT SIGN */
#define XK_ordfeminine                   0x00aa  /* U+00AA FEMININE ORDINAL INDICATOR */
#define XK_guillemotleft                 0x00ab  /* U+00AB LEFT-POINTING DOUBLE ANGLE QUOTATION MARK */
#define XK_notsign                       0x00ac  /* U+00AC NOT SIGN */
#define XK_hyphen                        0x00ad  /* U+00AD SOFT HYPHEN */
#define XK_registered                    0x00ae  /* U+00AE REGISTERED SIGN */
#define XK_macron                        0x00af  /* U+00AF MACRON */
#define XK_degree                        0x00b0  /* U+00B0 DEGREE SIGN */
#define XK_plusminus                     0x00b1  /* U+00B1 PLUS-MINUS SIGN */
#define XK_twosuperior                   0x00b2  /* U+00B2 SUPERSCRIPT TWO */
#define XK_threesuperior                 0x00b3  /* U+00B3 SUPERSCRIPT THREE */
#define XK_acute                         0x00b4  /* U+00B4 ACUTE ACCENT */
#define XK_mu                            0x00b5  /* U+00B5 MICRO SIGN */
#define XK_paragraph                     0x00b6  /* U+00B6 PILCROW SIGN */
#define XK_periodcentered                0x00b7  /* U+00B7 MIDDLE DOT */
#define XK_cedilla                       0x00b8  /* U+00B8 CEDILLA */
#define XK_onesuperior                   0x00b9  /* U+00B9 SUPERSCRIPT ONE */
#define XK_masculine                     0x00ba  /* U+00BA MASCULINE ORDINAL INDICATOR */
#define XK_guillemotright                0x00bb  /* U+00BB RIGHT-POINTING DOUBLE ANGLE QUOTATION MARK */
#define XK_onequarter                    0x00bc  /* U+00BC VULGAR FRACTION ONE QUARTER */
#define XK_onehalf                       0x00bd  /* U+00BD VULGAR FRACTION ONE HALF */
#define XK_threequarters                 0x00be  /* U+00BE VULGAR FRACTION THREE QUARTERS */
#define XK_questiondown                  0x00bf  /* U+00BF INVERTED QUESTION MARK */
#define XK_Agrave                        0x00c0  /* U+00C0 LATIN CAPITAL LETTER A WITH GRAVE */
#define XK_Aacute                        0x00c1  /* U+00C1 LATIN CAPITAL LETTER A WITH ACUTE */
#define XK_Acircumflex                   0x00c2  /* U+00C2 LATIN CAPITAL LETTER A WITH CIRCUMFLEX */
#define XK_Atilde                        0x00c3  /* U+00C3 LATIN CAPITAL LETTER A WITH TILDE */
#define XK_Adiaeresis                    0x00c4  /* U+00C4 LATIN CAPITAL LETTER A WITH DIAERESIS */
#define XK_Aring                         0x00c5  /* U+00C5 LATIN CAPITAL LETTER A WITH RING ABOVE */
#define XK_AE                            0x00c6  /* U+00C6 LATIN CAPITAL LETTER AE */
#define XK_Ccedilla                      0x00c7  /* U+00C7 LATIN CAPITAL LETTER C WITH CEDILLA */
#define XK_Egrave                        0x00c8  /* U+00C8 LATIN CAPITAL LETTER E WITH GRAVE */
#define XK_Eacute                        0x00c9  /* U+00C9 LATIN CAPITAL LETTER E WITH ACUTE */
#define XK_Ecircumflex                   0x00ca  /* U+00CA LATIN CAPITAL LETTER E WITH CIRCUMFLEX */
#define XK_Ediaeresis                    0x00cb  /* U+00CB LATIN CAPITAL LETTER E WITH DIAERESIS */
#define XK_Igrave                        0x00cc  /* U+00CC LATIN CAPITAL LETTER I WITH GRAVE */
#define XK_Iacute                        0x00cd  /* U+00CD LATIN CAPITAL LETTER I WITH ACUTE */
#define XK_Icircumflex                   0x00ce  /* U+00CE LATIN CAPITAL LETTER I WITH CIRCUMFLEX */
#define XK_Idiaeresis                    0x00cf  /* U+00CF LATIN CAPITAL LETTER I WITH DIAERESIS */
#define XK_ETH                           0x00d0  /* U+00D0 LATIN CAPITAL LETTER ETH */
#define XK_Eth                           0x00d0  /* deprecated */
#define XK_Ntilde                        0x00d1  /* U+00D1 LATIN CAPITAL LETTER N WITH TILDE */
#define XK_Ograve                        0x00d2  /* U+00D2 LATIN CAPITAL LETTER O WITH GRAVE */
#define XK_Oacute                        0x00d3  /* U+00D3 LATIN CAPITAL LETTER O WITH ACUTE */
#define XK_Ocircumflex                   0x00d4  /* U+00D4 LATIN CAPITAL LETTER O WITH CIRCUMFLEX */
#define XK_Otilde                        0x00d5  /* U+00D5 LATIN CAPITAL LETTER O WITH TILDE */
#define XK_Odiaeresis                    0x00d6  /* U+00D6 LATIN CAPITAL LETTER O WITH DIAERESIS */
#define XK_multiply                      0x00d7  /* U+00D7 MULTIPLICATION SIGN */
#define XK_Oslash                        0x00d8  /* U+00D8 LATIN CAPITAL LETTER O WITH STROKE */
#define XK_Ooblique                      0x00d8  /* U+00D8 LATIN CAPITAL LETTER O WITH STROKE */
#define XK_Ugrave                        0x00d9  /* U+00D9 LATIN CAPITAL LETTER U WITH GRAVE */
#define XK_Uacute                        0x00da  /* U+00DA LATIN CAPITAL LETTER U WITH ACUTE */
#define XK_Ucircumflex                   0x00db  /* U+00DB LATIN CAPITAL LETTER U WITH CIRCUMFLEX */
#define XK_Udiaeresis                    0x00dc  /* U+00DC LATIN CAPITAL LETTER U WITH DIAERESIS */
#define XK_Yacute                        0x00dd  /* U+00DD LATIN CAPITAL LETTER Y WITH ACUTE */
#define XK_THORN                         0x00de  /* U+00DE LATIN CAPITAL LETTER THORN */
#define XK_Thorn                         0x00de  /* deprecated */
#define XK_ssharp                        0x00df  /* U+00DF LATIN SMALL LETTER SHARP S */
#define XK_agrave                        0x00e0  /* U+00E0 LATIN SMALL LETTER A WITH GRAVE */
#define XK_aacute                        0x00e1  /* U+00E1 LATIN SMALL LETTER A WITH ACUTE */
#define XK_acircumflex                   0x00e2  /* U+00E2 LATIN SMALL LETTER A WITH CIRCUMFLEX */
#define XK_atilde                        0x00e3  /* U+00E3 LATIN SMALL LETTER A WITH TILDE */
#define XK_adiaeresis                    0x00e4  /* U+00E4 LATIN SMALL LETTER A WITH DIAERESIS */
#define XK_aring                         0x00e5  /* U+00E5 LATIN SMALL LETTER A WITH RING ABOVE */
#define XK_ae                            0x00e6  /* U+00E6 LATIN SMALL LETTER AE */
#define XK_ccedilla                      0x00e7  /* U+00E7 LATIN SMALL LETTER C WITH CEDILLA */
#define XK_egrave                        0x00e8  /* U+00E8 LATIN SMALL LETTER E WITH GRAVE */
#define XK_eacute                        0x00e9  /* U+00E9 LATIN SMALL LETTER E WITH ACUTE */
#define XK_ecircumflex                   0x00ea  /* U+00EA LATIN SMALL LETTER E WITH CIRCUMFLEX */
#define XK_ediaeresis                    0x00eb  /* U+00EB LATIN SMALL LETTER E WITH DIAERESIS */
#define XK_igrave                        0x00ec  /* U+00EC LATIN SMALL LETTER I WITH GRAVE */
#define XK_iacute                        0x00ed  /* U+00ED LATIN SMALL LETTER I WITH ACUTE */
#define XK_icircumflex                   0x00ee  /* U+00EE LATIN SMALL LETTER I WITH CIRCUMFLEX */
#define XK_idiaeresis                    0x00ef  /* U+00EF LATIN SMALL LETTER I WITH DIAERESIS */
#define XK_eth                           0x00f0  /* U+00F0 LATIN SMALL LETTER ETH */
#define XK_ntilde                        0x00f1  /* U+00F1 LATIN SMALL LETTER N WITH TILDE */
#define XK_ograve                        0x00f2  /* U+00F2 LATIN SMALL LETTER O WITH GRAVE */
#define XK_oacute                        0x00f3  /* U+00F3 LATIN SMALL LETTER O WITH ACUTE */
#define XK_ocircumflex                   0x00f4  /* U+00F4 LATIN SMALL LETTER O WITH CIRCUMFLEX */
#define XK_otilde                        0x00f5  /* U+00F5 LATIN SMALL LETTER O WITH TILDE */
#define XK_odiaeresis                    0x00f6  /* U+00F6 LATIN SMALL LETTER O WITH DIAERESIS */
#define XK_division                      0x00f7  /* U+00F7 DIVISION SIGN */
#define XK_oslash                        0x00f8  /* U+00F8 LATIN SMALL LETTER O WITH STROKE */
#define XK_ooblique                      0x00f8  /* U+00F8 LATIN SMALL LETTER O WITH STROKE */
#define XK_ugrave                        0x00f9  /* U+00F9 LATIN SMALL LETTER U WITH GRAVE */
#define XK_uacute                        0x00fa  /* U+00FA LATIN SMALL LETTER U WITH ACUTE */
#define XK_ucircumflex                   0x00fb  /* U+00FB LATIN SMALL LETTER U WITH CIRCUMFLEX */
#define XK_udiaeresis                    0x00fc  /* U+00FC LATIN SMALL LETTER U WITH DIAERESIS */
#define XK_yacute                        0x00fd  /* U+00FD LATIN SMALL LETTER Y WITH ACUTE */
#define XK_thorn                         0x00fe  /* U+00FE LATIN SMALL LETTER THORN */
#define XK_ydiaeresis                    0x00ff  /* U+00FF LATIN SMALL LETTER Y WITH DIAERESIS */
#endif /* XK_LATIN1 */

/*
 * Latin 2
 * Byte 3 = 1
 */

#ifdef XK_LATIN2
#define XK_Aogonek                       0x01a1  /* U+0104 LATIN CAPITAL LETTER A WITH OGONEK */
#define XK_breve                         0x01a2  /* U+02D8 BREVE */
#define XK_Lstroke                       0x01a3  /* U+0141 LATIN CAPITAL LETTER L WITH STROKE */
#define XK_Lcaron                        0x01a5  /* U+013D LATIN CAPITAL LETTER L WITH CARON */
#define XK_Sacute                        0x01a6  /* U+015A LATIN CAPITAL LETTER S WITH ACUTE */
#define XK_Scaron                        0x01a9  /* U+0160 LATIN CAPITAL LETTER S WITH CARON */
#define XK_Scedilla                      0x01aa  /* U+015E LATIN CAPITAL LETTER S WITH CEDILLA */
#define XK_Tcaron                        0x01ab  /* U+0164 LATIN CAPITAL LETTER T WITH CARON */
#define XK_Zacute                        0x01ac  /* U+0179 LATIN CAPITAL LETTER Z WITH ACUTE */
#define XK_Zcaron                        0x01ae  /* U+017D LATIN CAPITAL LETTER Z WITH CARON */
#define XK_Zabovedot                     0x01af  /* U+017B LATIN CAPITAL LETTER Z WITH DOT ABOVE */
#define XK_aogonek                       0x01b1  /* U+0105 LATIN SMALL LETTER A WITH OGONEK */
#define XK_ogonek                        0x01b2  /* U+02DB OGONEK */
#define XK_lstroke                       0x01b3  /* U+0142 LATIN SMALL LETTER L WITH STROKE */
#define XK_lcaron                        0x01b5  /* U+013E LATIN SMALL LETTER L WITH CARON */
#define XK_sacute                        0x01b6  /* U+015B LATIN SMALL LETTER S WITH ACUTE */
#define XK_caron                         0x01b7  /* U+02C7 CARON */
#define XK_scaron                        0x01b9  /* U+0161 LATIN SMALL LETTER S WITH CARON */
#define XK_scedilla                      0x01ba  /* U+015F LATIN SMALL LETTER S WITH CEDILLA */
#define XK_tcaron                        0x01bb  /* U+0165 LATIN SMALL LETTER T WITH CARON */
#define XK_zacute                        0x01bc  /* U+017A LATIN SMALL LETTER Z WITH ACUTE */
#define XK_doubleacute                   0x01bd  /* U+02DD DOUBLE ACUTE ACCENT */
#define XK_zcaron                        0x01be  /* U+017E LATIN SMALL LETTER Z WITH CARON */
#define XK_zabovedot                     0x01bf  /* U+017C LATIN SMALL LETTER Z WITH DOT ABOVE */
#define XK_Racute                        0x01c0  /* U+0154 LATIN CAPITAL LETTER R WITH ACUTE */
#define XK_Abreve                        0x01c3  /* U+0102 LATIN CAPITAL LETTER A WITH BREVE */
#define XK_Lacute                        0x01c5  /* U+0139 LATIN CAPITAL LETTER L WITH ACUTE */
#define XK_Cacute                        0x01c6  /* U+0106 LATIN CAPITAL LETTER C WITH ACUTE */
#define XK_Ccaron                        0x01c8  /* U+010C LATIN CAPITAL LETTER C WITH CARON */
#define XK_Eogonek                       0x01ca  /* U+0118 LATIN CAPITAL LETTER E WITH OGONEK */
#define XK_Ecaron                        0x01cc  /* U+011A LATIN CAPITAL LETTER E WITH CARON */
#define XK_Dcaron                        0x01cf  /* U+010E LATIN CAPITAL LETTER D WITH CARON */
#define XK_Dstroke                       0x01d0  /* U+0110 LATIN CAPITAL LETTER D WITH STROKE */
#define XK_Nacute                        0x01d1  /* U+0143 LATIN CAPITAL LETTER N WITH ACUTE */
#define XK_Ncaron                        0x01d2  /* U+0147 LATIN CAPITAL LETTER N WITH CARON */
#define XK_Odoubleacute                  0x01d5  /* U+0150 LATIN CAPITAL LETTER O WITH DOUBLE ACUTE */
#define XK_Rcaron                        0x01d8  /* U+0158 LATIN CAPITAL LETTER R WITH CARON */
#define XK_Uring                         0x01d9  /* U+016E LATIN CAPITAL LETTER U WITH RING ABOVE */
#define XK_Udoubleacute                  0x01db  /* U+0170 LATIN CAPITAL LETTER U WITH DOUBLE ACUTE */
#define XK_Tcedilla                      0x01de  /* U+0162 LATIN CAPITAL LETTER T WITH CEDILLA */
#define XK_racute                        0x01e0  /* U+0155 LATIN SMALL LETTER R WITH ACUTE */
#define XK_abreve                        0x01e3  /* U+0103 LATIN SMALL LETTER A WITH BREVE */
#define XK_lacute                        0x01e5  /* U+013A LATIN SMALL LETTER L WITH ACUTE */
#define XK_cacute                        0x01e6  /* U+0107 LATIN SMALL LETTER C WITH ACUTE */
#define XK_ccaron                        0x01e8  /* U+010D LATIN SMALL LETTER C WITH CARON */
#define XK_eogonek                       0x01ea  /* U+0119 LATIN SMALL LETTER E WITH OGONEK */
#define XK_ecaron                        0x01ec  /* U+011B LATIN SMALL LETTER E WITH CARON */
#define XK_dcaron                        0x01ef  /* U+010F LATIN SMALL LETTER D WITH CARON */
#define XK_dstroke                       0x01f0  /* U+0111 LATIN SMALL LETTER D WITH STROKE */
#define XK_nacute                        0x01f1  /* U+0144 LATIN SMALL LETTER N WITH ACUTE */
#define XK_ncaron                        0x01f2  /* U+0148 LATIN SMALL LETTER N WITH CARON */
#define XK_odoubleacute                  0x01f5  /* U+0151 LATIN SMALL LETTER O WITH DOUBLE ACUTE */
#define XK_rcaron                        0x01f8  /* U+0159 LATIN SMALL LETTER R WITH CARON */
#define XK_uring                         0x01f9  /* U+016F LATIN SMALL LETTER U WITH RING ABOVE */
#define XK_udoubleacute                  0x01fb  /* U+0171 LATIN SMALL LETTER U WITH DOUBLE ACUTE */
#define XK_tcedilla                      0x01fe  /* U+0163 LATIN SMALL LETTER T WITH CEDILLA */
#define XK_abovedot                      0x01ff  /* U+02D9 DOT ABOVE */
#endif /* XK_LATIN2 */

/*
 * Latin 3
 * Byte 3 = 2
 */

#ifdef XK_LATIN3
#define XK_Hstroke                       0x02a1  /* U+0126 LATIN CAPITAL LETTER H WITH STROKE */
#define XK_Hcircumflex                   0x02a6  /* U+0124 LATIN CAPITAL LETTER H WITH CIRCUMFLEX */
#define XK_Iabovedot                     0x02a9  /* U+0130 LATIN CAPITAL LETTER I WITH DOT ABOVE */
#define XK_Gbreve                        0x02ab  /* U+011E LATIN CAPITAL LETTER G WITH BREVE */
#define XK_Jcircumflex                   0x02ac  /* U+0134 LATIN CAPITAL LETTER J WITH CIRCUMFLEX */
#define XK_hstroke                       0x02b1  /* U+0127 LATIN SMALL LETTER H WITH STROKE */
#define XK_hcircumflex                   0x02b6  /* U+0125 LATIN SMALL LETTER H WITH CIRCUMFLEX */
#define XK_idotless                      0x02b9  /* U+0131 LATIN SMALL LETTER DOTLESS I */
#define XK_gbreve                        0x02bb  /* U+011F LATIN SMALL LETTER G WITH BREVE */
#define XK_jcircumflex                   0x02bc  /* U+0135 LATIN SMALL LETTER J WITH CIRCUMFLEX */
#define XK_Cabovedot                     0x02c5  /* U+010A LATIN CAPITAL LETTER C WITH DOT ABOVE */
#define XK_Ccircumflex                   0x02c6  /* U+0108 LATIN CAPITAL LETTER C WITH CIRCUMFLEX */
#define XK_Gabovedot                     0x02d5  /* U+0120 LATIN CAPITAL LETTER G WITH DOT ABOVE */
#define XK_Gcircumflex                   0x02d8  /* U+011C LATIN CAPITAL LETTER G WITH CIRCUMFLEX */
#define XK_Ubreve                        0x02dd  /* U+016C LATIN CAPITAL LETTER U WITH BREVE */
#define XK_Scircumflex                   0x02de  /* U+015C LATIN CAPITAL LETTER S WITH CIRCUMFLEX */
#define XK_cabovedot                     0x02e5  /* U+010B LATIN SMALL LETTER C WITH DOT ABOVE */
#define XK_ccircumflex                   0x02e6  /* U+0109 LATIN SMALL LETTER C WITH CIRCUMFLEX */
#define XK_gabovedot                     0x02f5  /* U+0121 LATIN SMALL LETTER G WITH DOT ABOVE */
#define XK_gcircumflex                   0x02f8  /* U+011D LATIN SMALL LETTER G WITH CIRCUMFLEX */
#define XK_ubreve                        0x02fd  /* U+016D LATIN SMALL LETTER U WITH BREVE */
#define XK_scircumflex                   0x02fe  /* U+015D LATIN SMALL LETTER S WITH CIRCUMFLEX */
#endif /* XK_LATIN3 */


/*
 * Latin 4
 * Byte 3 = 3
 */

#ifdef XK_LATIN4
#define XK_kra                           0x03a2  /* U+0138 LATIN SMALL LETTER KRA */
#define XK_kappa                         0x03a2  /* deprecated */
#define XK_Rcedilla                      0x03a3  /* U+0156 LATIN CAPITAL LETTER R WITH CEDILLA */
#define XK_Itilde                        0x03a5  /* U+0128 LATIN CAPITAL LETTER I WITH TILDE */
#define XK_Lcedilla                      0x03a6  /* U+013B LATIN CAPITAL LETTER L WITH CEDILLA */
#define XK_Emacron                       0x03aa  /* U+0112 LATIN CAPITAL LETTER E WITH MACRON */
#define XK_Gcedilla                      0x03ab  /* U+0122 LATIN CAPITAL LETTER G WITH CEDILLA */
#define XK_Tslash                        0x03ac  /* U+0166 LATIN CAPITAL LETTER T WITH STROKE */
#define XK_rcedilla                      0x03b3  /* U+0157 LATIN SMALL LETTER R WITH CEDILLA */
#define XK_itilde                        0x03b5  /* U+0129 LATIN SMALL LETTER I WITH TILDE */
#define XK_lcedilla                      0x03b6  /* U+013C LATIN SMALL LETTER L WITH CEDILLA */
#define XK_emacron                       0x03ba  /* U+0113 LATIN SMALL LETTER E WITH MACRON */
#define XK_gcedilla                      0x03bb  /* U+0123 LATIN SMALL LETTER G WITH CEDILLA */
#define XK_tslash                        0x03bc  /* U+0167 LATIN SMALL LETTER T WITH STROKE */
#define XK_ENG                           0x03bd  /* U+014A LATIN CAPITAL LETTER ENG */
#define XK_eng                           0x03bf  /* U+014B LATIN SMALL LETTER ENG */
#define XK_Amacron                       0x03c0  /* U+0100 LATIN CAPITAL LETTER A WITH MACRON */
#define XK_Iogonek                       0x03c7  /* U+012E LATIN CAPITAL LETTER I WITH OGONEK */
#define XK_Eabovedot                     0x03cc  /* U+0116 LATIN CAPITAL LETTER E WITH DOT ABOVE */
#define XK_Imacron                       0x03cf  /* U+012A LATIN CAPITAL LETTER I WITH MACRON */
#define XK_Ncedilla                      0x03d1  /* U+0145 LATIN CAPITAL LETTER N WITH CEDILLA */
#define XK_Omacron                       0x03d2  /* U+014C LATIN CAPITAL LETTER O WITH MACRON */
#define XK_Kcedilla                      0x03d3  /* U+0136 LATIN CAPITAL LETTER K WITH CEDILLA */
#define XK_Uogonek                       0x03d9  /* U+0172 LATIN CAPITAL LETTER U WITH OGONEK */
#define XK_Utilde                        0x03dd  /* U+0168 LATIN CAPITAL LETTER U WITH TILDE */
#define XK_Umacron                       0x03de  /* U+016A LATIN CAPITAL LETTER U WITH MACRON */
#define XK_amacron                       0x03e0  /* U+0101 LATIN SMALL LETTER A WITH MACRON */
#define XK_iogonek                       0x03e7  /* U+012F LATIN SMALL LETTER I WITH OGONEK */
#define XK_eabovedot                     0x03ec  /* U+0117 LATIN SMALL LETTER E WITH DOT ABOVE */
#define XK_imacron                       0x03ef  /* U+012B LATIN SMALL LETTER I WITH MACRON */
#define XK_ncedilla                      0x03f1  /* U+0146 LATIN SMALL LETTER N WITH CEDILLA */
#define XK_omacron                       0x03f2  /* U+014D LATIN SMALL LETTER O WITH MACRON */
#define XK_kcedilla                      0x03f3  /* U+0137 LATIN SMALL LETTER K WITH CEDILLA */
#define XK_uogonek                       0x03f9  /* U+0173 LATIN SMALL LETTER U WITH OGONEK */
#define XK_utilde                        0x03fd  /* U+0169 LATIN SMALL LETTER U WITH TILDE */
#define XK_umacron                       0x03fe  /* U+016B LATIN SMALL LETTER U WITH MACRON */
#endif /* XK_LATIN4 */

/*
 * Latin 8
 */
#ifdef XK_LATIN8
#define XK_Wcircumflex                0x1000174  /* U+0174 LATIN CAPITAL LETTER W WITH CIRCUMFLEX */
#define XK_wcircumflex                0x1000175  /* U+0175 LATIN SMALL LETTER W WITH CIRCUMFLEX */
#define XK_Ycircumflex                0x1000176  /* U+0176 LATIN CAPITAL LETTER Y WITH CIRCUMFLEX */
#define XK_ycircumflex                0x1000177  /* U+0177 LATIN SMALL LETTER Y WITH CIRCUMFLEX */
#define XK_Babovedot                  0x1001e02  /* U+1E02 LATIN CAPITAL LETTER B WITH DOT ABOVE */
#define XK_babovedot                  0x1001e03  /* U+1E03 LATIN SMALL LETTER B WITH DOT ABOVE */
#define XK_Dabovedot                  0x1001e0a  /* U+1E0A LATIN CAPITAL LETTER D WITH DOT ABOVE */
#define XK_dabovedot                  0x1001e0b  /* U+1E0B LATIN SMALL LETTER D WITH DOT ABOVE */
#define XK_Fabovedot                  0x1001e1e  /* U+1E1E LATIN CAPITAL LETTER F WITH DOT ABOVE */
#define XK_fabovedot                  0x1001e1f  /* U+1E1F LATIN SMALL LETTER F WITH DOT ABOVE */
#define XK_Mabovedot                  0x1001e40  /* U+1E40 LATIN CAPITAL LETTER M WITH DOT ABOVE */
#define XK_mabovedot                  0x1001e41  /* U+1E41 LATIN SMALL LETTER M WITH DOT ABOVE */
#define XK_Pabovedot                  0x1001e56  /* U+1E56 LATIN CAPITAL LETTER P WITH DOT ABOVE */
#define XK_pabovedot                  0x1001e57  /* U+1E57 LATIN SMALL LETTER P WITH DOT ABOVE */
#define XK_Sabovedot                  0x1001e60  /* U+1E60 LATIN CAPITAL LETTER S WITH DOT ABOVE */
#define XK_sabovedot                  0x1001e61  /* U+1E61 LATIN SMALL LETTER S WITH DOT ABOVE */
#define XK_Tabovedot                  0x1001e6a  /* U+1E6A LATIN CAPITAL LETTER T WITH DOT ABOVE */
#define XK_tabovedot                  0x1001e6b  /* U+1E6B LATIN SMALL LETTER T WITH DOT ABOVE */
#define XK_Wgrave                     0x1001e80  /* U+1E80 LATIN CAPITAL LETTER W WITH GRAVE */
#define XK_wgrave                     0x1001e81  /* U+1E81 LATIN SMALL LETTER W WITH GRAVE */
#define XK_Wacute                     0x1001e82  /* U+1E82 LATIN CAPITAL LETTER W WITH ACUTE */
#define XK_wacute                     0x1001e83  /* U+1E83 LATIN SMALL LETTER W WITH ACUTE */
#define XK_Wdiaeresis                 0x1001e84  /* U+1E84 LATIN CAPITAL LETTER W WITH DIAERESIS */
#define XK_wdiaeresis                 0x1001e85  /* U+1E85 LATIN SMALL LETTER W WITH DIAERESIS */
#define XK_Ygrave                     0x1001ef2  /* U+1EF2 LATIN CAPITAL LETTER Y WITH GRAVE */
#define XK_ygrave                     0x1001ef3  /* U+1EF3 LATIN SMALL LETTER Y WITH GRAVE */
#endif /* XK_LATIN8 */

/*
 * Latin 9
 * Byte 3 = 0x13
 */

#ifdef XK_LATIN9
#define XK_OE                            0x13bc  /* U+0152 LATIN CAPITAL LIGATURE OE */
#define XK_oe                            0x13bd  /* U+0153 LATIN SMALL LIGATURE OE */
#define XK_Ydiaeresis                    0x13be  /* U+0178 LATIN CAPITAL LETTER Y WITH DIAERESIS */
#endif /* XK_LATIN9 */

/*
 * Katakana
 * Byte 3 = 4
 */

#ifdef XK_KATAKANA
#define XK_overline                      0x047e  /* U+203E OVERLINE */
#define XK_kana_fullstop                 0x04a1  /* U+3002 IDEOGRAPHIC FULL STOP */
#define XK_kana_openingbracket           0x04a2  /* U+300C LEFT CORNER BRACKET */
#define XK_kana_closingbracket           0x04a3  /* U+300D RIGHT CORNER BRACKET */
#define XK_kana_comma                    0x04a4  /* U+3001 IDEOGRAPHIC COMMA */
#define XK_kana_conjunctive              0x04a5  /* U+30FB KATAKANA MIDDLE DOT */
#define XK_kana_middledot                0x04a5  /* deprecated */
#define XK_kana_WO                       0x04a6  /* U+30F2 KATAKANA LETTER WO */
#define XK_kana_a                        0x04a7  /* U+30A1 KATAKANA LETTER SMALL A */
#define XK_kana_i                        0x04a8  /* U+30A3 KATAKANA LETTER SMALL I */
#define XK_kana_u                        0x04a9  /* U+30A5 KATAKANA LETTER SMALL U */
#define XK_kana_e                        0x04aa  /* U+30A7 KATAKANA LETTER SMALL E */
#define XK_kana_o                        0x04ab  /* U+30A9 KATAKANA LETTER SMALL O */
#define XK_kana_ya                       0x04ac  /* U+30E3 KATAKANA LETTER SMALL YA */
#define XK_kana_yu                       0x04ad  /* U+30E5 KATAKANA LETTER SMALL YU */
#define XK_kana_yo                       0x04ae  /* U+30E7 KATAKANA LETTER SMALL YO */
#define XK_kana_tsu                      0x04af  /* U+30C3 KATAKANA LETTER SMALL TU */
#define XK_kana_tu                       0x04af  /* deprecated */
#define XK_prolongedsound                0x04b0  /* U+30FC KATAKANA-HIRAGANA PROLONGED SOUND MARK */
#define XK_kana_A                        0x04b1  /* U+30A2 KATAKANA LETTER A */
#define XK_kana_I                        0x04b2  /* U+30A4 KATAKANA LETTER I */
#define XK_kana_U                        0x04b3  /* U+30A6 KATAKANA LETTER U */
#define XK_kana_E                        0x04b4  /* U+30A8 KATAKANA LETTER E */
#define XK_kana_O                        0x04b5  /* U+30AA KATAKANA LETTER O */
#define XK_kana_KA                       0x04b6  /* U+30AB KATAKANA LETTER KA */
#define XK_kana_KI                       0x04b7  /* U+30AD KATAKANA LETTER KI */
#define XK_kana_KU                       0x04b8  /* U+30AF KATAKANA LETTER KU */
#define XK_kana_KE                       0x04b9  /* U+30B1 KATAKANA LETTER KE */
#define XK_kana_KO                       0x04ba  /* U+30B3 KATAKANA LETTER KO */
#define XK_kana_SA                       0x04bb  /* U+30B5 KATAKANA LETTER SA */
#define XK_kana_SHI                      0x04bc  /* U+30B7 KATAKANA LETTER SI */
#define XK_kana_SU                       0x04bd  /* U+30B9 KATAKANA LETTER SU */
#define XK_kana_SE                       0x04be  /* U+30BB KATAKANA LETTER SE */
#define XK_kana_SO                       0x04bf  /* U+30BD KATAKANA LETTER SO */
#define XK_kana_TA                       0x04c0  /* U+30BF KATAKANA LETTER TA */
#define XK_kana_CHI                      0x04c1  /* U+30C1 KATAKANA LETTER TI */
#define XK_kana_TI                       0x04c1  /* deprecated */
#define XK_kana_TSU                      0x04c2  /* U+30C4 KATAKANA LETTER TU */
#define XK_kana_TU                       0x04c2  /* deprecated */
#define XK_kana_TE                       0x04c3  /* U+30C6 KATAKANA LETTER TE */
#define XK_kana_TO                       0x04c4  /* U+30C8 KATAKANA LETTER TO */
#define XK_kana_NA                       0x04c5  /* U+30CA KATAKANA LETTER NA */
#define XK_kana_NI                       0x04c6  /* U+30CB KATAKANA LETTER NI */
#define XK_kana_NU                       0x04c7  /* U+30CC KATAKANA LETTER NU */
#define XK_kana_NE                       0x04c8  /* U+30CD KATAKANA LETTER NE */
#define XK_kana_NO                       0x04c9  /* U+30CE KATAKANA LETTER NO */
#define XK_kana_HA                       0x04ca  /* U+30CF KATAKANA LETTER HA */
#define XK_kana_HI                       0x04cb  /* U+30D2 KATAKANA LETTER HI */
#define XK_kana_FU                       0x04cc  /* U+30D5 KATAKANA LETTER HU */
#define XK_kana_HU                       0x04cc  /* deprecated */
#define XK_kana_HE                       0x04cd  /* U+30D8 KATAKANA LETTER HE */
#define XK_kana_HO                       0x04ce  /* U+30DB KATAKANA LETTER HO */
#define XK_kana_MA                       0x04cf  /* U+30DE KATAKANA LETTER MA */
#define XK_kana_MI                       0x04d0  /* U+30DF KATAKANA LETTER MI */
#define XK_kana_MU                       0x04d1  /* U+30E0 KATAKANA LETTER MU */
#define XK_kana_ME                       0x04d2  /* U+30E1 KATAKANA LETTER ME */
#define XK_kana_MO                       0x04d3  /* U+30E2 KATAKANA LETTER MO */
#define XK_kana_YA                       0x04d4  /* U+30E4 KATAKANA LETTER YA */
#define XK_kana_YU                       0x04d5  /* U+30E6 KATAKANA LETTER YU */
#define XK_kana_YO                       0x04d6  /* U+30E8 KATAKANA LETTER YO */
#define XK_kana_RA                       0x04d7  /* U+30E9 KATAKANA LETTER RA */
#define XK_kana_RI                       0x04d8  /* U+30EA KATAKANA LETTER RI */
#define XK_kana_RU                       0x04d9  /* U+30EB KATAKANA LETTER RU */
#define XK_kana_RE                       0x04da  /* U+30EC KATAKANA LETTER RE */
#define XK_kana_RO                       0x04db  /* U+30ED KATAKANA LETTER RO */
#define XK_kana_WA                       0x04dc  /* U+30EF KATAKANA LETTER WA */
#define XK_kana_N                        0x04dd  /* U+30F3 KATAKANA LETTER N */
#define XK_voicedsound                   0x04de  /* U+309B KATAKANA-HIRAGANA VOICED SOUND MARK */
#define XK_semivoicedsound               0x04df  /* U+309C KATAKANA-HIRAGANA SEMI-VOICED SOUND MARK */
#define XK_kana_switch                   0xff7e  /* Alias for mode_switch */
#endif /* XK_KATAKANA */

/*
 * Arabic
 * Byte 3 = 5
 */

#ifdef XK_ARABIC
#define XK_Farsi_0                    0x10006f0  /* U+06F0 EXTENDED ARABIC-INDIC DIGIT ZERO */
#define XK_Farsi_1                    0x10006f1  /* U+06F1 EXTENDED ARABIC-INDIC DIGIT ONE */
#define XK_Farsi_2                    0x10006f2  /* U+06F2 EXTENDED ARABIC-INDIC DIGIT TWO */
#define XK_Farsi_3                    0x10006f3  /* U+06F3 EXTENDED ARABIC-INDIC DIGIT THREE */
#define XK_Farsi_4                    0x10006f4  /* U+06F4 EXTENDED ARABIC-INDIC DIGIT FOUR */
#define XK_Farsi_5                    0x10006f5  /* U+06F5 EXTENDED ARABIC-INDIC DIGIT FIVE */
#define XK_Farsi_6                    0x10006f6  /* U+06F6 EXTENDED ARABIC-INDIC DIGIT SIX */
#define XK_Farsi_7                    0x10006f7  /* U+06F7 EXTENDED ARABIC-INDIC DIGIT SEVEN */
#define XK_Farsi_8                    0x10006f8  /* U+06F8 EXTENDED ARABIC-INDIC DIGIT EIGHT */
#define XK_Farsi_9                    0x10006f9  /* U+06F9 EXTENDED ARABIC-INDIC DIGIT NINE */
#define XK_Arabic_percent             0x100066a  /* U+066A ARABIC PERCENT SIGN */
#define XK_Arabic_superscript_alef    0x1000670  /* U+0670 ARABIC LETTER SUPERSCRIPT ALEF */
#define XK_Arabic_tteh                0x1000679  /* U+0679 ARABIC LETTER TTEH */
#define XK_Arabic_peh                 0x100067e  /* U+067E ARABIC LETTER PEH */
#define XK_Arabic_tcheh               0x1000686  /* U+0686 ARABIC LETTER TCHEH */
#define XK_Arabic_ddal                0x1000688  /* U+0688 ARABIC LETTER DDAL */
#define XK_Arabic_rreh                0x1000691  /* U+0691 ARABIC LETTER RREH */
#define XK_Arabic_comma                  0x05ac  /* U+060C ARABIC COMMA */
#define XK_Arabic_fullstop            0x10006d4  /* U+06D4 ARABIC FULL STOP */
#define XK_Arabic_0                   0x1000660  /* U+0660 ARABIC-INDIC DIGIT ZERO */
#define XK_Arabic_1                   0x1000661  /* U+0661 ARABIC-INDIC DIGIT ONE */
#define XK_Arabic_2                   0x1000662  /* U+0662 ARABIC-INDIC DIGIT TWO */
#define XK_Arabic_3                   0x1000663  /* U+0663 ARABIC-INDIC DIGIT THREE */
#define XK_Arabic_4                   0x1000664  /* U+0664 ARABIC-INDIC DIGIT FOUR */
#define XK_Arabic_5                   0x1000665  /* U+0665 ARABIC-INDIC DIGIT FIVE */
#define XK_Arabic_6                   0x1000666  /* U+0666 ARABIC-INDIC DIGIT SIX */
#define XK_Arabic_7                   0x1000667  /* U+0667 ARABIC-INDIC DIGIT SEVEN */
#define XK_Arabic_8                   0x1000668  /* U+0668 ARABIC-INDIC DIGIT EIGHT */
#define XK_Arabic_9                   0x1000669  /* U+0669 ARABIC-INDIC DIGIT NINE */
#define XK_Arabic_semicolon              0x05bb  /* U+061B ARABIC SEMICOLON */
#define XK_Arabic_question_mark          0x05bf  /* U+061F ARABIC QUESTION MARK */
#define XK_Arabic_hamza                  0x05c1  /* U+0621 ARABIC LETTER HAMZA */
#define XK_Arabic_maddaonalef            0x05c2  /* U+0622 ARABIC LETTER ALEF WITH MADDA ABOVE */
#define XK_Arabic_hamzaonalef            0x05c3  /* U+0623 ARABIC LETTER ALEF WITH HAMZA ABOVE */
#define XK_Arabic_hamzaonwaw             0x05c4  /* U+0624 ARABIC LETTER WAW WITH HAMZA ABOVE */
#define XK_Arabic_hamzaunderalef         0x05c5  /* U+0625 ARABIC LETTER ALEF WITH HAMZA BELOW */
#define XK_Arabic_hamzaonyeh             0x05c6  /* U+0626 ARABIC LETTER YEH WITH HAMZA ABOVE */
#define XK_Arabic_alef                   0x05c7  /* U+0627 ARABIC LETTER ALEF */
#define XK_Arabic_beh                    0x05c8  /* U+0628 ARABIC LETTER BEH */
#define XK_Arabic_tehmarbuta             0x05c9  /* U+0629 ARABIC LETTER TEH MARBUTA */
#define XK_Arabic_teh                    0x05ca  /* U+062A ARABIC LETTER TEH */
#define XK_Arabic_theh                   0x05cb  /* U+062B ARABIC LETTER THEH */
#define XK_Arabic_jeem                   0x05cc  /* U+062C ARABIC LETTER JEEM */
#define XK_Arabic_hah                    0x05cd  /* U+062D ARABIC LETTER HAH */
#define XK_Arabic_khah                   0x05ce  /* U+062E ARABIC LETTER KHAH */
#define XK_Arabic_dal                    0x05cf  /* U+062F ARABIC LETTER DAL */
#define XK_Arabic_thal                   0x05d0  /* U+0630 ARABIC LETTER THAL */
#define XK_Arabic_ra                     0x05d1  /* U+0631 ARABIC LETTER REH */
#define XK_Arabic_zain                   0x05d2  /* U+0632 ARABIC LETTER ZAIN */
#define XK_Arabic_seen                   0x05d3  /* U+0633 ARABIC LETTER SEEN */
#define XK_Arabic_sheen                  0x05d4  /* U+0634 ARABIC LETTER SHEEN */
#define XK_Arabic_sad                    0x05d5  /* U+0635 ARABIC LETTER SAD */
#define XK_Arabic_dad                    0x05d6  /* U+0636 ARABIC LETTER DAD */
#define XK_Arabic_tah                    0x05d7  /* U+0637 ARABIC LETTER TAH */
#define XK_Arabic_zah                    0x05d8  /* U+0638 ARABIC LETTER ZAH */
#define XK_Arabic_ain                    0x05d9  /* U+0639 ARABIC LETTER AIN */
#define XK_Arabic_ghain                  0x05da  /* U+063A ARABIC LETTER GHAIN */
#define XK_Arabic_tatweel                0x05e0  /* U+0640 ARABIC TATWEEL */
#define XK_Arabic_feh                    0x05e1  /* U+0641 ARABIC LETTER FEH */
#define XK_Arabic_qaf                    0x05e2  /* U+0642 ARABIC LETTER QAF */
#define XK_Arabic_kaf                    0x05e3  /* U+0643 ARABIC LETTER KAF */
#define XK_Arabic_lam                    0x05e4  /* U+0644 ARABIC LETTER LAM */
#define XK_Arabic_meem                   0x05e5  /* U+0645 ARABIC LETTER MEEM */
#define XK_Arabic_noon                   0x05e6  /* U+0646 ARABIC LETTER NOON */
#define XK_Arabic_ha                     0x05e7  /* U+0647 ARABIC LETTER HEH */
#define XK_Arabic_heh                    0x05e7  /* deprecated */
#define XK_Arabic_waw                    0x05e8  /* U+0648 ARABIC LETTER WAW */
#define XK_Arabic_alefmaksura            0x05e9  /* U+0649 ARABIC LETTER ALEF MAKSURA */
#define XK_Arabic_yeh                    0x05ea  /* U+064A ARABIC LETTER YEH */
#define XK_Arabic_fathatan               0x05eb  /* U+064B ARABIC FATHATAN */
#define XK_Arabic_dammatan               0x05ec  /* U+064C ARABIC DAMMATAN */
#define XK_Arabic_kasratan               0x05ed  /* U+064D ARABIC KASRATAN */
#define XK_Arabic_fatha                  0x05ee  /* U+064E ARABIC FATHA */
#define XK_Arabic_damma                  0x05ef  /* U+064F ARABIC DAMMA */
#define XK_Arabic_kasra                  0x05f0  /* U+0650 ARABIC KASRA */
#define XK_Arabic_shadda                 0x05f1  /* U+0651 ARABIC SHADDA */
#define XK_Arabic_sukun                  0x05f2  /* U+0652 ARABIC SUKUN */
#define XK_Arabic_madda_above         0x1000653  /* U+0653 ARABIC MADDAH ABOVE */
#define XK_Arabic_hamza_above         0x1000654  /* U+0654 ARABIC HAMZA ABOVE */
#define XK_Arabic_hamza_below         0x1000655  /* U+0655 ARABIC HAMZA BELOW */
#define XK_Arabic_jeh                 0x1000698  /* U+0698 ARABIC LETTER JEH */
#define XK_Arabic_veh                 0x10006a4  /* U+06A4 ARABIC LETTER VEH */
#define XK_Arabic_keheh               0x10006a9  /* U+06A9 ARABIC LETTER KEHEH */
#define XK_Arabic_gaf                 0x10006af  /* U+06AF ARABIC LETTER GAF */
#define XK_Arabic_noon_ghunna         0x10006ba  /* U+06BA ARABIC LETTER NOON GHUNNA */
#define XK_Arabic_heh_doachashmee     0x10006be  /* U+06BE ARABIC LETTER HEH DOACHASHMEE */
#define XK_Farsi_yeh                  0x10006cc  /* U+06CC ARABIC LETTER FARSI YEH */
#define XK_Arabic_farsi_yeh           0x10006cc  /* U+06CC ARABIC LETTER FARSI YEH */
#define XK_Arabic_yeh_baree           0x10006d2  /* U+06D2 ARABIC LETTER YEH BARREE */
#define XK_Arabic_heh_goal            0x10006c1  /* U+06C1 ARABIC LETTER HEH GOAL */
#define XK_Arabic_switch                 0xff7e  /* Alias for mode_switch */
#endif /* XK_ARABIC */

/*
 * Cyrillic
 * Byte 3 = 6
 */
#ifdef XK_CYRILLIC
#define XK_Cyrillic_GHE_bar           0x1000492  /* U+0492 CYRILLIC CAPITAL LETTER GHE WITH STROKE */
#define XK_Cyrillic_ghe_bar           0x1000493  /* U+0493 CYRILLIC SMALL LETTER GHE WITH STROKE */
#define XK_Cyrillic_ZHE_descender     0x1000496  /* U+0496 CYRILLIC CAPITAL LETTER ZHE WITH DESCENDER */
#define XK_Cyrillic_zhe_descender     0x1000497  /* U+0497 CYRILLIC SMALL LETTER ZHE WITH DESCENDER */
#define XK_Cyrillic_KA_descender      0x100049a  /* U+049A CYRILLIC CAPITAL LETTER KA WITH DESCENDER */
#define XK_Cyrillic_ka_descender      0x100049b  /* U+049B CYRILLIC SMALL LETTER KA WITH DESCENDER */
#define XK_Cyrillic_KA_vertstroke     0x100049c  /* U+049C CYRILLIC CAPITAL LETTER KA WITH VERTICAL STROKE */
#define XK_Cyrillic_ka_vertstroke     0x100049d  /* U+049D CYRILLIC SMALL LETTER KA WITH VERTICAL STROKE */
#define XK_Cyrillic_EN_descender      0x10004a2  /* U+04A2 CYRILLIC CAPITAL LETTER EN WITH DESCENDER */
#define XK_Cyrillic_en_descender      0x10004a3  /* U+04A3 CYRILLIC SMALL LETTER EN WITH DESCENDER */
#define XK_Cyrillic_U_straight        0x10004ae  /* U+04AE CYRILLIC CAPITAL LETTER STRAIGHT U */
#define XK_Cyrillic_u_straight        0x10004af  /* U+04AF CYRILLIC SMALL LETTER STRAIGHT U */
#define XK_Cyrillic_U_straight_bar    0x10004b0  /* U+04B0 CYRILLIC CAPITAL LETTER STRAIGHT U WITH STROKE */
#define XK_Cyrillic_u_straight_bar    0x10004b1  /* U+04B1 CYRILLIC SMALL LETTER STRAIGHT U WITH STROKE */
#define XK_Cyrillic_HA_descender      0x10004b2  /* U+04B2 CYRILLIC CAPITAL LETTER HA WITH DESCENDER */
#define XK_Cyrillic_ha_descender      0x10004b3  /* U+04B3 CYRILLIC SMALL LETTER HA WITH DESCENDER */
#define XK_Cyrillic_CHE_descender     0x10004b6  /* U+04B6 CYRILLIC CAPITAL LETTER CHE WITH DESCENDER */
#define XK_Cyrillic_che_descender     0x10004b7  /* U+04B7 CYRILLIC SMALL LETTER CHE WITH DESCENDER */
#define XK_Cyrillic_CHE_vertstroke    0x10004b8  /* U+04B8 CYRILLIC CAPITAL LETTER CHE WITH VERTICAL STROKE */
#define XK_Cyrillic_che_vertstroke    0x10004b9  /* U+04B9 CYRILLIC SMALL LETTER CHE WITH VERTICAL STROKE */
#define XK_Cyrillic_SHHA              0x10004ba  /* U+04BA CYRILLIC CAPITAL LETTER SHHA */
#define XK_Cyrillic_shha              0x10004bb  /* U+04BB CYRILLIC SMALL LETTER SHHA */

#define XK_Cyrillic_SCHWA             0x10004d8  /* U+04D8 CYRILLIC CAPITAL LETTER SCHWA */
#define XK_Cyrillic_schwa             0x10004d9  /* U+04D9 CYRILLIC SMALL LETTER SCHWA */
#define XK_Cyrillic_I_macron          0x10004e2  /* U+04E2 CYRILLIC CAPITAL LETTER I WITH MACRON */
#define XK_Cyrillic_i_macron          0x10004e3  /* U+04E3 CYRILLIC SMALL LETTER I WITH MACRON */
#define XK_Cyrillic_O_bar             0x10004e8  /* U+04E8 CYRILLIC CAPITAL LETTER BARRED O */
#define XK_Cyrillic_o_bar             0x10004e9  /* U+04E9 CYRILLIC SMALL LETTER BARRED O */
#define XK_Cyrillic_U_macron          0x10004ee  /* U+04EE CYRILLIC CAPITAL LETTER U WITH MACRON */
#define XK_Cyrillic_u_macron          0x10004ef  /* U+04EF CYRILLIC SMALL LETTER U WITH MACRON */

#define XK_Serbian_dje                   0x06a1  /* U+0452 CYRILLIC SMALL LETTER DJE */
#define XK_Macedonia_gje                 0x06a2  /* U+0453 CYRILLIC SMALL LETTER GJE */
#define XK_Cyrillic_io                   0x06a3  /* U+0451 CYRILLIC SMALL LETTER IO */
#define XK_Ukrainian_ie                  0x06a4  /* U+0454 CYRILLIC SMALL LETTER UKRAINIAN IE */
#define XK_Ukranian_je                   0x06a4  /* deprecated */
#define XK_Macedonia_dse                 0x06a5  /* U+0455 CYRILLIC SMALL LETTER DZE */
#define XK_Ukrainian_i                   0x06a6  /* U+0456 CYRILLIC SMALL LETTER BYELORUSSIAN-UKRAINIAN I */
#define XK_Ukranian_i                    0x06a6  /* deprecated */
#define XK_Ukrainian_yi                  0x06a7  /* U+0457 CYRILLIC SMALL LETTER YI */
#define XK_Ukranian_yi                   0x06a7  /* deprecated */
#define XK_Cyrillic_je                   0x06a8  /* U+0458 CYRILLIC SMALL LETTER JE */
#define XK_Serbian_je                    0x06a8  /* deprecated */
#define XK_Cyrillic_lje                  0x06a9  /* U+0459 CYRILLIC SMALL LETTER LJE */
#define XK_Serbian_lje                   0x06a9  /* deprecated */
#define XK_Cyrillic_nje                  0x06aa  /* U+045A CYRILLIC SMALL LETTER NJE */
#define XK_Serbian_nje                   0x06aa  /* deprecated */
#define XK_Serbian_tshe                  0x06ab  /* U+045B CYRILLIC SMALL LETTER TSHE */
#define XK_Macedonia_kje                 0x06ac  /* U+045C CYRILLIC SMALL LETTER KJE */
#define XK_Ukrainian_ghe_with_upturn     0x06ad  /* U+0491 CYRILLIC SMALL LETTER GHE WITH UPTURN */
#define XK_Byelorussian_shortu           0x06ae  /* U+045E CYRILLIC SMALL LETTER SHORT U */
#define XK_Cyrillic_dzhe                 0x06af  /* U+045F CYRILLIC SMALL LETTER DZHE */
#define XK_Serbian_dze                   0x06af  /* deprecated */
#define XK_numerosign                    0x06b0  /* U+2116 NUMERO SIGN */
#define XK_Serbian_DJE                   0x06b1  /* U+0402 CYRILLIC CAPITAL LETTER DJE */
#define XK_Macedonia_GJE                 0x06b2  /* U+0403 CYRILLIC CAPITAL LETTER GJE */
#define XK_Cyrillic_IO                   0x06b3  /* U+0401 CYRILLIC CAPITAL LETTER IO */
#define XK_Ukrainian_IE                  0x06b4  /* U+0404 CYRILLIC CAPITAL LETTER UKRAINIAN IE */
#define XK_Ukranian_JE                   0x06b4  /* deprecated */
#define XK_Macedonia_DSE                 0x06b5  /* U+0405 CYRILLIC CAPITAL LETTER DZE */
#define XK_Ukrainian_I                   0x06b6  /* U+0406 CYRILLIC CAPITAL LETTER BYELORUSSIAN-UKRAINIAN I */
#define XK_Ukranian_I                    0x06b6  /* deprecated */
#define XK_Ukrainian_YI                  0x06b7  /* U+0407 CYRILLIC CAPITAL LETTER YI */
#define XK_Ukranian_YI                   0x06b7  /* deprecated */
#define XK_Cyrillic_JE                   0x06b8  /* U+0408 CYRILLIC CAPITAL LETTER JE */
#define XK_Serbian_JE                    0x06b8  /* deprecated */
#define XK_Cyrillic_LJE                  0x06b9  /* U+0409 CYRILLIC CAPITAL LETTER LJE */
#define XK_Serbian_LJE                   0x06b9  /* deprecated */
#define XK_Cyrillic_NJE                  0x06ba  /* U+040A CYRILLIC CAPITAL LETTER NJE */
#define XK_Serbian_NJE                   0x06ba  /* deprecated */
#define XK_Serbian_TSHE                  0x06bb  /* U+040B CYRILLIC CAPITAL LETTER TSHE */
#define XK_Macedonia_KJE                 0x06bc  /* U+040C CYRILLIC CAPITAL LETTER KJE */
#define XK_Ukrainian_GHE_WITH_UPTURN     0x06bd  /* U+0490 CYRILLIC CAPITAL LETTER GHE WITH UPTURN */
#define XK_Byelorussian_SHORTU           0x06be  /* U+040E CYRILLIC CAPITAL LETTER SHORT U */
#define XK_Cyrillic_DZHE                 0x06bf  /* U+040F CYRILLIC CAPITAL LETTER DZHE */
#define XK_Serbian_DZE                   0x06bf  /* deprecated */
#define XK_Cyrillic_yu                   0x06c0  /* U+044E CYRILLIC SMALL LETTER YU */
#define XK_Cyrillic_a                    0x06c1  /* U+0430 CYRILLIC SMALL LETTER A */
#define XK_Cyrillic_be                   0x06c2  /* U+0431 CYRILLIC SMALL LETTER BE */
#define XK_Cyrillic_tse                  0x06c3  /* U+0446 CYRILLIC SMALL LETTER TSE */
#define XK_Cyrillic_de                   0x06c4  /* U+0434 CYRILLIC SMALL LETTER DE */
#define XK_Cyrillic_ie                   0x06c5  /* U+0435 CYRILLIC SMALL LETTER IE */
#define XK_Cyrillic_ef                   0x06c6  /* U+0444 CYRILLIC SMALL LETTER EF */
#define XK_Cyrillic_ghe                  0x06c7  /* U+0433 CYRILLIC SMALL LETTER GHE */
#define XK_Cyrillic_ha                   0x06c8  /* U+0445 CYRILLIC SMALL LETTER HA */
#define XK_Cyrillic_i                    0x06c9  /* U+0438 CYRILLIC SMALL LETTER I */
#define XK_Cyrillic_shorti               0x06ca  /* U+0439 CYRILLIC SMALL LETTER SHORT I */
#define XK_Cyrillic_ka                   0x06cb  /* U+043A CYRILLIC SMALL LETTER KA */
#define XK_Cyrillic_el                   0x06cc  /* U+043B CYRILLIC SMALL LETTER EL */
#define XK_Cyrillic_em                   0x06cd  /* U+043C CYRILLIC SMALL LETTER EM */
#define XK_Cyrillic_en                   0x06ce  /* U+043D CYRILLIC SMALL LETTER EN */
#define XK_Cyrillic_o                    0x06cf  /* U+043E CYRILLIC SMALL LETTER O */
#define XK_Cyrillic_pe                   0x06d0  /* U+043F CYRILLIC SMALL LETTER PE */
#define XK_Cyrillic_ya                   0x06d1  /* U+044F CYRILLIC SMALL LETTER YA */
#define XK_Cyrillic_er                   0x06d2  /* U+0440 CYRILLIC SMALL LETTER ER */
#define XK_Cyrillic_es                   0x06d3  /* U+0441 CYRILLIC SMALL LETTER ES */
#define XK_Cyrillic_te                   0x06d4  /* U+0442 CYRILLIC SMALL LETTER TE */
#define XK_Cyrillic_u                    0x06d5  /* U+0443 CYRILLIC SMALL LETTER U */
#define XK_Cyrillic_zhe                  0x06d6  /* U+0436 CYRILLIC SMALL LETTER ZHE */
#define XK_Cyrillic_ve                   0x06d7  /* U+0432 CYRILLIC SMALL LETTER VE */
#define XK_Cyrillic_softsign             0x06d8  /* U+044C CYRILLIC SMALL LETTER SOFT SIGN */
#define XK_Cyrillic_yeru                 0x06d9  /* U+044B CYRILLIC SMALL LETTER YERU */
#define XK_Cyrillic_ze                   0x06da  /* U+0437 CYRILLIC SMALL LETTER ZE */
#define XK_Cyrillic_sha                  0x06db  /* U+0448 CYRILLIC SMALL LETTER SHA */
#define XK_Cyrillic_e                    0x06dc  /* U+044D CYRILLIC SMALL LETTER E */
#define XK_Cyrillic_shcha                0x06dd  /* U+0449 CYRILLIC SMALL LETTER SHCHA */
#define XK_Cyrillic_che                  0x06de  /* U+0447 CYRILLIC SMALL LETTER CHE */
#define XK_Cyrillic_hardsign             0x06df  /* U+044A CYRILLIC SMALL LETTER HARD SIGN */
#define XK_Cyrillic_YU                   0x06e0  /* U+042E CYRILLIC CAPITAL LETTER YU */
#define XK_Cyrillic_A                    0x06e1  /* U+0410 CYRILLIC CAPITAL LETTER A */
#define XK_Cyrillic_BE                   0x06e2  /* U+0411 CYRILLIC CAPITAL LETTER BE */
#define XK_Cyrillic_TSE                  0x06e3  /* U+0426 CYRILLIC CAPITAL LETTER TSE */
#define XK_Cyrillic_DE                   0x06e4  /* U+0414 CYRILLIC CAPITAL LETTER DE */
#define XK_Cyrillic_IE                   0x06e5  /* U+0415 CYRILLIC CAPITAL LETTER IE */
#define XK_Cyrillic_EF                   0x06e6  /* U+0424 CYRILLIC CAPITAL LETTER EF */
#define XK_Cyrillic_GHE                  0x06e7  /* U+0413 CYRILLIC CAPITAL LETTER GHE */
#define XK_Cyrillic_HA                   0x06e8  /* U+0425 CYRILLIC CAPITAL LETTER HA */
#define XK_Cyrillic_I                    0x06e9  /* U+0418 CYRILLIC CAPITAL LETTER I */
#define XK_Cyrillic_SHORTI               0x06ea  /* U+0419 CYRILLIC CAPITAL LETTER SHORT I */
#define XK_Cyrillic_KA                   0x06eb  /* U+041A CYRILLIC CAPITAL LETTER KA */
#define XK_Cyrillic_EL                   0x06ec  /* U+041B CYRILLIC CAPITAL LETTER EL */
#define XK_Cyrillic_EM                   0x06ed  /* U+041C CYRILLIC CAPITAL LETTER EM */
#define XK_Cyrillic_EN                   0x06ee  /* U+041D CYRILLIC CAPITAL LETTER EN */
#define XK_Cyrillic_O                    0x06ef  /* U+041E CYRILLIC CAPITAL LETTER O */
#define XK_Cyrillic_PE                   0x06f0  /* U+041F CYRILLIC CAPITAL LETTER PE */
#define XK_Cyrillic_YA                   0x06f1  /* U+042F CYRILLIC CAPITAL LETTER YA */
#define XK_Cyrillic_ER                   0x06f2  /* U+0420 CYRILLIC CAPITAL LETTER ER */
#define XK_Cyrillic_ES                   0x06f3  /* U+0421 CYRILLIC CAPITAL LETTER ES */
#define XK_Cyrillic_TE                   0x06f4  /* U+0422 CYRILLIC CAPITAL LETTER TE */
#define XK_Cyrillic_U                    0x06f5  /* U+0423 CYRILLIC CAPITAL LETTER U */
#define XK_Cyrillic_ZHE                  0x06f6  /* U+0416 CYRILLIC CAPITAL LETTER ZHE */
#define XK_Cyrillic_VE                   0x06f7  /* U+0412 CYRILLIC CAPITAL LETTER VE */
#define XK_Cyrillic_SOFTSIGN             0x06f8  /* U+042C CYRILLIC CAPITAL LETTER SOFT SIGN */
#define XK_Cyrillic_YERU                 0x06f9  /* U+042B CYRILLIC CAPITAL LETTER YERU */
#define XK_Cyrillic_ZE                   0x06fa  /* U+0417 CYRILLIC CAPITAL LETTER ZE */
#define XK_Cyrillic_SHA                  0x06fb  /* U+0428 CYRILLIC CAPITAL LETTER SHA */
#define XK_Cyrillic_E                    0x06fc  /* U+042D CYRILLIC CAPITAL LETTER E */
#define XK_Cyrillic_SHCHA                0x06fd  /* U+0429 CYRILLIC CAPITAL LETTER SHCHA */
#define XK_Cyrillic_CHE                  0x06fe  /* U+0427 CYRILLIC CAPITAL LETTER CHE */
#define XK_Cyrillic_HARDSIGN             0x06ff  /* U+042A CYRILLIC CAPITAL LETTER HARD SIGN */
#endif /* XK_CYRILLIC */

/*
 * Greek
 * (based on an early draft of, and not quite identical to, ISO/IEC 8859-7)
 * Byte 3 = 7
 */

#ifdef XK_GREEK
#define XK_Greek_ALPHAaccent             0x07a1  /* U+0386 GREEK CAPITAL LETTER ALPHA WITH TONOS */
#define XK_Greek_EPSILONaccent           0x07a2  /* U+0388 GREEK CAPITAL LETTER EPSILON WITH TONOS */
#define XK_Greek_ETAaccent               0x07a3  /* U+0389 GREEK CAPITAL LETTER ETA WITH TONOS */
#define XK_Greek_IOTAaccent              0x07a4  /* U+038A GREEK CAPITAL LETTER IOTA WITH TONOS */
#define XK_Greek_IOTAdieresis            0x07a5  /* U+03AA GREEK CAPITAL LETTER IOTA WITH DIALYTIKA */
#define XK_Greek_IOTAdiaeresis           0x07a5  /* old typo */
#define XK_Greek_OMICRONaccent           0x07a7  /* U+038C GREEK CAPITAL LETTER OMICRON WITH TONOS */
#define XK_Greek_UPSILONaccent           0x07a8  /* U+038E GREEK CAPITAL LETTER UPSILON WITH TONOS */
#define XK_Greek_UPSILONdieresis         0x07a9  /* U+03AB GREEK CAPITAL LETTER UPSILON WITH DIALYTIKA */
#define XK_Greek_OMEGAaccent             0x07ab  /* U+038F GREEK CAPITAL LETTER OMEGA WITH TONOS */
#define XK_Greek_accentdieresis          0x07ae  /* U+0385 GREEK DIALYTIKA TONOS */
#define XK_Greek_horizbar                0x07af  /* U+2015 HORIZONTAL BAR */
#define XK_Greek_alphaaccent             0x07b1  /* U+03AC GREEK SMALL LETTER ALPHA WITH TONOS */
#define XK_Greek_epsilonaccent           0x07b2  /* U+03AD GREEK SMALL LETTER EPSILON WITH TONOS */
#define XK_Greek_etaaccent               0x07b3  /* U+03AE GREEK SMALL LETTER ETA WITH TONOS */
#define XK_Greek_iotaaccent              0x07b4  /* U+03AF GREEK SMALL LETTER IOTA WITH TONOS */
#define XK_Greek_iotadieresis            0x07b5  /* U+03CA GREEK SMALL LETTER IOTA WITH DIALYTIKA */
#define XK_Greek_iotaaccentdieresis      0x07b6  /* U+0390 GREEK SMALL LETTER IOTA WITH DIALYTIKA AND TONOS */
#define XK_Greek_omicronaccent           0x07b7  /* U+03CC GREEK SMALL LETTER OMICRON WITH TONOS */
#define XK_Greek_upsilonaccent           0x07b8  /* U+03CD GREEK SMALL LETTER UPSILON WITH TONOS */
#define XK_Greek_upsilondieresis         0x07b9  /* U+03CB GREEK SMALL LETTER UPSILON WITH DIALYTIKA */
#define XK_Greek_upsilonaccentdieresis   0x07ba  /* U+03B0 GREEK SMALL LETTER UPSILON WITH DIALYTIKA AND TONOS */
#define XK_Greek_omegaaccent             0x07bb  /* U+03CE GREEK SMALL LETTER OMEGA WITH TONOS */
#define XK_Greek_ALPHA                   0x07c1  /* U+0391 GREEK CAPITAL LETTER ALPHA */
#define XK_Greek_BETA                    0x07c2  /* U+0392 GREEK CAPITAL LETTER BETA */
#define XK_Greek_GAMMA                   0x07c3  /* U+0393 GREEK CAPITAL LETTER GAMMA */
#define XK_Greek_DELTA                   0x07c4  /* U+0394 GREEK CAPITAL LETTER DELTA */
#define XK_Greek_EPSILON                 0x07c5  /* U+0395 GREEK CAPITAL LETTER EPSILON */
#define XK_Greek_ZETA                    0x07c6  /* U+0396 GREEK CAPITAL LETTER ZETA */
#define XK_Greek_ETA                     0x07c7  /* U+0397 GREEK CAPITAL LETTER ETA */
#define XK_Greek_THETA                   0x07c8  /* U+0398 GREEK CAPITAL LETTER THETA */
#define XK_Greek_IOTA                    0x07c9  /* U+0399 GREEK CAPITAL LETTER IOTA */
#define XK_Greek_KAPPA                   0x07ca  /* U+039A GREEK CAPITAL LETTER KAPPA */
#define XK_Greek_LAMDA                   0x07cb  /* U+039B GREEK CAPITAL LETTER LAMDA */
#define XK_Greek_LAMBDA                  0x07cb  /* U+039B GREEK CAPITAL LETTER LAMDA */
#define XK_Greek_MU                      0x07cc  /* U+039C GREEK CAPITAL LETTER MU */
#define XK_Greek_NU                      0x07cd  /* U+039D GREEK CAPITAL LETTER NU */
#define XK_Greek_XI                      0x07ce  /* U+039E GREEK CAPITAL LETTER XI */
#define XK_Greek_OMICRON                 0x07cf  /* U+039F GREEK CAPITAL LETTER OMICRON */
#define XK_Greek_PI                      0x07d0  /* U+03A0 GREEK CAPITAL LETTER PI */
#define XK_Greek_RHO                     0x07d1  /* U+03A1 GREEK CAPITAL LETTER RHO */
#define XK_Greek_SIGMA                   0x07d2  /* U+03A3 GREEK CAPITAL LETTER SIGMA */
#define XK_Greek_TAU                     0x07d4  /* U+03A4 GREEK CAPITAL LETTER TAU */
#define XK_Greek_UPSILON                 0x07d5  /* U+03A5 GREEK CAPITAL LETTER UPSILON */
#define XK_Greek_PHI                     0x07d6  /* U+03A6 GREEK CAPITAL LETTER PHI */
#define XK_Greek_CHI                     0x07d7  /* U+03A7 GREEK CAPITAL LETTER CHI */
#define XK_Greek_PSI                     0x07d8  /* U+03A8 GREEK CAPITAL LETTER PSI */
#define XK_Greek_OMEGA                   0x07d9  /* U+03A9 GREEK CAPITAL LETTER OMEGA */
#define XK_Greek_alpha                   0x07e1  /* U+03B1 GREEK SMALL LETTER ALPHA */
#define XK_Greek_beta                    0x07e2  /* U+03B2 GREEK SMALL LETTER BETA */
#define XK_Greek_gamma                   0x07e3  /* U+03B3 GREEK SMALL LETTER GAMMA */
#define XK_Greek_delta                   0x07e4  /* U+03B4 GREEK SMALL LETTER DELTA */
#define XK_Greek_epsilon                 0x07e5  /* U+03B5 GREEK SMALL LETTER EPSILON */
#define XK_Greek_zeta                    0x07e6  /* U+03B6 GREEK SMALL LETTER ZETA */
#define XK_Greek_eta                     0x07e7  /* U+03B7 GREEK SMALL LETTER ETA */
#define XK_Greek_theta                   0x07e8  /* U+03B8 GREEK SMALL LETTER THETA */
#define XK_Greek_iota                    0x07e9  /* U+03B9 GREEK SMALL LETTER IOTA */
#define XK_Greek_kappa                   0x07ea  /* U+03BA GREEK SMALL LETTER KAPPA */
#define XK_Greek_lamda                   0x07eb  /* U+03BB GREEK SMALL LETTER LAMDA */
#define XK_Greek_lambda                  0x07eb  /* U+03BB GREEK SMALL LETTER LAMDA */
#define XK_Greek_mu                      0x07ec  /* U+03BC GREEK SMALL LETTER MU */
#define XK_Greek_nu                      0x07ed  /* U+03BD GREEK SMALL LETTER NU */
#define XK_Greek_xi                      0x07ee  /* U+03BE GREEK SMALL LETTER XI */
#define XK_Greek_omicron                 0x07ef  /* U+03BF GREEK SMALL LETTER OMICRON */
#define XK_Greek_pi                      0x07f0  /* U+03C0 GREEK SMALL LETTER PI */
#define XK_Greek_rho                     0x07f1  /* U+03C1 GREEK SMALL LETTER RHO */
#define XK_Greek_sigma                   0x07f2  /* U+03C3 GREEK SMALL LETTER SIGMA */
#define XK_Greek_finalsmallsigma         0x07f3  /* U+03C2 GREEK SMALL LETTER FINAL SIGMA */
#define XK_Greek_tau                     0x07f4  /* U+03C4 GREEK SMALL LETTER TAU */
#define XK_Greek_upsilon                 0x07f5  /* U+03C5 GREEK SMALL LETTER UPSILON */
#define XK_Greek_phi                     0x07f6  /* U+03C6 GREEK SMALL LETTER PHI */
#define XK_Greek_chi                     0x07f7  /* U+03C7 GREEK SMALL LETTER CHI */
#define XK_Greek_psi                     0x07f8  /* U+03C8 GREEK SMALL LETTER PSI */
#define XK_Greek_omega                   0x07f9  /* U+03C9 GREEK SMALL LETTER OMEGA */
#define XK_Greek_switch                  0xff7e  /* Alias for mode_switch */
#endif /* XK_GREEK */

/*
 * Technical
 * (from the DEC VT330/VT420 Technical Character Set, http://vt100.net/charsets/technical.html)
 * Byte 3 = 8
 */

#ifdef XK_TECHNICAL
#define XK_leftradical                   0x08a1  /* U+23B7 RADICAL SYMBOL BOTTOM */
#define XK_topleftradical                0x08a2  /*(U+250C BOX DRAWINGS LIGHT DOWN AND RIGHT)*/
#define XK_horizconnector                0x08a3  /*(U+2500 BOX DRAWINGS LIGHT HORIZONTAL)*/
#define XK_topintegral                   0x08a4  /* U+2320 TOP HALF INTEGRAL */
#define XK_botintegral                   0x08a5  /* U+2321 BOTTOM HALF INTEGRAL */
#define XK_vertconnector                 0x08a6  /*(U+2502 BOX DRAWINGS LIGHT VERTICAL)*/
#define XK_topleftsqbracket              0x08a7  /* U+23A1 LEFT SQUARE BRACKET UPPER CORNER */
#define XK_botleftsqbracket              0x08a8  /* U+23A3 LEFT SQUARE BRACKET LOWER CORNER */
#define XK_toprightsqbracket             0x08a9  /* U+23A4 RIGHT SQUARE BRACKET UPPER CORNER */
#define XK_botrightsqbracket             0x08aa  /* U+23A6 RIGHT SQUARE BRACKET LOWER CORNER */
#define XK_topleftparens                 0x08ab  /* U+239B LEFT PARENTHESIS UPPER HOOK */
#define XK_botleftparens                 0x08ac  /* U+239D LEFT PARENTHESIS LOWER HOOK */
#define XK_toprightparens                0x08ad  /* U+239E RIGHT PARENTHESIS UPPER HOOK */
#define XK_botrightparens                0x08ae  /* U+23A0 RIGHT PARENTHESIS LOWER HOOK */
#define XK_leftmiddlecurlybrace          0x08af  /* U+23A8 LEFT CURLY BRACKET MIDDLE PIECE */
#define XK_rightmiddlecurlybrace         0x08b0  /* U+23AC RIGHT CURLY BRACKET MIDDLE PIECE */
#define XK_topleftsummation              0x08b1
#define XK_botleftsummation              0x08b2
#define XK_topvertsummationconnector     0x08b3
#define XK_botvertsummationconnector     0x08b4
#define XK_toprightsummation             0x08b5
#define XK_botrightsummation             0x08b6
#define XK_rightmiddlesummation          0x08b7
#define XK_lessthanequal                 0x08bc  /* U+2264 LESS-THAN OR EQUAL TO */
#define XK_notequal                      0x08bd  /* U+2260 NOT EQUAL TO */
#define XK_greaterthanequal              0x08be  /* U+2265 GREATER-THAN OR EQUAL TO */
#define XK_integral                      0x08bf  /* U+222B INTEGRAL */
#define XK_therefore                     0x08c0  /* U+2234 THEREFORE */
#define XK_variation                     0x08c1  /* U+221D PROPORTIONAL TO */
#define XK_infinity                      0x08c2  /* U+221E INFINITY */
#define XK_nabla                         0x08c5  /* U+2207 NABLA */
#define XK_approximate                   0x08c8  /* U+223C TILDE OPERATOR */
#define XK_similarequal                  0x08c9  /* U+2243 ASYMPTOTICALLY EQUAL TO */
#define XK_ifonlyif                      0x08cd  /* U+21D4 LEFT RIGHT DOUBLE ARROW */
#define XK_implies                       0x08ce  /* U+21D2 RIGHTWARDS DOUBLE ARROW */
#define XK_identical                     0x08cf  /* U+2261 IDENTICAL TO */
#define XK_radical                       0x08d6  /* U+221A SQUARE ROOT */
#define XK_includedin                    0x08da  /* U+2282 SUBSET OF */
#define XK_includes                      0x08db  /* U+2283 SUPERSET OF */
#define XK_intersection                  0x08dc  /* U+2229 INTERSECTION */
#define XK_union                         0x08dd  /* U+222A UNION */
#define XK_logicaland                    0x08de  /* U+2227 LOGICAL AND */
#define XK_logicalor                     0x08df  /* U+2228 LOGICAL OR */
#define XK_partialderivative             0x08ef  /* U+2202 PARTIAL DIFFERENTIAL */
#define XK_function                      0x08f6  /* U+0192 LATIN SMALL LETTER F WITH HOOK */
#define XK_leftarrow                     0x08fb  /* U+2190 LEFTWARDS ARROW */
#define XK_uparrow                       0x08fc  /* U+2191 UPWARDS ARROW */
#define XK_rightarrow                    0x08fd  /* U+2192 RIGHTWARDS ARROW */
#define XK_downarrow                     0x08fe  /* U+2193 DOWNWARDS ARROW */
#endif /* XK_TECHNICAL */

/*
 * Special
 * (from the DEC VT100 Special Graphics Character Set)
 * Byte 3 = 9
 */

#ifdef XK_SPECIAL
#define XK_blank                         0x09df
#define XK_soliddiamond                  0x09e0  /* U+25C6 BLACK DIAMOND */
#define XK_checkerboard                  0x09e1  /* U+2592 MEDIUM SHADE */
#define XK_ht                            0x09e2  /* U+2409 SYMBOL FOR HORIZONTAL TABULATION */
#define XK_ff                            0x09e3  /* U+240C SYMBOL FOR FORM FEED */
#define XK_cr                            0x09e4  /* U+240D SYMBOL FOR CARRIAGE RETURN */
#define XK_lf                            0x09e5  /* U+240A SYMBOL FOR LINE FEED */
#define XK_nl                            0x09e8  /* U+2424 SYMBOL FOR NEWLINE */
#define XK_vt                            0x09e9  /* U+240B SYMBOL FOR VERTICAL TABULATION */
#define XK_lowrightcorner                0x09ea  /* U+2518 BOX DRAWINGS LIGHT UP AND LEFT */
#define XK_uprightcorner                 0x09eb  /* U+2510 BOX DRAWINGS LIGHT DOWN AND LEFT */
#define XK_upleftcorner                  0x09ec  /* U+250C BOX DRAWINGS LIGHT DOWN AND RIGHT */
#define XK_lowleftcorner                 0x09ed  /* U+2514 BOX DRAWINGS LIGHT UP AND RIGHT */
#define XK_crossinglines                 0x09ee  /* U+253C BOX DRAWINGS LIGHT VERTICAL AND HORIZONTAL */
#define XK_horizlinescan1                0x09ef  /* U+23BA HORIZONTAL SCAN LINE-1 */
#define XK_horizlinescan3                0x09f0  /* U+23BB HORIZONTAL SCAN LINE-3 */
#define XK_horizlinescan5                0x09f1  /* U+2500 BOX DRAWINGS LIGHT HORIZONTAL */
#define XK_horizlinescan7                0x09f2  /* U+23BC HORIZONTAL SCAN LINE-7 */
#define XK_horizlinescan9                0x09f3  /* U+23BD HORIZONTAL SCAN LINE-9 */
#define XK_leftt                         0x09f4  /* U+251C BOX DRAWINGS LIGHT VERTICAL AND RIGHT */
#define XK_rightt                        0x09f5  /* U+2524 BOX DRAWINGS LIGHT VERTICAL AND LEFT */
#define XK_bott                          0x09f6  /* U+2534 BOX DRAWINGS LIGHT UP AND HORIZONTAL */
#define XK_topt                          0x09f7  /* U+252C BOX DRAWINGS LIGHT DOWN AND HORIZONTAL */
#define XK_vertbar                       0x09f8  /* U+2502 BOX DRAWINGS LIGHT VERTICAL */
#endif /* XK_SPECIAL */

/*
 * Publishing
 * (these are probably from a long forgotten DEC Publishing
 * font that once shipped with DECwrite)
 * Byte 3 = 0x0a
 */

#ifdef XK_PUBLISHING
#define XK_emspace                       0x0aa1  /* U+2003 EM SPACE */
#define XK_enspace                       0x0aa2  /* U+2002 EN SPACE */
#define XK_em3space                      0x0aa3  /* U+2004 THREE-PER-EM SPACE */
#define XK_em4space                      0x0aa4  /* U+2005 FOUR-PER-EM SPACE */
#define XK_digitspace                    0x0aa5  /* U+2007 FIGURE SPACE */
#define XK_punctspace                    0x0aa6  /* U+2008 PUNCTUATION SPACE */
#define XK_thinspace                     0x0aa7  /* U+2009 THIN SPACE */
#define XK_hairspace                     0x0aa8  /* U+200A HAIR SPACE */
#define XK_emdash                        0x0aa9  /* U+2014 EM DASH */
#define XK_endash                        0x0aaa  /* U+2013 EN DASH */
#define XK_signifblank                   0x0aac  /*(U+2423 OPEN BOX)*/
#define XK_ellipsis                      0x0aae  /* U+2026 HORIZONTAL ELLIPSIS */
#define XK_doubbaselinedot               0x0aaf  /* U+2025 TWO DOT LEADER */
#define XK_onethird                      0x0ab0  /* U+2153 VULGAR FRACTION ONE THIRD */
#define XK_twothirds                     0x0ab1  /* U+2154 VULGAR FRACTION TWO THIRDS */
#define XK_onefifth                      0x0ab2  /* U+2155 VULGAR FRACTION ONE FIFTH */
#define XK_twofifths                     0x0ab3  /* U+2156 VULGAR FRACTION TWO FIFTHS */
#define XK_threefifths                   0x0ab4  /* U+2157 VULGAR FRACTION THREE FIFTHS */
#define XK_fourfifths                    0x0ab5  /* U+2158 VULGAR FRACTION FOUR FIFTHS */
#define XK_onesixth                      0x0ab6  /* U+2159 VULGAR FRACTION ONE SIXTH */
#define XK_fivesixths                    0x0ab7  /* U+215A VULGAR FRACTION FIVE SIXTHS */
#define XK_careof                        0x0ab8  /* U+2105 CARE OF */
#define XK_figdash                       0x0abb  /* U+2012 FIGURE DASH */
#define XK_leftanglebracket              0x0abc  /*(U+27E8 MATHEMATICAL LEFT ANGLE BRACKET)*/
#define XK_decimalpoint                  0x0abd  /*(U+002E FULL STOP)*/
#define XK_rightanglebracket             0x0abe  /*(U+27E9 MATHEMATICAL RIGHT ANGLE BRACKET)*/
#define XK_marker                        0x0abf
#define XK_oneeighth                     0x0ac3  /* U+215B VULGAR FRACTION ONE EIGHTH */
#define XK_threeeighths                  0x0ac4  /* U+215C VULGAR FRACTION THREE EIGHTHS */
#define XK_fiveeighths                   0x0ac5  /* U+215D VULGAR FRACTION FIVE EIGHTHS */
#define XK_seveneighths                  0x0ac6  /* U+215E VULGAR FRACTION SEVEN EIGHTHS */
#define XK_trademark                     0x0ac9  /* U+2122 TRADE MARK SIGN */
#define XK_signaturemark                 0x0aca  /*(U+2613 SALTIRE)*/
#define XK_trademarkincircle             0x0acb
#define XK_leftopentriangle              0x0acc  /*(U+25C1 WHITE LEFT-POINTING TRIANGLE)*/
#define XK_rightopentriangle             0x0acd  /*(U+25B7 WHITE RIGHT-POINTING TRIANGLE)*/
#define XK_emopencircle                  0x0ace  /*(U+25CB WHITE CIRCLE)*/
#define XK_emopenrectangle               0x0acf  /*(U+25AF WHITE VERTICAL RECTANGLE)*/
#define XK_leftsinglequotemark           0x0ad0  /* U+2018 LEFT SINGLE QUOTATION MARK */
#define XK_rightsinglequotemark          0x0ad1  /* U+2019 RIGHT SINGLE QUOTATION MARK */
#define XK_leftdoublequotemark           0x0ad2  /* U+201C LEFT DOUBLE QUOTATION MARK */
#define XK_rightdoublequotemark          0x0ad3  /* U+201D RIGHT DOUBLE QUOTATION MARK */
#define XK_prescription                  0x0ad4  /* U+211E PRESCRIPTION TAKE */
#define XK_permille                      0x0ad5  /* U+2030 PER MILLE SIGN */
#define XK_minutes                       0x0ad6  /* U+2032 PRIME */
#define XK_seconds                       0x0ad7  /* U+2033 DOUBLE PRIME */
#define XK_latincross                    0x0ad9  /* U+271D LATIN CROSS */
#define XK_hexagram                      0x0ada
#define XK_filledrectbullet              0x0adb  /*(U+25AC BLACK RECTANGLE)*/
#define XK_filledlefttribullet           0x0adc  /*(U+25C0 BLACK LEFT-POINTING TRIANGLE)*/
#define XK_filledrighttribullet          0x0add  /*(U+25B6 BLACK RIGHT-POINTING TRIANGLE)*/
#define XK_emfilledcircle                0x0ade  /*(U+25CF BLACK CIRCLE)*/
#define XK_emfilledrect                  0x0adf  /*(U+25AE BLACK VERTICAL RECTANGLE)*/
#define XK_enopencircbullet              0x0ae0  /*(U+25E6 WHITE BULLET)*/
#define XK_enopensquarebullet            0x0ae1  /*(U+25AB WHITE SMALL SQUARE)*/
#define XK_openrectbullet                0x0ae2  /*(U+25AD WHITE RECTANGLE)*/
#define XK_opentribulletup               0x0ae3  /*(U+25B3 WHITE UP-POINTING TRIANGLE)*/
#define XK_opentribulletdown             0x0ae4  /*(U+25BD WHITE DOWN-POINTING TRIANGLE)*/
#define XK_openstar                      0x0ae5  /*(U+2606 WHITE STAR)*/
#define XK_enfilledcircbullet            0x0ae6  /*(U+2022 BULLET)*/
#define XK_enfilledsqbullet              0x0ae7  /*(U+25AA BLACK SMALL SQUARE)*/
#define XK_filledtribulletup             0x0ae8  /*(U+25B2 BLACK UP-POINTING TRIANGLE)*/
#define XK_filledtribulletdown           0x0ae9  /*(U+25BC BLACK DOWN-POINTING TRIANGLE)*/
#define XK_leftpointer                   0x0aea  /*(U+261C WHITE LEFT POINTING INDEX)*/
#define XK_rightpointer                  0x0aeb  /*(U+261E WHITE RIGHT POINTING INDEX)*/
#define XK_club                          0x0aec  /* U+2663 BLACK CLUB SUIT */
#define XK_diamond                       0x0aed  /* U+2666 BLACK DIAMOND SUIT */
#define XK_heart                         0x0aee  /* U+2665 BLACK HEART SUIT */
#define XK_maltesecross                  0x0af0  /* U+2720 MALTESE CROSS */
#define XK_dagger                        0x0af1  /* U+2020 DAGGER */
#define XK_doubledagger                  0x0af2  /* U+2021 DOUBLE DAGGER */
#define XK_checkmark                     0x0af3  /* U+2713 CHECK MARK */
#define XK_ballotcross                   0x0af4  /* U+2717 BALLOT X */
#define XK_musicalsharp                  0x0af5  /* U+266F MUSIC SHARP SIGN */
#define XK_musicalflat                   0x0af6  /* U+266D MUSIC FLAT SIGN */
#define XK_malesymbol                    0x0af7  /* U+2642 MALE SIGN */
#define XK_femalesymbol                  0x0af8  /* U+2640 FEMALE SIGN */
#define XK_telephone                     0x0af9  /* U+260E BLACK TELEPHONE */
#define XK_telephonerecorder             0x0afa  /* U+2315 TELEPHONE RECORDER */
#define XK_phonographcopyright           0x0afb  /* U+2117 SOUND RECORDING COPYRIGHT */
#define XK_caret                         0x0afc  /* U+2038 CARET */
#define XK_singlelowquotemark            0x0afd  /* U+201A SINGLE LOW-9 QUOTATION MARK */
#define XK_doublelowquotemark            0x0afe  /* U+201E DOUBLE LOW-9 QUOTATION MARK */
#define XK_cursor                        0x0aff
#endif /* XK_PUBLISHING */

/*
 * APL
 * Byte 3 = 0x0b
 */

#ifdef XK_APL
#define XK_leftcaret                     0x0ba3  /*(U+003C LESS-THAN SIGN)*/
#define XK_rightcaret                    0x0ba6  /*(U+003E GREATER-THAN SIGN)*/
#define XK_downcaret                     0x0ba8  /*(U+2228 LOGICAL OR)*/
#define XK_upcaret                       0x0ba9  /*(U+2227 LOGICAL AND)*/
#define XK_overbar                       0x0bc0  /*(U+00AF MACRON)*/
#define XK_downtack                      0x0bc2  /* U+22A4 DOWN TACK */
#define XK_upshoe                        0x0bc3  /*(U+2229 INTERSECTION)*/
#define XK_downstile                     0x0bc4  /* U+230A LEFT FLOOR */
#define XK_underbar                      0x0bc6  /*(U+005F LOW LINE)*/
#define XK_jot                           0x0bca  /* U+2218 RING OPERATOR */
#define XK_quad                          0x0bcc  /* U+2395 APL FUNCTIONAL SYMBOL QUAD */
#define XK_uptack                        0x0bce  /* U+22A5 UP TACK */
#define XK_circle                        0x0bcf  /* U+25CB WHITE CIRCLE */
#define XK_upstile                       0x0bd3  /* U+2308 LEFT CEILING */
#define XK_downshoe                      0x0bd6  /*(U+222A UNION)*/
#define XK_rightshoe                     0x0bd8  /*(U+2283 SUPERSET OF)*/
#define XK_leftshoe                      0x0bda  /*(U+2282 SUBSET OF)*/
#define XK_lefttack                      0x0bdc  /* U+22A3 LEFT TACK */
#define XK_righttack                     0x0bfc  /* U+22A2 RIGHT TACK */
#endif /* XK_APL */

/*
 * Hebrew
 * Byte 3 = 0x0c
 */

#ifdef XK_HEBREW
#define XK_hebrew_doublelowline          0x0cdf  /* U+2017 DOUBLE LOW LINE */
#define XK_hebrew_aleph                  0x0ce0  /* U+05D0 HEBREW LETTER ALEF */
#define XK_hebrew_bet                    0x0ce1  /* U+05D1 HEBREW LETTER BET */
#define XK_hebrew_beth                   0x0ce1  /* deprecated */
#define XK_hebrew_gimel                  0x0ce2  /* U+05D2 HEBREW LETTER GIMEL */
#define XK_hebrew_gimmel                 0x0ce2  /* deprecated */
#define XK_hebrew_dalet                  0x0ce3  /* U+05D3 HEBREW LETTER DALET */
#define XK_hebrew_daleth                 0x0ce3  /* deprecated */
#define XK_hebrew_he                     0x0ce4  /* U+05D4 HEBREW LETTER HE */
#define XK_hebrew_waw                    0x0ce5  /* U+05D5 HEBREW LETTER VAV */
#define XK_hebrew_zain                   0x0ce6  /* U+05D6 HEBREW LETTER ZAYIN */
#define XK_hebrew_zayin                  0x0ce6  /* deprecated */
#define XK_hebrew_chet                   0x0ce7  /* U+05D7 HEBREW LETTER HET */
#define XK_hebrew_het                    0x0ce7  /* deprecated */
#define XK_hebrew_tet                    0x0ce8  /* U+05D8 HEBREW LETTER TET */
#define XK_hebrew_teth                   0x0ce8  /* deprecated */
#define XK_hebrew_yod                    0x0ce9  /* U+05D9 HEBREW LETTER YOD */
#define XK_hebrew_finalkaph              0x0cea  /* U+05DA HEBREW LETTER FINAL KAF */
#define XK_hebrew_kaph                   0x0ceb  /* U+05DB HEBREW LETTER KAF */
#define XK_hebrew_lamed                  0x0cec  /* U+05DC HEBREW LETTER LAMED */
#define XK_hebrew_finalmem               0x0ced  /* U+05DD HEBREW LETTER FINAL MEM */
#define XK_hebrew_mem                    0x0cee  /* U+05DE HEBREW LETTER MEM */
#define XK_hebrew_finalnun               0x0cef  /* U+05DF HEBREW LETTER FINAL NUN */
#define XK_hebrew_nun                    0x0cf0  /* U+05E0 HEBREW LETTER NUN */
#define XK_hebrew_samech                 0x0cf1  /* U+05E1 HEBREW LETTER SAMEKH */
#define XK_hebrew_samekh                 0x0cf1  /* deprecated */
#define XK_hebrew_ayin                   0x0cf2  /* U+05E2 HEBREW LETTER AYIN */
#define XK_hebrew_finalpe                0x0cf3  /* U+05E3 HEBREW LETTER FINAL PE */
#define XK_hebrew_pe                     0x0cf4  /* U+05E4 HEBREW LETTER PE */
#define XK_hebrew_finalzade              0x0cf5  /* U+05E5 HEBREW LETTER FINAL TSADI */
#define XK_hebrew_finalzadi              0x0cf5  /* deprecated */
#define XK_hebrew_zade                   0x0cf6  /* U+05E6 HEBREW LETTER TSADI */
#define XK_hebrew_zadi                   0x0cf6  /* deprecated */
#define XK_hebrew_qoph                   0x0cf7  /* U+05E7 HEBREW LETTER QOF */
#define XK_hebrew_kuf                    0x0cf7  /* deprecated */
#define XK_hebrew_resh                   0x0cf8  /* U+05E8 HEBREW LETTER RESH */
#define XK_hebrew_shin                   0x0cf9  /* U+05E9 HEBREW LETTER SHIN */
#define XK_hebrew_taw                    0x0cfa  /* U+05EA HEBREW LETTER TAV */
#define XK_hebrew_taf                    0x0cfa  /* deprecated */
#define XK_Hebrew_switch                 0xff7e  /* Alias for mode_switch */
#endif /* XK_HEBREW */

/*
 * Thai
 * Byte 3 = 0x0d
 */

#ifdef XK_THAI
#define XK_Thai_kokai                    0x0da1  /* U+0E01 THAI CHARACTER KO KAI */
#define XK_Thai_khokhai                  0x0da2  /* U+0E02 THAI CHARACTER KHO KHAI */
#define XK_Thai_khokhuat                 0x0da3  /* U+0E03 THAI CHARACTER KHO KHUAT */
#define XK_Thai_khokhwai                 0x0da4  /* U+0E04 THAI CHARACTER KHO KHWAI */
#define XK_Thai_khokhon                  0x0da5  /* U+0E05 THAI CHARACTER KHO KHON */
#define XK_Thai_khorakhang               0x0da6  /* U+0E06 THAI CHARACTER KHO RAKHANG */
#define XK_Thai_ngongu                   0x0da7  /* U+0E07 THAI CHARACTER NGO NGU */
#define XK_Thai_chochan                  0x0da8  /* U+0E08 THAI CHARACTER CHO CHAN */
#define XK_Thai_choching                 0x0da9  /* U+0E09 THAI CHARACTER CHO CHING */
#define XK_Thai_chochang                 0x0daa  /* U+0E0A THAI CHARACTER CHO CHANG */
#define XK_Thai_soso                     0x0dab  /* U+0E0B THAI CHARACTER SO SO */
#define XK_Thai_chochoe                  0x0dac  /* U+0E0C THAI CHARACTER CHO CHOE */
#define XK_Thai_yoying                   0x0dad  /* U+0E0D THAI CHARACTER YO YING */
#define XK_Thai_dochada                  0x0dae  /* U+0E0E THAI CHARACTER DO CHADA */
#define XK_Thai_topatak                  0x0daf  /* U+0E0F THAI CHARACTER TO PATAK */
#define XK_Thai_thothan                  0x0db0  /* U+0E10 THAI CHARACTER THO THAN */
#define XK_Thai_thonangmontho            0x0db1  /* U+0E11 THAI CHARACTER THO NANGMONTHO */
#define XK_Thai_thophuthao               0x0db2  /* U+0E12 THAI CHARACTER THO PHUTHAO */
#define XK_Thai_nonen                    0x0db3  /* U+0E13 THAI CHARACTER NO NEN */
#define XK_Thai_dodek                    0x0db4  /* U+0E14 THAI CHARACTER DO DEK */
#define XK_Thai_totao                    0x0db5  /* U+0E15 THAI CHARACTER TO TAO */
#define XK_Thai_thothung                 0x0db6  /* U+0E16 THAI CHARACTER THO THUNG */
#define XK_Thai_thothahan                0x0db7  /* U+0E17 THAI CHARACTER THO THAHAN */
#define XK_Thai_thothong                 0x0db8  /* U+0E18 THAI CHARACTER THO THONG */
#define XK_Thai_nonu                     0x0db9  /* U+0E19 THAI CHARACTER NO NU */
#define XK_Thai_bobaimai                 0x0dba  /* U+0E1A THAI CHARACTER BO BAIMAI */
#define XK_Thai_popla                    0x0dbb  /* U+0E1B THAI CHARACTER PO PLA */
#define XK_Thai_phophung                 0x0dbc  /* U+0E1C THAI CHARACTER PHO PHUNG */
#define XK_Thai_fofa                     0x0dbd  /* U+0E1D THAI CHARACTER FO FA */
#define XK_Thai_phophan                  0x0dbe  /* U+0E1E THAI CHARACTER PHO PHAN */
#define XK_Thai_fofan                    0x0dbf  /* U+0E1F THAI CHARACTER FO FAN */
#define XK_Thai_phosamphao               0x0dc0  /* U+0E20 THAI CHARACTER PHO SAMPHAO */
#define XK_Thai_moma                     0x0dc1  /* U+0E21 THAI CHARACTER MO MA */
#define XK_Thai_yoyak                    0x0dc2  /* U+0E22 THAI CHARACTER YO YAK */
#define XK_Thai_rorua                    0x0dc3  /* U+0E23 THAI CHARACTER RO RUA */
#define XK_Thai_ru                       0x0dc4  /* U+0E24 THAI CHARACTER RU */
#define XK_Thai_loling                   0x0dc5  /* U+0E25 THAI CHARACTER LO LING */
#define XK_Thai_lu                       0x0dc6  /* U+0E26 THAI CHARACTER LU */
#define XK_Thai_wowaen                   0x0dc7  /* U+0E27 THAI CHARACTER WO WAEN */
#define XK_Thai_sosala                   0x0dc8  /* U+0E28 THAI CHARACTER SO SALA */
#define XK_Thai_sorusi                   0x0dc9  /* U+0E29 THAI CHARACTER SO RUSI */
#define XK_Thai_sosua                    0x0dca  /* U+0E2A THAI CHARACTER SO SUA */
#define XK_Thai_hohip                    0x0dcb  /* U+0E2B THAI CHARACTER HO HIP */
#define XK_Thai_lochula                  0x0dcc  /* U+0E2C THAI CHARACTER LO CHULA */
#define XK_Thai_oang                     0x0dcd  /* U+0E2D THAI CHARACTER O ANG */
#define XK_Thai_honokhuk                 0x0dce  /* U+0E2E THAI CHARACTER HO NOKHUK */
#define XK_Thai_paiyannoi                0x0dcf  /* U+0E2F THAI CHARACTER PAIYANNOI */
#define XK_Thai_saraa                    0x0dd0  /* U+0E30 THAI CHARACTER SARA A */
#define XK_Thai_maihanakat               0x0dd1  /* U+0E31 THAI CHARACTER MAI HAN-AKAT */
#define XK_Thai_saraaa                   0x0dd2  /* U+0E32 THAI CHARACTER SARA AA */
#define XK_Thai_saraam                   0x0dd3  /* U+0E33 THAI CHARACTER SARA AM */
#define XK_Thai_sarai                    0x0dd4  /* U+0E34 THAI CHARACTER SARA I */
#define XK_Thai_saraii                   0x0dd5  /* U+0E35 THAI CHARACTER SARA II */
#define XK_Thai_saraue                   0x0dd6  /* U+0E36 THAI CHARACTER SARA UE */
#define XK_Thai_sarauee                  0x0dd7  /* U+0E37 THAI CHARACTER SARA UEE */
#define XK_Thai_sarau                    0x0dd8  /* U+0E38 THAI CHARACTER SARA U */
#define XK_Thai_sarauu                   0x0dd9  /* U+0E39 THAI CHARACTER SARA UU */
#define XK_Thai_phinthu                  0x0dda  /* U+0E3A THAI CHARACTER PHINTHU */
#define XK_Thai_maihanakat_maitho        0x0dde
#define XK_Thai_baht                     0x0ddf  /* U+0E3F THAI CURRENCY SYMBOL BAHT */
#define XK_Thai_sarae                    0x0de0  /* U+0E40 THAI CHARACTER SARA E */
#define XK_Thai_saraae                   0x0de1  /* U+0E41 THAI CHARACTER SARA AE */
#define XK_Thai_sarao                    0x0de2  /* U+0E42 THAI CHARACTER SARA O */
#define XK_Thai_saraaimaimuan            0x0de3  /* U+0E43 THAI CHARACTER SARA AI MAIMUAN */
#define XK_Thai_saraaimaimalai           0x0de4  /* U+0E44 THAI CHARACTER SARA AI MAIMALAI */
#define XK_Thai_lakkhangyao              0x0de5  /* U+0E45 THAI CHARACTER LAKKHANGYAO */
#define XK_Thai_maiyamok                 0x0de6  /* U+0E46 THAI CHARACTER MAIYAMOK */
#define XK_Thai_maitaikhu                0x0de7  /* U+0E47 THAI CHARACTER MAITAIKHU */
#define XK_Thai_maiek                    0x0de8  /* U+0E48 THAI CHARACTER MAI EK */
#define XK_Thai_maitho                   0x0de9  /* U+0E49 THAI CHARACTER MAI THO */
#define XK_Thai_maitri                   0x0dea  /* U+0E4A THAI CHARACTER MAI TRI */
#define XK_Thai_maichattawa              0x0deb  /* U+0E4B THAI CHARACTER MAI CHATTAWA */
#define XK_Thai_thanthakhat              0x0dec  /* U+0E4C THAI CHARACTER THANTHAKHAT */
#define XK_Thai_nikhahit                 0x0ded  /* U+0E4D THAI CHARACTER NIKHAHIT */
#define XK_Thai_leksun                   0x0df0  /* U+0E50 THAI DIGIT ZERO */
#define XK_Thai_leknung                  0x0df1  /* U+0E51 THAI DIGIT ONE */
#define XK_Thai_leksong                  0x0df2  /* U+0E52 THAI DIGIT TWO */
#define XK_Thai_leksam                   0x0df3  /* U+0E53 THAI DIGIT THREE */
#define XK_Thai_leksi                    0x0df4  /* U+0E54 THAI DIGIT FOUR */
#define XK_Thai_lekha                    0x0df5  /* U+0E55 THAI DIGIT FIVE */
#define XK_Thai_lekhok                   0x0df6  /* U+0E56 THAI DIGIT SIX */
#define XK_Thai_lekchet                  0x0df7  /* U+0E57 THAI DIGIT SEVEN */
#define XK_Thai_lekpaet                  0x0df8  /* U+0E58 THAI DIGIT EIGHT */
#define XK_Thai_lekkao                   0x0df9  /* U+0E59 THAI DIGIT NINE */
#endif /* XK_THAI */

/*
 * Korean
 * Byte 3 = 0x0e
 */

#ifdef XK_KOREAN

#define XK_Hangul                        0xff31  /* Hangul start/stop(toggle) */
#define XK_Hangul_Start                  0xff32  /* Hangul start */
#define XK_Hangul_End                    0xff33  /* Hangul end, English start */
#define XK_Hangul_Hanja                  0xff34  /* Start Hangul->Hanja Conversion */
#define XK_Hangul_Jamo                   0xff35  /* Hangul Jamo mode */
#define XK_Hangul_Romaja                 0xff36  /* Hangul Romaja mode */
#define XK_Hangul_Codeinput              0xff37  /* Hangul code input mode */
#define XK_Hangul_Jeonja                 0xff38  /* Jeonja mode */
#define XK_Hangul_Banja                  0xff39  /* Banja mode */
#define XK_Hangul_PreHanja               0xff3a  /* Pre Hanja conversion */
#define XK_Hangul_PostHanja              0xff3b  /* Post Hanja conversion */
#define XK_Hangul_SingleCandidate        0xff3c  /* Single candidate */
#define XK_Hangul_MultipleCandidate      0xff3d  /* Multiple candidate */
#define XK_Hangul_PreviousCandidate      0xff3e  /* Previous candidate */
#define XK_Hangul_Special                0xff3f  /* Special symbols */
#define XK_Hangul_switch                 0xff7e  /* Alias for mode_switch */

/* Hangul Consonant Characters */
#define XK_Hangul_Kiyeog                 0x0ea1
#define XK_Hangul_SsangKiyeog            0x0ea2
#define XK_Hangul_KiyeogSios             0x0ea3
#define XK_Hangul_Nieun                  0x0ea4
#define XK_Hangul_NieunJieuj             0x0ea5
#define XK_Hangul_NieunHieuh             0x0ea6
#define XK_Hangul_Dikeud                 0x0ea7
#define XK_Hangul_SsangDikeud            0x0ea8
#define XK_Hangul_Rieul                  0x0ea9
#define XK_Hangul_RieulKiyeog            0x0eaa
#define XK_Hangul_RieulMieum             0x0eab
#define XK_Hangul_RieulPieub             0x0eac
#define XK_Hangul_RieulSios              0x0ead
#define XK_Hangul_RieulTieut             0x0eae
#define XK_Hangul_RieulPhieuf            0x0eaf
#define XK_Hangul_RieulHieuh             0x0eb0
#define XK_Hangul_Mieum                  0x0eb1
#define XK_Hangul_Pieub                  0x0eb2
#define XK_Hangul_SsangPieub             0x0eb3
#define XK_Hangul_PieubSios              0x0eb4
#define XK_Hangul_Sios                   0x0eb5
#define XK_Hangul_SsangSios              0x0eb6
#define XK_Hangul_Ieung                  0x0eb7
#define XK_Hangul_Jieuj                  0x0eb8
#define XK_Hangul_SsangJieuj             0x0eb9
#define XK_Hangul_Cieuc                  0x0eba
#define XK_Hangul_Khieuq                 0x0ebb
#define XK_Hangul_Tieut                  0x0ebc
#define XK_Hangul_Phieuf                 0x0ebd
#define XK_Hangul_Hieuh                  0x0ebe

/* Hangul Vowel Characters */
#define XK_Hangul_A                      0x0ebf
#define XK_Hangul_AE                     0x0ec0
#define XK_Hangul_YA                     0x0ec1
#define XK_Hangul_YAE                    0x0ec2
#define XK_Hangul_EO                     0x0ec3
#define XK_Hangul_E                      0x0ec4
#define XK_Hangul_YEO                    0x0ec5
#define XK_Hangul_YE                     0x0ec6
#define XK_Hangul_O                      0x0ec7
#define XK_Hangul_WA                     0x0ec8
#define XK_Hangul_WAE                    0x0ec9
#define XK_Hangul_OE                     0x0eca
#define XK_Hangul_YO                     0x0ecb
#define XK_Hangul_U                      0x0ecc
#define XK_Hangul_WEO                    0x0ecd
#define XK_Hangul_WE                     0x0ece
#define XK_Hangul_WI                     0x0ecf
#define XK_Hangul_YU                     0x0ed0
#define XK_Hangul_EU                     0x0ed1
#define XK_Hangul_YI                     0x0ed2
#define XK_Hangul_I                      0x0ed3

/* Hangul syllable-final (JongSeong) Characters */
#define XK_Hangul_J_Kiyeog               0x0ed4
#define XK_Hangul_J_SsangKiyeog          0x0ed5
#define XK_Hangul_J_KiyeogSios           0x0ed6
#define XK_Hangul_J_Nieun                0x0ed7
#define XK_Hangul_J_NieunJieuj           0x0ed8
#define XK_Hangul_J_NieunHieuh           0x0ed9
#define XK_Hangul_J_Dikeud               0x0eda
#define XK_Hangul_J_Rieul                0x0edb
#define XK_Hangul_J_RieulKiyeog          0x0edc
#define XK_Hangul_J_RieulMieum           0x0edd
#define XK_Hangul_J_RieulPieub           0x0ede
#define XK_Hangul_J_RieulSios            0x0edf
#define XK_Hangul_J_RieulTieut           0x0ee0
#define XK_Hangul_J_RieulPhieuf          0x0ee1
#define XK_Hangul_J_RieulHieuh           0x0ee2
#define XK_Hangul_J_Mieum                0x0ee3
#define XK_Hangul_J_Pieub                0x0ee4
#define XK_Hangul_J_PieubSios            0x0ee5
#define XK_Hangul_J_Sios                 0x0ee6
#define XK_Hangul_J_SsangSios            0x0ee7
#define XK_Hangul_J_Ieung                0x0ee8
#define XK_Hangul_J_Jieuj                0x0ee9
#define XK_Hangul_J_Cieuc                0x0eea
#define XK_Hangul_J_Khieuq               0x0eeb
#define XK_Hangul_J_Tieut                0x0eec
#define XK_Hangul_J_Phieuf               0x0eed
#define XK_Hangul_J_Hieuh                0x0eee

/* Ancient Hangul Consonant Characters */
#define XK_Hangul_RieulYeorinHieuh       0x0eef
#define XK_Hangul_SunkyeongeumMieum      0x0ef0
#define XK_Hangul_SunkyeongeumPieub      0x0ef1
#define XK_Hangul_PanSios                0x0ef2
#define XK_Hangul_KkogjiDalrinIeung      0x0ef3
#define XK_Hangul_SunkyeongeumPhieuf     0x0ef4
#define XK_Hangul_YeorinHieuh            0x0ef5

/* Ancient Hangul Vowel Characters */
#define XK_Hangul_AraeA                  0x0ef6
#define XK_Hangul_AraeAE                 0x0ef7

/* Ancient Hangul syllable-final (JongSeong) Characters */
#define XK_Hangul_J_PanSios              0x0ef8
#define XK_Hangul_J_KkogjiDalrinIeung    0x0ef9
#define XK_Hangul_J_YeorinHieuh          0x0efa

/* Korean currency symbol */
#define XK_Korean_Won                    0x0eff  /*(U+20A9 WON SIGN)*/

#endif /* XK_KOREAN */

/*
 * Armenian
 */

#ifdef XK_ARMENIAN
#define XK_Armenian_ligature_ew       0x1000587  /* U+0587 ARMENIAN SMALL LIGATURE ECH YIWN */
#define XK_Armenian_full_stop         0x1000589  /* U+0589 ARMENIAN FULL STOP */
#define XK_Armenian_verjaket          0x1000589  /* U+0589 ARMENIAN FULL STOP */
#define XK_Armenian_separation_mark   0x100055d  /* U+055D ARMENIAN COMMA */
#define XK_Armenian_but               0x100055d  /* U+055D ARMENIAN COMMA */
#define XK_Armenian_hyphen            0x100058a  /* U+058A ARMENIAN HYPHEN */
#define XK_Armenian_yentamna          0x100058a  /* U+058A ARMENIAN HYPHEN */
#define XK_Armenian_exclam            0x100055c  /* U+055C ARMENIAN EXCLAMATION MARK */
#define XK_Armenian_amanak            0x100055c  /* U+055C ARMENIAN EXCLAMATION MARK */
#define XK_Armenian_accent            0x100055b  /* U+055B ARMENIAN EMPHASIS MARK */
#define XK_Armenian_shesht            0x100055b  /* U+055B ARMENIAN EMPHASIS MARK */
#define XK_Armenian_question          0x100055e  /* U+055E ARMENIAN QUESTION MARK */
#define XK_Armenian_paruyk            0x100055e  /* U+055E ARMENIAN QUESTION MARK */
#define XK_Armenian_AYB               0x1000531  /* U+0531 ARMENIAN CAPITAL LETTER AYB */
#define XK_Armenian_ayb               0x1000561  /* U+0561 ARMENIAN SMALL LETTER AYB */
#define XK_Armenian_BEN               0x1000532  /* U+0532 ARMENIAN CAPITAL LETTER BEN */
#define XK_Armenian_ben               0x1000562  /* U+0562 ARMENIAN SMALL LETTER BEN */
#define XK_Armenian_GIM               0x1000533  /* U+0533 ARMENIAN CAPITAL LETTER GIM */
#define XK_Armenian_gim               0x1000563  /* U+0563 ARMENIAN SMALL LETTER GIM */
#define XK_Armenian_DA                0x1000534  /* U+0534 ARMENIAN CAPITAL LETTER DA */
#define XK_Armenian_da                0x1000564  /* U+0564 ARMENIAN SMALL LETTER DA */
#define XK_Armenian_YECH              0x1000535  /* U+0535 ARMENIAN CAPITAL LETTER ECH */
#define XK_Armenian_yech              0x1000565  /* U+0565 ARMENIAN SMALL LETTER ECH */
#define XK_Armenian_ZA                0x1000536  /* U+0536 ARMENIAN CAPITAL LETTER ZA */
#define XK_Armenian_za                0x1000566  /* U+0566 ARMENIAN SMALL LETTER ZA */
#define XK_Armenian_E                 0x1000537  /* U+0537 ARMENIAN CAPITAL LETTER EH */
#define XK_Armenian_e                 0x1000567  /* U+0567 ARMENIAN SMALL LETTER EH */
#define XK_Armenian_AT                0x1000538  /* U+0538 ARMENIAN CAPITAL LETTER ET */
#define XK_Armenian_at                0x1000568  /* U+0568 ARMENIAN SMALL LETTER ET */
#define XK_Armenian_TO                0x1000539  /* U+0539 ARMENIAN CAPITAL LETTER TO */
#define XK_Armenian_to                0x1000569  /* U+0569 ARMENIAN SMALL LETTER TO */
#define XK_Armenian_ZHE               0x100053a  /* U+053A ARMENIAN CAPITAL LETTER ZHE */
#define XK_Armenian_zhe               0x100056a  /* U+056A ARMENIAN SMALL LETTER ZHE */
#define XK_Armenian_INI               0x100053b  /* U+053B ARMENIAN CAPITAL LETTER INI */
#define XK_Armenian_ini               0x100056b  /* U+056B ARMENIAN SMALL LETTER INI */
#define XK_Armenian_LYUN              0x100053c  /* U+053C ARMENIAN CAPITAL LETTER LIWN */
#define XK_Armenian_lyun              0x100056c  /* U+056C ARMENIAN SMALL LETTER LIWN */
#define XK_Armenian_KHE               0x100053d  /* U+053D ARMENIAN CAPITAL LETTER XEH */
#define XK_Armenian_khe               0x100056d  /* U+056D ARMENIAN SMALL LETTER XEH */
#define XK_Armenian_TSA               0x100053e  /* U+053E ARMENIAN CAPITAL LETTER CA */
#define XK_Armenian_tsa               0x100056e  /* U+056E ARMENIAN SMALL LETTER CA */
#define XK_Armenian_KEN               0x100053f  /* U+053F ARMENIAN CAPITAL LETTER KEN */
#define XK_Armenian_ken               0x100056f  /* U+056F ARMENIAN SMALL LETTER KEN */
#define XK_Armenian_HO                0x1000540  /* U+0540 ARMENIAN CAPITAL LETTER HO */
#define XK_Armenian_ho                0x1000570  /* U+0570 ARMENIAN SMALL LETTER HO */
#define XK_Armenian_DZA               0x1000541  /* U+0541 ARMENIAN CAPITAL LETTER JA */
#define XK_Armenian_dza               0x1000571  /* U+0571 ARMENIAN SMALL LETTER JA */
#define XK_Armenian_GHAT              0x1000542  /* U+0542 ARMENIAN CAPITAL LETTER GHAD */
#define XK_Armenian_ghat              0x1000572  /* U+0572 ARMENIAN SMALL LETTER GHAD */
#define XK_Armenian_TCHE              0x1000543  /* U+0543 ARMENIAN CAPITAL LETTER CHEH */
#define XK_Armenian_tche              0x1000573  /* U+0573 ARMENIAN SMALL LETTER CHEH */
#define XK_Armenian_MEN               0x1000544  /* U+0544 ARMENIAN CAPITAL LETTER MEN */
#define XK_Armenian_men               0x1000574  /* U+0574 ARMENIAN SMALL LETTER MEN */
#define XK_Armenian_HI                0x1000545  /* U+0545 ARMENIAN CAPITAL LETTER YI */
#define XK_Armenian_hi                0x1000575  /* U+0575 ARMENIAN SMALL LETTER YI */
#define XK_Armenian_NU                0x1000546  /* U+0546 ARMENIAN CAPITAL LETTER NOW */
#define XK_Armenian_nu                0x1000576  /* U+0576 ARMENIAN SMALL LETTER NOW */
#define XK_Armenian_SHA               0x1000547  /* U+0547 ARMENIAN CAPITAL LETTER SHA */
#define XK_Armenian_sha               0x1000577  /* U+0577 ARMENIAN SMALL LETTER SHA */
#define XK_Armenian_VO                0x1000548  /* U+0548 ARMENIAN CAPITAL LETTER VO */
#define XK_Armenian_vo                0x1000578  /* U+0578 ARMENIAN SMALL LETTER VO */
#define XK_Armenian_CHA               0x1000549  /* U+0549 ARMENIAN CAPITAL LETTER CHA */
#define XK_Armenian_cha               0x1000579  /* U+0579 ARMENIAN SMALL LETTER CHA */
#define XK_Armenian_PE                0x100054a  /* U+054A ARMENIAN CAPITAL LETTER PEH */
#define XK_Armenian_pe                0x100057a  /* U+057A ARMENIAN SMALL LETTER PEH */
#define XK_Armenian_JE                0x100054b  /* U+054B ARMENIAN CAPITAL LETTER JHEH */
#define XK_Armenian_je                0x100057b  /* U+057B ARMENIAN SMALL LETTER JHEH */
#define XK_Armenian_RA                0x100054c  /* U+054C ARMENIAN CAPITAL LETTER RA */
#define XK_Armenian_ra                0x100057c  /* U+057C ARMENIAN SMALL LETTER RA */
#define XK_Armenian_SE                0x100054d  /* U+054D ARMENIAN CAPITAL LETTER SEH */
#define XK_Armenian_se                0x100057d  /* U+057D ARMENIAN SMALL LETTER SEH */
#define XK_Armenian_VEV               0x100054e  /* U+054E ARMENIAN CAPITAL LETTER VEW */
#define XK_Armenian_vev               0x100057e  /* U+057E ARMENIAN SMALL LETTER VEW */
#define XK_Armenian_TYUN              0x100054f  /* U+054F ARMENIAN CAPITAL LETTER TIWN */
#define XK_Armenian_tyun              0x100057f  /* U+057F ARMENIAN SMALL LETTER TIWN */
#define XK_Armenian_RE                0x1000550  /* U+0550 ARMENIAN CAPITAL LETTER REH */
#define XK_Armenian_re                0x1000580  /* U+0580 ARMENIAN SMALL LETTER REH */
#define XK_Armenian_TSO               0x1000551  /* U+0551 ARMENIAN CAPITAL LETTER CO */
#define XK_Armenian_tso               0x1000581  /* U+0581 ARMENIAN SMALL LETTER CO */
#define XK_Armenian_VYUN              0x1000552  /* U+0552 ARMENIAN CAPITAL LETTER YIWN */
#define XK_Armenian_vyun              0x1000582  /* U+0582 ARMENIAN SMALL LETTER YIWN */
#define XK_Armenian_PYUR              0x1000553  /* U+0553 ARMENIAN CAPITAL LETTER PIWR */
#define XK_Armenian_pyur              0x1000583  /* U+0583 ARMENIAN SMALL LETTER PIWR */
#define XK_Armenian_KE                0x1000554  /* U+0554 ARMENIAN CAPITAL LETTER KEH */
#define XK_Armenian_ke                0x1000584  /* U+0584 ARMENIAN SMALL LETTER KEH */
#define XK_Armenian_O                 0x1000555  /* U+0555 ARMENIAN CAPITAL LETTER OH */
#define XK_Armenian_o                 0x1000585  /* U+0585 ARMENIAN SMALL LETTER OH */
#define XK_Armenian_FE                0x1000556  /* U+0556 ARMENIAN CAPITAL LETTER FEH */
#define XK_Armenian_fe                0x1000586  /* U+0586 ARMENIAN SMALL LETTER FEH */
#define XK_Armenian_apostrophe        0x100055a  /* U+055A ARMENIAN APOSTROPHE */
#endif /* XK_ARMENIAN */

/*
 * Georgian
 */

#ifdef XK_GEORGIAN
#define XK_Georgian_an                0x10010d0  /* U+10D0 GEORGIAN LETTER AN */
#define XK_Georgian_ban               0x10010d1  /* U+10D1 GEORGIAN LETTER BAN */
#define XK_Georgian_gan               0x10010d2  /* U+10D2 GEORGIAN LETTER GAN */
#define XK_Georgian_don               0x10010d3  /* U+10D3 GEORGIAN LETTER DON */
#define XK_Georgian_en                0x10010d4  /* U+10D4 GEORGIAN LETTER EN */
#define XK_Georgian_vin               0x10010d5  /* U+10D5 GEORGIAN LETTER VIN */
#define XK_Georgian_zen               0x10010d6  /* U+10D6 GEORGIAN LETTER ZEN */
#define XK_Georgian_tan               0x10010d7  /* U+10D7 GEORGIAN LETTER TAN */
#define XK_Georgian_in                0x10010d8  /* U+10D8 GEORGIAN LETTER IN */
#define XK_Georgian_kan               0x10010d9  /* U+10D9 GEORGIAN LETTER KAN */
#define XK_Georgian_las               0x10010da  /* U+10DA GEORGIAN LETTER LAS */
#define XK_Georgian_man               0x10010db  /* U+10DB GEORGIAN LETTER MAN */
#define XK_Georgian_nar               0x10010dc  /* U+10DC GEORGIAN LETTER NAR */
#define XK_Georgian_on                0x10010dd  /* U+10DD GEORGIAN LETTER ON */
#define XK_Georgian_par               0x10010de  /* U+10DE GEORGIAN LETTER PAR */
#define XK_Georgian_zhar              0x10010df  /* U+10DF GEORGIAN LETTER ZHAR */
#define XK_Georgian_rae               0x10010e0  /* U+10E0 GEORGIAN LETTER RAE */
#define XK_Georgian_san               0x10010e1  /* U+10E1 GEORGIAN LETTER SAN */
#define XK_Georgian_tar               0x10010e2  /* U+10E2 GEORGIAN LETTER TAR */
#define XK_Georgian_un                0x10010e3  /* U+10E3 GEORGIAN LETTER UN */
#define XK_Georgian_phar              0x10010e4  /* U+10E4 GEORGIAN LETTER PHAR */
#define XK_Georgian_khar              0x10010e5  /* U+10E5 GEORGIAN LETTER KHAR */
#define XK_Georgian_ghan              0x10010e6  /* U+10E6 GEORGIAN LETTER GHAN */
#define XK_Georgian_qar               0x10010e7  /* U+10E7 GEORGIAN LETTER QAR */
#define XK_Georgian_shin              0x10010e8  /* U+10E8 GEORGIAN LETTER SHIN */
#define XK_Georgian_chin              0x10010e9  /* U+10E9 GEORGIAN LETTER CHIN */
#define XK_Georgian_can               0x10010ea  /* U+10EA GEORGIAN LETTER CAN */
#define XK_Georgian_jil               0x10010eb  /* U+10EB GEORGIAN LETTER JIL */
#define XK_Georgian_cil               0x10010ec  /* U+10EC GEORGIAN LETTER CIL */
#define XK_Georgian_char              0x10010ed  /* U+10ED GEORGIAN LETTER CHAR */
#define XK_Georgian_xan               0x10010ee  /* U+10EE GEORGIAN LETTER XAN */
#define XK_Georgian_jhan              0x10010ef  /* U+10EF GEORGIAN LETTER JHAN */
#define XK_Georgian_hae               0x10010f0  /* U+10F0 GEORGIAN LETTER HAE */
#define XK_Georgian_he                0x10010f1  /* U+10F1 GEORGIAN LETTER HE */
#define XK_Georgian_hie               0x10010f2  /* U+10F2 GEORGIAN LETTER HIE */
#define XK_Georgian_we                0x10010f3  /* U+10F3 GEORGIAN LETTER WE */
#define XK_Georgian_har               0x10010f4  /* U+10F4 GEORGIAN LETTER HAR */
#define XK_Georgian_hoe               0x10010f5  /* U+10F5 GEORGIAN LETTER HOE */
#define XK_Georgian_fi                0x10010f6  /* U+10F6 GEORGIAN LETTER FI */
#endif /* XK_GEORGIAN */

/*
 * Azeri (and other Turkic or Caucasian languages)
 */

#ifdef XK_CAUCASUS
/* latin */
#define XK_Xabovedot                  0x1001e8a  /* U+1E8A LATIN CAPITAL LETTER X WITH DOT ABOVE */
#define XK_Ibreve                     0x100012c  /* U+012C LATIN CAPITAL LETTER I WITH BREVE */
#define XK_Zstroke                    0x10001b5  /* U+01B5 LATIN CAPITAL LETTER Z WITH STROKE */
#define XK_Gcaron                     0x10001e6  /* U+01E6 LATIN CAPITAL LETTER G WITH CARON */
#define XK_Ocaron                     0x10001d1  /* U+01D2 LATIN CAPITAL LETTER O WITH CARON */
#define XK_Obarred                    0x100019f  /* U+019F LATIN CAPITAL LETTER O WITH MIDDLE TILDE */
#define XK_xabovedot                  0x1001e8b  /* U+1E8B LATIN SMALL LETTER X WITH DOT ABOVE */
#define XK_ibreve                     0x100012d  /* U+012D LATIN SMALL LETTER I WITH BREVE */
#define XK_zstroke                    0x10001b6  /* U+01B6 LATIN SMALL LETTER Z WITH STROKE */
#define XK_gcaron                     0x10001e7  /* U+01E7 LATIN SMALL LETTER G WITH CARON */
#define XK_ocaron                     0x10001d2  /* U+01D2 LATIN SMALL LETTER O WITH CARON */
#define XK_obarred                    0x1000275  /* U+0275 LATIN SMALL LETTER BARRED O */
#define XK_SCHWA                      0x100018f  /* U+018F LATIN CAPITAL LETTER SCHWA */
#define XK_schwa                      0x1000259  /* U+0259 LATIN SMALL LETTER SCHWA */
#define XK_EZH                        0x10001b7  /* U+01B7 LATIN CAPITAL LETTER EZH */
#define XK_ezh                        0x1000292  /* U+0292 LATIN SMALL LETTER EZH */
/* those are not really Caucasus */
/* For Inupiak */
#define XK_Lbelowdot                  0x1001e36  /* U+1E36 LATIN CAPITAL LETTER L WITH DOT BELOW */
#define XK_lbelowdot                  0x1001e37  /* U+1E37 LATIN SMALL LETTER L WITH DOT BELOW */
#endif /* XK_CAUCASUS */

/*
 * Vietnamese
 */
 
#ifdef XK_VIETNAMESE
#define XK_Abelowdot                  0x1001ea0  /* U+1EA0 LATIN CAPITAL LETTER A WITH DOT BELOW */
#define XK_abelowdot                  0x1001ea1  /* U+1EA1 LATIN SMALL LETTER A WITH DOT BELOW */
#define XK_Ahook                      0x1001ea2  /* U+1EA2 LATIN CAPITAL LETTER A WITH HOOK ABOVE */
#define XK_ahook                      0x1001ea3  /* U+1EA3 LATIN SMALL LETTER A WITH HOOK ABOVE */
#define XK_Acircumflexacute           0x1001ea4  /* U+1EA4 LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND ACUTE */
#define XK_acircumflexacute           0x1001ea5  /* U+1EA5 LATIN SMALL LETTER A WITH CIRCUMFLEX AND ACUTE */
#define XK_Acircumflexgrave           0x1001ea6  /* U+1EA6 LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND GRAVE */
#define XK_acircumflexgrave           0x1001ea7  /* U+1EA7 LATIN SMALL LETTER A WITH CIRCUMFLEX AND GRAVE */
#define XK_Acircumflexhook            0x1001ea8  /* U+1EA8 LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND HOOK ABOVE */
#define XK_acircumflexhook            0x1001ea9  /* U+1EA9 LATIN SMALL LETTER A WITH CIRCUMFLEX AND HOOK ABOVE */
#define XK_Acircumflextilde           0x1001eaa  /* U+1EAA LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND TILDE */
#define XK_acircumflextilde           0x1001eab  /* U+1EAB LATIN SMALL LETTER A WITH CIRCUMFLEX AND TILDE */
#define XK_Acircumflexbelowdot        0x1001eac  /* U+1EAC LATIN CAPITAL LETTER A WITH CIRCUMFLEX AND DOT BELOW */
#define XK_acircumflexbelowdot        0x1001ead  /* U+1EAD LATIN SMALL LETTER A WITH CIRCUMFLEX AND DOT BELOW */
#define XK_Abreveacute                0x1001eae  /* U+1EAE LATIN CAPITAL LETTER A WITH BREVE AND ACUTE */
#define XK_abreveacute                0x1001eaf  /* U+1EAF LATIN SMALL LETTER A WITH BREVE AND ACUTE */
#define XK_Abrevegrave                0x1001eb0  /* U+1EB0 LATIN CAPITAL LETTER A WITH BREVE AND GRAVE */
#define XK_abrevegrave                0x1001eb1  /* U+1EB1 LATIN SMALL LETTER A WITH BREVE AND GRAVE */
#define XK_Abrevehook                 0x1001eb2  /* U+1EB2 LATIN CAPITAL LETTER A WITH BREVE AND HOOK ABOVE */
#define XK_abrevehook                 0x1001eb3  /* U+1EB3 LATIN SMALL LETTER A WITH BREVE AND HOOK ABOVE */
#define XK_Abrevetilde                0x1001eb4  /* U+1EB4 LATIN CAPITAL LETTER A WITH BREVE AND TILDE */
#define XK_abrevetilde                0x1001eb5  /* U+1EB5 LATIN SMALL LETTER A WITH BREVE AND TILDE */
#define XK_Abrevebelowdot             0x1001eb6  /* U+1EB6 LATIN CAPITAL LETTER A WITH BREVE AND DOT BELOW */
#define XK_abrevebelowdot             0x1001eb7  /* U+1EB7 LATIN SMALL LETTER A WITH BREVE AND DOT BELOW */
#define XK_Ebelowdot                  0x1001eb8  /* U+1EB8 LATIN CAPITAL LETTER E WITH DOT BELOW */
#define XK_ebelowdot                  0x1001eb9  /* U+1EB9 LATIN SMALL LETTER E WITH DOT BELOW */
#define XK_Ehook                      0x1001eba  /* U+1EBA LATIN CAPITAL LETTER E WITH HOOK ABOVE */
#define XK_ehook                      0x1001ebb  /* U+1EBB LATIN SMALL LETTER E WITH HOOK ABOVE */
#define XK_Etilde                     0x1001ebc  /* U+1EBC LATIN CAPITAL LETTER E WITH TILDE */
#define XK_etilde                     0x1001ebd  /* U+1EBD LATIN SMALL LETTER E WITH TILDE */
#define XK_Ecircumflexacute           0x1001ebe  /* U+1EBE LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND ACUTE */
#define XK_ecircumflexacute           0x1001ebf  /* U+1EBF LATIN SMALL LETTER E WITH CIRCUMFLEX AND ACUTE */
#define XK_Ecircumflexgrave           0x1001ec0  /* U+1EC0 LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND GRAVE */
#define XK_ecircumflexgrave           0x1001ec1  /* U+1EC1 LATIN SMALL LETTER E WITH CIRCUMFLEX AND GRAVE */
#define XK_Ecircumflexhook            0x1001ec2  /* U+1EC2 LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND HOOK ABOVE */
#define XK_ecircumflexhook            0x1001ec3  /* U+1EC3 LATIN SMALL LETTER E WITH CIRCUMFLEX AND HOOK ABOVE */
#define XK_Ecircumflextilde           0x1001ec4  /* U+1EC4 LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND TILDE */
#define XK_ecircumflextilde           0x1001ec5  /* U+1EC5 LATIN SMALL LETTER E WITH CIRCUMFLEX AND TILDE */
#define XK_Ecircumflexbelowdot        0x1001ec6  /* U+1EC6 LATIN CAPITAL LETTER E WITH CIRCUMFLEX AND DOT BELOW */
#define XK_ecircumflexbelowdot        0x1001ec7  /* U+1EC7 LATIN SMALL LETTER E WITH CIRCUMFLEX AND DOT BELOW */
#define XK_Ihook                      0x1001ec8  /* U+1EC8 LATIN CAPITAL LETTER I WITH HOOK ABOVE */
#define XK_ihook                      0x1001ec9  /* U+1EC9 LATIN SMALL LETTER I WITH HOOK ABOVE */
#define XK_Ibelowdot                  0x1001eca  /* U+1ECA LATIN CAPITAL LETTER I WITH DOT BELOW */
#define XK_ibelowdot                  0x1001ecb  /* U+1ECB LATIN SMALL LETTER I WITH DOT BELOW */
#define XK_Obelowdot                  0x1001ecc  /* U+1ECC LATIN CAPITAL LETTER O WITH DOT BELOW */
#define XK_obelowdot                  0x1001ecd  /* U+1ECD LATIN SMALL LETTER O WITH DOT BELOW */
#define XK_Ohook                      0x1001ece  /* U+1ECE LATIN CAPITAL LETTER O WITH HOOK ABOVE */
#define XK_ohook                      0x1001ecf  /* U+1ECF LATIN SMALL LETTER O WITH HOOK ABOVE */
#define XK_Ocircumflexacute           0x1001ed0  /* U+1ED0 LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND ACUTE */
#define XK_ocircumflexacute           0x1001ed1  /* U+1ED1 LATIN SMALL LETTER O WITH CIRCUMFLEX AND ACUTE */
#define XK_Ocircumflexgrave           0x1001ed2  /* U+1ED2 LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND GRAVE */
#define XK_ocircumflexgrave           0x1001ed3  /* U+1ED3 LATIN SMALL LETTER O WITH CIRCUMFLEX AND GRAVE */
#define XK_Ocircumflexhook            0x1001ed4  /* U+1ED4 LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND HOOK ABOVE */
#define XK_ocircumflexhook            0x1001ed5  /* U+1ED5 LATIN SMALL LETTER O WITH CIRCUMFLEX AND HOOK ABOVE */
#define XK_Ocircumflextilde           0x1001ed6  /* U+1ED6 LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND TILDE */
#define XK_ocircumflextilde           0x1001ed7  /* U+1ED7 LATIN SMALL LETTER O WITH CIRCUMFLEX AND TILDE */
#define XK_Ocircumflexbelowdot        0x1001ed8  /* U+1ED8 LATIN CAPITAL LETTER O WITH CIRCUMFLEX AND DOT BELOW */
#define XK_ocircumflexbelowdot        0x1001ed9  /* U+1ED9 LATIN SMALL LETTER O WITH CIRCUMFLEX AND DOT BELOW */
#define XK_Ohornacute                 0x1001eda  /* U+1EDA LATIN CAPITAL LETTER O WITH HORN AND ACUTE */
#define XK_ohornacute                 0x1001edb  /* U+1EDB LATIN SMALL LETTER O WITH HORN AND ACUTE */
#define XK_Ohorngrave                 0x1001edc  /* U+1EDC LATIN CAPITAL LETTER O WITH HORN AND GRAVE */
#define XK_ohorngrave                 0x1001edd  /* U+1EDD LATIN SMALL LETTER O WITH HORN AND GRAVE */
#define XK_Ohornhook                  0x1001ede  /* U+1EDE LATIN CAPITAL LETTER O WITH HORN AND HOOK ABOVE */
#define XK_ohornhook                  0x1001edf  /* U+1EDF LATIN SMALL LETTER O WITH HORN AND HOOK ABOVE */
#define XK_Ohorntilde                 0x1001ee0  /* U+1EE0 LATIN CAPITAL LETTER O WITH HORN AND TILDE */
#define XK_ohorntilde                 0x1001ee1  /* U+1EE1 LATIN SMALL LETTER O WITH HORN AND TILDE */
#define XK_Ohornbelowdot              0x1001ee2  /* U+1EE2 LATIN CAPITAL LETTER O WITH HORN AND DOT BELOW */
#define XK_ohornbelowdot              0x1001ee3  /* U+1EE3 LATIN SMALL LETTER O WITH HORN AND DOT BELOW */
#define XK_Ubelowdot                  0x1001ee4  /* U+1EE4 LATIN CAPITAL LETTER U WITH DOT BELOW */
#define XK_ubelowdot                  0x1001ee5  /* U+1EE5 LATIN SMALL LETTER U WITH DOT BELOW */
#define XK_Uhook                      0x1001ee6  /* U+1EE6 LATIN CAPITAL LETTER U WITH HOOK ABOVE */
#define XK_uhook                      0x1001ee7  /* U+1EE7 LATIN SMALL LETTER U WITH HOOK ABOVE */
#define XK_Uhornacute                 0x1001ee8  /* U+1EE8 LATIN CAPITAL LETTER U WITH HORN AND ACUTE */
#define XK_uhornacute                 0x1001ee9  /* U+1EE9 LATIN SMALL LETTER U WITH HORN AND ACUTE */
#define XK_Uhorngrave                 0x1001eea  /* U+1EEA LATIN CAPITAL LETTER U WITH HORN AND GRAVE */
#define XK_uhorngrave                 0x1001eeb  /* U+1EEB LATIN SMALL LETTER U WITH HORN AND GRAVE */
#define XK_Uhornhook                  0x1001eec  /* U+1EEC LATIN CAPITAL LETTER U WITH HORN AND HOOK ABOVE */
#define XK_uhornhook                  0x1001eed  /* U+1EED LATIN SMALL LETTER U WITH HORN AND HOOK ABOVE */
#define XK_Uhorntilde                 0x1001eee  /* U+1EEE LATIN CAPITAL LETTER U WITH HORN AND TILDE */
#define XK_uhorntilde                 0x1001eef  /* U+1EEF LATIN SMALL LETTER U WITH HORN AND TILDE */
#define XK_Uhornbelowdot              0x1001ef0  /* U+1EF0 LATIN CAPITAL LETTER U WITH HORN AND DOT BELOW */
#define XK_uhornbelowdot              0x1001ef1  /* U+1EF1 LATIN SMALL LETTER U WITH HORN AND DOT BELOW */
#define XK_Ybelowdot                  0x1001ef4  /* U+1EF4 LATIN CAPITAL LETTER Y WITH DOT BELOW */
#define XK_ybelowdot                  0x1001ef5  /* U+1EF5 LATIN SMALL LETTER Y WITH DOT BELOW */
#define XK_Yhook                      0x1001ef6  /* U+1EF6 LATIN CAPITAL LETTER Y WITH HOOK ABOVE */
#define XK_yhook                      0x1001ef7  /* U+1EF7 LATIN SMALL LETTER Y WITH HOOK ABOVE */
#define XK_Ytilde                     0x1001ef8  /* U+1EF8 LATIN CAPITAL LETTER Y WITH TILDE */
#define XK_ytilde                     0x1001ef9  /* U+1EF9 LATIN SMALL LETTER Y WITH TILDE */
#define XK_Ohorn                      0x10001a0  /* U+01A0 LATIN CAPITAL LETTER O WITH HORN */
#define XK_ohorn                      0x10001a1  /* U+01A1 LATIN SMALL LETTER O WITH HORN */
#define XK_Uhorn                      0x10001af  /* U+01AF LATIN CAPITAL LETTER U WITH HORN */
#define XK_uhorn                      0x10001b0  /* U+01B0 LATIN SMALL LETTER U WITH HORN */

#endif /* XK_VIETNAMESE */

#ifdef XK_CURRENCY
#define XK_EcuSign                    0x10020a0  /* U+20A0 EURO-CURRENCY SIGN */
#define XK_ColonSign                  0x10020a1  /* U+20A1 COLON SIGN */
#define XK_CruzeiroSign               0x10020a2  /* U+20A2 CRUZEIRO SIGN */
#define XK_FFrancSign                 0x10020a3  /* U+20A3 FRENCH FRANC SIGN */
#define XK_LiraSign                   0x10020a4  /* U+20A4 LIRA SIGN */
#define XK_MillSign                   0x10020a5  /* U+20A5 MILL SIGN */
#define XK_NairaSign                  0x10020a6  /* U+20A6 NAIRA SIGN */
#define XK_PesetaSign                 0x10020a7  /* U+20A7 PESETA SIGN */
#define XK_RupeeSign                  0x10020a8  /* U+20A8 RUPEE SIGN */
#define XK_WonSign                    0x10020a9  /* U+20A9 WON SIGN */
#define XK_NewSheqelSign              0x10020aa  /* U+20AA NEW SHEQEL SIGN */
#define XK_DongSign                   0x10020ab  /* U+20AB DONG SIGN */
#define XK_EuroSign                      0x20ac  /* U+20AC EURO SIGN */
#endif /* XK_CURRENCY */

#ifdef XK_MATHEMATICAL
/* one, two and three are defined above. */
#define XK_zerosuperior               0x1002070  /* U+2070 SUPERSCRIPT ZERO */
#define XK_foursuperior               0x1002074  /* U+2074 SUPERSCRIPT FOUR */
#define XK_fivesuperior               0x1002075  /* U+2075 SUPERSCRIPT FIVE */
#define XK_sixsuperior                0x1002076  /* U+2076 SUPERSCRIPT SIX */
#define XK_sevensuperior              0x1002077  /* U+2077 SUPERSCRIPT SEVEN */
#define XK_eightsuperior              0x1002078  /* U+2078 SUPERSCRIPT EIGHT */
#define XK_ninesuperior               0x1002079  /* U+2079 SUPERSCRIPT NINE */
#define XK_zerosubscript              0x1002080  /* U+2080 SUBSCRIPT ZERO */
#define XK_onesubscript               0x1002081  /* U+2081 SUBSCRIPT ONE */
#define XK_twosubscript               0x1002082  /* U+2082 SUBSCRIPT TWO */
#define XK_threesubscript             0x1002083  /* U+2083 SUBSCRIPT THREE */
#define XK_foursubscript              0x1002084  /* U+2084 SUBSCRIPT FOUR */
#define XK_fivesubscript              0x1002085  /* U+2085 SUBSCRIPT FIVE */
#define XK_sixsubscript               0x1002086  /* U+2086 SUBSCRIPT SIX */
#define XK_sevensubscript             0x1002087  /* U+2087 SUBSCRIPT SEVEN */
#define XK_eightsubscript             0x1002088  /* U+2088 SUBSCRIPT EIGHT */
#define XK_ninesubscript              0x1002089  /* U+2089 SUBSCRIPT NINE */
#define XK_partdifferential           0x1002202  /* U+2202 PARTIAL DIFFERENTIAL */
#define XK_emptyset                   0x1002205  /* U+2205 NULL SET */
#define XK_elementof                  0x1002208  /* U+2208 ELEMENT OF */
#define XK_notelementof               0x1002209  /* U+2209 NOT AN ELEMENT OF */
#define XK_containsas                 0x100220B  /* U+220B CONTAINS AS MEMBER */
#define XK_squareroot                 0x100221A  /* U+221A SQUARE ROOT */
#define XK_cuberoot                   0x100221B  /* U+221B CUBE ROOT */
#define XK_fourthroot                 0x100221C  /* U+221C FOURTH ROOT */
#define XK_dintegral                  0x100222C  /* U+222C DOUBLE INTEGRAL */
#define XK_tintegral                  0x100222D  /* U+222D TRIPLE INTEGRAL */
#define XK_because                    0x1002235  /* U+2235 BECAUSE */
#define XK_approxeq                   0x1002248  /* U+2245 ALMOST EQUAL TO */
#define XK_notapproxeq                0x1002247  /* U+2247 NOT ALMOST EQUAL TO */
#define XK_notidentical               0x1002262  /* U+2262 NOT IDENTICAL TO */
#define XK_stricteq                   0x1002263  /* U+2263 STRICTLY EQUIVALENT TO */          
#endif /* XK_MATHEMATICAL */

#ifdef XK_BRAILLE
#define XK_braille_dot_1                 0xfff1
#define XK_braille_dot_2                 0xfff2
#define XK_braille_dot_3                 0xfff3
#define XK_braille_dot_4                 0xfff4
#define XK_braille_dot_5                 0xfff5
#define XK_braille_dot_6                 0xfff6
#define XK_braille_dot_7                 0xfff7
#define XK_braille_dot_8                 0xfff8
#define XK_braille_dot_9                 0xfff9
#define XK_braille_dot_10                0xfffa
#define XK_braille_blank              0x1002800  /* U+2800 BRAILLE PATTERN BLANK */
#define XK_braille_dots_1             0x1002801  /* U+2801 BRAILLE PATTERN DOTS-1 */
#define XK_braille_dots_2             0x1002802  /* U+2802 BRAILLE PATTERN DOTS-2 */
#define XK_braille_dots_12            0x1002803  /* U+2803 BRAILLE PATTERN DOTS-12 */
#define XK_braille_dots_3             0x1002804  /* U+2804 BRAILLE PATTERN DOTS-3 */
#define XK_braille_dots_13            0x1002805  /* U+2805 BRAILLE PATTERN DOTS-13 */
#define XK_braille_dots_23            0x1002806  /* U+2806 BRAILLE PATTERN DOTS-23 */
#define XK_braille_dots_123           0x1002807  /* U+2807 BRAILLE PATTERN DOTS-123 */
#define XK_braille_dots_4             0x1002808  /* U+2808 BRAILLE PATTERN DOTS-4 */
#define XK_braille_dots_14            0x1002809  /* U+2809 BRAILLE PATTERN DOTS-14 */
#define XK_braille_dots_24            0x100280a  /* U+280a BRAILLE PATTERN DOTS-24 */
#define XK_braille_dots_124           0x100280b  /* U+280b BRAILLE PATTERN DOTS-124 */
#define XK_braille_dots_34            0x100280c  /* U+280c BRAILLE PATTERN DOTS-34 */
#define XK_braille_dots_134           0x100280d  /* U+280d BRAILLE PATTERN DOTS-134 */
#define XK_braille_dots_234           0x100280e  /* U+280e BRAILLE PATTERN DOTS-234 */
#define XK_braille_dots_1234          0x100280f  /* U+280f BRAILLE PATTERN DOTS-1234 */
#define XK_braille_dots_5             0x1002810  /* U+2810 BRAILLE PATTERN DOTS-5 */
#define XK_braille_dots_15            0x1002811  /* U+2811 BRAILLE PATTERN DOTS-15 */
#define XK_braille_dots_25            0x1002812  /* U+2812 BRAILLE PATTERN DOTS-25 */
#define XK_braille_dots_125           0x1002813  /* U+2813 BRAILLE PATTERN DOTS-125 */
#define XK_braille_dots_35            0x1002814  /* U+2814 BRAILLE PATTERN DOTS-35 */
#define XK_braille_dots_135           0x1002815  /* U+2815 BRAILLE PATTERN DOTS-135 */
#define XK_braille_dots_235           0x1002816  /* U+2816 BRAILLE PATTERN DOTS-235 */
#define XK_braille_dots_1235          0x1002817  /* U+2817 BRAILLE PATTERN DOTS-1235 */
#define XK_braille_dots_45            0x1002818  /* U+2818 BRAILLE PATTERN DOTS-45 */
#define XK_braille_dots_145           0x1002819  /* U+2819 BRAILLE PATTERN DOTS-145 */
#define XK_braille_dots_245           0x100281a  /* U+281a BRAILLE PATTERN DOTS-245 */
#define XK_braille_dots_1245          0x100281b  /* U+281b BRAILLE PATTERN DOTS-1245 */
#define XK_braille_dots_345           0x100281c  /* U+281c BRAILLE PATTERN DOTS-345 */
#define XK_braille_dots_1345          0x100281d  /* U+281d BRAILLE PATTERN DOTS-1345 */
#define XK_braille_dots_2345          0x100281e  /* U+281e BRAILLE PATTERN DOTS-2345 */
#define XK_braille_dots_12345         0x100281f  /* U+281f BRAILLE PATTERN DOTS-12345 */
#define XK_braille_dots_6             0x1002820  /* U+2820 BRAILLE PATTERN DOTS-6 */
#define XK_braille_dots_16            0x1002821  /* U+2821 BRAILLE PATTERN DOTS-16 */
#define XK_braille_dots_26            0x1002822  /* U+2822 BRAILLE PATTERN DOTS-26 */
#define XK_braille_dots_126           0x1002823  /* U+2823 BRAILLE PATTERN DOTS-126 */
#define XK_braille_dots_36            0x1002824  /* U+2824 BRAILLE PATTERN DOTS-36 */
#define XK_braille_dots_136           0x1002825  /* U+2825 BRAILLE PATTERN DOTS-136 */
#define XK_braille_dots_236           0x1002826  /* U+2826 BRAILLE PATTERN DOTS-236 */
#define XK_braille_dots_1236          0x1002827  /* U+2827 BRAILLE PATTERN DOTS-1236 */
#define XK_braille_dots_46            0x1002828  /* U+2828 BRAILLE PATTERN DOTS-46 */
#define XK_braille_dots_146           0x1002829  /* U+2829 BRAILLE PATTERN DOTS-146 */
#define XK_braille_dots_246           0x100282a  /* U+282a BRAILLE PATTERN DOTS-246 */
#define XK_braille_dots_1246          0x100282b  /* U+282b BRAILLE PATTERN DOTS-1246 */
#define XK_braille_dots_346           0x100282c  /* U+282c BRAILLE PATTERN DOTS-346 */
#define XK_braille_dots_1346          0x100282d  /* U+282d BRAILLE PATTERN DOTS-1346 */
#define XK_braille_dots_2346          0x100282e  /* U+282e BRAILLE PATTERN DOTS-2346 */
#define XK_braille_dots_12346         0x100282f  /* U+282f BRAILLE PATTERN DOTS-12346 */
#define XK_braille_dots_56            0x1002830  /* U+2830 BRAILLE PATTERN DOTS-56 */
#define XK_braille_dots_156           0x1002831  /* U+2831 BRAILLE PATTERN DOTS-156 */
#define XK_braille_dots_256           0x1002832  /* U+2832 BRAILLE PATTERN DOTS-256 */
#define XK_braille_dots_1256          0x1002833  /* U+2833 BRAILLE PATTERN DOTS-1256 */
#define XK_braille_dots_356           0x1002834  /* U+2834 BRAILLE PATTERN DOTS-356 */
#define XK_braille_dots_1356          0x1002835  /* U+2835 BRAILLE PATTERN DOTS-1356 */
#define XK_braille_dots_2356          0x1002836  /* U+2836 BRAILLE PATTERN DOTS-2356 */
#define XK_braille_dots_12356         0x1002837  /* U+2837 BRAILLE PATTERN DOTS-12356 */
#define XK_braille_dots_456           0x1002838  /* U+2838 BRAILLE PATTERN DOTS-456 */
#define XK_braille_dots_1456          0x1002839  /* U+2839 BRAILLE PATTERN DOTS-1456 */
#define XK_braille_dots_2456          0x100283a  /* U+283a BRAILLE PATTERN DOTS-2456 */
#define XK_braille_dots_12456         0x100283b  /* U+283b BRAILLE PATTERN DOTS-12456 */
#define XK_braille_dots_3456          0x100283c  /* U+283c BRAILLE PATTERN DOTS-3456 */
#define XK_braille_dots_13456         0x100283d  /* U+283d BRAILLE PATTERN DOTS-13456 */
#define XK_braille_dots_23456         0x100283e  /* U+283e BRAILLE PATTERN DOTS-23456 */
#define XK_braille_dots_123456        0x100283f  /* U+283f BRAILLE PATTERN DOTS-123456 */
#define XK_braille_dots_7             0x1002840  /* U+2840 BRAILLE PATTERN DOTS-7 */
#define XK_braille_dots_17            0x1002841  /* U+2841 BRAILLE PATTERN DOTS-17 */
#define XK_braille_dots_27            0x1002842  /* U+2842 BRAILLE PATTERN DOTS-27 */
#define XK_braille_dots_127           0x1002843  /* U+2843 BRAILLE PATTERN DOTS-127 */
#define XK_braille_dots_37            0x1002844  /* U+2844 BRAILLE PATTERN DOTS-37 */
#define XK_braille_dots_137           0x1002845  /* U+2845 BRAILLE PATTERN DOTS-137 */
#define XK_braille_dots_237           0x1002846  /* U+2846 BRAILLE PATTERN DOTS-237 */
#define XK_braille_dots_1237          0x1002847  /* U+2847 BRAILLE PATTERN DOTS-1237 */
#define XK_braille_dots_47            0x1002848  /* U+2848 BRAILLE PATTERN DOTS-47 */
#define XK_braille_dots_147           0x1002849  /* U+2849 BRAILLE PATTERN DOTS-147 */
#define XK_braille_dots_247           0x100284a  /* U+284a BRAILLE PATTERN DOTS-247 */
#define XK_braille_dots_1247          0x100284b  /* U+284b BRAILLE PATTERN DOTS-1247 */
#define XK_braille_dots_347           0x100284c  /* U+284c BRAILLE PATTERN DOTS-347 */
#define XK_braille_dots_1347          0x100284d  /* U+284d BRAILLE PATTERN DOTS-1347 */
#define XK_braille_dots_2347          0x100284e  /* U+284e BRAILLE PATTERN DOTS-2347 */
#define XK_braille_dots_12347         0x100284f  /* U+284f BRAILLE PATTERN DOTS-12347 */
#define XK_braille_dots_57            0x1002850  /* U+2850 BRAILLE PATTERN DOTS-57 */
#define XK_braille_dots_157           0x1002851  /* U+2851 BRAILLE PATTERN DOTS-157 */
#define XK_braille_dots_257           0x1002852  /* U+2852 BRAILLE PATTERN DOTS-257 */
#define XK_braille_dots_1257          0x1002853  /* U+2853 BRAILLE PATTERN DOTS-1257 */
#define XK_braille_dots_357           0x1002854  /* U+2854 BRAILLE PATTERN DOTS-357 */
#define XK_braille_dots_1357          0x1002855  /* U+2855 BRAILLE PATTERN DOTS-1357 */
#define XK_braille_dots_2357          0x1002856  /* U+2856 BRAILLE PATTERN DOTS-2357 */
#define XK_braille_dots_12357         0x1002857  /* U+2857 BRAILLE PATTERN DOTS-12357 */
#define XK_braille_dots_457           0x1002858  /* U+2858 BRAILLE PATTERN DOTS-457 */
#define XK_braille_dots_1457          0x1002859  /* U+2859 BRAILLE PATTERN DOTS-1457 */
#define XK_braille_dots_2457          0x100285a  /* U+285a BRAILLE PATTERN DOTS-2457 */
#define XK_braille_dots_12457         0x100285b  /* U+285b BRAILLE PATTERN DOTS-12457 */
#define XK_braille_dots_3457          0x100285c  /* U+285c BRAILLE PATTERN DOTS-3457 */
#define XK_braille_dots_13457         0x100285d  /* U+285d BRAILLE PATTERN DOTS-13457 */
#define XK_braille_dots_23457         0x100285e  /* U+285e BRAILLE PATTERN DOTS-23457 */
#define XK_braille_dots_123457        0x100285f  /* U+285f BRAILLE PATTERN DOTS-123457 */
#define XK_braille_dots_67            0x1002860  /* U+2860 BRAILLE PATTERN DOTS-67 */
#define XK_braille_dots_167           0x1002861  /* U+2861 BRAILLE PATTERN DOTS-167 */
#define XK_braille_dots_267           0x1002862  /* U+2862 BRAILLE PATTERN DOTS-267 */
#define XK_braille_dots_1267          0x1002863  /* U+2863 BRAILLE PATTERN DOTS-1267 */
#define XK_braille_dots_367           0x1002864  /* U+2864 BRAILLE PATTERN DOTS-367 */
#define XK_braille_dots_1367          0x1002865  /* U+2865 BRAILLE PATTERN DOTS-1367 */
#define XK_braille_dots_2367          0x1002866  /* U+2866 BRAILLE PATTERN DOTS-2367 */
#define XK_braille_dots_12367         0x1002867  /* U+2867 BRAILLE PATTERN DOTS-12367 */
#define XK_braille_dots_467           0x1002868  /* U+2868 BRAILLE PATTERN DOTS-467 */
#define XK_braille_dots_1467          0x1002869  /* U+2869 BRAILLE PATTERN DOTS-1467 */
#define XK_braille_dots_2467          0x100286a  /* U+286a BRAILLE PATTERN DOTS-2467 */
#define XK_braille_dots_12467         0x100286b  /* U+286b BRAILLE PATTERN DOTS-12467 */
#define XK_braille_dots_3467          0x100286c  /* U+286c BRAILLE PATTERN DOTS-3467 */
#define XK_braille_dots_13467         0x100286d  /* U+286d BRAILLE PATTERN DOTS-13467 */
#define XK_braille_dots_23467         0x100286e  /* U+286e BRAILLE PATTERN DOTS-23467 */
#define XK_braille_dots_123467        0x100286f  /* U+286f BRAILLE PATTERN DOTS-123467 */
#define XK_braille_dots_567           0x1002870  /* U+2870 BRAILLE PATTERN DOTS-567 */
#define XK_braille_dots_1567          0x1002871  /* U+2871 BRAILLE PATTERN DOTS-1567 */
#define XK_braille_dots_2567          0x1002872  /* U+2872 BRAILLE PATTERN DOTS-2567 */
#define XK_braille_dots_12567         0x1002873  /* U+2873 BRAILLE PATTERN DOTS-12567 */
#define XK_braille_dots_3567          0x1002874  /* U+2874 BRAILLE PATTERN DOTS-3567 */
#define XK_braille_dots_13567         0x1002875  /* U+2875 BRAILLE PATTERN DOTS-13567 */
#define XK_braille_dots_23567         0x1002876  /* U+2876 BRAILLE PATTERN DOTS-23567 */
#define XK_braille_dots_123567        0x1002877  /* U+2877 BRAILLE PATTERN DOTS-123567 */
#define XK_braille_dots_4567          0x1002878  /* U+2878 BRAILLE PATTERN DOTS-4567 */
#define XK_braille_dots_14567         0x1002879  /* U+2879 BRAILLE PATTERN DOTS-14567 */
#define XK_braille_dots_24567         0x100287a  /* U+287a BRAILLE PATTERN DOTS-24567 */
#define XK_braille_dots_124567        0x100287b  /* U+287b BRAILLE PATTERN DOTS-124567 */
#define XK_braille_dots_34567         0x100287c  /* U+287c BRAILLE PATTERN DOTS-34567 */
#define XK_braille_dots_134567        0x100287d  /* U+287d BRAILLE PATTERN DOTS-134567 */
#define XK_braille_dots_234567        0x100287e  /* U+287e BRAILLE PATTERN DOTS-234567 */
#define XK_braille_dots_1234567       0x100287f  /* U+287f BRAILLE PATTERN DOTS-1234567 */
#define XK_braille_dots_8             0x1002880  /* U+2880 BRAILLE PATTERN DOTS-8 */
#define XK_braille_dots_18            0x1002881  /* U+2881 BRAILLE PATTERN DOTS-18 */
#define XK_braille_dots_28            0x1002882  /* U+2882 BRAILLE PATTERN DOTS-28 */
#define XK_braille_dots_128           0x1002883  /* U+2883 BRAILLE PATTERN DOTS-128 */
#define XK_braille_dots_38            0x1002884  /* U+2884 BRAILLE PATTERN DOTS-38 */
#define XK_braille_dots_138           0x1002885  /* U+2885 BRAILLE PATTERN DOTS-138 */
#define XK_braille_dots_238           0x1002886  /* U+2886 BRAILLE PATTERN DOTS-238 */
#define XK_braille_dots_1238          0x1002887  /* U+2887 BRAILLE PATTERN DOTS-1238 */
#define XK_braille_dots_48            0x1002888  /* U+2888 BRAILLE PATTERN DOTS-48 */
#define XK_braille_dots_148           0x1002889  /* U+2889 BRAILLE PATTERN DOTS-148 */
#define XK_braille_dots_248           0x100288a  /* U+288a BRAILLE PATTERN DOTS-248 */
#define XK_braille_dots_1248          0x100288b  /* U+288b BRAILLE PATTERN DOTS-1248 */
#define XK_braille_dots_348           0x100288c  /* U+288c BRAILLE PATTERN DOTS-348 */
#define XK_braille_dots_1348          0x100288d  /* U+288d BRAILLE PATTERN DOTS-1348 */
#define XK_braille_dots_2348          0x100288e  /* U+288e BRAILLE PATTERN DOTS-2348 */
#define XK_braille_dots_12348         0x100288f  /* U+288f BRAILLE PATTERN DOTS-12348 */
#define XK_braille_dots_58            0x1002890  /* U+2890 BRAILLE PATTERN DOTS-58 */
#define XK_braille_dots_158           0x1002891  /* U+2891 BRAILLE PATTERN DOTS-158 */
#define XK_braille_dots_258           0x1002892  /* U+2892 BRAILLE PATTERN DOTS-258 */
#define XK_braille_dots_1258          0x1002893  /* U+2893 BRAILLE PATTERN DOTS-1258 */
#define XK_braille_dots_358           0x1002894  /* U+2894 BRAILLE PATTERN DOTS-358 */
#define XK_braille_dots_1358          0x1002895  /* U+2895 BRAILLE PATTERN DOTS-1358 */
#define XK_braille_dots_2358          0x1002896  /* U+2896 BRAILLE PATTERN DOTS-2358 */
#define XK_braille_dots_12358         0x1002897  /* U+2897 BRAILLE PATTERN DOTS-12358 */
#define XK_braille_dots_458           0x1002898  /* U+2898 BRAILLE PATTERN DOTS-458 */
#define XK_braille_dots_1458          0x1002899  /* U+2899 BRAILLE PATTERN DOTS-1458 */
#define XK_braille_dots_2458          0x100289a  /* U+289a BRAILLE PATTERN DOTS-2458 */
#define XK_braille_dots_12458         0x100289b  /* U+289b BRAILLE PATTERN DOTS-12458 */
#define XK_braille_dots_3458          0x100289c  /* U+289c BRAILLE PATTERN DOTS-3458 */
#define XK_braille_dots_13458         0x100289d  /* U+289d BRAILLE PATTERN DOTS-13458 */
#define XK_braille_dots_23458         0x100289e  /* U+289e BRAILLE PATTERN DOTS-23458 */
#define XK_braille_dots_123458        0x100289f  /* U+289f BRAILLE PATTERN DOTS-123458 */
#define XK_braille_dots_68            0x10028a0  /* U+28a0 BRAILLE PATTERN DOTS-68 */
#define XK_braille_dots_168           0x10028a1  /* U+28a1 BRAILLE PATTERN DOTS-168 */
#define XK_braille_dots_268           0x10028a2  /* U+28a2 BRAILLE PATTERN DOTS-268 */
#define XK_braille_dots_1268          0x10028a3  /* U+28a3 BRAILLE PATTERN DOTS-1268 */
#define XK_braille_dots_368           0x10028a4  /* U+28a4 BRAILLE PATTERN DOTS-368 */
#define XK_braille_dots_1368          0x10028a5  /* U+28a5 BRAILLE PATTERN DOTS-1368 */
#define XK_braille_dots_2368          0x10028a6  /* U+28a6 BRAILLE PATTERN DOTS-2368 */
#define XK_braille_dots_12368         0x10028a7  /* U+28a7 BRAILLE PATTERN DOTS-12368 */
#define XK_braille_dots_468           0x10028a8  /* U+28a8 BRAILLE PATTERN DOTS-468 */
#define XK_braille_dots_1468          0x10028a9  /* U+28a9 BRAILLE PATTERN DOTS-1468 */
#define XK_braille_dots_2468          0x10028aa  /* U+28aa BRAILLE PATTERN DOTS-2468 */
#define XK_braille_dots_12468         0x10028ab  /* U+28ab BRAILLE PATTERN DOTS-12468 */
#define XK_braille_dots_3468          0x10028ac  /* U+28ac BRAILLE PATTERN DOTS-3468 */
#define XK_braille_dots_13468         0x10028ad  /* U+28ad BRAILLE PATTERN DOTS-13468 */
#define XK_braille_dots_23468         0x10028ae  /* U+28ae BRAILLE PATTERN DOTS-23468 */
#define XK_braille_dots_123468        0x10028af  /* U+28af BRAILLE PATTERN DOTS-123468 */
#define XK_braille_dots_568           0x10028b0  /* U+28b0 BRAILLE PATTERN DOTS-568 */
#define XK_braille_dots_1568          0x10028b1  /* U+28b1 BRAILLE PATTERN DOTS-1568 */
#define XK_braille_dots_2568          0x10028b2  /* U+28b2 BRAILLE PATTERN DOTS-2568 */
#define XK_braille_dots_12568         0x10028b3  /* U+28b3 BRAILLE PATTERN DOTS-12568 */
#define XK_braille_dots_3568          0x10028b4  /* U+28b4 BRAILLE PATTERN DOTS-3568 */
#define XK_braille_dots_13568         0x10028b5  /* U+28b5 BRAILLE PATTERN DOTS-13568 */
#define XK_braille_dots_23568         0x10028b6  /* U+28b6 BRAILLE PATTERN DOTS-23568 */
#define XK_braille_dots_123568        0x10028b7  /* U+28b7 BRAILLE PATTERN DOTS-123568 */
#define XK_braille_dots_4568          0x10028b8  /* U+28b8 BRAILLE PATTERN DOTS-4568 */
#define XK_braille_dots_14568         0x10028b9  /* U+28b9 BRAILLE PATTERN DOTS-14568 */
#define XK_braille_dots_24568         0x10028ba  /* U+28ba BRAILLE PATTERN DOTS-24568 */
#define XK_braille_dots_124568        0x10028bb  /* U+28bb BRAILLE PATTERN DOTS-124568 */
#define XK_braille_dots_34568         0x10028bc  /* U+28bc BRAILLE PATTERN DOTS-34568 */
#define XK_braille_dots_134568        0x10028bd  /* U+28bd BRAILLE PATTERN DOTS-134568 */
#define XK_braille_dots_234568        0x10028be  /* U+28be BRAILLE PATTERN DOTS-234568 */
#define XK_braille_dots_1234568       0x10028bf  /* U+28bf BRAILLE PATTERN DOTS-1234568 */
#define XK_braille_dots_78            0x10028c0  /* U+28c0 BRAILLE PATTERN DOTS-78 */
#define XK_braille_dots_178           0x10028c1  /* U+28c1 BRAILLE PATTERN DOTS-178 */
#define XK_braille_dots_278           0x10028c2  /* U+28c2 BRAILLE PATTERN DOTS-278 */
#define XK_braille_dots_1278          0x10028c3  /* U+28c3 BRAILLE PATTERN DOTS-1278 */
#define XK_braille_dots_378           0x10028c4  /* U+28c4 BRAILLE PATTERN DOTS-378 */
#define XK_braille_dots_1378          0x10028c5  /* U+28c5 BRAILLE PATTERN DOTS-1378 */
#define XK_braille_dots_2378          0x10028c6  /* U+28c6 BRAILLE PATTERN DOTS-2378 */
#define XK_braille_dots_12378         0x10028c7  /* U+28c7 BRAILLE PATTERN DOTS-12378 */
#define XK_braille_dots_478           0x10028c8  /* U+28c8 BRAILLE PATTERN DOTS-478 */
#define XK_braille_dots_1478          0x10028c9  /* U+28c9 BRAILLE PATTERN DOTS-1478 */
#define XK_braille_dots_2478          0x10028ca  /* U+28ca BRAILLE PATTERN DOTS-2478 */
#define XK_braille_dots_12478         0x10028cb  /* U+28cb BRAILLE PATTERN DOTS-12478 */
#define XK_braille_dots_3478          0x10028cc  /* U+28cc BRAILLE PATTERN DOTS-3478 */
#define XK_braille_dots_13478         0x10028cd  /* U+28cd BRAILLE PATTERN DOTS-13478 */
#define XK_braille_dots_23478         0x10028ce  /* U+28ce BRAILLE PATTERN DOTS-23478 */
#define XK_braille_dots_123478        0x10028cf  /* U+28cf BRAILLE PATTERN DOTS-123478 */
#define XK_braille_dots_578           0x10028d0  /* U+28d0 BRAILLE PATTERN DOTS-578 */
#define XK_braille_dots_1578          0x10028d1  /* U+28d1 BRAILLE PATTERN DOTS-1578 */
#define XK_braille_dots_2578          0x10028d2  /* U+28d2 BRAILLE PATTERN DOTS-2578 */
#define XK_braille_dots_12578         0x10028d3  /* U+28d3 BRAILLE PATTERN DOTS-12578 */
#define XK_braille_dots_3578          0x10028d4  /* U+28d4 BRAILLE PATTERN DOTS-3578 */
#define XK_braille_dots_13578         0x10028d5  /* U+28d5 BRAILLE PATTERN DOTS-13578 */
#define XK_braille_dots_23578         0x10028d6  /* U+28d6 BRAILLE PATTERN DOTS-23578 */
#define XK_braille_dots_123578        0x10028d7  /* U+28d7 BRAILLE PATTERN DOTS-123578 */
#define XK_braille_dots_4578          0x10028d8  /* U+28d8 BRAILLE PATTERN DOTS-4578 */
#define XK_braille_dots_14578         0x10028d9  /* U+28d9 BRAILLE PATTERN DOTS-14578 */
#define XK_braille_dots_24578         0x10028da  /* U+28da BRAILLE PATTERN DOTS-24578 */
#define XK_braille_dots_124578        0x10028db  /* U+28db BRAILLE PATTERN DOTS-124578 */
#define XK_braille_dots_34578         0x10028dc  /* U+28dc BRAILLE PATTERN DOTS-34578 */
#define XK_braille_dots_134578        0x10028dd  /* U+28dd BRAILLE PATTERN DOTS-134578 */
#define XK_braille_dots_234578        0x10028de  /* U+28de BRAILLE PATTERN DOTS-234578 */
#define XK_braille_dots_1234578       0x10028df  /* U+28df BRAILLE PATTERN DOTS-1234578 */
#define XK_braille_dots_678           0x10028e0  /* U+28e0 BRAILLE PATTERN DOTS-678 */
#define XK_braille_dots_1678          0x10028e1  /* U+28e1 BRAILLE PATTERN DOTS-1678 */
#define XK_braille_dots_2678          0x10028e2  /* U+28e2 BRAILLE PATTERN DOTS-2678 */
#define XK_braille_dots_12678         0x10028e3  /* U+28e3 BRAILLE PATTERN DOTS-12678 */
#define XK_braille_dots_3678          0x10028e4  /* U+28e4 BRAILLE PATTERN DOTS-3678 */
#define XK_braille_dots_13678         0x10028e5  /* U+28e5 BRAILLE PATTERN DOTS-13678 */
#define XK_braille_dots_23678         0x10028e6  /* U+28e6 BRAILLE PATTERN DOTS-23678 */
#define XK_braille_dots_123678        0x10028e7  /* U+28e7 BRAILLE PATTERN DOTS-123678 */
#define XK_braille_dots_4678          0x10028e8  /* U+28e8 BRAILLE PATTERN DOTS-4678 */
#define XK_braille_dots_14678         0x10028e9  /* U+28e9 BRAILLE PATTERN DOTS-14678 */
#define XK_braille_dots_24678         0x10028ea  /* U+28ea BRAILLE PATTERN DOTS-24678 */
#define XK_braille_dots_124678        0x10028eb  /* U+28eb BRAILLE PATTERN DOTS-124678 */
#define XK_braille_dots_34678         0x10028ec  /* U+28ec BRAILLE PATTERN DOTS-34678 */
#define XK_braille_dots_134678        0x10028ed  /* U+28ed BRAILLE PATTERN DOTS-134678 */
#define XK_braille_dots_234678        0x10028ee  /* U+28ee BRAILLE PATTERN DOTS-234678 */
#define XK_braille_dots_1234678       0x10028ef  /* U+28ef BRAILLE PATTERN DOTS-1234678 */
#define XK_braille_dots_5678          0x10028f0  /* U+28f0 BRAILLE PATTERN DOTS-5678 */
#define XK_braille_dots_15678         0x10028f1  /* U+28f1 BRAILLE PATTERN DOTS-15678 */
#define XK_braille_dots_25678         0x10028f2  /* U+28f2 BRAILLE PATTERN DOTS-25678 */
#define XK_braille_dots_125678        0x10028f3  /* U+28f3 BRAILLE PATTERN DOTS-125678 */
#define XK_braille_dots_35678         0x10028f4  /* U+28f4 BRAILLE PATTERN DOTS-35678 */
#define XK_braille_dots_135678        0x10028f5  /* U+28f5 BRAILLE PATTERN DOTS-135678 */
#define XK_braille_dots_235678        0x10028f6  /* U+28f6 BRAILLE PATTERN DOTS-235678 */
#define XK_braille_dots_1235678       0x10028f7  /* U+28f7 BRAILLE PATTERN DOTS-1235678 */
#define XK_braille_dots_45678         0x10028f8  /* U+28f8 BRAILLE PATTERN DOTS-45678 */
#define XK_braille_dots_145678        0x10028f9  /* U+28f9 BRAILLE PATTERN DOTS-145678 */
#define XK_braille_dots_245678        0x10028fa  /* U+28fa BRAILLE PATTERN DOTS-245678 */
#define XK_braille_dots_1245678       0x10028fb  /* U+28fb BRAILLE PATTERN DOTS-1245678 */
#define XK_braille_dots_345678        0x10028fc  /* U+28fc BRAILLE PATTERN DOTS-345678 */
#define XK_braille_dots_1345678       0x10028fd  /* U+28fd BRAILLE PATTERN DOTS-1345678 */
#define XK_braille_dots_2345678       0x10028fe  /* U+28fe BRAILLE PATTERN DOTS-2345678 */
#define XK_braille_dots_12345678      0x10028ff  /* U+28ff BRAILLE PATTERN DOTS-12345678 */
#endif /* XK_BRAILLE */

/*
 * Sinhala (http://unicode.org/charts/PDF/U0D80.pdf)
 * http://www.nongnu.org/sinhala/doc/transliteration/sinhala-transliteration_6.html
 */

#ifdef XK_SINHALA
#define XK_Sinh_ng            0x1000d82  /* U+0D82 SINHALA ANUSVARAYA */
#define XK_Sinh_h2            0x1000d83  /* U+0D83 SINHALA VISARGAYA */
#define XK_Sinh_a             0x1000d85  /* U+0D85 SINHALA AYANNA */
#define XK_Sinh_aa            0x1000d86  /* U+0D86 SINHALA AAYANNA */
#define XK_Sinh_ae            0x1000d87  /* U+0D87 SINHALA AEYANNA */
#define XK_Sinh_aee           0x1000d88  /* U+0D88 SINHALA AEEYANNA */
#define XK_Sinh_i             0x1000d89  /* U+0D89 SINHALA IYANNA */
#define XK_Sinh_ii            0x1000d8a  /* U+0D8A SINHALA IIYANNA */
#define XK_Sinh_u             0x1000d8b  /* U+0D8B SINHALA UYANNA */
#define XK_Sinh_uu            0x1000d8c  /* U+0D8C SINHALA UUYANNA */
#define XK_Sinh_ri            0x1000d8d  /* U+0D8D SINHALA IRUYANNA */
#define XK_Sinh_rii           0x1000d8e  /* U+0D8E SINHALA IRUUYANNA */
#define XK_Sinh_lu            0x1000d8f  /* U+0D8F SINHALA ILUYANNA */
#define XK_Sinh_luu           0x1000d90  /* U+0D90 SINHALA ILUUYANNA */
#define XK_Sinh_e             0x1000d91  /* U+0D91 SINHALA EYANNA */
#define XK_Sinh_ee            0x1000d92  /* U+0D92 SINHALA EEYANNA */
#define XK_Sinh_ai            0x1000d93  /* U+0D93 SINHALA AIYANNA */
#define XK_Sinh_o             0x1000d94  /* U+0D94 SINHALA OYANNA */
#define XK_Sinh_oo            0x1000d95  /* U+0D95 SINHALA OOYANNA */
#define XK_Sinh_au            0x1000d96  /* U+0D96 SINHALA AUYANNA */
#define XK_Sinh_ka            0x1000d9a  /* U+0D9A SINHALA KAYANNA */
#define XK_Sinh_kha           0x1000d9b  /* U+0D9B SINHALA MAHA. KAYANNA */
#define XK_Sinh_ga            0x1000d9c  /* U+0D9C SINHALA GAYANNA */
#define XK_Sinh_gha           0x1000d9d  /* U+0D9D SINHALA MAHA. GAYANNA */
#define XK_Sinh_ng2           0x1000d9e  /* U+0D9E SINHALA KANTAJA NAASIKYAYA */
#define XK_Sinh_nga           0x1000d9f  /* U+0D9F SINHALA SANYAKA GAYANNA */
#define XK_Sinh_ca            0x1000da0  /* U+0DA0 SINHALA CAYANNA */
#define XK_Sinh_cha           0x1000da1  /* U+0DA1 SINHALA MAHA. CAYANNA */
#define XK_Sinh_ja            0x1000da2  /* U+0DA2 SINHALA JAYANNA */
#define XK_Sinh_jha           0x1000da3  /* U+0DA3 SINHALA MAHA. JAYANNA */
#define XK_Sinh_nya           0x1000da4  /* U+0DA4 SINHALA TAALUJA NAASIKYAYA */
#define XK_Sinh_jnya          0x1000da5  /* U+0DA5 SINHALA TAALUJA SANYOOGA NAASIKYAYA */
#define XK_Sinh_nja           0x1000da6  /* U+0DA6 SINHALA SANYAKA JAYANNA */
#define XK_Sinh_tta           0x1000da7  /* U+0DA7 SINHALA TTAYANNA */
#define XK_Sinh_ttha          0x1000da8  /* U+0DA8 SINHALA MAHA. TTAYANNA */
#define XK_Sinh_dda           0x1000da9  /* U+0DA9 SINHALA DDAYANNA */
#define XK_Sinh_ddha          0x1000daa  /* U+0DAA SINHALA MAHA. DDAYANNA */
#define XK_Sinh_nna           0x1000dab  /* U+0DAB SINHALA MUURDHAJA NAYANNA */
#define XK_Sinh_ndda          0x1000dac  /* U+0DAC SINHALA SANYAKA DDAYANNA */
#define XK_Sinh_tha           0x1000dad  /* U+0DAD SINHALA TAYANNA */
#define XK_Sinh_thha          0x1000dae  /* U+0DAE SINHALA MAHA. TAYANNA */
#define XK_Sinh_dha           0x1000daf  /* U+0DAF SINHALA DAYANNA */
#define XK_Sinh_dhha          0x1000db0  /* U+0DB0 SINHALA MAHA. DAYANNA */
#define XK_Sinh_na            0x1000db1  /* U+0DB1 SINHALA DANTAJA NAYANNA */
#define XK_Sinh_ndha          0x1000db3  /* U+0DB3 SINHALA SANYAKA DAYANNA */
#define XK_Sinh_pa            0x1000db4  /* U+0DB4 SINHALA PAYANNA */
#define XK_Sinh_pha           0x1000db5  /* U+0DB5 SINHALA MAHA. PAYANNA */
#define XK_Sinh_ba            0x1000db6  /* U+0DB6 SINHALA BAYANNA */
#define XK_Sinh_bha           0x1000db7  /* U+0DB7 SINHALA MAHA. BAYANNA */
#define XK_Sinh_ma            0x1000db8  /* U+0DB8 SINHALA MAYANNA */
#define XK_Sinh_mba           0x1000db9  /* U+0DB9 SINHALA AMBA BAYANNA */
#define XK_Sinh_ya            0x1000dba  /* U+0DBA SINHALA YAYANNA */
#define XK_Sinh_ra            0x1000dbb  /* U+0DBB SINHALA RAYANNA */
#define XK_Sinh_la            0x1000dbd  /* U+0DBD SINHALA DANTAJA LAYANNA */
#define XK_Sinh_va            0x1000dc0  /* U+0DC0 SINHALA VAYANNA */
#define XK_Sinh_sha           0x1000dc1  /* U+0DC1 SINHALA TAALUJA SAYANNA */
#define XK_Sinh_ssha          0x1000dc2  /* U+0DC2 SINHALA MUURDHAJA SAYANNA */
#define XK_Sinh_sa            0x1000dc3  /* U+0DC3 SINHALA DANTAJA SAYANNA */
#define XK_Sinh_ha            0x1000dc4  /* U+0DC4 SINHALA HAYANNA */
#define XK_Sinh_lla           0x1000dc5  /* U+0DC5 SINHALA MUURDHAJA LAYANNA */
#define XK_Sinh_fa            0x1000dc6  /* U+0DC6 SINHALA FAYANNA */
#define XK_Sinh_al            0x1000dca  /* U+0DCA SINHALA AL-LAKUNA */
#define XK_Sinh_aa2           0x1000dcf  /* U+0DCF SINHALA AELA-PILLA */
#define XK_Sinh_ae2           0x1000dd0  /* U+0DD0 SINHALA AEDA-PILLA */
#define XK_Sinh_aee2          0x1000dd1  /* U+0DD1 SINHALA DIGA AEDA-PILLA */
#define XK_Sinh_i2            0x1000dd2  /* U+0DD2 SINHALA IS-PILLA */
#define XK_Sinh_ii2           0x1000dd3  /* U+0DD3 SINHALA DIGA IS-PILLA */
#define XK_Sinh_u2            0x1000dd4  /* U+0DD4 SINHALA PAA-PILLA */
#define XK_Sinh_uu2           0x1000dd6  /* U+0DD6 SINHALA DIGA PAA-PILLA */
#define XK_Sinh_ru2           0x1000dd8  /* U+0DD8 SINHALA GAETTA-PILLA */
#define XK_Sinh_e2            0x1000dd9  /* U+0DD9 SINHALA KOMBUVA */
#define XK_Sinh_ee2           0x1000dda  /* U+0DDA SINHALA DIGA KOMBUVA */
#define XK_Sinh_ai2           0x1000ddb  /* U+0DDB SINHALA KOMBU DEKA */
#define XK_Sinh_o2            0x1000ddc  /* U+0DDC SINHALA KOMBUVA HAA AELA-PILLA*/
#define XK_Sinh_oo2           0x1000ddd  /* U+0DDD SINHALA KOMBUVA HAA DIGA AELA-PILLA*/
#define XK_Sinh_au2           0x1000dde  /* U+0DDE SINHALA KOMBUVA HAA GAYANUKITTA */
#define XK_Sinh_lu2           0x1000ddf  /* U+0DDF SINHALA GAYANUKITTA */
#define XK_Sinh_ruu2          0x1000df2  /* U+0DF2 SINHALA DIGA GAETTA-PILLA */
#define XK_Sinh_luu2          0x1000df3  /* U+0DF3 SINHALA DIGA GAYANUKITTA */
#define XK_Sinh_kunddaliya    0x1000df4  /* U+0DF4 SINHALA KUNDDALIYA */
#endif /* XK_SINHALA */

* Sun 05 Oct 2014 01:19:25 AM JST

* Sun 05 Oct 2014 01:19:25 AM JST

* Sun 05 Oct 2014 01:19:25 AM JST
/* dead vowels for universal syllable entry */

* Sun 05 Oct 2014 01:21:52 AM JST

* Sun 05 Oct 2014 01:21:52 AM JST

* Sun 05 Oct 2014 01:21:52 AM JST
/* Ancient Hangul Consonant Characters */

* Sun 05 Oct 2014 01:22:42 AM JST

* Sun 05 Oct 2014 01:22:42 AM JST

* Sun 05 Oct 2014 01:22:42 AM JST
#endif /* XK_SINHALA */

* Sun 05 Oct 2014 01:23:24 AM JST
0xffffff
* Sun 05 Oct 2014 01:23:35 AM JST
0xff08
* Sun 05 Oct 2014 01:23:36 AM JST
0xff09
* Sun 05 Oct 2014 01:23:36 AM JST
0xff0a
* Sun 05 Oct 2014 01:23:37 AM JST
0xff0b
* Sun 05 Oct 2014 01:23:37 AM JST
0xff0d
* Sun 05 Oct 2014 01:23:38 AM JST
0xff13
* Sun 05 Oct 2014 01:23:38 AM JST
0xff14
* Sun 05 Oct 2014 01:23:40 AM JST
0xff15
* Sun 05 Oct 2014 01:23:40 AM JST
0xff1b
* Sun 05 Oct 2014 01:23:40 AM JST
0xffff
* Sun 05 Oct 2014 01:23:41 AM JST
0xff20
* Sun 05 Oct 2014 01:23:41 AM JST
0xff37
* Sun 05 Oct 2014 01:23:41 AM JST
0xff3c
* Sun 05 Oct 2014 01:23:42 AM JST
0xff3d
* Sun 05 Oct 2014 01:23:42 AM JST
0xff3e
* Sun 05 Oct 2014 01:23:42 AM JST
0xff21
* Sun 05 Oct 2014 01:23:43 AM JST
0xff22
* Sun 05 Oct 2014 01:23:43 AM JST
0xff23
* Sun 05 Oct 2014 01:23:43 AM JST
0xff23
* Sun 05 Oct 2014 01:23:43 AM JST
0xff24
* Sun 05 Oct 2014 01:23:44 AM JST
0xff25
* Sun 05 Oct 2014 01:23:44 AM JST
0xff26
* Sun 05 Oct 2014 01:23:44 AM JST
0xff27
* Sun 05 Oct 2014 01:23:44 AM JST
0xff28
* Sun 05 Oct 2014 01:23:45 AM JST
0xff29
* Sun 05 Oct 2014 01:23:45 AM JST
0xff2a
* Sun 05 Oct 2014 01:23:45 AM JST
0xff2b
* Sun 05 Oct 2014 01:23:46 AM JST
0xff2c
* Sun 05 Oct 2014 01:23:46 AM JST
0xff2d
* Sun 05 Oct 2014 01:23:46 AM JST
0xff2e
* Sun 05 Oct 2014 01:23:47 AM JST
0xff2f
* Sun 05 Oct 2014 01:23:47 AM JST
0xff30
* Sun 05 Oct 2014 01:23:47 AM JST
0xff37
* Sun 05 Oct 2014 01:23:47 AM JST
0xff3d
* Sun 05 Oct 2014 01:23:48 AM JST
0xff3e
* Sun 05 Oct 2014 01:23:48 AM JST
0xff50
* Sun 05 Oct 2014 01:23:48 AM JST
0xff51
* Sun 05 Oct 2014 01:23:48 AM JST
0xff52
* Sun 05 Oct 2014 01:23:49 AM JST
0xff53
* Sun 05 Oct 2014 01:23:49 AM JST
0xff54
* Sun 05 Oct 2014 01:23:55 AM JST
0xff55
* Sun 05 Oct 2014 01:23:55 AM JST
0xff55
* Sun 05 Oct 2014 01:23:55 AM JST
0xff56
* Sun 05 Oct 2014 01:23:55 AM JST
0xff56
* Sun 05 Oct 2014 01:23:55 AM JST
0xff57
* Sun 05 Oct 2014 01:23:55 AM JST
0xff58
* Sun 05 Oct 2014 01:23:55 AM JST
0xff60
* Sun 05 Oct 2014 01:23:56 AM JST
0xff61
* Sun 05 Oct 2014 01:23:56 AM JST
0xff62
* Sun 05 Oct 2014 01:23:56 AM JST
0xff63
* Sun 05 Oct 2014 01:23:56 AM JST
0xff65
* Sun 05 Oct 2014 01:23:56 AM JST
0xff66
* Sun 05 Oct 2014 01:23:56 AM JST
0xff67
* Sun 05 Oct 2014 01:23:56 AM JST
0xff68
* Sun 05 Oct 2014 01:23:57 AM JST
0xff69
* Sun 05 Oct 2014 01:23:57 AM JST
0xff6a
* Sun 05 Oct 2014 01:23:57 AM JST
0xff6b
* Sun 05 Oct 2014 01:23:57 AM JST
0xff7e
* Sun 05 Oct 2014 01:23:57 AM JST
0xff7e
* Sun 05 Oct 2014 01:23:57 AM JST
0xff7f
* Sun 05 Oct 2014 01:23:57 AM JST
0xff80
* Sun 05 Oct 2014 01:23:57 AM JST
0xff89
* Sun 05 Oct 2014 01:23:57 AM JST
0xff8d
* Sun 05 Oct 2014 01:23:58 AM JST
0xff91
* Sun 05 Oct 2014 01:23:58 AM JST
0xff92
* Sun 05 Oct 2014 01:23:58 AM JST
0xff93
* Sun 05 Oct 2014 01:23:58 AM JST
0xff94
* Sun 05 Oct 2014 01:23:58 AM JST
0xff95
* Sun 05 Oct 2014 01:23:58 AM JST
0xff96
* Sun 05 Oct 2014 01:23:58 AM JST
0xff97
* Sun 05 Oct 2014 01:23:58 AM JST
0xff98
* Sun 05 Oct 2014 01:23:58 AM JST
0xff99
* Sun 05 Oct 2014 01:23:58 AM JST
0xff9a
* Sun 05 Oct 2014 01:23:58 AM JST
0xff9a
* Sun 05 Oct 2014 01:23:59 AM JST
0xff9b
* Sun 05 Oct 2014 01:23:59 AM JST
0xff9b
* Sun 05 Oct 2014 01:23:59 AM JST
0xff9c
* Sun 05 Oct 2014 01:23:59 AM JST
0xff9d
* Sun 05 Oct 2014 01:23:59 AM JST
0xff9e
* Sun 05 Oct 2014 01:23:59 AM JST
0xff9f
* Sun 05 Oct 2014 01:23:59 AM JST
0xffbd
* Sun 05 Oct 2014 01:23:59 AM JST
0xffaa
* Sun 05 Oct 2014 01:23:59 AM JST
0xffab
* Sun 05 Oct 2014 01:23:59 AM JST
0xffac
* Sun 05 Oct 2014 01:24:00 AM JST
0xffad
* Sun 05 Oct 2014 01:24:00 AM JST
0xffae
* Sun 05 Oct 2014 01:24:00 AM JST
0xffaf
* Sun 05 Oct 2014 01:24:00 AM JST
0xffb0
* Sun 05 Oct 2014 01:24:00 AM JST
0xffb1
* Sun 05 Oct 2014 01:24:00 AM JST
0xffb2
* Sun 05 Oct 2014 01:24:00 AM JST
0xffb3
* Sun 05 Oct 2014 01:24:00 AM JST
0xffb4
* Sun 05 Oct 2014 01:24:00 AM JST
0xffb5
* Sun 05 Oct 2014 01:24:00 AM JST
0xffb6
* Sun 05 Oct 2014 01:24:00 AM JST
0xffb7
* Sun 05 Oct 2014 01:24:00 AM JST
0xffb8
* Sun 05 Oct 2014 01:24:01 AM JST
0xffb9
* Sun 05 Oct 2014 01:24:01 AM JST
0xffbe
* Sun 05 Oct 2014 01:24:01 AM JST
0xffbf
* Sun 05 Oct 2014 01:24:01 AM JST
0xffc0
* Sun 05 Oct 2014 01:24:01 AM JST
0xffc1
* Sun 05 Oct 2014 01:24:01 AM JST
0xffc2
* Sun 05 Oct 2014 01:24:01 AM JST
0xffc3
* Sun 05 Oct 2014 01:24:01 AM JST
0xffc4
* Sun 05 Oct 2014 01:24:01 AM JST
0xffc5
* Sun 05 Oct 2014 01:24:01 AM JST
0xffc6
* Sun 05 Oct 2014 01:24:01 AM JST
0xffc7
* Sun 05 Oct 2014 01:24:02 AM JST
0xffc8
* Sun 05 Oct 2014 01:24:02 AM JST
0xffc8
* Sun 05 Oct 2014 01:24:02 AM JST
0xffc9
* Sun 05 Oct 2014 01:24:02 AM JST
0xffc9
* Sun 05 Oct 2014 01:24:02 AM JST
0xffca
* Sun 05 Oct 2014 01:24:02 AM JST
0xffca
* Sun 05 Oct 2014 01:24:02 AM JST
0xffcb
* Sun 05 Oct 2014 01:24:02 AM JST
0xffcb
* Sun 05 Oct 2014 01:24:02 AM JST
0xffcc
* Sun 05 Oct 2014 01:24:02 AM JST
0xffcc
* Sun 05 Oct 2014 01:24:02 AM JST
0xffcd
* Sun 05 Oct 2014 01:24:02 AM JST
0xffcd
* Sun 05 Oct 2014 01:24:03 AM JST
0xffce
* Sun 05 Oct 2014 01:24:03 AM JST
0xffce
* Sun 05 Oct 2014 01:24:03 AM JST
0xffcf
* Sun 05 Oct 2014 01:24:03 AM JST
0xffcf
* Sun 05 Oct 2014 01:24:03 AM JST
0xffd0
* Sun 05 Oct 2014 01:24:03 AM JST
0xffd0
* Sun 05 Oct 2014 01:24:03 AM JST
0xffd1
* Sun 05 Oct 2014 01:24:03 AM JST
0xffd1
* Sun 05 Oct 2014 01:24:03 AM JST
0xffd2
* Sun 05 Oct 2014 01:24:03 AM JST
0xffd2
* Sun 05 Oct 2014 01:24:03 AM JST
0xffd3
* Sun 05 Oct 2014 01:24:03 AM JST
0xffd3
* Sun 05 Oct 2014 01:24:04 AM JST
0xffd4
* Sun 05 Oct 2014 01:24:04 AM JST
0xffd4
* Sun 05 Oct 2014 01:24:04 AM JST
0xffd5
* Sun 05 Oct 2014 01:24:04 AM JST
0xffd5
* Sun 05 Oct 2014 01:24:04 AM JST
0xffd6
* Sun 05 Oct 2014 01:24:04 AM JST
0xffd6
* Sun 05 Oct 2014 01:24:04 AM JST
0xffd7
* Sun 05 Oct 2014 01:24:04 AM JST
0xffd7
* Sun 05 Oct 2014 01:24:04 AM JST
0xffd8
* Sun 05 Oct 2014 01:24:05 AM JST
0xffd8
* Sun 05 Oct 2014 01:24:05 AM JST
0xffd9
* Sun 05 Oct 2014 01:24:05 AM JST
0xffd9
* Sun 05 Oct 2014 01:24:05 AM JST
0xffda
* Sun 05 Oct 2014 01:24:05 AM JST
0xffda
* Sun 05 Oct 2014 01:24:05 AM JST
0xffdb
* Sun 05 Oct 2014 01:24:05 AM JST
0xffdb
* Sun 05 Oct 2014 01:24:05 AM JST
0xffdc
* Sun 05 Oct 2014 01:24:05 AM JST
0xffdc
* Sun 05 Oct 2014 01:24:05 AM JST
0xffdd
* Sun 05 Oct 2014 01:24:05 AM JST
0xffdd
* Sun 05 Oct 2014 01:24:06 AM JST
0xffde
* Sun 05 Oct 2014 01:24:06 AM JST
0xffde
* Sun 05 Oct 2014 01:24:06 AM JST
0xffdf
* Sun 05 Oct 2014 01:24:06 AM JST
0xffdf
* Sun 05 Oct 2014 01:24:06 AM JST
0xffe0
* Sun 05 Oct 2014 01:24:06 AM JST
0xffe0
* Sun 05 Oct 2014 01:24:06 AM JST
0xffe1
* Sun 05 Oct 2014 01:24:06 AM JST
0xffe2
* Sun 05 Oct 2014 01:24:06 AM JST
0xffe3
* Sun 05 Oct 2014 01:24:06 AM JST
0xffe4
* Sun 05 Oct 2014 01:24:06 AM JST
0xffe5
* Sun 05 Oct 2014 01:24:07 AM JST
0xffe6
* Sun 05 Oct 2014 01:24:07 AM JST
0xffe7
* Sun 05 Oct 2014 01:24:07 AM JST
0xffe8
* Sun 05 Oct 2014 01:24:07 AM JST
0xffe9
* Sun 05 Oct 2014 01:24:07 AM JST
0xffea
* Sun 05 Oct 2014 01:24:07 AM JST
0xffeb
* Sun 05 Oct 2014 01:24:07 AM JST
0xffec
* Sun 05 Oct 2014 01:24:07 AM JST
0xffed
* Sun 05 Oct 2014 01:24:07 AM JST
0xffee
* Sun 05 Oct 2014 01:24:07 AM JST
0xfe01
* Sun 05 Oct 2014 01:24:07 AM JST
0xfe02
* Sun 05 Oct 2014 01:24:08 AM JST
0xfe03
* Sun 05 Oct 2014 01:24:08 AM JST
0xfe04
* Sun 05 Oct 2014 01:24:08 AM JST
0xfe05
* Sun 05 Oct 2014 01:24:08 AM JST
0xfe11
* Sun 05 Oct 2014 01:24:08 AM JST
0xfe12
* Sun 05 Oct 2014 01:24:08 AM JST
0xfe13
* Sun 05 Oct 2014 01:24:08 AM JST
0xff7e
* Sun 05 Oct 2014 01:24:08 AM JST
0xfe06
* Sun 05 Oct 2014 01:24:08 AM JST
0xfe07
* Sun 05 Oct 2014 01:24:08 AM JST
0xfe08
* Sun 05 Oct 2014 01:24:08 AM JST
0xfe09
* Sun 05 Oct 2014 01:24:08 AM JST
0xfe0a
* Sun 05 Oct 2014 01:24:09 AM JST
0xfe0b
* Sun 05 Oct 2014 01:24:09 AM JST
0xfe0c
* Sun 05 Oct 2014 01:24:09 AM JST
0xfe0d
* Sun 05 Oct 2014 01:24:09 AM JST
0xfe0e
* Sun 05 Oct 2014 01:24:09 AM JST
0xfe0f
* Sun 05 Oct 2014 01:24:09 AM JST
0xfe20
* Sun 05 Oct 2014 01:24:09 AM JST
0xfe21
* Sun 05 Oct 2014 01:24:09 AM JST
0xfe22
* Sun 05 Oct 2014 01:24:09 AM JST
0xfe23
* Sun 05 Oct 2014 01:24:09 AM JST
0xfe24
* Sun 05 Oct 2014 01:24:09 AM JST
0xfe25
* Sun 05 Oct 2014 01:24:09 AM JST
0xfe26
* Sun 05 Oct 2014 01:24:10 AM JST
0xfe27
* Sun 05 Oct 2014 01:24:10 AM JST
0xfe28
* Sun 05 Oct 2014 01:24:10 AM JST
0xfe29
* Sun 05 Oct 2014 01:24:10 AM JST
0xfe2a
* Sun 05 Oct 2014 01:24:10 AM JST
0xfe2b
* Sun 05 Oct 2014 01:24:10 AM JST
0xfe2c
* Sun 05 Oct 2014 01:24:10 AM JST
0xfe2d
* Sun 05 Oct 2014 01:24:10 AM JST
0xfe2e
* Sun 05 Oct 2014 01:24:10 AM JST
0xfe2f
* Sun 05 Oct 2014 01:24:10 AM JST
0xfe30
* Sun 05 Oct 2014 01:24:10 AM JST
0xfe31
* Sun 05 Oct 2014 01:24:11 AM JST
0xfe32
* Sun 05 Oct 2014 01:24:11 AM JST
0xfe33
* Sun 05 Oct 2014 01:24:11 AM JST
0xfe34
* Sun 05 Oct 2014 01:24:11 AM JST
0xfe50
* Sun 05 Oct 2014 01:24:11 AM JST
0xfe51
* Sun 05 Oct 2014 01:24:11 AM JST
0xfe52
* Sun 05 Oct 2014 01:24:11 AM JST
0xfe53
* Sun 05 Oct 2014 01:24:11 AM JST
0xfe53
* Sun 05 Oct 2014 01:24:11 AM JST
0xfe54
* Sun 05 Oct 2014 01:24:11 AM JST
0xfe55
* Sun 05 Oct 2014 01:24:11 AM JST
0xfe56
* Sun 05 Oct 2014 01:24:11 AM JST
0xfe57
* Sun 05 Oct 2014 01:24:12 AM JST
0xfe58
* Sun 05 Oct 2014 01:24:12 AM JST
0xfe59
* Sun 05 Oct 2014 01:24:12 AM JST
0xfe5a
* Sun 05 Oct 2014 01:24:12 AM JST
0xfe5b
* Sun 05 Oct 2014 01:24:12 AM JST
0xfe5c
* Sun 05 Oct 2014 01:24:12 AM JST
0xfe5d
* Sun 05 Oct 2014 01:24:12 AM JST
0xfe5e
* Sun 05 Oct 2014 01:24:12 AM JST
0xfe5f
* Sun 05 Oct 2014 01:24:12 AM JST
0xfe60
* Sun 05 Oct 2014 01:24:12 AM JST
0xfe61
* Sun 05 Oct 2014 01:24:12 AM JST
0xfe62
* Sun 05 Oct 2014 01:24:12 AM JST
0xfe63
* Sun 05 Oct 2014 01:24:13 AM JST
0xfe64
* Sun 05 Oct 2014 01:24:13 AM JST
0xfe64
* Sun 05 Oct 2014 01:24:13 AM JST
0xfe65
* Sun 05 Oct 2014 01:24:13 AM JST
0xfe65
* Sun 05 Oct 2014 01:24:13 AM JST
0xfe66
* Sun 05 Oct 2014 01:24:13 AM JST
0xfe67
* Sun 05 Oct 2014 01:24:13 AM JST
0xfe68
* Sun 05 Oct 2014 01:24:13 AM JST
0xfe69
* Sun 05 Oct 2014 01:24:13 AM JST
0xfe6a
* Sun 05 Oct 2014 01:24:14 AM JST
0xfe6b
* Sun 05 Oct 2014 01:24:14 AM JST
0xfe6c
* Sun 05 Oct 2014 01:24:14 AM JST
0xfe6d
* Sun 05 Oct 2014 01:24:14 AM JST
0xfe6e
* Sun 05 Oct 2014 01:24:14 AM JST
0xfe6f
* Sun 05 Oct 2014 01:24:14 AM JST
0xfe80
* Sun 05 Oct 2014 01:24:14 AM JST
0xfe81
* Sun 05 Oct 2014 01:24:14 AM JST
0xfe82
* Sun 05 Oct 2014 01:24:14 AM JST
0xfe83
* Sun 05 Oct 2014 01:24:15 AM JST
0xfe84
* Sun 05 Oct 2014 01:24:15 AM JST
0xfe85
* Sun 05 Oct 2014 01:24:15 AM JST
0xfe86
* Sun 05 Oct 2014 01:24:15 AM JST
0xfe87
* Sun 05 Oct 2014 01:24:15 AM JST
0xfe88
* Sun 05 Oct 2014 01:24:15 AM JST
0xfe89
* Sun 05 Oct 2014 01:24:15 AM JST
0xfe8a
* Sun 05 Oct 2014 01:24:15 AM JST
0xfe8b
* Sun 05 Oct 2014 01:24:15 AM JST
0xfe8c
* Sun 05 Oct 2014 01:24:15 AM JST
0xfed0
* Sun 05 Oct 2014 01:24:15 AM JST
0xfed1
* Sun 05 Oct 2014 01:24:15 AM JST
0xfed2
* Sun 05 Oct 2014 01:24:16 AM JST
0xfed4
* Sun 05 Oct 2014 01:24:16 AM JST
0xfed5
* Sun 05 Oct 2014 01:24:16 AM JST
0xfe70
* Sun 05 Oct 2014 01:24:16 AM JST
0xfe71
* Sun 05 Oct 2014 01:24:16 AM JST
0xfe72
* Sun 05 Oct 2014 01:24:16 AM JST
0xfe73
* Sun 05 Oct 2014 01:24:16 AM JST
0xfe74
* Sun 05 Oct 2014 01:24:16 AM JST
0xfe75
* Sun 05 Oct 2014 01:24:16 AM JST
0xfe76
* Sun 05 Oct 2014 01:24:16 AM JST
0xfe77
* Sun 05 Oct 2014 01:24:16 AM JST
0xfe78
* Sun 05 Oct 2014 01:24:16 AM JST
0xfe79
* Sun 05 Oct 2014 01:24:17 AM JST
0xfe7a
* Sun 05 Oct 2014 01:24:17 AM JST
0xfee0
* Sun 05 Oct 2014 01:24:17 AM JST
0xfee1
* Sun 05 Oct 2014 01:24:17 AM JST
0xfee2
* Sun 05 Oct 2014 01:24:17 AM JST
0xfee3
* Sun 05 Oct 2014 01:24:17 AM JST
0xfee4
* Sun 05 Oct 2014 01:24:17 AM JST
0xfee5
* Sun 05 Oct 2014 01:24:17 AM JST
0xfee6
* Sun 05 Oct 2014 01:24:17 AM JST
0xfee7
* Sun 05 Oct 2014 01:24:17 AM JST
0xfee8
* Sun 05 Oct 2014 01:24:17 AM JST
0xfee9
* Sun 05 Oct 2014 01:24:17 AM JST
0xfeea
* Sun 05 Oct 2014 01:24:18 AM JST
0xfeeb
* Sun 05 Oct 2014 01:24:18 AM JST
0xfeec
* Sun 05 Oct 2014 01:24:18 AM JST
0xfeed
* Sun 05 Oct 2014 01:24:18 AM JST
0xfeee
* Sun 05 Oct 2014 01:24:18 AM JST
0xfeef
* Sun 05 Oct 2014 01:24:18 AM JST
0xfef0
* Sun 05 Oct 2014 01:24:18 AM JST
0xfef1
* Sun 05 Oct 2014 01:24:18 AM JST
0xfef2
* Sun 05 Oct 2014 01:24:18 AM JST
0xfef3
* Sun 05 Oct 2014 01:24:18 AM JST
0xfef4
* Sun 05 Oct 2014 01:24:18 AM JST
0xfef5
* Sun 05 Oct 2014 01:24:19 AM JST
0xfef6
* Sun 05 Oct 2014 01:24:19 AM JST
0xfef7
* Sun 05 Oct 2014 01:24:19 AM JST
0xfef8
* Sun 05 Oct 2014 01:24:19 AM JST
0xfefd
* Sun 05 Oct 2014 01:24:19 AM JST
0xfef9
* Sun 05 Oct 2014 01:24:19 AM JST
0xfefa
* Sun 05 Oct 2014 01:24:19 AM JST
0xfefb
* Sun 05 Oct 2014 01:24:19 AM JST
0xfefc
* Sun 05 Oct 2014 01:24:19 AM JST
0xfea0
* Sun 05 Oct 2014 01:24:19 AM JST
0xfea1
* Sun 05 Oct 2014 01:24:19 AM JST
0xfea2
* Sun 05 Oct 2014 01:24:20 AM JST
0xfea3
* Sun 05 Oct 2014 01:24:20 AM JST
0xfea4
* Sun 05 Oct 2014 01:24:20 AM JST
0xfea5
* Sun 05 Oct 2014 01:24:20 AM JST
0xfd01
* Sun 05 Oct 2014 01:24:20 AM JST
0xfd02
* Sun 05 Oct 2014 01:24:20 AM JST
0xfd03
* Sun 05 Oct 2014 01:24:20 AM JST
0xfd04
* Sun 05 Oct 2014 01:24:20 AM JST
0xfd05
* Sun 05 Oct 2014 01:24:20 AM JST
0xfd06
* Sun 05 Oct 2014 01:24:20 AM JST
0xfd07
* Sun 05 Oct 2014 01:24:20 AM JST
0xfd08
* Sun 05 Oct 2014 01:24:20 AM JST
0xfd09
* Sun 05 Oct 2014 01:24:21 AM JST
0xfd0a
* Sun 05 Oct 2014 01:24:21 AM JST
0xfd0b
* Sun 05 Oct 2014 01:24:21 AM JST
0xfd0c
* Sun 05 Oct 2014 01:24:21 AM JST
0xfd0d
* Sun 05 Oct 2014 01:24:21 AM JST
0xfd0e
* Sun 05 Oct 2014 01:24:21 AM JST
0xfd0f
* Sun 05 Oct 2014 01:24:21 AM JST
0xfd10
* Sun 05 Oct 2014 01:24:21 AM JST
0xfd11
* Sun 05 Oct 2014 01:24:21 AM JST
0xfd12
* Sun 05 Oct 2014 01:24:21 AM JST
0xfd13
* Sun 05 Oct 2014 01:24:21 AM JST
0xfd14
* Sun 05 Oct 2014 01:24:22 AM JST
0xfd15
* Sun 05 Oct 2014 01:24:22 AM JST
0xfd16
* Sun 05 Oct 2014 01:24:22 AM JST
0xfd17
* Sun 05 Oct 2014 01:24:22 AM JST
0xfd18
* Sun 05 Oct 2014 01:24:22 AM JST
0xfd19
* Sun 05 Oct 2014 01:24:22 AM JST
0xfd1a
* Sun 05 Oct 2014 01:24:22 AM JST
0xfd1b
* Sun 05 Oct 2014 01:24:22 AM JST
0xfd1c
* Sun 05 Oct 2014 01:24:22 AM JST
0xfd1d
* Sun 05 Oct 2014 01:24:36 AM JST
0xfd1e
* Sun 05 Oct 2014 01:24:36 AM JST
0x0020
* Sun 05 Oct 2014 01:24:36 AM JST
0x0021
* Sun 05 Oct 2014 01:24:36 AM JST
0x0022
* Sun 05 Oct 2014 01:24:36 AM JST
0x0023
* Sun 05 Oct 2014 01:24:36 AM JST
0x0024
* Sun 05 Oct 2014 01:24:36 AM JST
0x0025
* Sun 05 Oct 2014 01:24:37 AM JST
0x0026
* Sun 05 Oct 2014 01:24:37 AM JST
0x0027
* Sun 05 Oct 2014 01:24:37 AM JST
0x0027
* Sun 05 Oct 2014 01:24:37 AM JST
0x0028
* Sun 05 Oct 2014 01:24:37 AM JST
0x0029
* Sun 05 Oct 2014 01:24:37 AM JST
0x002a
* Sun 05 Oct 2014 01:24:37 AM JST
0x002b
* Sun 05 Oct 2014 01:24:37 AM JST
0x002c
* Sun 05 Oct 2014 01:24:37 AM JST
0x002d
* Sun 05 Oct 2014 01:24:37 AM JST
0x002e
* Sun 05 Oct 2014 01:24:37 AM JST
0x002f
* Sun 05 Oct 2014 01:24:37 AM JST
0x0030
* Sun 05 Oct 2014 01:24:38 AM JST
0x0031
* Sun 05 Oct 2014 01:24:38 AM JST
0x0032
* Sun 05 Oct 2014 01:24:38 AM JST
0x0033
* Sun 05 Oct 2014 01:24:38 AM JST
0x0034
* Sun 05 Oct 2014 01:24:38 AM JST
0x0035
* Sun 05 Oct 2014 01:24:38 AM JST
0x0036
* Sun 05 Oct 2014 01:24:38 AM JST
0x0037
* Sun 05 Oct 2014 01:24:38 AM JST
0x0038
* Sun 05 Oct 2014 01:24:38 AM JST
0x0039
* Sun 05 Oct 2014 01:24:38 AM JST
0x003a
* Sun 05 Oct 2014 01:24:38 AM JST
0x003b
* Sun 05 Oct 2014 01:24:39 AM JST
0x003c
* Sun 05 Oct 2014 01:24:39 AM JST
0x003d
* Sun 05 Oct 2014 01:24:39 AM JST
0x003e
* Sun 05 Oct 2014 01:24:39 AM JST
0x003f
* Sun 05 Oct 2014 01:24:39 AM JST
0x0040
* Sun 05 Oct 2014 01:24:39 AM JST
0x0041
* Sun 05 Oct 2014 01:24:39 AM JST
0x0042
* Sun 05 Oct 2014 01:24:39 AM JST
0x0043
* Sun 05 Oct 2014 01:24:39 AM JST
0x0044
* Sun 05 Oct 2014 01:24:39 AM JST
0x0045
* Sun 05 Oct 2014 01:24:39 AM JST
0x0046
* Sun 05 Oct 2014 01:24:40 AM JST
0x0047
* Sun 05 Oct 2014 01:24:40 AM JST
0x0048
* Sun 05 Oct 2014 01:24:40 AM JST
0x0049
* Sun 05 Oct 2014 01:24:40 AM JST
0x004a
* Sun 05 Oct 2014 01:24:40 AM JST
0x004b
* Sun 05 Oct 2014 01:24:40 AM JST
0x004c
* Sun 05 Oct 2014 01:24:40 AM JST
0x004d
* Sun 05 Oct 2014 01:24:40 AM JST
0x004e
* Sun 05 Oct 2014 01:24:40 AM JST
0x004f
* Sun 05 Oct 2014 01:24:40 AM JST
0x0050
* Sun 05 Oct 2014 01:24:41 AM JST
0x0051
* Sun 05 Oct 2014 01:24:41 AM JST
0x0052
* Sun 05 Oct 2014 01:24:41 AM JST
0x0053
* Sun 05 Oct 2014 01:24:41 AM JST
0x0054
* Sun 05 Oct 2014 01:24:41 AM JST
0x0055
* Sun 05 Oct 2014 01:24:41 AM JST
0x0056
* Sun 05 Oct 2014 01:24:41 AM JST
0x0057
* Sun 05 Oct 2014 01:24:41 AM JST
0x0058
* Sun 05 Oct 2014 01:24:41 AM JST
0x0059
* Sun 05 Oct 2014 01:24:41 AM JST
0x005a
* Sun 05 Oct 2014 01:24:41 AM JST
0x005b
* Sun 05 Oct 2014 01:24:42 AM JST
0x005c
* Sun 05 Oct 2014 01:24:42 AM JST
0x005d
* Sun 05 Oct 2014 01:24:42 AM JST
0x005e
* Sun 05 Oct 2014 01:24:42 AM JST
0x005f
* Sun 05 Oct 2014 01:24:42 AM JST
0x0060
* Sun 05 Oct 2014 01:24:42 AM JST
0x0060
* Sun 05 Oct 2014 01:24:42 AM JST
0x0061
* Sun 05 Oct 2014 01:24:42 AM JST
0x0062
* Sun 05 Oct 2014 01:24:42 AM JST
0x0063
* Sun 05 Oct 2014 01:24:42 AM JST
0x0064
* Sun 05 Oct 2014 01:24:42 AM JST
0x0065
* Sun 05 Oct 2014 01:24:42 AM JST
0x0066
* Sun 05 Oct 2014 01:24:43 AM JST
0x0067
* Sun 05 Oct 2014 01:24:43 AM JST
0x0068
* Sun 05 Oct 2014 01:24:43 AM JST
0x0069
* Sun 05 Oct 2014 01:24:43 AM JST
0x006a
* Sun 05 Oct 2014 01:24:43 AM JST
0x006b
* Sun 05 Oct 2014 01:24:43 AM JST
0x006c
* Sun 05 Oct 2014 01:24:43 AM JST
0x006d
* Sun 05 Oct 2014 01:24:43 AM JST
0x006e
* Sun 05 Oct 2014 01:24:43 AM JST
0x006f
* Sun 05 Oct 2014 01:24:43 AM JST
0x0070
* Sun 05 Oct 2014 01:24:43 AM JST
0x0071
* Sun 05 Oct 2014 01:24:44 AM JST
0x0072
* Sun 05 Oct 2014 01:24:44 AM JST
0x0073
* Sun 05 Oct 2014 01:24:44 AM JST
0x0074
* Sun 05 Oct 2014 01:24:44 AM JST
0x0075
* Sun 05 Oct 2014 01:24:44 AM JST
0x0076
* Sun 05 Oct 2014 01:24:44 AM JST
0x0077
* Sun 05 Oct 2014 01:24:44 AM JST
0x0078
* Sun 05 Oct 2014 01:24:44 AM JST
0x0079
* Sun 05 Oct 2014 01:24:45 AM JST
0x007a
* Sun 05 Oct 2014 01:24:45 AM JST
0x007b
* Sun 05 Oct 2014 01:24:45 AM JST
0x007c
* Sun 05 Oct 2014 01:24:45 AM JST
0x007d
* Sun 05 Oct 2014 01:24:45 AM JST
0x007e
* Sun 05 Oct 2014 01:24:45 AM JST
0x00a0
* Sun 05 Oct 2014 01:24:45 AM JST
0x00a1
* Sun 05 Oct 2014 01:24:45 AM JST
0x00a2
* Sun 05 Oct 2014 01:24:45 AM JST
0x00a3
* Sun 05 Oct 2014 01:24:45 AM JST
0x00a4
* Sun 05 Oct 2014 01:24:45 AM JST
0x00a5
* Sun 05 Oct 2014 01:24:46 AM JST
0x00a6
* Sun 05 Oct 2014 01:24:46 AM JST
0x00a7
* Sun 05 Oct 2014 01:24:46 AM JST
0x00a8
* Sun 05 Oct 2014 01:24:46 AM JST
0x00a9
* Sun 05 Oct 2014 01:24:46 AM JST
0x00aa
* Sun 05 Oct 2014 01:24:46 AM JST
0x00ab
* Sun 05 Oct 2014 01:24:46 AM JST
0x00ac
* Sun 05 Oct 2014 01:24:46 AM JST
0x00ad
* Sun 05 Oct 2014 01:24:46 AM JST
0x00ae
* Sun 05 Oct 2014 01:24:46 AM JST
0x00af
* Sun 05 Oct 2014 01:24:46 AM JST
0x00b0
* Sun 05 Oct 2014 01:24:47 AM JST
0x00b1
* Sun 05 Oct 2014 01:24:47 AM JST
0x00b2
* Sun 05 Oct 2014 01:24:47 AM JST
0x00b3
* Sun 05 Oct 2014 01:24:47 AM JST
0x00b4
* Sun 05 Oct 2014 01:24:47 AM JST
0x00b5
* Sun 05 Oct 2014 01:24:47 AM JST
0x00b6
* Sun 05 Oct 2014 01:24:47 AM JST
0x00b7
* Sun 05 Oct 2014 01:24:47 AM JST
0x00b8
* Sun 05 Oct 2014 01:24:47 AM JST
0x00b9
* Sun 05 Oct 2014 01:24:47 AM JST
0x00ba
* Sun 05 Oct 2014 01:24:47 AM JST
0x00bb
* Sun 05 Oct 2014 01:24:47 AM JST
0x00bc
* Sun 05 Oct 2014 01:24:48 AM JST
0x00bd
* Sun 05 Oct 2014 01:24:48 AM JST
0x00be
* Sun 05 Oct 2014 01:24:48 AM JST
0x00bf
* Sun 05 Oct 2014 01:24:48 AM JST
0x00c0
* Sun 05 Oct 2014 01:24:48 AM JST
0x00c1
* Sun 05 Oct 2014 01:24:48 AM JST
0x00c2
* Sun 05 Oct 2014 01:24:48 AM JST
0x00c3
* Sun 05 Oct 2014 01:24:48 AM JST
0x00c4
* Sun 05 Oct 2014 01:24:48 AM JST
0x00c5
* Sun 05 Oct 2014 01:24:48 AM JST
0x00c6
* Sun 05 Oct 2014 01:24:48 AM JST
0x00c7
* Sun 05 Oct 2014 01:24:49 AM JST
0x00c8
* Sun 05 Oct 2014 01:24:49 AM JST
0x00c9
* Sun 05 Oct 2014 01:24:49 AM JST
0x00ca
* Sun 05 Oct 2014 01:24:49 AM JST
0x00cb
* Sun 05 Oct 2014 01:24:49 AM JST
0x00cc
* Sun 05 Oct 2014 01:24:49 AM JST
0x00cd
* Sun 05 Oct 2014 01:24:49 AM JST
0x00ce
* Sun 05 Oct 2014 01:24:49 AM JST
0x00cf
* Sun 05 Oct 2014 01:24:49 AM JST
0x00d0
* Sun 05 Oct 2014 01:24:49 AM JST
0x00d0
* Sun 05 Oct 2014 01:24:49 AM JST
0x00d1
* Sun 05 Oct 2014 01:24:49 AM JST
0x00d2
* Sun 05 Oct 2014 01:24:49 AM JST
0x00d3
* Sun 05 Oct 2014 01:24:50 AM JST
0x00d4
* Sun 05 Oct 2014 01:24:50 AM JST
0x00d5
* Sun 05 Oct 2014 01:24:50 AM JST
0x00d6
* Sun 05 Oct 2014 01:24:50 AM JST
0x00d7
* Sun 05 Oct 2014 01:24:50 AM JST
0x00d8
* Sun 05 Oct 2014 01:24:50 AM JST
0x00d8
* Sun 05 Oct 2014 01:24:50 AM JST
0x00d9
* Sun 05 Oct 2014 01:24:50 AM JST
0x00da
* Sun 05 Oct 2014 01:24:50 AM JST
0x00db
* Sun 05 Oct 2014 01:24:50 AM JST
0x00dc
* Sun 05 Oct 2014 01:24:50 AM JST
0x00dd
* Sun 05 Oct 2014 01:24:51 AM JST
0x00de
* Sun 05 Oct 2014 01:24:51 AM JST
0x00de
* Sun 05 Oct 2014 01:24:51 AM JST
0x00df
* Sun 05 Oct 2014 01:24:51 AM JST
0x00e0
* Sun 05 Oct 2014 01:24:51 AM JST
0x00e1
* Sun 05 Oct 2014 01:24:51 AM JST
0x00e2
* Sun 05 Oct 2014 01:24:51 AM JST
0x00e3
* Sun 05 Oct 2014 01:24:51 AM JST
0x00e4
* Sun 05 Oct 2014 01:24:51 AM JST
0x00e5
* Sun 05 Oct 2014 01:24:51 AM JST
0x00e6
* Sun 05 Oct 2014 01:24:51 AM JST
0x00e7
* Sun 05 Oct 2014 01:24:51 AM JST
0x00e8
* Sun 05 Oct 2014 01:24:51 AM JST
0x00e9
* Sun 05 Oct 2014 01:24:52 AM JST
0x00ea
* Sun 05 Oct 2014 01:24:52 AM JST
0x00eb
* Sun 05 Oct 2014 01:24:52 AM JST
0x00ec
* Sun 05 Oct 2014 01:24:52 AM JST
0x00ed
* Sun 05 Oct 2014 01:24:52 AM JST
0x00ee
* Sun 05 Oct 2014 01:24:52 AM JST
0x00ef
* Sun 05 Oct 2014 01:24:52 AM JST
0x00f0
* Sun 05 Oct 2014 01:24:52 AM JST
0x00f1
* Sun 05 Oct 2014 01:24:52 AM JST
0x00f2
* Sun 05 Oct 2014 01:24:52 AM JST
0x00f3
* Sun 05 Oct 2014 01:24:52 AM JST
0x00f4
* Sun 05 Oct 2014 01:24:53 AM JST
0x00f5
* Sun 05 Oct 2014 01:24:53 AM JST
0x00f6
* Sun 05 Oct 2014 01:24:53 AM JST
0x00f7
* Sun 05 Oct 2014 01:24:53 AM JST
0x00f8
* Sun 05 Oct 2014 01:24:53 AM JST
0x00f8
* Sun 05 Oct 2014 01:24:53 AM JST
0x00f9
* Sun 05 Oct 2014 01:24:53 AM JST
0x00fa
* Sun 05 Oct 2014 01:24:53 AM JST
0x00fb
* Sun 05 Oct 2014 01:24:53 AM JST
0x00fc
* Sun 05 Oct 2014 01:24:53 AM JST
0x00fd
* Sun 05 Oct 2014 01:24:53 AM JST
0x00fe
* Sun 05 Oct 2014 01:24:53 AM JST
0x00ff
* Sun 05 Oct 2014 01:24:54 AM JST
0x01a1
* Sun 05 Oct 2014 01:24:54 AM JST
0x01a2
* Sun 05 Oct 2014 01:24:54 AM JST
0x01a3
* Sun 05 Oct 2014 01:24:54 AM JST
0x01a5
* Sun 05 Oct 2014 01:24:54 AM JST
0x01a6
* Sun 05 Oct 2014 01:24:54 AM JST
0x01a9
* Sun 05 Oct 2014 01:24:54 AM JST
0x01aa
* Sun 05 Oct 2014 01:24:54 AM JST
0x01ab
* Sun 05 Oct 2014 01:24:55 AM JST
0x01ac
* Sun 05 Oct 2014 01:24:55 AM JST
0x01ae
* Sun 05 Oct 2014 01:24:55 AM JST
0x01af
* Sun 05 Oct 2014 01:24:55 AM JST
0x01b1
* Sun 05 Oct 2014 01:24:55 AM JST
0x01b2
* Sun 05 Oct 2014 01:24:55 AM JST
0x01b3
* Sun 05 Oct 2014 01:24:55 AM JST
0x01b5
* Sun 05 Oct 2014 01:24:55 AM JST
0x01b6
* Sun 05 Oct 2014 01:24:55 AM JST
0x01b7
* Sun 05 Oct 2014 01:24:55 AM JST
0x01b9
* Sun 05 Oct 2014 01:24:55 AM JST
0x01ba
* Sun 05 Oct 2014 01:24:55 AM JST
0x01bb
* Sun 05 Oct 2014 01:24:56 AM JST
0x01bc
* Sun 05 Oct 2014 01:24:56 AM JST
0x01bd
* Sun 05 Oct 2014 01:24:56 AM JST
0x01be
* Sun 05 Oct 2014 01:24:56 AM JST
0x01bf
* Sun 05 Oct 2014 01:24:56 AM JST
0x01c0
* Sun 05 Oct 2014 01:24:56 AM JST
0x01c3
* Sun 05 Oct 2014 01:24:56 AM JST
0x01c5
* Sun 05 Oct 2014 01:24:56 AM JST
0x01c6
* Sun 05 Oct 2014 01:24:56 AM JST
0x01c8
* Sun 05 Oct 2014 01:24:56 AM JST
0x01ca
* Sun 05 Oct 2014 01:24:56 AM JST
0x01cc
* Sun 05 Oct 2014 01:24:57 AM JST
0x01cf
* Sun 05 Oct 2014 01:24:57 AM JST
0x01d0
* Sun 05 Oct 2014 01:24:57 AM JST
0x01d1
* Sun 05 Oct 2014 01:24:57 AM JST
0x01d2
* Sun 05 Oct 2014 01:24:57 AM JST
0x01d5
* Sun 05 Oct 2014 01:24:57 AM JST
0x01d8
* Sun 05 Oct 2014 01:24:57 AM JST
0x01d9
* Sun 05 Oct 2014 01:24:57 AM JST
0x01db
* Sun 05 Oct 2014 01:24:57 AM JST
0x01de
* Sun 05 Oct 2014 01:24:57 AM JST
0x01e0
* Sun 05 Oct 2014 01:24:57 AM JST
0x01e3
* Sun 05 Oct 2014 01:24:57 AM JST
0x01e5
* Sun 05 Oct 2014 01:24:58 AM JST
0x01e6
* Sun 05 Oct 2014 01:24:58 AM JST
0x01e8
* Sun 05 Oct 2014 01:24:58 AM JST
0x01ea
* Sun 05 Oct 2014 01:24:58 AM JST
0x01ec
* Sun 05 Oct 2014 01:24:58 AM JST
0x01ef
* Sun 05 Oct 2014 01:24:58 AM JST
0x01f0
* Sun 05 Oct 2014 01:24:58 AM JST
0x01f1
* Sun 05 Oct 2014 01:24:58 AM JST
0x01f2
* Sun 05 Oct 2014 01:24:58 AM JST
0x01f5
* Sun 05 Oct 2014 01:24:58 AM JST
0x01f8
* Sun 05 Oct 2014 01:24:58 AM JST
0x01f9
* Sun 05 Oct 2014 01:24:59 AM JST
0x01fb
* Sun 05 Oct 2014 01:24:59 AM JST
0x01fe
* Sun 05 Oct 2014 01:24:59 AM JST
0x01ff
* Sun 05 Oct 2014 01:24:59 AM JST
0x02a1
* Sun 05 Oct 2014 01:24:59 AM JST
0x02a6
* Sun 05 Oct 2014 01:24:59 AM JST
0x02a9
* Sun 05 Oct 2014 01:24:59 AM JST
0x02ab
* Sun 05 Oct 2014 01:24:59 AM JST
0x02ac
* Sun 05 Oct 2014 01:24:59 AM JST
0x02b1
* Sun 05 Oct 2014 01:24:59 AM JST
0x02b6
* Sun 05 Oct 2014 01:24:59 AM JST
0x02b9
* Sun 05 Oct 2014 01:24:59 AM JST
0x02bb
* Sun 05 Oct 2014 01:25:00 AM JST
0x02bc
* Sun 05 Oct 2014 01:25:00 AM JST
0x02c5
* Sun 05 Oct 2014 01:25:00 AM JST
0x02c6
* Sun 05 Oct 2014 01:25:00 AM JST
0x02d5
* Sun 05 Oct 2014 01:25:00 AM JST
0x02d8
* Sun 05 Oct 2014 01:25:00 AM JST
0x02dd
* Sun 05 Oct 2014 01:25:00 AM JST
0x02de
* Sun 05 Oct 2014 01:25:00 AM JST
0x02e5
* Sun 05 Oct 2014 01:25:00 AM JST
0x02e6
* Sun 05 Oct 2014 01:25:00 AM JST
0x02f5
* Sun 05 Oct 2014 01:25:00 AM JST
0x02f8
* Sun 05 Oct 2014 01:25:01 AM JST
0x02fd
* Sun 05 Oct 2014 01:25:01 AM JST
0x02fe
* Sun 05 Oct 2014 01:25:01 AM JST
0x03a2
* Sun 05 Oct 2014 01:25:01 AM JST
0x03a2
* Sun 05 Oct 2014 01:25:01 AM JST
0x03a3
* Sun 05 Oct 2014 01:25:01 AM JST
0x03a5
* Sun 05 Oct 2014 01:25:01 AM JST
0x03a6
* Sun 05 Oct 2014 01:25:01 AM JST
0x03aa
* Sun 05 Oct 2014 01:25:01 AM JST
0x03ab
* Sun 05 Oct 2014 01:25:01 AM JST
0x03ac
* Sun 05 Oct 2014 01:25:01 AM JST
0x03b3
* Sun 05 Oct 2014 01:25:01 AM JST
0x03b5
* Sun 05 Oct 2014 01:25:02 AM JST
0x03b6
* Sun 05 Oct 2014 01:25:02 AM JST
0x03ba
* Sun 05 Oct 2014 01:25:02 AM JST
0x03bb
* Sun 05 Oct 2014 01:25:02 AM JST
0x03bc
* Sun 05 Oct 2014 01:25:02 AM JST
0x03bd
* Sun 05 Oct 2014 01:25:02 AM JST
0x03bf
* Sun 05 Oct 2014 01:25:02 AM JST
0x03c0
* Sun 05 Oct 2014 01:25:02 AM JST
0x03c7
* Sun 05 Oct 2014 01:25:02 AM JST
0x03cc
* Sun 05 Oct 2014 01:25:02 AM JST
0x03cf
* Sun 05 Oct 2014 01:25:02 AM JST
0x03d1
* Sun 05 Oct 2014 01:25:02 AM JST
0x03d2
* Sun 05 Oct 2014 01:25:03 AM JST
0x03d3
* Sun 05 Oct 2014 01:25:03 AM JST
0x03d9
* Sun 05 Oct 2014 01:25:03 AM JST
0x03dd
* Sun 05 Oct 2014 01:25:03 AM JST
0x03de
* Sun 05 Oct 2014 01:25:03 AM JST
0x03e0
* Sun 05 Oct 2014 01:25:03 AM JST
0x03e7
* Sun 05 Oct 2014 01:25:03 AM JST
0x03ec
* Sun 05 Oct 2014 01:25:03 AM JST
0x03ef
* Sun 05 Oct 2014 01:25:03 AM JST
0x03f1
* Sun 05 Oct 2014 01:25:03 AM JST
0x03f2
* Sun 05 Oct 2014 01:25:03 AM JST
0x03f3
* Sun 05 Oct 2014 01:25:04 AM JST
0x03f9
* Sun 05 Oct 2014 01:25:04 AM JST
0x03fd
* Sun 05 Oct 2014 01:25:04 AM JST
0x03fe
* Sun 05 Oct 2014 01:25:04 AM JST
0x1000174
* Sun 05 Oct 2014 01:25:04 AM JST
0x1000175
* Sun 05 Oct 2014 01:25:04 AM JST
0x1000176
* Sun 05 Oct 2014 01:25:04 AM JST
0x1000177
* Sun 05 Oct 2014 01:25:04 AM JST
0x1001e02
* Sun 05 Oct 2014 01:25:05 AM JST
0x1001e03
* Sun 05 Oct 2014 01:25:05 AM JST
0x1001e0a
* Sun 05 Oct 2014 01:25:05 AM JST
0x1001e0b
* Sun 05 Oct 2014 01:25:05 AM JST
0x1001e1e
* Sun 05 Oct 2014 01:25:05 AM JST
0x1001e1f
* Sun 05 Oct 2014 01:25:05 AM JST
0x1001e40
* Sun 05 Oct 2014 01:25:05 AM JST
0x1001e41
* Sun 05 Oct 2014 01:25:05 AM JST
0x1001e56
* Sun 05 Oct 2014 01:25:05 AM JST
0x1001e57
* Sun 05 Oct 2014 01:25:05 AM JST
0x1001e60
* Sun 05 Oct 2014 01:25:05 AM JST
0x1001e61
* Sun 05 Oct 2014 01:25:05 AM JST
0x1001e6a
* Sun 05 Oct 2014 01:25:06 AM JST
0x1001e6b
* Sun 05 Oct 2014 01:25:06 AM JST
0x1001e80
* Sun 05 Oct 2014 01:25:06 AM JST
0x1001e81
* Sun 05 Oct 2014 01:25:06 AM JST
0x1001e82
* Sun 05 Oct 2014 01:25:06 AM JST
0x1001e83
* Sun 05 Oct 2014 01:25:06 AM JST
0x1001e84
* Sun 05 Oct 2014 01:25:06 AM JST
0x1001e85
* Sun 05 Oct 2014 01:25:06 AM JST
0x1001ef2
* Sun 05 Oct 2014 01:25:06 AM JST
0x1001ef3
* Sun 05 Oct 2014 01:25:06 AM JST
0x13bc
* Sun 05 Oct 2014 01:25:06 AM JST
0x13bd
* Sun 05 Oct 2014 01:25:06 AM JST
0x13be
* Sun 05 Oct 2014 01:25:07 AM JST
0x047e
* Sun 05 Oct 2014 01:25:07 AM JST
0x04a1
* Sun 05 Oct 2014 01:25:07 AM JST
0x04a2
* Sun 05 Oct 2014 01:25:07 AM JST
0x04a3
* Sun 05 Oct 2014 01:25:07 AM JST
0x04a4
* Sun 05 Oct 2014 01:25:07 AM JST
0x04a5
* Sun 05 Oct 2014 01:25:07 AM JST
0x04a5
* Sun 05 Oct 2014 01:25:07 AM JST
0x04a6
* Sun 05 Oct 2014 01:25:07 AM JST
0x04a7
* Sun 05 Oct 2014 01:25:07 AM JST
0x04a8
* Sun 05 Oct 2014 01:25:07 AM JST
0x04a9
* Sun 05 Oct 2014 01:25:08 AM JST
0x04aa
* Sun 05 Oct 2014 01:25:08 AM JST
0x04ab
* Sun 05 Oct 2014 01:25:08 AM JST
0x04ac
* Sun 05 Oct 2014 01:25:08 AM JST
0x04ad
* Sun 05 Oct 2014 01:25:08 AM JST
0x04ae
* Sun 05 Oct 2014 01:25:08 AM JST
0x04af
* Sun 05 Oct 2014 01:25:08 AM JST
0x04af
* Sun 05 Oct 2014 01:25:08 AM JST
0x04b0
* Sun 05 Oct 2014 01:25:08 AM JST
0x04b1
* Sun 05 Oct 2014 01:25:08 AM JST
0x04b2
* Sun 05 Oct 2014 01:25:09 AM JST
0x04b3
* Sun 05 Oct 2014 01:25:09 AM JST
0x04b4
* Sun 05 Oct 2014 01:25:09 AM JST
0x04b5
* Sun 05 Oct 2014 01:25:09 AM JST
0x04b6
* Sun 05 Oct 2014 01:25:09 AM JST
0x04b7
* Sun 05 Oct 2014 01:25:09 AM JST
0x04b8
* Sun 05 Oct 2014 01:25:09 AM JST
0x04b9
* Sun 05 Oct 2014 01:25:09 AM JST
0x04ba
* Sun 05 Oct 2014 01:25:09 AM JST
0x04bb
* Sun 05 Oct 2014 01:25:09 AM JST
0x04bc
* Sun 05 Oct 2014 01:25:09 AM JST
0x04bd
* Sun 05 Oct 2014 01:25:10 AM JST
0x04be
* Sun 05 Oct 2014 01:25:10 AM JST
0x04bf
* Sun 05 Oct 2014 01:25:10 AM JST
0x04c0
* Sun 05 Oct 2014 01:25:10 AM JST
0x04c1
* Sun 05 Oct 2014 01:25:10 AM JST
0x04c1
* Sun 05 Oct 2014 01:25:10 AM JST
0x04c2
* Sun 05 Oct 2014 01:25:10 AM JST
0x04c2
* Sun 05 Oct 2014 01:25:10 AM JST
0x04c3
* Sun 05 Oct 2014 01:25:10 AM JST
0x04c4
* Sun 05 Oct 2014 01:25:10 AM JST
0x04c5
* Sun 05 Oct 2014 01:25:10 AM JST
0x04c6
* Sun 05 Oct 2014 01:25:11 AM JST
0x04c7
* Sun 05 Oct 2014 01:25:11 AM JST
0x04c8
* Sun 05 Oct 2014 01:25:11 AM JST
0x04c9
* Sun 05 Oct 2014 01:25:11 AM JST
0x04ca
* Sun 05 Oct 2014 01:25:11 AM JST
0x04cb
* Sun 05 Oct 2014 01:25:11 AM JST
0x04cc
* Sun 05 Oct 2014 01:25:11 AM JST
0x04cc
* Sun 05 Oct 2014 01:25:11 AM JST
0x04cd
* Sun 05 Oct 2014 01:25:11 AM JST
0x04ce
* Sun 05 Oct 2014 01:25:11 AM JST
0x04cf
* Sun 05 Oct 2014 01:25:11 AM JST
0x04d0
* Sun 05 Oct 2014 01:25:11 AM JST
0x04d1
* Sun 05 Oct 2014 01:25:12 AM JST
0x04d2
* Sun 05 Oct 2014 01:25:12 AM JST
0x04d3
* Sun 05 Oct 2014 01:25:12 AM JST
0x04d4
* Sun 05 Oct 2014 01:25:21 AM JST
0x04d5
* Sun 05 Oct 2014 01:25:21 AM JST
0x04d6
* Sun 05 Oct 2014 01:25:21 AM JST
0x04d7
* Sun 05 Oct 2014 01:25:22 AM JST
0x04d8
* Sun 05 Oct 2014 01:25:22 AM JST
0x04d9
* Sun 05 Oct 2014 01:25:22 AM JST
0x04da
* Sun 05 Oct 2014 01:25:22 AM JST
0x04db
* Sun 05 Oct 2014 01:25:22 AM JST
0x04dc
* Sun 05 Oct 2014 01:25:22 AM JST
0x04dd
* Sun 05 Oct 2014 01:25:22 AM JST
0x04de
* Sun 05 Oct 2014 01:25:22 AM JST
0x04df
* Sun 05 Oct 2014 01:25:22 AM JST
0xff7e
* Sun 05 Oct 2014 01:25:22 AM JST
0x10006f0
* Sun 05 Oct 2014 01:25:22 AM JST
0x10006f1
* Sun 05 Oct 2014 01:25:23 AM JST
0x10006f2
* Sun 05 Oct 2014 01:25:23 AM JST
0x10006f3
* Sun 05 Oct 2014 01:25:23 AM JST
0x10006f4
* Sun 05 Oct 2014 01:25:23 AM JST
0x10006f5
* Sun 05 Oct 2014 01:25:23 AM JST
0x10006f6
* Sun 05 Oct 2014 01:25:23 AM JST
0x10006f7
* Sun 05 Oct 2014 01:25:23 AM JST
0x10006f8
* Sun 05 Oct 2014 01:25:23 AM JST
0x10006f9
* Sun 05 Oct 2014 01:25:23 AM JST
0x100066a
* Sun 05 Oct 2014 01:25:23 AM JST
0x1000670
* Sun 05 Oct 2014 01:25:23 AM JST
0x1000679
* Sun 05 Oct 2014 01:25:24 AM JST
0x100067e
* Sun 05 Oct 2014 01:25:24 AM JST
0x1000686
* Sun 05 Oct 2014 01:25:24 AM JST
0x1000688
* Sun 05 Oct 2014 01:25:24 AM JST
0x1000691
* Sun 05 Oct 2014 01:25:24 AM JST
0x05ac
* Sun 05 Oct 2014 01:25:24 AM JST
0x10006d4
* Sun 05 Oct 2014 01:25:24 AM JST
0x1000660
* Sun 05 Oct 2014 01:25:24 AM JST
0x1000661
* Sun 05 Oct 2014 01:25:25 AM JST
0x1000662
* Sun 05 Oct 2014 01:25:25 AM JST
0x1000663
* Sun 05 Oct 2014 01:25:25 AM JST
0x1000664
* Sun 05 Oct 2014 01:25:25 AM JST
0x1000665
* Sun 05 Oct 2014 01:25:25 AM JST
0x1000666
* Sun 05 Oct 2014 01:25:25 AM JST
0x1000667
* Sun 05 Oct 2014 01:25:25 AM JST
0x1000668
* Sun 05 Oct 2014 01:25:25 AM JST
0x1000669
* Sun 05 Oct 2014 01:25:25 AM JST
0x05bb
* Sun 05 Oct 2014 01:25:25 AM JST
0x05bf
* Sun 05 Oct 2014 01:25:25 AM JST
0x05c1
* Sun 05 Oct 2014 01:25:26 AM JST
0x05c2
* Sun 05 Oct 2014 01:25:26 AM JST
0x05c3
* Sun 05 Oct 2014 01:25:26 AM JST
0x05c4
* Sun 05 Oct 2014 01:25:26 AM JST
0x05c5
* Sun 05 Oct 2014 01:25:26 AM JST
0x05c6
* Sun 05 Oct 2014 01:25:26 AM JST
0x05c7
* Sun 05 Oct 2014 01:25:26 AM JST
0x05c8
* Sun 05 Oct 2014 01:25:26 AM JST
0x05c9
* Sun 05 Oct 2014 01:25:26 AM JST
0x05ca
* Sun 05 Oct 2014 01:25:26 AM JST
0x05cb
* Sun 05 Oct 2014 01:25:26 AM JST
0x05cc
* Sun 05 Oct 2014 01:25:27 AM JST
0x05cd
* Sun 05 Oct 2014 01:25:27 AM JST
0x05ce
* Sun 05 Oct 2014 01:25:27 AM JST
0x05cf
* Sun 05 Oct 2014 01:25:27 AM JST
0x05d0
* Sun 05 Oct 2014 01:25:27 AM JST
0x05d1
* Sun 05 Oct 2014 01:25:27 AM JST
0x05d2
* Sun 05 Oct 2014 01:25:27 AM JST
0x05d3
* Sun 05 Oct 2014 01:25:27 AM JST
0x05d4
* Sun 05 Oct 2014 01:25:27 AM JST
0x05d5
* Sun 05 Oct 2014 01:25:27 AM JST
0x05d6
* Sun 05 Oct 2014 01:25:27 AM JST
0x05d7
* Sun 05 Oct 2014 01:25:27 AM JST
0x05d8
* Sun 05 Oct 2014 01:25:28 AM JST
0x05d9
* Sun 05 Oct 2014 01:25:28 AM JST
0x05da
* Sun 05 Oct 2014 01:25:28 AM JST
0x05e0
* Sun 05 Oct 2014 01:25:28 AM JST
0x05e1
* Sun 05 Oct 2014 01:25:28 AM JST
0x05e2
* Sun 05 Oct 2014 01:25:28 AM JST
0x05e3
* Sun 05 Oct 2014 01:25:28 AM JST
0x05e4
* Sun 05 Oct 2014 01:25:28 AM JST
0x05e5
* Sun 05 Oct 2014 01:25:28 AM JST
0x05e6
* Sun 05 Oct 2014 01:25:28 AM JST
0x05e7
* Sun 05 Oct 2014 01:25:29 AM JST
0x05e7
* Sun 05 Oct 2014 01:25:29 AM JST
0x05e8
* Sun 05 Oct 2014 01:25:29 AM JST
0x05e9
* Sun 05 Oct 2014 01:25:29 AM JST
0x05ea
* Sun 05 Oct 2014 01:25:29 AM JST
0x05eb
* Sun 05 Oct 2014 01:25:29 AM JST
0x05ec
* Sun 05 Oct 2014 01:25:29 AM JST
0x05ed
* Sun 05 Oct 2014 01:25:29 AM JST
0x05ee
* Sun 05 Oct 2014 01:25:29 AM JST
0x05ef
* Sun 05 Oct 2014 01:25:29 AM JST
0x05f0
* Sun 05 Oct 2014 01:25:29 AM JST
0x05f1
* Sun 05 Oct 2014 01:25:29 AM JST
0x05f2
* Sun 05 Oct 2014 01:25:30 AM JST
0x1000653
* Sun 05 Oct 2014 01:25:30 AM JST
0x1000654
* Sun 05 Oct 2014 01:25:30 AM JST
0x1000655
* Sun 05 Oct 2014 01:25:30 AM JST
0x1000698
* Sun 05 Oct 2014 01:25:30 AM JST
0x10006a4
* Sun 05 Oct 2014 01:25:30 AM JST
0x10006a9
* Sun 05 Oct 2014 01:25:30 AM JST
0x10006af
* Sun 05 Oct 2014 01:25:30 AM JST
0x10006ba
* Sun 05 Oct 2014 01:25:30 AM JST
0x10006be
* Sun 05 Oct 2014 01:25:30 AM JST
0x10006cc
* Sun 05 Oct 2014 01:25:30 AM JST
0x10006cc
* Sun 05 Oct 2014 01:25:31 AM JST
0x10006d2
* Sun 05 Oct 2014 01:25:31 AM JST
0x10006c1
* Sun 05 Oct 2014 01:25:31 AM JST
0xff7e
* Sun 05 Oct 2014 01:25:31 AM JST
0x1000492
* Sun 05 Oct 2014 01:25:31 AM JST
0x1000493
* Sun 05 Oct 2014 01:25:31 AM JST
0x1000496
* Sun 05 Oct 2014 01:25:31 AM JST
0x1000497
* Sun 05 Oct 2014 01:25:31 AM JST
0x100049a
* Sun 05 Oct 2014 01:25:31 AM JST
0x100049b
* Sun 05 Oct 2014 01:25:31 AM JST
0x100049c
* Sun 05 Oct 2014 01:25:32 AM JST
0x100049d
* Sun 05 Oct 2014 01:25:32 AM JST
0x10004a2
* Sun 05 Oct 2014 01:25:32 AM JST
0x10004a3
* Sun 05 Oct 2014 01:25:32 AM JST
0x10004ae
* Sun 05 Oct 2014 01:25:32 AM JST
0x10004af
* Sun 05 Oct 2014 01:25:32 AM JST
0x10004b0
* Sun 05 Oct 2014 01:25:32 AM JST
0x10004b1
* Sun 05 Oct 2014 01:25:32 AM JST
0x10004b2
* Sun 05 Oct 2014 01:25:32 AM JST
0x10004b3
* Sun 05 Oct 2014 01:25:32 AM JST
0x10004b6
* Sun 05 Oct 2014 01:25:33 AM JST
0x10004b7
* Sun 05 Oct 2014 01:25:33 AM JST
0x10004b8
* Sun 05 Oct 2014 01:25:33 AM JST
0x10004b9
* Sun 05 Oct 2014 01:25:33 AM JST
0x10004ba
* Sun 05 Oct 2014 01:25:33 AM JST
0x10004bb
* Sun 05 Oct 2014 01:25:33 AM JST
0x10004d8
* Sun 05 Oct 2014 01:25:33 AM JST
0x10004d9
* Sun 05 Oct 2014 01:25:33 AM JST
0x10004e2
* Sun 05 Oct 2014 01:25:33 AM JST
0x10004e3
* Sun 05 Oct 2014 01:25:33 AM JST
0x10004e8
* Sun 05 Oct 2014 01:25:33 AM JST
0x10004e9
* Sun 05 Oct 2014 01:25:33 AM JST
0x10004ee
* Sun 05 Oct 2014 01:25:34 AM JST
0x10004ef
* Sun 05 Oct 2014 01:25:34 AM JST
0x06a1
* Sun 05 Oct 2014 01:25:34 AM JST
0x06a2
* Sun 05 Oct 2014 01:25:34 AM JST
0x06a3
* Sun 05 Oct 2014 01:25:34 AM JST
0x06a4
* Sun 05 Oct 2014 01:25:34 AM JST
0x06a4
* Sun 05 Oct 2014 01:25:34 AM JST
0x06a5
* Sun 05 Oct 2014 01:25:34 AM JST
0x06a6
* Sun 05 Oct 2014 01:25:34 AM JST
0x06a6
* Sun 05 Oct 2014 01:25:35 AM JST
0x06a7
* Sun 05 Oct 2014 01:25:35 AM JST
0x06a7
* Sun 05 Oct 2014 01:25:35 AM JST
0x06a8
* Sun 05 Oct 2014 01:25:35 AM JST
0x06a8
* Sun 05 Oct 2014 01:25:35 AM JST
0x06a9
* Sun 05 Oct 2014 01:25:35 AM JST
0x06a9
* Sun 05 Oct 2014 01:25:35 AM JST
0x06aa
* Sun 05 Oct 2014 01:25:35 AM JST
0x06aa
* Sun 05 Oct 2014 01:25:35 AM JST
0x06ab
* Sun 05 Oct 2014 01:25:35 AM JST
0x06ac
* Sun 05 Oct 2014 01:25:35 AM JST
0x06ad
* Sun 05 Oct 2014 01:25:36 AM JST
0x06ae
* Sun 05 Oct 2014 01:25:36 AM JST
0x06af
* Sun 05 Oct 2014 01:25:36 AM JST
0x06af
* Sun 05 Oct 2014 01:25:36 AM JST
0x06b0
* Sun 05 Oct 2014 01:25:36 AM JST
0x06b1
* Sun 05 Oct 2014 01:25:36 AM JST
0x06b2
* Sun 05 Oct 2014 01:25:36 AM JST
0x06b3
* Sun 05 Oct 2014 01:25:36 AM JST
0x06b4
* Sun 05 Oct 2014 01:25:36 AM JST
0x06b4
* Sun 05 Oct 2014 01:25:36 AM JST
0x06b5
* Sun 05 Oct 2014 01:25:36 AM JST
0x06b6
* Sun 05 Oct 2014 01:25:36 AM JST
0x06b6
* Sun 05 Oct 2014 01:25:37 AM JST
0x06b7
* Sun 05 Oct 2014 01:25:37 AM JST
0x06b7
* Sun 05 Oct 2014 01:25:37 AM JST
0x06b8
* Sun 05 Oct 2014 01:25:37 AM JST
0x06b8
* Sun 05 Oct 2014 01:25:37 AM JST
0x06b9
* Sun 05 Oct 2014 01:25:37 AM JST
0x06b9
* Sun 05 Oct 2014 01:25:37 AM JST
0x06ba
* Sun 05 Oct 2014 01:25:37 AM JST
0x06ba
* Sun 05 Oct 2014 01:25:37 AM JST
0x06bb
* Sun 05 Oct 2014 01:25:37 AM JST
0x06bc
* Sun 05 Oct 2014 01:25:37 AM JST
0x06bd
* Sun 05 Oct 2014 01:25:37 AM JST
0x06be
* Sun 05 Oct 2014 01:25:38 AM JST
0x06bf
* Sun 05 Oct 2014 01:25:38 AM JST
0x06bf
* Sun 05 Oct 2014 01:25:38 AM JST
0x06c0
* Sun 05 Oct 2014 01:25:38 AM JST
0x06c1
* Sun 05 Oct 2014 01:25:38 AM JST
0x06c2
* Sun 05 Oct 2014 01:25:38 AM JST
0x06c3
* Sun 05 Oct 2014 01:25:38 AM JST
0x06c4
* Sun 05 Oct 2014 01:25:38 AM JST
0x06c5
* Sun 05 Oct 2014 01:25:38 AM JST
0x06c6
* Sun 05 Oct 2014 01:25:38 AM JST
0x06c7
* Sun 05 Oct 2014 01:25:38 AM JST
0x06c8
* Sun 05 Oct 2014 01:25:39 AM JST
0x06c9
* Sun 05 Oct 2014 01:25:39 AM JST
0x06ca
* Sun 05 Oct 2014 01:25:39 AM JST
0x06cb
* Sun 05 Oct 2014 01:25:39 AM JST
0x06cc
* Sun 05 Oct 2014 01:25:39 AM JST
0x06cd
* Sun 05 Oct 2014 01:25:39 AM JST
0x06ce
* Sun 05 Oct 2014 01:25:39 AM JST
0x06cf
* Sun 05 Oct 2014 01:25:39 AM JST
0x06d0
* Sun 05 Oct 2014 01:25:39 AM JST
0x06d1
* Sun 05 Oct 2014 01:25:39 AM JST
0x06d2
* Sun 05 Oct 2014 01:25:39 AM JST
0x06d3
* Sun 05 Oct 2014 01:25:39 AM JST
0x06d4
* Sun 05 Oct 2014 01:25:40 AM JST
0x06d5
* Sun 05 Oct 2014 01:25:40 AM JST
0x06d6
* Sun 05 Oct 2014 01:25:40 AM JST
0x06d7
* Sun 05 Oct 2014 01:25:40 AM JST
0x06d8
* Sun 05 Oct 2014 01:25:40 AM JST
0x06d9
* Sun 05 Oct 2014 01:25:40 AM JST
0x06da
* Sun 05 Oct 2014 01:25:40 AM JST
0x06db
* Sun 05 Oct 2014 01:25:40 AM JST
0x06dc
* Sun 05 Oct 2014 01:25:40 AM JST
0x06dd
* Sun 05 Oct 2014 01:25:40 AM JST
0x06de
* Sun 05 Oct 2014 01:25:40 AM JST
0x06df
* Sun 05 Oct 2014 01:25:41 AM JST
0x06e0
* Sun 05 Oct 2014 01:25:41 AM JST
0x06e1
* Sun 05 Oct 2014 01:25:41 AM JST
0x06e2
* Sun 05 Oct 2014 01:25:41 AM JST
0x06e3
* Sun 05 Oct 2014 01:25:41 AM JST
0x06e4
* Sun 05 Oct 2014 01:25:41 AM JST
0x06e5
* Sun 05 Oct 2014 01:25:41 AM JST
0x06e6
* Sun 05 Oct 2014 01:25:41 AM JST
0x06e7
* Sun 05 Oct 2014 01:25:41 AM JST
0x06e8
* Sun 05 Oct 2014 01:25:41 AM JST
0x06e9
* Sun 05 Oct 2014 01:25:41 AM JST
0x06ea
* Sun 05 Oct 2014 01:25:42 AM JST
0x06eb
* Sun 05 Oct 2014 01:25:42 AM JST
0x06ec
* Sun 05 Oct 2014 01:25:42 AM JST
0x06ed
* Sun 05 Oct 2014 01:25:42 AM JST
0x06ee
* Sun 05 Oct 2014 01:25:42 AM JST
0x06ef
* Sun 05 Oct 2014 01:25:42 AM JST
0x06f0
* Sun 05 Oct 2014 01:25:42 AM JST
0x06f1
* Sun 05 Oct 2014 01:25:42 AM JST
0x06f2
* Sun 05 Oct 2014 01:25:42 AM JST
0x06f3
* Sun 05 Oct 2014 01:25:42 AM JST
0x06f4
* Sun 05 Oct 2014 01:25:42 AM JST
0x06f5
* Sun 05 Oct 2014 01:25:42 AM JST
0x06f6
* Sun 05 Oct 2014 01:25:43 AM JST
0x06f7
* Sun 05 Oct 2014 01:25:43 AM JST
0x06f8
* Sun 05 Oct 2014 01:25:43 AM JST
0x06f9
* Sun 05 Oct 2014 01:25:43 AM JST
0x06fa
* Sun 05 Oct 2014 01:25:43 AM JST
0x06fb
* Sun 05 Oct 2014 01:25:43 AM JST
0x06fc
* Sun 05 Oct 2014 01:25:43 AM JST
0x06fd
* Sun 05 Oct 2014 01:25:43 AM JST
0x06fe
* Sun 05 Oct 2014 01:25:43 AM JST
0x06ff
* Sun 05 Oct 2014 01:25:43 AM JST
0x07a1
* Sun 05 Oct 2014 01:25:43 AM JST
0x07a2
* Sun 05 Oct 2014 01:25:43 AM JST
0x07a3
* Sun 05 Oct 2014 01:25:44 AM JST
0x07a4
* Sun 05 Oct 2014 01:25:44 AM JST
0x07a5
* Sun 05 Oct 2014 01:25:44 AM JST
0x07a5
* Sun 05 Oct 2014 01:25:44 AM JST
0x07a7
* Sun 05 Oct 2014 01:25:44 AM JST
0x07a8
* Sun 05 Oct 2014 01:25:44 AM JST
0x07a9
* Sun 05 Oct 2014 01:25:44 AM JST
0x07ab
* Sun 05 Oct 2014 01:25:45 AM JST
0x07ae
* Sun 05 Oct 2014 01:25:45 AM JST
0x07af
* Sun 05 Oct 2014 01:25:45 AM JST
0x07b1
* Sun 05 Oct 2014 01:25:45 AM JST
0x07b2
* Sun 05 Oct 2014 01:25:45 AM JST
0x07b3
* Sun 05 Oct 2014 01:25:45 AM JST
0x07b4
* Sun 05 Oct 2014 01:25:45 AM JST
0x07b5
* Sun 05 Oct 2014 01:25:45 AM JST
0x07b6
* Sun 05 Oct 2014 01:25:45 AM JST
0x07b7
* Sun 05 Oct 2014 01:25:45 AM JST
0x07b8
* Sun 05 Oct 2014 01:25:45 AM JST
0x07b9
* Sun 05 Oct 2014 01:25:45 AM JST
0x07ba
* Sun 05 Oct 2014 01:25:46 AM JST
0x07bb
* Sun 05 Oct 2014 01:25:46 AM JST
0x07c1
* Sun 05 Oct 2014 01:25:46 AM JST
0x07c2
* Sun 05 Oct 2014 01:25:46 AM JST
0x07c3
* Sun 05 Oct 2014 01:25:46 AM JST
0x07c4
* Sun 05 Oct 2014 01:25:46 AM JST
0x07c5
* Sun 05 Oct 2014 01:25:46 AM JST
0x07c6
* Sun 05 Oct 2014 01:25:46 AM JST
0x07c7
* Sun 05 Oct 2014 01:25:46 AM JST
0x07c8
* Sun 05 Oct 2014 01:25:46 AM JST
0x07c9
* Sun 05 Oct 2014 01:25:47 AM JST
0x07ca
* Sun 05 Oct 2014 01:25:47 AM JST
0x07cb
* Sun 05 Oct 2014 01:25:47 AM JST
0x07cb
* Sun 05 Oct 2014 01:25:47 AM JST
0x07cc
* Sun 05 Oct 2014 01:25:47 AM JST
0x07cd
* Sun 05 Oct 2014 01:25:47 AM JST
0x07ce
* Sun 05 Oct 2014 01:25:47 AM JST
0x07cf
* Sun 05 Oct 2014 01:25:47 AM JST
0x07d0
* Sun 05 Oct 2014 01:25:47 AM JST
0x07d1
* Sun 05 Oct 2014 01:25:47 AM JST
0x07d2
* Sun 05 Oct 2014 01:25:47 AM JST
0x07d4
* Sun 05 Oct 2014 01:25:48 AM JST
0x07d5
* Sun 05 Oct 2014 01:25:48 AM JST
0x07d6
* Sun 05 Oct 2014 01:25:48 AM JST
0x07d7
* Sun 05 Oct 2014 01:25:48 AM JST
0x07d8
* Sun 05 Oct 2014 01:25:48 AM JST
0x07d9
* Sun 05 Oct 2014 01:25:48 AM JST
0x07e1
* Sun 05 Oct 2014 01:25:48 AM JST
0x07e2
* Sun 05 Oct 2014 01:25:48 AM JST
0x07e3
* Sun 05 Oct 2014 01:25:48 AM JST
0x07e4
* Sun 05 Oct 2014 01:25:48 AM JST
0x07e5
* Sun 05 Oct 2014 01:25:49 AM JST
0x07e6
* Sun 05 Oct 2014 01:25:49 AM JST
0x07e7
* Sun 05 Oct 2014 01:25:49 AM JST
0x07e8
* Sun 05 Oct 2014 01:25:49 AM JST
0x07e9
* Sun 05 Oct 2014 01:25:49 AM JST
0x07ea
* Sun 05 Oct 2014 01:25:49 AM JST
0x07eb
* Sun 05 Oct 2014 01:25:49 AM JST
0x07eb
* Sun 05 Oct 2014 01:25:49 AM JST
0x07ec
* Sun 05 Oct 2014 01:25:49 AM JST
0x07ed
* Sun 05 Oct 2014 01:25:49 AM JST
0x07ee
* Sun 05 Oct 2014 01:25:49 AM JST
0x07ef
* Sun 05 Oct 2014 01:25:50 AM JST
0x07f0
* Sun 05 Oct 2014 01:25:50 AM JST
0x07f1
* Sun 05 Oct 2014 01:25:50 AM JST
0x07f2
* Sun 05 Oct 2014 01:25:50 AM JST
0x07f3
* Sun 05 Oct 2014 01:25:50 AM JST
0x07f4
* Sun 05 Oct 2014 01:25:50 AM JST
0x07f5
* Sun 05 Oct 2014 01:25:50 AM JST
0x07f6
* Sun 05 Oct 2014 01:25:50 AM JST
0x07f7
* Sun 05 Oct 2014 01:25:50 AM JST
0x07f8
* Sun 05 Oct 2014 01:25:50 AM JST
0x07f9
* Sun 05 Oct 2014 01:25:50 AM JST
0xff7e
* Sun 05 Oct 2014 01:25:50 AM JST
0x08a1
* Sun 05 Oct 2014 01:25:51 AM JST
0x08a2
* Sun 05 Oct 2014 01:25:51 AM JST
0x08a3
* Sun 05 Oct 2014 01:25:51 AM JST
0x08a4
* Sun 05 Oct 2014 01:25:51 AM JST
0x08a5
* Sun 05 Oct 2014 01:25:51 AM JST
0x08a6
* Sun 05 Oct 2014 01:25:51 AM JST
0x08a7
* Sun 05 Oct 2014 01:25:51 AM JST
0x08a8
* Sun 05 Oct 2014 01:25:51 AM JST
0x08a9
* Sun 05 Oct 2014 01:25:51 AM JST
0x08aa
* Sun 05 Oct 2014 01:25:51 AM JST
0x08ab
* Sun 05 Oct 2014 01:25:51 AM JST
0x08ac
* Sun 05 Oct 2014 01:25:52 AM JST
0x08ad
* Sun 05 Oct 2014 01:25:52 AM JST
0x08ae
* Sun 05 Oct 2014 01:25:52 AM JST
0x08af
* Sun 05 Oct 2014 01:25:52 AM JST
0x08b0
* Sun 05 Oct 2014 01:25:52 AM JST
0x08b1
* Sun 05 Oct 2014 01:25:52 AM JST
0x08b2
* Sun 05 Oct 2014 01:25:52 AM JST
0x08b3
* Sun 05 Oct 2014 01:25:52 AM JST
0x08b4
* Sun 05 Oct 2014 01:25:52 AM JST
0x08b5
* Sun 05 Oct 2014 01:25:52 AM JST
0x08b6
* Sun 05 Oct 2014 01:25:52 AM JST
0x08b7
* Sun 05 Oct 2014 01:25:53 AM JST
0x08bc
* Sun 05 Oct 2014 01:25:53 AM JST
0x08bd
* Sun 05 Oct 2014 01:25:53 AM JST
0x08be
* Sun 05 Oct 2014 01:25:53 AM JST
0x08bf
* Sun 05 Oct 2014 01:25:53 AM JST
0x08c0
* Sun 05 Oct 2014 01:25:53 AM JST
0x08c1
* Sun 05 Oct 2014 01:25:53 AM JST
0x08c2
* Sun 05 Oct 2014 01:25:53 AM JST
0x08c5
* Sun 05 Oct 2014 01:25:53 AM JST
0x08c8
* Sun 05 Oct 2014 01:25:53 AM JST
0x08c9
* Sun 05 Oct 2014 01:25:53 AM JST
0x08cd
* Sun 05 Oct 2014 01:25:54 AM JST
0x08ce
* Sun 05 Oct 2014 01:25:54 AM JST
0x08cf
* Sun 05 Oct 2014 01:25:54 AM JST
0x08d6
* Sun 05 Oct 2014 01:25:54 AM JST
0x08da
* Sun 05 Oct 2014 01:25:54 AM JST
0x08db
* Sun 05 Oct 2014 01:25:54 AM JST
0x08dc
* Sun 05 Oct 2014 01:25:54 AM JST
0x08dd
* Sun 05 Oct 2014 01:25:54 AM JST
0x08de
* Sun 05 Oct 2014 01:25:55 AM JST
0x08df
* Sun 05 Oct 2014 01:25:55 AM JST
0x08ef
* Sun 05 Oct 2014 01:25:55 AM JST
0x08f6
* Sun 05 Oct 2014 01:25:55 AM JST
0x08fb
* Sun 05 Oct 2014 01:25:55 AM JST
0x08fc
* Sun 05 Oct 2014 01:25:55 AM JST
0x08fd
* Sun 05 Oct 2014 01:25:55 AM JST
0x08fe
* Sun 05 Oct 2014 01:25:55 AM JST
0x09df
* Sun 05 Oct 2014 01:25:55 AM JST
0x09e0
* Sun 05 Oct 2014 01:25:55 AM JST
0x09e1
* Sun 05 Oct 2014 01:25:55 AM JST
0x09e2
* Sun 05 Oct 2014 01:25:55 AM JST
0x09e3
* Sun 05 Oct 2014 01:25:56 AM JST
0x09e4
* Sun 05 Oct 2014 01:25:56 AM JST
0x09e5
* Sun 05 Oct 2014 01:25:56 AM JST
0x09e8
* Sun 05 Oct 2014 01:25:56 AM JST
0x09e9
* Sun 05 Oct 2014 01:25:56 AM JST
0x09ea
* Sun 05 Oct 2014 01:25:56 AM JST
0x09eb
* Sun 05 Oct 2014 01:25:56 AM JST
0x09ec
* Sun 05 Oct 2014 01:25:56 AM JST
0x09ed
* Sun 05 Oct 2014 01:25:56 AM JST
0x09ee
* Sun 05 Oct 2014 01:25:56 AM JST
0x09ef
* Sun 05 Oct 2014 01:25:56 AM JST
0x09f0
* Sun 05 Oct 2014 01:25:57 AM JST
0x09f1
* Sun 05 Oct 2014 01:25:57 AM JST
0x09f2
* Sun 05 Oct 2014 01:25:57 AM JST
0x09f3
* Sun 05 Oct 2014 01:25:57 AM JST
0x09f4
* Sun 05 Oct 2014 01:25:57 AM JST
0x09f5
* Sun 05 Oct 2014 01:25:57 AM JST
0x09f6
* Sun 05 Oct 2014 01:25:57 AM JST
0x09f7
* Sun 05 Oct 2014 01:25:57 AM JST
0x09f8
* Sun 05 Oct 2014 01:25:57 AM JST
0x0aa1
* Sun 05 Oct 2014 01:25:57 AM JST
0x0aa2
* Sun 05 Oct 2014 01:25:58 AM JST
0x0aa3
* Sun 05 Oct 2014 01:25:58 AM JST
0x0aa4
* Sun 05 Oct 2014 01:25:58 AM JST
0x0aa5
* Sun 05 Oct 2014 01:25:58 AM JST
0x0aa6
* Sun 05 Oct 2014 01:25:58 AM JST
0x0aa7
* Sun 05 Oct 2014 01:25:58 AM JST
0x0aa8
* Sun 05 Oct 2014 01:25:58 AM JST
0x0aa9
* Sun 05 Oct 2014 01:25:58 AM JST
0x0aaa
* Sun 05 Oct 2014 01:26:14 AM JST
0x0aac
* Sun 05 Oct 2014 01:26:14 AM JST
0x0aae
* Sun 05 Oct 2014 01:26:15 AM JST
0x0aaf
* Sun 05 Oct 2014 01:26:15 AM JST
0x0ab0
* Sun 05 Oct 2014 01:26:15 AM JST
0x0ab1
* Sun 05 Oct 2014 01:26:15 AM JST
0x0ab2
* Sun 05 Oct 2014 01:26:15 AM JST
0x0ab3
* Sun 05 Oct 2014 01:26:15 AM JST
0x0ab4
* Sun 05 Oct 2014 01:26:15 AM JST
0x0ab5
* Sun 05 Oct 2014 01:26:15 AM JST
0x0ab6
* Sun 05 Oct 2014 01:26:15 AM JST
0x0ab7
* Sun 05 Oct 2014 01:26:15 AM JST
0x0ab8
* Sun 05 Oct 2014 01:26:15 AM JST
0x0abb
* Sun 05 Oct 2014 01:26:16 AM JST
0x0abc
* Sun 05 Oct 2014 01:26:16 AM JST
0x0abd
* Sun 05 Oct 2014 01:26:16 AM JST
0x0abe
* Sun 05 Oct 2014 01:26:16 AM JST
0x0abf
* Sun 05 Oct 2014 01:26:16 AM JST
0x0ac3
* Sun 05 Oct 2014 01:26:16 AM JST
0x0ac4
* Sun 05 Oct 2014 01:26:16 AM JST
0x0ac5
* Sun 05 Oct 2014 01:26:16 AM JST
0x0ac6
* Sun 05 Oct 2014 01:26:16 AM JST
0x0ac9
* Sun 05 Oct 2014 01:26:17 AM JST
0x0aca
* Sun 05 Oct 2014 01:26:17 AM JST
0x0acb
* Sun 05 Oct 2014 01:26:17 AM JST
0x0acc
* Sun 05 Oct 2014 01:26:17 AM JST
0x0acd
* Sun 05 Oct 2014 01:26:17 AM JST
0x0ace
* Sun 05 Oct 2014 01:26:17 AM JST
0x0acf
* Sun 05 Oct 2014 01:26:17 AM JST
0x0ad0
* Sun 05 Oct 2014 01:26:17 AM JST
0x0ad1
* Sun 05 Oct 2014 01:26:17 AM JST
0x0ad2
* Sun 05 Oct 2014 01:26:17 AM JST
0x0ad3
* Sun 05 Oct 2014 01:26:17 AM JST
0x0ad4
* Sun 05 Oct 2014 01:26:18 AM JST
0x0ad5
* Sun 05 Oct 2014 01:26:18 AM JST
0x0ad6
* Sun 05 Oct 2014 01:26:18 AM JST
0x0ad7
* Sun 05 Oct 2014 01:26:18 AM JST
0x0ad9
* Sun 05 Oct 2014 01:26:18 AM JST
0x0ada
* Sun 05 Oct 2014 01:26:18 AM JST
0x0adb
* Sun 05 Oct 2014 01:26:18 AM JST
0x0adc
* Sun 05 Oct 2014 01:26:18 AM JST
0x0add
* Sun 05 Oct 2014 01:26:18 AM JST
0x0ade
* Sun 05 Oct 2014 01:26:18 AM JST
0x0adf
* Sun 05 Oct 2014 01:26:18 AM JST
0x0ae0
* Sun 05 Oct 2014 01:26:19 AM JST
0x0ae1
* Sun 05 Oct 2014 01:26:19 AM JST
0x0ae2
* Sun 05 Oct 2014 01:26:19 AM JST
0x0ae3
* Sun 05 Oct 2014 01:26:19 AM JST
0x0ae4
* Sun 05 Oct 2014 01:26:19 AM JST
0x0ae5
* Sun 05 Oct 2014 01:26:19 AM JST
0x0ae6
* Sun 05 Oct 2014 01:26:19 AM JST
0x0ae7
* Sun 05 Oct 2014 01:26:19 AM JST
0x0ae8
* Sun 05 Oct 2014 01:26:19 AM JST
0x0ae9
* Sun 05 Oct 2014 01:26:19 AM JST
0x0aea
* Sun 05 Oct 2014 01:26:19 AM JST
0x0aeb
* Sun 05 Oct 2014 01:26:20 AM JST
0x0aec
* Sun 05 Oct 2014 01:26:20 AM JST
0x0aed
* Sun 05 Oct 2014 01:26:20 AM JST
0x0aee
* Sun 05 Oct 2014 01:26:20 AM JST
0x0af0
* Sun 05 Oct 2014 01:26:20 AM JST
0x0af1
* Sun 05 Oct 2014 01:26:20 AM JST
0x0af2
* Sun 05 Oct 2014 01:26:20 AM JST
0x0af3
* Sun 05 Oct 2014 01:26:20 AM JST
0x0af4
* Sun 05 Oct 2014 01:26:20 AM JST
0x0af5
* Sun 05 Oct 2014 01:26:20 AM JST
0x0af6
* Sun 05 Oct 2014 01:26:20 AM JST
0x0af7
* Sun 05 Oct 2014 01:26:21 AM JST
0x0af8
* Sun 05 Oct 2014 01:26:21 AM JST
0x0af9
* Sun 05 Oct 2014 01:26:21 AM JST
0x0afa
* Sun 05 Oct 2014 01:26:21 AM JST
0x0afb
* Sun 05 Oct 2014 01:26:21 AM JST
0x0afc
* Sun 05 Oct 2014 01:26:21 AM JST
0x0afd
* Sun 05 Oct 2014 01:26:21 AM JST
0x0afe
* Sun 05 Oct 2014 01:26:21 AM JST
0x0aff
* Sun 05 Oct 2014 01:26:21 AM JST
0x0ba3
* Sun 05 Oct 2014 01:26:21 AM JST
0x0ba6
* Sun 05 Oct 2014 01:26:21 AM JST
0x0ba8
* Sun 05 Oct 2014 01:26:21 AM JST
0x0ba9
* Sun 05 Oct 2014 01:26:22 AM JST
0x0bc0
* Sun 05 Oct 2014 01:26:22 AM JST
0x0bc2
* Sun 05 Oct 2014 01:26:22 AM JST
0x0bc3
* Sun 05 Oct 2014 01:26:22 AM JST
0x0bc4
* Sun 05 Oct 2014 01:26:22 AM JST
0x0bc6
* Sun 05 Oct 2014 01:26:22 AM JST
0x0bca
* Sun 05 Oct 2014 01:26:22 AM JST
0x0bcc
* Sun 05 Oct 2014 01:26:22 AM JST
0x0bce
* Sun 05 Oct 2014 01:26:22 AM JST
0x0bcf
* Sun 05 Oct 2014 01:26:22 AM JST
0x0bd3
* Sun 05 Oct 2014 01:26:22 AM JST
0x0bd6
* Sun 05 Oct 2014 01:26:23 AM JST
0x0bd8
* Sun 05 Oct 2014 01:26:23 AM JST
0x0bda
* Sun 05 Oct 2014 01:26:23 AM JST
0x0bdc
* Sun 05 Oct 2014 01:26:23 AM JST
0x0bfc
* Sun 05 Oct 2014 01:26:23 AM JST
0x0cdf
* Sun 05 Oct 2014 01:26:23 AM JST
0x0ce0
* Sun 05 Oct 2014 01:26:23 AM JST
0x0ce1
* Sun 05 Oct 2014 01:26:23 AM JST
0x0ce1
* Sun 05 Oct 2014 01:26:23 AM JST
0x0ce2
* Sun 05 Oct 2014 01:26:23 AM JST
0x0ce2
* Sun 05 Oct 2014 01:26:23 AM JST
0x0ce3
* Sun 05 Oct 2014 01:26:24 AM JST
0x0ce3
* Sun 05 Oct 2014 01:26:24 AM JST
0x0ce4
* Sun 05 Oct 2014 01:26:24 AM JST
0x0ce5
* Sun 05 Oct 2014 01:26:24 AM JST
0x0ce6
* Sun 05 Oct 2014 01:26:24 AM JST
0x0ce6
* Sun 05 Oct 2014 01:26:24 AM JST
0x0ce7
* Sun 05 Oct 2014 01:26:24 AM JST
0x0ce7
* Sun 05 Oct 2014 01:26:25 AM JST
0x0ce8
* Sun 05 Oct 2014 01:26:25 AM JST
0x0ce8
* Sun 05 Oct 2014 01:26:25 AM JST
0x0ce9
* Sun 05 Oct 2014 01:26:25 AM JST
0x0cea
* Sun 05 Oct 2014 01:26:25 AM JST
0x0ceb
* Sun 05 Oct 2014 01:26:25 AM JST
0x0cec
* Sun 05 Oct 2014 01:26:25 AM JST
0x0ced
* Sun 05 Oct 2014 01:26:25 AM JST
0x0cee
* Sun 05 Oct 2014 01:26:25 AM JST
0x0cef
* Sun 05 Oct 2014 01:26:25 AM JST
0x0cf0
* Sun 05 Oct 2014 01:26:25 AM JST
0x0cf1
* Sun 05 Oct 2014 01:26:26 AM JST
0x0cf1
* Sun 05 Oct 2014 01:26:26 AM JST
0x0cf2
* Sun 05 Oct 2014 01:26:26 AM JST
0x0cf3
* Sun 05 Oct 2014 01:26:26 AM JST
0x0cf4
* Sun 05 Oct 2014 01:26:26 AM JST
0x0cf5
* Sun 05 Oct 2014 01:26:26 AM JST
0x0cf5
* Sun 05 Oct 2014 01:26:26 AM JST
0x0cf6
* Sun 05 Oct 2014 01:26:26 AM JST
0x0cf6
* Sun 05 Oct 2014 01:26:26 AM JST
0x0cf7
* Sun 05 Oct 2014 01:26:26 AM JST
0x0cf7
* Sun 05 Oct 2014 01:26:26 AM JST
0x0cf8
* Sun 05 Oct 2014 01:26:27 AM JST
0x0cf9
* Sun 05 Oct 2014 01:26:27 AM JST
0x0cfa
* Sun 05 Oct 2014 01:26:27 AM JST
0x0cfa
* Sun 05 Oct 2014 01:26:27 AM JST
0xff7e
* Sun 05 Oct 2014 01:26:27 AM JST
0x0da1
* Sun 05 Oct 2014 01:26:27 AM JST
0x0da2
* Sun 05 Oct 2014 01:26:27 AM JST
0x0da3
* Sun 05 Oct 2014 01:26:27 AM JST
0x0da4
* Sun 05 Oct 2014 01:26:27 AM JST
0x0da5
* Sun 05 Oct 2014 01:26:27 AM JST
0x0da6
* Sun 05 Oct 2014 01:26:27 AM JST
0x0da7
* Sun 05 Oct 2014 01:26:28 AM JST
0x0da8
* Sun 05 Oct 2014 01:26:28 AM JST
0x0da9
* Sun 05 Oct 2014 01:26:28 AM JST
0x0daa
* Sun 05 Oct 2014 01:26:28 AM JST
0x0dab
* Sun 05 Oct 2014 01:26:28 AM JST
0x0dac
* Sun 05 Oct 2014 01:26:28 AM JST
0x0dad
* Sun 05 Oct 2014 01:26:28 AM JST
0x0dae
* Sun 05 Oct 2014 01:26:28 AM JST
0x0daf
* Sun 05 Oct 2014 01:26:28 AM JST
0x0db0
* Sun 05 Oct 2014 01:26:28 AM JST
0x0db1
* Sun 05 Oct 2014 01:26:28 AM JST
0x0db2
* Sun 05 Oct 2014 01:26:29 AM JST
0x0db3
* Sun 05 Oct 2014 01:26:29 AM JST
0x0db4
* Sun 05 Oct 2014 01:26:29 AM JST
0x0db5
* Sun 05 Oct 2014 01:26:29 AM JST
0x0db6
* Sun 05 Oct 2014 01:26:29 AM JST
0x0db7
* Sun 05 Oct 2014 01:26:29 AM JST
0x0db8
* Sun 05 Oct 2014 01:26:29 AM JST
0x0db9
* Sun 05 Oct 2014 01:26:29 AM JST
0x0dba
* Sun 05 Oct 2014 01:26:29 AM JST
0x0dbb
* Sun 05 Oct 2014 01:26:29 AM JST
0x0dbc
* Sun 05 Oct 2014 01:26:29 AM JST
0x0dbd
* Sun 05 Oct 2014 01:26:30 AM JST
0x0dbe
* Sun 05 Oct 2014 01:26:30 AM JST
0x0dbf
* Sun 05 Oct 2014 01:26:30 AM JST
0x0dc0
* Sun 05 Oct 2014 01:26:30 AM JST
0x0dc1
* Sun 05 Oct 2014 01:26:30 AM JST
0x0dc2
* Sun 05 Oct 2014 01:26:30 AM JST
0x0dc3
* Sun 05 Oct 2014 01:26:30 AM JST
0x0dc4
* Sun 05 Oct 2014 01:26:30 AM JST
0x0dc5
* Sun 05 Oct 2014 01:26:30 AM JST
0x0dc6
* Sun 05 Oct 2014 01:26:30 AM JST
0x0dc7
* Sun 05 Oct 2014 01:26:30 AM JST
0x0dc8
* Sun 05 Oct 2014 01:26:31 AM JST
0x0dc9
* Sun 05 Oct 2014 01:26:31 AM JST
0x0dca
* Sun 05 Oct 2014 01:26:31 AM JST
0x0dcb
* Sun 05 Oct 2014 01:26:31 AM JST
0x0dcc
* Sun 05 Oct 2014 01:26:31 AM JST
0x0dcd
* Sun 05 Oct 2014 01:26:31 AM JST
0x0dce
* Sun 05 Oct 2014 01:26:31 AM JST
0x0dcf
* Sun 05 Oct 2014 01:26:31 AM JST
0x0dd0
* Sun 05 Oct 2014 01:26:31 AM JST
0x0dd1
* Sun 05 Oct 2014 01:26:32 AM JST
0x0dd2
* Sun 05 Oct 2014 01:26:32 AM JST
0x0dd3
* Sun 05 Oct 2014 01:26:32 AM JST
0x0dd4
* Sun 05 Oct 2014 01:26:32 AM JST
0x0dd5
* Sun 05 Oct 2014 01:26:32 AM JST
0x0dd6
* Sun 05 Oct 2014 01:26:32 AM JST
0x0dd7
* Sun 05 Oct 2014 01:26:32 AM JST
0x0dd8
* Sun 05 Oct 2014 01:26:32 AM JST
0x0dd9
* Sun 05 Oct 2014 01:26:32 AM JST
0x0dda
* Sun 05 Oct 2014 01:26:32 AM JST
0x0dde
* Sun 05 Oct 2014 01:26:32 AM JST
0x0ddf
* Sun 05 Oct 2014 01:26:33 AM JST
0x0de0
* Sun 05 Oct 2014 01:26:33 AM JST
0x0de1
* Sun 05 Oct 2014 01:26:33 AM JST
0x0de2
* Sun 05 Oct 2014 01:26:33 AM JST
0x0de3
* Sun 05 Oct 2014 01:26:33 AM JST
0x0de4
* Sun 05 Oct 2014 01:26:33 AM JST
0x0de5
* Sun 05 Oct 2014 01:26:33 AM JST
0x0de6
* Sun 05 Oct 2014 01:26:33 AM JST
0x0de7
* Sun 05 Oct 2014 01:26:33 AM JST
0x0de8
* Sun 05 Oct 2014 01:26:33 AM JST
0x0de9
* Sun 05 Oct 2014 01:26:33 AM JST
0x0dea
* Sun 05 Oct 2014 01:26:34 AM JST
0x0deb
* Sun 05 Oct 2014 01:26:34 AM JST
0x0dec
* Sun 05 Oct 2014 01:26:34 AM JST
0x0ded
* Sun 05 Oct 2014 01:26:34 AM JST
0x0df0
* Sun 05 Oct 2014 01:26:34 AM JST
0x0df1
* Sun 05 Oct 2014 01:26:34 AM JST
0x0df2
* Sun 05 Oct 2014 01:26:34 AM JST
0x0df3
* Sun 05 Oct 2014 01:26:34 AM JST
0x0df4
* Sun 05 Oct 2014 01:26:34 AM JST
0x0df5
* Sun 05 Oct 2014 01:26:35 AM JST
0x0df6
* Sun 05 Oct 2014 01:26:35 AM JST
0x0df7
* Sun 05 Oct 2014 01:26:35 AM JST
0x0df8
* Sun 05 Oct 2014 01:26:35 AM JST
0x0df9
* Sun 05 Oct 2014 01:26:35 AM JST
0xff31
* Sun 05 Oct 2014 01:26:35 AM JST
0xff32
* Sun 05 Oct 2014 01:26:35 AM JST
0xff33
* Sun 05 Oct 2014 01:26:35 AM JST
0xff34
* Sun 05 Oct 2014 01:26:35 AM JST
0xff35
* Sun 05 Oct 2014 01:26:35 AM JST
0xff36
* Sun 05 Oct 2014 01:26:35 AM JST
0xff37
* Sun 05 Oct 2014 01:26:36 AM JST
0xff38
* Sun 05 Oct 2014 01:26:36 AM JST
0xff39
* Sun 05 Oct 2014 01:26:36 AM JST
0xff3a
* Sun 05 Oct 2014 01:26:36 AM JST
0xff3b
* Sun 05 Oct 2014 01:26:36 AM JST
0xff3c
* Sun 05 Oct 2014 01:26:36 AM JST
0xff3d
* Sun 05 Oct 2014 01:26:36 AM JST
0xff3e
* Sun 05 Oct 2014 01:26:36 AM JST
0xff3f
* Sun 05 Oct 2014 01:26:36 AM JST
0xff7e
* Sun 05 Oct 2014 01:26:36 AM JST
0x0ea1
* Sun 05 Oct 2014 01:26:36 AM JST
0x0ea2
* Sun 05 Oct 2014 01:26:36 AM JST
0x0ea3
* Sun 05 Oct 2014 01:26:37 AM JST
0x0ea4
* Sun 05 Oct 2014 01:26:37 AM JST
0x0ea5
* Sun 05 Oct 2014 01:26:37 AM JST
0x0ea6
* Sun 05 Oct 2014 01:26:37 AM JST
0x0ea7
* Sun 05 Oct 2014 01:26:37 AM JST
0x0ea8
* Sun 05 Oct 2014 01:26:37 AM JST
0x0ea9
* Sun 05 Oct 2014 01:26:37 AM JST
0x0eaa
* Sun 05 Oct 2014 01:26:37 AM JST
0x0eab
* Sun 05 Oct 2014 01:26:37 AM JST
0x0eac
* Sun 05 Oct 2014 01:26:37 AM JST
0x0ead
* Sun 05 Oct 2014 01:26:37 AM JST
0x0eae
* Sun 05 Oct 2014 01:26:37 AM JST
0x0eaf
* Sun 05 Oct 2014 01:26:38 AM JST
0x0eb0
* Sun 05 Oct 2014 01:26:38 AM JST
0x0eb1
* Sun 05 Oct 2014 01:26:38 AM JST
0x0eb2
* Sun 05 Oct 2014 01:26:38 AM JST
0x0eb3
* Sun 05 Oct 2014 01:26:38 AM JST
0x0eb4
* Sun 05 Oct 2014 01:26:38 AM JST
0x0eb5
* Sun 05 Oct 2014 01:26:38 AM JST
0x0eb6
* Sun 05 Oct 2014 01:26:38 AM JST
0x0eb7
* Sun 05 Oct 2014 01:26:38 AM JST
0x0eb8
* Sun 05 Oct 2014 01:26:38 AM JST
0x0eb9
* Sun 05 Oct 2014 01:26:38 AM JST
0x0eba
* Sun 05 Oct 2014 01:26:38 AM JST
0x0ebb
* Sun 05 Oct 2014 01:26:39 AM JST
0x0ebc
* Sun 05 Oct 2014 01:26:39 AM JST
0x0ebd
* Sun 05 Oct 2014 01:26:39 AM JST
0x0ebe
* Sun 05 Oct 2014 01:26:39 AM JST
0x0ebf
* Sun 05 Oct 2014 01:26:39 AM JST
0x0ec0
* Sun 05 Oct 2014 01:26:39 AM JST
0x0ec1
* Sun 05 Oct 2014 01:26:39 AM JST
0x0ec2
* Sun 05 Oct 2014 01:26:39 AM JST
0x0ec3
* Sun 05 Oct 2014 01:26:39 AM JST
0x0ec4
* Sun 05 Oct 2014 01:26:39 AM JST
0x0ec5
* Sun 05 Oct 2014 01:26:39 AM JST
0x0ec6
* Sun 05 Oct 2014 01:26:39 AM JST
0x0ec7
* Sun 05 Oct 2014 01:26:40 AM JST
0x0ec8
* Sun 05 Oct 2014 01:26:40 AM JST
0x0ec9
* Sun 05 Oct 2014 01:26:40 AM JST
0x0eca
* Sun 05 Oct 2014 01:26:40 AM JST
0x0ecb
* Sun 05 Oct 2014 01:26:40 AM JST
0x0ecc
* Sun 05 Oct 2014 01:26:40 AM JST
0x0ecd
* Sun 05 Oct 2014 01:26:40 AM JST
0x0ece
* Sun 05 Oct 2014 01:26:40 AM JST
0x0ecf
* Sun 05 Oct 2014 01:26:40 AM JST
0x0ed0
* Sun 05 Oct 2014 01:26:40 AM JST
0x0ed1
* Sun 05 Oct 2014 01:26:40 AM JST
0x0ed2
* Sun 05 Oct 2014 01:26:41 AM JST
0x0ed3
* Sun 05 Oct 2014 01:26:41 AM JST
0x0ed4
* Sun 05 Oct 2014 01:26:41 AM JST
0x0ed5
* Sun 05 Oct 2014 01:26:41 AM JST
0x0ed6
* Sun 05 Oct 2014 01:26:41 AM JST
0x0ed7
* Sun 05 Oct 2014 01:26:41 AM JST
0x0ed8
* Sun 05 Oct 2014 01:26:41 AM JST
0x0ed9
* Sun 05 Oct 2014 01:26:41 AM JST
0x0eda
* Sun 05 Oct 2014 01:26:41 AM JST
0x0edb
* Sun 05 Oct 2014 01:26:41 AM JST
0x0edc
* Sun 05 Oct 2014 01:26:41 AM JST
0x0edd
* Sun 05 Oct 2014 01:26:41 AM JST
0x0ede
* Sun 05 Oct 2014 01:26:42 AM JST
0x0edf
* Sun 05 Oct 2014 01:26:42 AM JST
0x0ee0
* Sun 05 Oct 2014 01:26:42 AM JST
0x0ee1
* Sun 05 Oct 2014 01:26:42 AM JST
0x0ee2
* Sun 05 Oct 2014 01:26:42 AM JST
0x0ee3
* Sun 05 Oct 2014 01:26:42 AM JST
0x0ee4
* Sun 05 Oct 2014 01:26:42 AM JST
0x0ee5
* Sun 05 Oct 2014 01:26:42 AM JST
0x0ee6
* Sun 05 Oct 2014 01:26:42 AM JST
0x0ee7
* Sun 05 Oct 2014 01:26:42 AM JST
0x0ee8
* Sun 05 Oct 2014 01:26:42 AM JST
0x0ee9
* Sun 05 Oct 2014 01:26:43 AM JST
0x0eea
* Sun 05 Oct 2014 01:26:43 AM JST
0x0eeb
* Sun 05 Oct 2014 01:26:43 AM JST
0x0eec
* Sun 05 Oct 2014 01:26:43 AM JST
0x0eed
* Sun 05 Oct 2014 01:26:43 AM JST
0x0eee
* Sun 05 Oct 2014 01:26:43 AM JST
0x0eef
* Sun 05 Oct 2014 01:26:43 AM JST
0x0ef0
* Sun 05 Oct 2014 01:26:43 AM JST
0x0ef1
* Sun 05 Oct 2014 01:26:43 AM JST
0x0ef2
* Sun 05 Oct 2014 01:26:43 AM JST
0x0ef3
* Sun 05 Oct 2014 01:26:44 AM JST
0x0ef4
* Sun 05 Oct 2014 01:26:44 AM JST
0x0ef5
* Sun 05 Oct 2014 01:26:44 AM JST
0x0ef6
* Sun 05 Oct 2014 01:26:44 AM JST
0x0ef7
* Sun 05 Oct 2014 01:26:44 AM JST
0x0ef8
* Sun 05 Oct 2014 01:26:44 AM JST
0x0ef9
* Sun 05 Oct 2014 01:26:44 AM JST
0x0efa
* Sun 05 Oct 2014 01:26:44 AM JST
0x0eff
* Sun 05 Oct 2014 01:26:44 AM JST
0x1000587
* Sun 05 Oct 2014 01:26:45 AM JST
0x1000589
* Sun 05 Oct 2014 01:26:45 AM JST
0x1000589
* Sun 05 Oct 2014 01:26:45 AM JST
0x100055d
* Sun 05 Oct 2014 01:26:45 AM JST
0x100055d
* Sun 05 Oct 2014 01:26:45 AM JST
0x100058a
* Sun 05 Oct 2014 01:26:45 AM JST
0x100058a
* Sun 05 Oct 2014 01:26:45 AM JST
0x100055c
* Sun 05 Oct 2014 01:26:45 AM JST
0x100055c
* Sun 05 Oct 2014 01:26:45 AM JST
0x100055b
* Sun 05 Oct 2014 01:26:46 AM JST
0x100055b
* Sun 05 Oct 2014 01:26:46 AM JST
0x100055e
* Sun 05 Oct 2014 01:26:46 AM JST
0x100055e
* Sun 05 Oct 2014 01:26:46 AM JST
0x1000531
* Sun 05 Oct 2014 01:26:46 AM JST
0x1000561
* Sun 05 Oct 2014 01:26:46 AM JST
0x1000532
* Sun 05 Oct 2014 01:26:46 AM JST
0x1000562
* Sun 05 Oct 2014 01:26:46 AM JST
0x1000533
* Sun 05 Oct 2014 01:26:46 AM JST
0x1000563
* Sun 05 Oct 2014 01:26:46 AM JST
0x1000534
* Sun 05 Oct 2014 01:26:46 AM JST
0x1000564
* Sun 05 Oct 2014 01:26:47 AM JST
0x1000535
* Sun 05 Oct 2014 01:26:47 AM JST
0x1000565
* Sun 05 Oct 2014 01:26:47 AM JST
0x1000536
* Sun 05 Oct 2014 01:26:47 AM JST
0x1000566
* Sun 05 Oct 2014 01:26:47 AM JST
0x1000537
* Sun 05 Oct 2014 01:26:47 AM JST
0x1000567
* Sun 05 Oct 2014 01:26:47 AM JST
0x1000538
* Sun 05 Oct 2014 01:26:47 AM JST
0x1000568
* Sun 05 Oct 2014 01:26:47 AM JST
0x1000539
* Sun 05 Oct 2014 01:26:47 AM JST
0x1000569
* Sun 05 Oct 2014 01:26:47 AM JST
0x100053a
* Sun 05 Oct 2014 01:26:47 AM JST
0x100056a
* Sun 05 Oct 2014 01:26:48 AM JST
0x100053b
* Sun 05 Oct 2014 01:26:48 AM JST
0x100056b
* Sun 05 Oct 2014 01:26:48 AM JST
0x100053c
* Sun 05 Oct 2014 01:26:48 AM JST
0x100056c
* Sun 05 Oct 2014 01:26:48 AM JST
0x100053d
* Sun 05 Oct 2014 01:26:48 AM JST
0x100056d
* Sun 05 Oct 2014 01:26:48 AM JST
0x100053e
* Sun 05 Oct 2014 01:26:48 AM JST
0x100056e
* Sun 05 Oct 2014 01:26:48 AM JST
0x100053f
* Sun 05 Oct 2014 01:26:48 AM JST
0x100056f
* Sun 05 Oct 2014 01:26:48 AM JST
0x1000540
* Sun 05 Oct 2014 01:26:49 AM JST
0x1000570
* Sun 05 Oct 2014 01:26:49 AM JST
0x1000541
* Sun 05 Oct 2014 01:26:49 AM JST
0x1000571
* Sun 05 Oct 2014 01:26:49 AM JST
0x1000542
* Sun 05 Oct 2014 01:26:49 AM JST
0x1000572
* Sun 05 Oct 2014 01:26:49 AM JST
0x1000543
* Sun 05 Oct 2014 01:26:49 AM JST
0x1000573
* Sun 05 Oct 2014 01:26:49 AM JST
0x1000544
* Sun 05 Oct 2014 01:26:49 AM JST
0x1000574
* Sun 05 Oct 2014 01:26:49 AM JST
0x1000545
* Sun 05 Oct 2014 01:26:49 AM JST
0x1000575
* Sun 05 Oct 2014 01:26:50 AM JST
0x1000546
* Sun 05 Oct 2014 01:26:50 AM JST
0x1000576
* Sun 05 Oct 2014 01:26:50 AM JST
0x1000547
* Sun 05 Oct 2014 01:26:50 AM JST
0x1000577
* Sun 05 Oct 2014 01:26:50 AM JST
0x1000548
* Sun 05 Oct 2014 01:26:50 AM JST
0x1000578
* Sun 05 Oct 2014 01:26:50 AM JST
0x1000549
* Sun 05 Oct 2014 01:26:50 AM JST
0x1000579
* Sun 05 Oct 2014 01:26:50 AM JST
0x100054a
* Sun 05 Oct 2014 01:26:50 AM JST
0x100057a
* Sun 05 Oct 2014 01:26:50 AM JST
0x100054b
* Sun 05 Oct 2014 01:26:51 AM JST
0x100057b
* Sun 05 Oct 2014 01:26:51 AM JST
0x100054c
* Sun 05 Oct 2014 01:26:51 AM JST
0x100057c
* Sun 05 Oct 2014 01:26:51 AM JST
0x100054d
* Sun 05 Oct 2014 01:26:51 AM JST
0x100057d
* Sun 05 Oct 2014 01:26:51 AM JST
0x100054e
* Sun 05 Oct 2014 01:26:51 AM JST
0x100057e
* Sun 05 Oct 2014 01:26:51 AM JST
0x100054f
* Sun 05 Oct 2014 01:26:51 AM JST
0x100057f
* Sun 05 Oct 2014 01:26:51 AM JST
0x1000550
* Sun 05 Oct 2014 01:26:55 AM JST
0x1000580
* Sun 05 Oct 2014 01:26:55 AM JST
0x1000551
* Sun 05 Oct 2014 01:26:55 AM JST
0x1000581
* Sun 05 Oct 2014 01:26:56 AM JST
0x1000552
* Sun 05 Oct 2014 01:26:56 AM JST
0x1000582
* Sun 05 Oct 2014 01:26:56 AM JST
0x1000553
* Sun 05 Oct 2014 01:26:56 AM JST
0x1000583
* Sun 05 Oct 2014 01:26:56 AM JST
0x1000554
* Sun 05 Oct 2014 01:26:56 AM JST
0x1000584
* Sun 05 Oct 2014 01:26:57 AM JST
0x1000555
* Sun 05 Oct 2014 01:26:57 AM JST
0x1000585
* Sun 05 Oct 2014 01:26:57 AM JST
0x1000556
* Sun 05 Oct 2014 01:26:57 AM JST
0x1000586
* Sun 05 Oct 2014 01:26:57 AM JST
0x100055a
* Sun 05 Oct 2014 01:26:57 AM JST
0x10010d0
* Sun 05 Oct 2014 01:26:57 AM JST
0x10010d1
* Sun 05 Oct 2014 01:26:57 AM JST
0x10010d2
* Sun 05 Oct 2014 01:26:57 AM JST
0x10010d3
* Sun 05 Oct 2014 01:26:57 AM JST
0x10010d4
* Sun 05 Oct 2014 01:26:57 AM JST
0x10010d5
* Sun 05 Oct 2014 01:26:58 AM JST
0x10010d6
* Sun 05 Oct 2014 01:26:58 AM JST
0x10010d7
* Sun 05 Oct 2014 01:26:58 AM JST
0x10010d8
* Sun 05 Oct 2014 01:26:58 AM JST
0x10010d9
* Sun 05 Oct 2014 01:26:58 AM JST
0x10010da
* Sun 05 Oct 2014 01:26:58 AM JST
0x10010db
* Sun 05 Oct 2014 01:26:58 AM JST
0x10010dc
* Sun 05 Oct 2014 01:26:58 AM JST
0x10010dd
* Sun 05 Oct 2014 01:26:58 AM JST
0x10010de
* Sun 05 Oct 2014 01:26:58 AM JST
0x10010df
* Sun 05 Oct 2014 01:26:58 AM JST
0x10010e0
* Sun 05 Oct 2014 01:26:59 AM JST
0x10010e1
* Sun 05 Oct 2014 01:26:59 AM JST
0x10010e2
* Sun 05 Oct 2014 01:26:59 AM JST
0x10010e3
* Sun 05 Oct 2014 01:26:59 AM JST
0x10010e4
* Sun 05 Oct 2014 01:26:59 AM JST
0x10010e5
* Sun 05 Oct 2014 01:26:59 AM JST
0x10010e6
* Sun 05 Oct 2014 01:26:59 AM JST
0x10010e7
* Sun 05 Oct 2014 01:27:00 AM JST
0x10010e8
* Sun 05 Oct 2014 01:27:00 AM JST
0x10010e9
* Sun 05 Oct 2014 01:27:00 AM JST
0x10010ea
* Sun 05 Oct 2014 01:27:01 AM JST
0x10010eb
* Sun 05 Oct 2014 01:27:01 AM JST
0x10010ec
* Sun 05 Oct 2014 01:27:01 AM JST
0x10010ed
* Sun 05 Oct 2014 01:27:01 AM JST
0x10010ee
* Sun 05 Oct 2014 01:27:02 AM JST
0x10010ef
* Sun 05 Oct 2014 01:27:02 AM JST
0x10010f0
* Sun 05 Oct 2014 01:27:02 AM JST
0x10010f1
* Sun 05 Oct 2014 01:27:02 AM JST
0x10010f2
* Sun 05 Oct 2014 01:27:02 AM JST
0x10010f3
* Sun 05 Oct 2014 01:27:03 AM JST
0x10010f4
* Sun 05 Oct 2014 01:27:03 AM JST
0x10010f5
* Sun 05 Oct 2014 01:27:03 AM JST
0x10010f6
* Sun 05 Oct 2014 01:27:04 AM JST
0x1001e8a
* Sun 05 Oct 2014 01:27:04 AM JST
0x100012c
* Sun 05 Oct 2014 01:27:04 AM JST
0x10001b5
* Sun 05 Oct 2014 01:27:05 AM JST
0x10001e6
* Sun 05 Oct 2014 01:27:05 AM JST
0x10001d1
* Sun 05 Oct 2014 01:27:05 AM JST
0x100019f
* Sun 05 Oct 2014 01:27:05 AM JST
0x1001e8b
* Sun 05 Oct 2014 01:27:05 AM JST
0x100012d
* Sun 05 Oct 2014 01:27:05 AM JST
0x10001b6
* Sun 05 Oct 2014 01:27:06 AM JST
0x10001e7
* Sun 05 Oct 2014 01:27:06 AM JST
0x10001d2
* Sun 05 Oct 2014 01:27:06 AM JST
0x1000275
* Sun 05 Oct 2014 01:27:06 AM JST
0x100018f
* Sun 05 Oct 2014 01:27:06 AM JST
0x1000259
* Sun 05 Oct 2014 01:27:07 AM JST
0x10001b7
* Sun 05 Oct 2014 01:27:07 AM JST
0x1000292
* Sun 05 Oct 2014 01:27:07 AM JST
0x1001e36
* Sun 05 Oct 2014 01:27:07 AM JST
0x1001e37
* Sun 05 Oct 2014 01:27:08 AM JST
0x1001ea0
* Sun 05 Oct 2014 01:27:08 AM JST
0x1001ea1
* Sun 05 Oct 2014 01:27:08 AM JST
0x1001ea2
* Sun 05 Oct 2014 01:27:08 AM JST
0x1001ea3
* Sun 05 Oct 2014 01:27:08 AM JST
0x1001ea4
* Sun 05 Oct 2014 01:27:08 AM JST
0x1001ea5
* Sun 05 Oct 2014 01:27:09 AM JST
0x1001ea6
* Sun 05 Oct 2014 01:27:09 AM JST
0x1001ea7
* Sun 05 Oct 2014 01:27:09 AM JST
0x1001ea8
* Sun 05 Oct 2014 01:27:09 AM JST
0x1001ea9
* Sun 05 Oct 2014 01:27:09 AM JST
0x1001eaa
* Sun 05 Oct 2014 01:27:09 AM JST
0x1001eab
* Sun 05 Oct 2014 01:27:09 AM JST
0x1001eac
* Sun 05 Oct 2014 01:27:09 AM JST
0x1001ead
* Sun 05 Oct 2014 01:27:09 AM JST
0x1001eae
* Sun 05 Oct 2014 01:27:09 AM JST
0x1001eaf
* Sun 05 Oct 2014 01:27:10 AM JST
0x1001eb0
* Sun 05 Oct 2014 01:27:10 AM JST
0x1001eb1
* Sun 05 Oct 2014 01:27:10 AM JST
0x1001eb2
* Sun 05 Oct 2014 01:27:10 AM JST
0x1001eb3
* Sun 05 Oct 2014 01:27:10 AM JST
0x1001eb4
* Sun 05 Oct 2014 01:27:10 AM JST
0x1001eb5
* Sun 05 Oct 2014 01:27:11 AM JST
0x1001eb6
* Sun 05 Oct 2014 01:27:11 AM JST
0x1001eb7
* Sun 05 Oct 2014 01:27:11 AM JST
0x1001eb8
* Sun 05 Oct 2014 01:27:11 AM JST
0x1001eb9
* Sun 05 Oct 2014 01:27:12 AM JST
0x1001eba
* Sun 05 Oct 2014 01:27:12 AM JST
0x1001ebb
* Sun 05 Oct 2014 01:27:12 AM JST
0x1001ebc
* Sun 05 Oct 2014 01:27:12 AM JST
0x1001ebd
* Sun 05 Oct 2014 01:27:12 AM JST
0x1001ebe
* Sun 05 Oct 2014 01:27:13 AM JST
0x1001ebf
* Sun 05 Oct 2014 01:27:13 AM JST
0x1001ec0
* Sun 05 Oct 2014 01:27:13 AM JST
0x1001ec1
* Sun 05 Oct 2014 01:27:13 AM JST
0x1001ec2
* Sun 05 Oct 2014 01:27:13 AM JST
0x1001ec3
* Sun 05 Oct 2014 01:27:14 AM JST
0x1001ec4
* Sun 05 Oct 2014 01:27:14 AM JST
0x1001ec5
* Sun 05 Oct 2014 01:27:14 AM JST
0x1001ec6
* Sun 05 Oct 2014 01:27:14 AM JST
0x1001ec7
* Sun 05 Oct 2014 01:27:15 AM JST
0x1001ec8
* Sun 05 Oct 2014 01:27:15 AM JST
0x1001ec9
* Sun 05 Oct 2014 01:27:16 AM JST
0x1001eca
* Sun 05 Oct 2014 01:27:16 AM JST
0x1001ecb
* Sun 05 Oct 2014 01:27:16 AM JST
0x1001ecc
* Sun 05 Oct 2014 01:27:16 AM JST
0x1001ecd
* Sun 05 Oct 2014 01:27:17 AM JST
0x1001ece
* Sun 05 Oct 2014 01:27:17 AM JST
0x1001ecf
* Sun 05 Oct 2014 01:27:17 AM JST
0x1001ed0
* Sun 05 Oct 2014 01:27:17 AM JST
0x1001ed1
* Sun 05 Oct 2014 01:27:17 AM JST
0x1001ed2
* Sun 05 Oct 2014 01:27:17 AM JST
0x1001ed3
* Sun 05 Oct 2014 01:27:18 AM JST
0x1001ed4
* Sun 05 Oct 2014 01:27:18 AM JST
0x1001ed5
* Sun 05 Oct 2014 01:27:18 AM JST
0x1001ed6
* Sun 05 Oct 2014 01:27:18 AM JST
0x1001ed7
* Sun 05 Oct 2014 01:27:18 AM JST
0x1001ed8
* Sun 05 Oct 2014 01:27:18 AM JST
0x1001ed9
* Sun 05 Oct 2014 01:27:19 AM JST
0x1001eda
* Sun 05 Oct 2014 01:27:19 AM JST
0x1001edb
* Sun 05 Oct 2014 01:27:19 AM JST
0x1001edc
* Sun 05 Oct 2014 01:27:19 AM JST
0x1001edd
* Sun 05 Oct 2014 01:27:19 AM JST
0x1001ede
* Sun 05 Oct 2014 01:27:19 AM JST
0x1001edf
* Sun 05 Oct 2014 01:27:20 AM JST
0x1001ee0
* Sun 05 Oct 2014 01:27:20 AM JST
0x1001ee1
* Sun 05 Oct 2014 01:27:20 AM JST
0x1001ee2
* Sun 05 Oct 2014 01:27:20 AM JST
0x1001ee3
* Sun 05 Oct 2014 01:27:20 AM JST
0x1001ee4
* Sun 05 Oct 2014 01:27:20 AM JST
0x1001ee5
* Sun 05 Oct 2014 01:27:21 AM JST
0x1001ee6
* Sun 05 Oct 2014 01:27:21 AM JST
0x1001ee7
* Sun 05 Oct 2014 01:27:21 AM JST
0x1001ee8
* Sun 05 Oct 2014 01:27:21 AM JST
0x1001ee9
* Sun 05 Oct 2014 01:27:21 AM JST
0x1001eea
* Sun 05 Oct 2014 01:27:21 AM JST
0x1001eeb
* Sun 05 Oct 2014 01:27:22 AM JST
0x1001eec
* Sun 05 Oct 2014 01:27:22 AM JST
0x1001eed
* Sun 05 Oct 2014 01:27:22 AM JST
0x1001eee
* Sun 05 Oct 2014 01:27:22 AM JST
0x1001eef
* Sun 05 Oct 2014 01:27:22 AM JST
0x1001ef0
* Sun 05 Oct 2014 01:27:22 AM JST
0x1001ef1
* Sun 05 Oct 2014 01:27:23 AM JST
0x1001ef4
* Sun 05 Oct 2014 01:27:23 AM JST
0x1001ef5
* Sun 05 Oct 2014 01:27:23 AM JST
0x1001ef6
* Sun 05 Oct 2014 01:27:23 AM JST
0x1001ef7
* Sun 05 Oct 2014 01:27:23 AM JST
0x1001ef8
* Sun 05 Oct 2014 01:27:23 AM JST
0x1001ef9
* Sun 05 Oct 2014 01:27:24 AM JST
0x10001a0
* Sun 05 Oct 2014 01:27:24 AM JST
0x10001a1
* Sun 05 Oct 2014 01:27:24 AM JST
0x10001af
* Sun 05 Oct 2014 01:27:24 AM JST
0x10001b0
* Sun 05 Oct 2014 01:27:25 AM JST
0x10020a0
* Sun 05 Oct 2014 01:27:25 AM JST
0x10020a1
* Sun 05 Oct 2014 01:27:25 AM JST
0x10020a2
* Sun 05 Oct 2014 01:27:25 AM JST
0x10020a3
* Sun 05 Oct 2014 01:27:25 AM JST
0x10020a4
* Sun 05 Oct 2014 01:27:25 AM JST
0x10020a5
* Sun 05 Oct 2014 01:27:25 AM JST
0x10020a6
* Sun 05 Oct 2014 01:27:26 AM JST
0x10020a7
* Sun 05 Oct 2014 01:27:26 AM JST
0x10020a8
* Sun 05 Oct 2014 01:27:26 AM JST
0x10020a9
* Sun 05 Oct 2014 01:27:26 AM JST
0x10020aa
* Sun 05 Oct 2014 01:27:26 AM JST
0x10020ab
* Sun 05 Oct 2014 01:27:27 AM JST
0x20ac
* Sun 05 Oct 2014 01:27:27 AM JST
0x1002070
* Sun 05 Oct 2014 01:27:27 AM JST
0x1002074
* Sun 05 Oct 2014 01:27:27 AM JST
0x1002075
* Sun 05 Oct 2014 01:27:27 AM JST
0x1002076
* Sun 05 Oct 2014 01:27:28 AM JST
0x1002077
* Sun 05 Oct 2014 01:27:28 AM JST
0x1002078
* Sun 05 Oct 2014 01:27:28 AM JST
0x1002079
* Sun 05 Oct 2014 01:27:28 AM JST
0x1002080
* Sun 05 Oct 2014 01:27:28 AM JST
0x1002081
* Sun 05 Oct 2014 01:27:29 AM JST
0x1002082
* Sun 05 Oct 2014 01:27:29 AM JST
0x1002083
* Sun 05 Oct 2014 01:27:29 AM JST
0x1002084
* Sun 05 Oct 2014 01:27:29 AM JST
0x1002085
* Sun 05 Oct 2014 01:27:29 AM JST
0x1002086
* Sun 05 Oct 2014 01:27:29 AM JST
0x1002087
* Sun 05 Oct 2014 01:27:30 AM JST
0x1002088
* Sun 05 Oct 2014 01:27:30 AM JST
0x1002089
* Sun 05 Oct 2014 01:27:30 AM JST
0x1002202
* Sun 05 Oct 2014 01:27:30 AM JST
0x1002205
* Sun 05 Oct 2014 01:27:30 AM JST
0x1002208
* Sun 05 Oct 2014 01:27:31 AM JST
0x1002209
* Sun 05 Oct 2014 01:27:31 AM JST
0x100220B
* Sun 05 Oct 2014 01:27:31 AM JST
0x100221A
* Sun 05 Oct 2014 01:27:31 AM JST
0x100221B
* Sun 05 Oct 2014 01:27:31 AM JST
0x100221C
* Sun 05 Oct 2014 01:27:31 AM JST
0x100222C
* Sun 05 Oct 2014 01:27:32 AM JST
0x100222D
* Sun 05 Oct 2014 01:27:32 AM JST
0x1002235
* Sun 05 Oct 2014 01:27:32 AM JST
0x1002248
* Sun 05 Oct 2014 01:27:32 AM JST
0x1002247
* Sun 05 Oct 2014 01:27:33 AM JST
0x1002262
* Sun 05 Oct 2014 01:27:33 AM JST
0x1002263
* Sun 05 Oct 2014 01:27:33 AM JST
0xfff1
* Sun 05 Oct 2014 01:27:33 AM JST
0xfff2
* Sun 05 Oct 2014 01:27:34 AM JST
0xfff3
* Sun 05 Oct 2014 01:27:34 AM JST
0xfff4
* Sun 05 Oct 2014 01:27:34 AM JST
0xfff5
* Sun 05 Oct 2014 01:27:34 AM JST
0xfff6
* Sun 05 Oct 2014 01:27:34 AM JST
0xfff7
* Sun 05 Oct 2014 01:27:35 AM JST
0xfff8
* Sun 05 Oct 2014 01:27:35 AM JST
0xfff9
* Sun 05 Oct 2014 01:27:35 AM JST
0xfffa
* Sun 05 Oct 2014 01:27:35 AM JST
0x1002800
* Sun 05 Oct 2014 01:27:35 AM JST
0x1002801
* Sun 05 Oct 2014 01:27:35 AM JST
0x1002802
* Sun 05 Oct 2014 01:27:36 AM JST
0x1002803
* Sun 05 Oct 2014 01:27:36 AM JST
0x1002804
* Sun 05 Oct 2014 01:27:36 AM JST
0x1002805
* Sun 05 Oct 2014 01:27:36 AM JST
0x1002806
* Sun 05 Oct 2014 01:27:36 AM JST
0x1002807
* Sun 05 Oct 2014 01:27:37 AM JST
0x1002808
* Sun 05 Oct 2014 01:27:37 AM JST
0x1002809
* Sun 05 Oct 2014 01:27:37 AM JST
0x100280a
* Sun 05 Oct 2014 01:27:37 AM JST
0x100280b
* Sun 05 Oct 2014 01:27:37 AM JST
0x100280c
* Sun 05 Oct 2014 01:27:37 AM JST
0x100280d
* Sun 05 Oct 2014 01:27:37 AM JST
0x100280e
* Sun 05 Oct 2014 01:27:37 AM JST
0x100280f
* Sun 05 Oct 2014 01:27:37 AM JST
0x1002810
* Sun 05 Oct 2014 01:27:37 AM JST
0x1002811
* Sun 05 Oct 2014 01:27:37 AM JST
0x1002812
* Sun 05 Oct 2014 01:27:38 AM JST
0x1002813
* Sun 05 Oct 2014 01:27:38 AM JST
0x1002814
* Sun 05 Oct 2014 01:27:38 AM JST
0x1002815
* Sun 05 Oct 2014 01:27:38 AM JST
0x1002816
* Sun 05 Oct 2014 01:27:38 AM JST
0x1002817
* Sun 05 Oct 2014 01:27:39 AM JST
0x1002818
* Sun 05 Oct 2014 01:27:39 AM JST
0x1002819
* Sun 05 Oct 2014 01:27:40 AM JST
0x100281a
* Sun 05 Oct 2014 01:27:40 AM JST
0x100281b
* Sun 05 Oct 2014 01:27:40 AM JST
0x100281c
* Sun 05 Oct 2014 01:27:40 AM JST
0x100281d
* Sun 05 Oct 2014 01:27:40 AM JST
0x100281e
* Sun 05 Oct 2014 01:27:41 AM JST
0x100281f
* Sun 05 Oct 2014 01:27:41 AM JST
0x1002820
* Sun 05 Oct 2014 01:27:41 AM JST
0x1002821
* Sun 05 Oct 2014 01:27:41 AM JST
0x1002822
* Sun 05 Oct 2014 01:27:42 AM JST
0x1002823
* Sun 05 Oct 2014 01:27:42 AM JST
0x1002824
* Sun 05 Oct 2014 01:27:42 AM JST
0x1002825
* Sun 05 Oct 2014 01:27:42 AM JST
0x1002826
* Sun 05 Oct 2014 01:27:42 AM JST
0x1002827
* Sun 05 Oct 2014 01:27:43 AM JST
0x1002828
* Sun 05 Oct 2014 01:27:43 AM JST
0x1002829
* Sun 05 Oct 2014 01:27:43 AM JST
0x100282a
* Sun 05 Oct 2014 01:27:43 AM JST
0x100282b
* Sun 05 Oct 2014 01:27:43 AM JST
0x100282c
* Sun 05 Oct 2014 01:27:44 AM JST
0x100282d
* Sun 05 Oct 2014 01:27:44 AM JST
0x100282e
* Sun 05 Oct 2014 01:27:44 AM JST
0x100282f
* Sun 05 Oct 2014 01:27:44 AM JST
0x1002830
* Sun 05 Oct 2014 01:27:44 AM JST
0x1002831
* Sun 05 Oct 2014 01:27:45 AM JST
0x1002832
* Sun 05 Oct 2014 01:27:45 AM JST
0x1002833
* Sun 05 Oct 2014 01:27:45 AM JST
0x1002834
* Sun 05 Oct 2014 01:27:45 AM JST
0x1002835
* Sun 05 Oct 2014 01:27:45 AM JST
0x1002836
* Sun 05 Oct 2014 01:27:46 AM JST
0x1002837
* Sun 05 Oct 2014 01:27:46 AM JST
0x1002838
* Sun 05 Oct 2014 01:27:46 AM JST
0x1002839
* Sun 05 Oct 2014 01:27:46 AM JST
0x100283a
* Sun 05 Oct 2014 01:27:46 AM JST
0x100283b
* Sun 05 Oct 2014 01:27:47 AM JST
0x100283c
* Sun 05 Oct 2014 01:27:47 AM JST
0x100283d
* Sun 05 Oct 2014 01:27:47 AM JST
0x100283e
* Sun 05 Oct 2014 01:27:47 AM JST
0x100283f
* Sun 05 Oct 2014 01:27:47 AM JST
0x1002840
* Sun 05 Oct 2014 01:27:48 AM JST
0x1002841
* Sun 05 Oct 2014 01:27:48 AM JST
0x1002842
* Sun 05 Oct 2014 01:27:48 AM JST
0x1002843
* Sun 05 Oct 2014 01:27:48 AM JST
0x1002844
* Sun 05 Oct 2014 01:27:48 AM JST
0x1002845
* Sun 05 Oct 2014 01:27:49 AM JST
0x1002846
* Sun 05 Oct 2014 01:27:49 AM JST
0x1002847
* Sun 05 Oct 2014 01:27:49 AM JST
0x1002848
* Sun 05 Oct 2014 01:27:49 AM JST
0x1002849
* Sun 05 Oct 2014 01:27:49 AM JST
0x100284a
* Sun 05 Oct 2014 01:27:50 AM JST
0x100284b
* Sun 05 Oct 2014 01:27:50 AM JST
0x100284c
* Sun 05 Oct 2014 01:27:50 AM JST
0x100284d
* Sun 05 Oct 2014 01:27:50 AM JST
0x100284e
* Sun 05 Oct 2014 01:27:50 AM JST
0x100284f
* Sun 05 Oct 2014 01:27:51 AM JST
0x1002850
* Sun 05 Oct 2014 01:27:51 AM JST
0x1002851
* Sun 05 Oct 2014 01:27:51 AM JST
0x1002852
* Sun 05 Oct 2014 01:27:51 AM JST
0x1002853
* Sun 05 Oct 2014 01:27:51 AM JST
0x1002854
* Sun 05 Oct 2014 01:27:57 AM JST
0x1002855
* Sun 05 Oct 2014 01:27:57 AM JST
0x1002856
* Sun 05 Oct 2014 01:27:57 AM JST
0x1002857
* Sun 05 Oct 2014 01:27:57 AM JST
0x1002858
* Sun 05 Oct 2014 01:27:57 AM JST
0x1002859
* Sun 05 Oct 2014 01:27:57 AM JST
0x100285a
* Sun 05 Oct 2014 01:27:57 AM JST
0x100285b
* Sun 05 Oct 2014 01:27:58 AM JST
0x100285c
* Sun 05 Oct 2014 01:27:58 AM JST
0x100285d
* Sun 05 Oct 2014 01:27:58 AM JST
0x100285e
* Sun 05 Oct 2014 01:27:58 AM JST
0x100285f
* Sun 05 Oct 2014 01:27:58 AM JST
0x1002860
* Sun 05 Oct 2014 01:27:58 AM JST
0x1002861
* Sun 05 Oct 2014 01:27:58 AM JST
0x1002862
* Sun 05 Oct 2014 01:27:58 AM JST
0x1002863
* Sun 05 Oct 2014 01:27:58 AM JST
0x1002864
* Sun 05 Oct 2014 01:27:58 AM JST
0x1002865
* Sun 05 Oct 2014 01:27:59 AM JST
0x1002866
* Sun 05 Oct 2014 01:27:59 AM JST
0x1002867
* Sun 05 Oct 2014 01:27:59 AM JST
0x1002868
* Sun 05 Oct 2014 01:27:59 AM JST
0x1002869
* Sun 05 Oct 2014 01:27:59 AM JST
0x100286a
* Sun 05 Oct 2014 01:27:59 AM JST
0x100286b
* Sun 05 Oct 2014 01:27:59 AM JST
0x100286c
* Sun 05 Oct 2014 01:27:59 AM JST
0x100286d
* Sun 05 Oct 2014 01:27:59 AM JST
0x100286e
* Sun 05 Oct 2014 01:27:59 AM JST
0x100286f
* Sun 05 Oct 2014 01:27:59 AM JST
0x1002870
* Sun 05 Oct 2014 01:27:59 AM JST
0x1002871
* Sun 05 Oct 2014 01:28:00 AM JST
0x1002872
* Sun 05 Oct 2014 01:28:00 AM JST
0x1002873
* Sun 05 Oct 2014 01:28:00 AM JST
0x1002874
* Sun 05 Oct 2014 01:28:00 AM JST
0x1002875
* Sun 05 Oct 2014 01:28:00 AM JST
0x1002876
* Sun 05 Oct 2014 01:28:00 AM JST
0x1002877
* Sun 05 Oct 2014 01:28:00 AM JST
0x1002878
* Sun 05 Oct 2014 01:28:00 AM JST
0x1002879
* Sun 05 Oct 2014 01:28:00 AM JST
0x100287a
* Sun 05 Oct 2014 01:28:00 AM JST
0x100287b
* Sun 05 Oct 2014 01:28:00 AM JST
0x100287c
* Sun 05 Oct 2014 01:28:01 AM JST
0x100287d
* Sun 05 Oct 2014 01:28:01 AM JST
0x100287e
* Sun 05 Oct 2014 01:28:01 AM JST
0x100287f
* Sun 05 Oct 2014 01:28:01 AM JST
0x1002880
* Sun 05 Oct 2014 01:28:01 AM JST
0x1002881
* Sun 05 Oct 2014 01:28:01 AM JST
0x1002882
* Sun 05 Oct 2014 01:28:01 AM JST
0x1002883
* Sun 05 Oct 2014 01:28:01 AM JST
0x1002884
* Sun 05 Oct 2014 01:28:01 AM JST
0x1002885
* Sun 05 Oct 2014 01:28:02 AM JST
0x1002886
* Sun 05 Oct 2014 01:28:02 AM JST
0x1002887
* Sun 05 Oct 2014 01:28:02 AM JST
0x1002888
* Sun 05 Oct 2014 01:28:02 AM JST
0x1002889
* Sun 05 Oct 2014 01:28:02 AM JST
0x100288a
* Sun 05 Oct 2014 01:28:02 AM JST
0x100288b
* Sun 05 Oct 2014 01:28:02 AM JST
0x100288c
* Sun 05 Oct 2014 01:28:02 AM JST
0x100288d
* Sun 05 Oct 2014 01:28:02 AM JST
0x100288e
* Sun 05 Oct 2014 01:28:02 AM JST
0x100288f
* Sun 05 Oct 2014 01:28:02 AM JST
0x1002890
* Sun 05 Oct 2014 01:28:03 AM JST
0x1002891
* Sun 05 Oct 2014 01:28:03 AM JST
0x1002892
* Sun 05 Oct 2014 01:28:03 AM JST
0x1002893
* Sun 05 Oct 2014 01:28:03 AM JST
0x1002894
* Sun 05 Oct 2014 01:28:03 AM JST
0x1002895
* Sun 05 Oct 2014 01:28:03 AM JST
0x1002896
* Sun 05 Oct 2014 01:28:03 AM JST
0x1002897
* Sun 05 Oct 2014 01:28:03 AM JST
0x1002898
* Sun 05 Oct 2014 01:28:03 AM JST
0x1002899
* Sun 05 Oct 2014 01:28:03 AM JST
0x100289a
* Sun 05 Oct 2014 01:28:04 AM JST
0x100289b
* Sun 05 Oct 2014 01:28:04 AM JST
0x100289c
* Sun 05 Oct 2014 01:28:04 AM JST
0x100289d
* Sun 05 Oct 2014 01:28:04 AM JST
0x100289e
* Sun 05 Oct 2014 01:28:04 AM JST
0x100289f
* Sun 05 Oct 2014 01:28:04 AM JST
0x10028a0
* Sun 05 Oct 2014 01:28:04 AM JST
0x10028a1
* Sun 05 Oct 2014 01:28:04 AM JST
0x10028a2
* Sun 05 Oct 2014 01:28:05 AM JST
0x10028a3
* Sun 05 Oct 2014 01:28:05 AM JST
0x10028a4
* Sun 05 Oct 2014 01:28:05 AM JST
0x10028a5
* Sun 05 Oct 2014 01:28:05 AM JST
0x10028a6
* Sun 05 Oct 2014 01:28:05 AM JST
0x10028a7
* Sun 05 Oct 2014 01:28:05 AM JST
0x10028a8
* Sun 05 Oct 2014 01:28:05 AM JST
0x10028a9
* Sun 05 Oct 2014 01:28:05 AM JST
0x10028aa
* Sun 05 Oct 2014 01:28:05 AM JST
0x10028ab
* Sun 05 Oct 2014 01:28:05 AM JST
0x10028ac
* Sun 05 Oct 2014 01:28:06 AM JST
0x10028ad
* Sun 05 Oct 2014 01:28:06 AM JST
0x10028ae
* Sun 05 Oct 2014 01:28:06 AM JST
0x10028af
* Sun 05 Oct 2014 01:28:06 AM JST
0x10028b0
* Sun 05 Oct 2014 01:28:06 AM JST
0x10028b1
* Sun 05 Oct 2014 01:28:06 AM JST
0x10028b2
* Sun 05 Oct 2014 01:28:06 AM JST
0x10028b3
* Sun 05 Oct 2014 01:28:06 AM JST
0x10028b4
* Sun 05 Oct 2014 01:28:06 AM JST
0x10028b5
* Sun 05 Oct 2014 01:28:06 AM JST
0x10028b6
* Sun 05 Oct 2014 01:28:06 AM JST
0x10028b7
* Sun 05 Oct 2014 01:28:06 AM JST
0x10028b8
* Sun 05 Oct 2014 01:28:07 AM JST
0x10028b9
* Sun 05 Oct 2014 01:28:08 AM JST
0x10028ba
* Sun 05 Oct 2014 01:28:08 AM JST
0x10028bb
* Sun 05 Oct 2014 01:28:08 AM JST
0x10028bc
* Sun 05 Oct 2014 01:28:08 AM JST
0x10028bd
* Sun 05 Oct 2014 01:28:08 AM JST
0x10028be
* Sun 05 Oct 2014 01:28:09 AM JST
0x10028bf
* Sun 05 Oct 2014 01:28:09 AM JST
0x10028c0
* Sun 05 Oct 2014 01:28:09 AM JST
0x10028c1
* Sun 05 Oct 2014 01:28:09 AM JST
0x10028c2
* Sun 05 Oct 2014 01:28:09 AM JST
0x10028c3
* Sun 05 Oct 2014 01:28:10 AM JST
0x10028c4
* Sun 05 Oct 2014 01:28:10 AM JST
0x10028c5
* Sun 05 Oct 2014 01:28:11 AM JST
0x10028c6
* Sun 05 Oct 2014 01:28:11 AM JST
0x10028c7
* Sun 05 Oct 2014 01:28:11 AM JST
0x10028c8
* Sun 05 Oct 2014 01:28:11 AM JST
0x10028c9
* Sun 05 Oct 2014 01:28:11 AM JST
0x10028ca
* Sun 05 Oct 2014 01:28:11 AM JST
0x10028cb
* Sun 05 Oct 2014 01:28:12 AM JST
0x10028cc
* Sun 05 Oct 2014 01:28:12 AM JST
0x10028cd
* Sun 05 Oct 2014 01:28:12 AM JST
0x10028ce
* Sun 05 Oct 2014 01:28:12 AM JST
0x10028cf
* Sun 05 Oct 2014 01:28:12 AM JST
0x10028d0
* Sun 05 Oct 2014 01:28:12 AM JST
0x10028d1
* Sun 05 Oct 2014 01:28:13 AM JST
0x10028d2
* Sun 05 Oct 2014 01:28:13 AM JST
0x10028d3
* Sun 05 Oct 2014 01:28:13 AM JST
0x10028d4
* Sun 05 Oct 2014 01:28:13 AM JST
0x10028d5
* Sun 05 Oct 2014 01:28:13 AM JST
0x10028d6
* Sun 05 Oct 2014 01:28:14 AM JST
0x10028d7
* Sun 05 Oct 2014 01:28:14 AM JST
0x10028d8
* Sun 05 Oct 2014 01:28:14 AM JST
0x10028d9
* Sun 05 Oct 2014 01:28:14 AM JST
0x10028da
* Sun 05 Oct 2014 01:28:14 AM JST
0x10028db
* Sun 05 Oct 2014 01:28:15 AM JST
0x10028dc
* Sun 05 Oct 2014 01:28:15 AM JST
0x10028dd
* Sun 05 Oct 2014 01:28:15 AM JST
0x10028de
* Sun 05 Oct 2014 01:28:15 AM JST
0x10028df
* Sun 05 Oct 2014 01:28:15 AM JST
0x10028e0
* Sun 05 Oct 2014 01:28:15 AM JST
0x10028e1
* Sun 05 Oct 2014 01:28:16 AM JST
0x10028e2
* Sun 05 Oct 2014 01:28:16 AM JST
0x10028e3
* Sun 05 Oct 2014 01:28:16 AM JST
0x10028e4
* Sun 05 Oct 2014 01:28:16 AM JST
0x10028e5
* Sun 05 Oct 2014 01:28:17 AM JST
0x10028e6
* Sun 05 Oct 2014 01:28:17 AM JST
0x10028e7
* Sun 05 Oct 2014 01:28:17 AM JST
0x10028e8
* Sun 05 Oct 2014 01:28:17 AM JST
0x10028e9
* Sun 05 Oct 2014 01:28:18 AM JST
0x10028ea
* Sun 05 Oct 2014 01:28:18 AM JST
0x10028eb
* Sun 05 Oct 2014 01:28:18 AM JST
0x10028ec
* Sun 05 Oct 2014 01:28:18 AM JST
0x10028ed
* Sun 05 Oct 2014 01:28:18 AM JST
0x10028ee
* Sun 05 Oct 2014 01:28:19 AM JST
0x10028ef
* Sun 05 Oct 2014 01:28:19 AM JST
0x10028f0
* Sun 05 Oct 2014 01:28:19 AM JST
0x10028f1
* Sun 05 Oct 2014 01:28:19 AM JST
0x10028f2
* Sun 05 Oct 2014 01:28:24 AM JST
0x10028f3
* Sun 05 Oct 2014 01:28:25 AM JST
0x10028f4
* Sun 05 Oct 2014 01:28:25 AM JST
0x10028f5
* Sun 05 Oct 2014 01:28:25 AM JST
0x10028f6
* Sun 05 Oct 2014 01:28:25 AM JST
0x10028f7
* Sun 05 Oct 2014 01:28:25 AM JST
0x10028f8
* Sun 05 Oct 2014 01:28:25 AM JST
0x10028f9
* Sun 05 Oct 2014 01:28:25 AM JST
0x10028fa
* Sun 05 Oct 2014 01:28:25 AM JST
0x10028fb
* Sun 05 Oct 2014 01:28:25 AM JST
0x10028fc
* Sun 05 Oct 2014 01:28:25 AM JST
0x10028fd
* Sun 05 Oct 2014 01:28:25 AM JST
0x10028fe
* Sun 05 Oct 2014 01:28:26 AM JST
0x10028ff
* Sun 05 Oct 2014 01:28:26 AM JST
0x1000d82
* Sun 05 Oct 2014 01:28:26 AM JST
0x1000d83
* Sun 05 Oct 2014 01:28:26 AM JST
0x1000d85
* Sun 05 Oct 2014 01:28:26 AM JST
0x1000d86
* Sun 05 Oct 2014 01:28:26 AM JST
0x1000d87
* Sun 05 Oct 2014 01:28:26 AM JST
0x1000d88
* Sun 05 Oct 2014 01:28:26 AM JST
0x1000d89
* Sun 05 Oct 2014 01:28:26 AM JST
0x1000d8a
* Sun 05 Oct 2014 01:28:26 AM JST
0x1000d8b
* Sun 05 Oct 2014 01:28:26 AM JST
0x1000d8c
* Sun 05 Oct 2014 01:28:27 AM JST
0x1000d8d
* Sun 05 Oct 2014 01:28:27 AM JST
0x1000d8e
* Sun 05 Oct 2014 01:28:27 AM JST
0x1000d8f
* Sun 05 Oct 2014 01:28:27 AM JST
0x1000d90
* Sun 05 Oct 2014 01:28:27 AM JST
0x1000d91
* Sun 05 Oct 2014 01:28:27 AM JST
0x1000d92
* Sun 05 Oct 2014 01:28:27 AM JST
0x1000d93
* Sun 05 Oct 2014 01:28:27 AM JST
0x1000d94
* Sun 05 Oct 2014 01:28:27 AM JST
0x1000d95
* Sun 05 Oct 2014 01:28:27 AM JST
0x1000d96
* Sun 05 Oct 2014 01:28:28 AM JST
0x1000d9a
* Sun 05 Oct 2014 01:28:28 AM JST
0x1000d9b
* Sun 05 Oct 2014 01:28:28 AM JST
0x1000d9c
* Sun 05 Oct 2014 01:28:28 AM JST
0x1000d9d
* Sun 05 Oct 2014 01:28:28 AM JST
0x1000d9e
* Sun 05 Oct 2014 01:28:28 AM JST
0x1000d9f
* Sun 05 Oct 2014 01:28:28 AM JST
0x1000da0
* Sun 05 Oct 2014 01:28:28 AM JST
0x1000da1
* Sun 05 Oct 2014 01:28:28 AM JST
0x1000da2
* Sun 05 Oct 2014 01:28:28 AM JST
0x1000da3
* Sun 05 Oct 2014 01:28:28 AM JST
0x1000da4
* Sun 05 Oct 2014 01:28:29 AM JST
0x1000da5
* Sun 05 Oct 2014 01:28:29 AM JST
0x1000da6
* Sun 05 Oct 2014 01:28:29 AM JST
0x1000da7
* Sun 05 Oct 2014 01:28:29 AM JST
0x1000da8
* Sun 05 Oct 2014 01:28:29 AM JST
0x1000da9
* Sun 05 Oct 2014 01:28:29 AM JST
0x1000daa
* Sun 05 Oct 2014 01:28:29 AM JST
0x1000dab
* Sun 05 Oct 2014 01:28:29 AM JST
0x1000dac
* Sun 05 Oct 2014 01:28:29 AM JST
0x1000dad
* Sun 05 Oct 2014 01:28:29 AM JST
0x1000dae
* Sun 05 Oct 2014 01:28:29 AM JST
0x1000daf
* Sun 05 Oct 2014 01:28:30 AM JST
0x1000db0
* Sun 05 Oct 2014 01:28:30 AM JST
0x1000db1
* Sun 05 Oct 2014 01:28:30 AM JST
0x1000db3
* Sun 05 Oct 2014 01:28:30 AM JST
0x1000db4
* Sun 05 Oct 2014 01:28:30 AM JST
0x1000db5
* Sun 05 Oct 2014 01:28:30 AM JST
0x1000db6
* Sun 05 Oct 2014 01:28:30 AM JST
0x1000db7
* Sun 05 Oct 2014 01:28:30 AM JST
0x1000db8
* Sun 05 Oct 2014 01:28:30 AM JST
0x1000db9
* Sun 05 Oct 2014 01:28:30 AM JST
0x1000dba
* Sun 05 Oct 2014 01:28:30 AM JST
0x1000dbb
* Sun 05 Oct 2014 01:28:31 AM JST
0x1000dbd
* Sun 05 Oct 2014 01:28:31 AM JST
0x1000dc0
* Sun 05 Oct 2014 01:28:31 AM JST
0x1000dc1
* Sun 05 Oct 2014 01:28:31 AM JST
0x1000dc2
* Sun 05 Oct 2014 01:28:31 AM JST
0x1000dc3
* Sun 05 Oct 2014 01:28:31 AM JST
0x1000dc4
* Sun 05 Oct 2014 01:28:31 AM JST
0x1000dc5
* Sun 05 Oct 2014 01:28:31 AM JST
0x1000dc6
* Sun 05 Oct 2014 01:28:31 AM JST
0x1000dca
* Sun 05 Oct 2014 01:28:31 AM JST
0x1000dcf
* Sun 05 Oct 2014 01:28:31 AM JST
0x1000dd0
* Sun 05 Oct 2014 01:28:31 AM JST
0x1000dd1
* Sun 05 Oct 2014 01:28:32 AM JST
0x1000dd2
* Sun 05 Oct 2014 01:28:32 AM JST
0x1000dd3
* Sun 05 Oct 2014 01:28:34 AM JST
0x1000dd4
* Sun 05 Oct 2014 01:28:34 AM JST
0x1000dd6
* Sun 05 Oct 2014 01:28:35 AM JST
0x1000dd8
* Sun 05 Oct 2014 01:28:35 AM JST
0x1000dd9
* Sun 05 Oct 2014 01:28:35 AM JST
0x1000dda
* Sun 05 Oct 2014 01:28:35 AM JST
0x1000ddb
* Sun 05 Oct 2014 01:28:35 AM JST
0x1000ddc
* Sun 05 Oct 2014 01:28:36 AM JST
0x1000ddd
* Sun 05 Oct 2014 01:28:36 AM JST
0x1000dde
* Sun 05 Oct 2014 01:28:36 AM JST
0x1000ddf
* Sun 05 Oct 2014 01:28:36 AM JST
0x1000df2
* Sun 05 Oct 2014 01:28:37 AM JST
0x1000df3
* Sun 05 Oct 2014 01:28:37 AM JST
0x1000df4
* Sun 05 Oct 2014 01:28:43 AM JST
[0xffffff, 0xff08, 0xff09, 0xff0a, 0xff0b, 0xff0d, 0xff13,
0xff14, 0xff15, 0xff1b, 0xffff, 0xff20, 0xff37, 0xff3c,
0xff3d, 0xff3e, 0xff21, 0xff22, 0xff23, 0xff23, 0xff24,
0xff25, 0xff26, 0xff27, 0xff28, 0xff29, 0xff2a, 0xff2b,
0xff2c, 0xff2d, 0xff2e, 0xff2f, 0xff30, 0xff37, 0xff3d,
0xff3e, 0xff50, 0xff51, 0xff52, 0xff53, 0xff54, 0xff55,
0xff55, 0xff56, 0xff56, 0xff57, 0xff58, 0xff60, 0xff61,
0xff62, 0xff63, 0xff65, 0xff66, 0xff67, 0xff68, 0xff69,
0xff6a, 0xff6b, 0xff7e, 0xff7e, 0xff7f, 0xff80, 0xff89,
0xff8d, 0xff91, 0xff92, 0xff93, 0xff94, 0xff95, 0xff96,
0xff97, 0xff98, 0xff99, 0xff9a, 0xff9a, 0xff9b, 0xff9b,
0xff9c, 0xff9d, 0xff9e, 0xff9f, 0xffbd, 0xffaa, 0xffab,
0xffac, 0xffad, 0xffae, 0xffaf, 0xffb0, 0xffb1, 0xffb2,
0xffb3, 0xffb4, 0xffb5, 0xffb6, 0xffb7, 0xffb8, 0xffb9,
0xffbe, 0xffbf, 0xffc0, 0xffc1, 0xffc2, 0xffc3, 0xffc4,
0xffc5, 0xffc6, 0xffc7, 0xffc8, 0xffc8, 0xffc9, 0xffc9,
0xffca, 0xffca, 0xffcb, 0xffcb, 0xffcc, 0xffcc, 0xffcd,
0xffcd, 0xffce, 0xffce, 0xffcf, 0xffcf, 0xffd0, 0xffd0,
0xffd1, 0xffd1, 0xffd2, 0xffd2, 0xffd3, 0xffd3, 0xffd4,
0xffd4, 0xffd5, 0xffd5, 0xffd6, 0xffd6, 0xffd7, 0xffd7,
0xffd8, 0xffd8, 0xffd9, 0xffd9, 0xffda, 0xffda, 0xffdb,
0xffdb, 0xffdc, 0xffdc, 0xffdd, 0xffdd, 0xffde, 0xffde,
0xffdf, 0xffdf, 0xffe0, 0xffe0, 0xffe1, 0xffe2, 0xffe3,
0xffe4, 0xffe5, 0xffe6, 0xffe7, 0xffe8, 0xffe9, 0xffea,
0xffeb, 0xffec, 0xffed, 0xffee, 0xfe01, 0xfe02, 0xfe03,
0xfe04, 0xfe05, 0xfe11, 0xfe12, 0xfe13, 0xff7e, 0xfe06,
0xfe07, 0xfe08, 0xfe09, 0xfe0a, 0xfe0b, 0xfe0c, 0xfe0d,
0xfe0e, 0xfe0f, 0xfe20, 0xfe21, 0xfe22, 0xfe23, 0xfe24,
0xfe25, 0xfe26, 0xfe27, 0xfe28, 0xfe29, 0xfe2a, 0xfe2b,
0xfe2c, 0xfe2d, 0xfe2e, 0xfe2f, 0xfe30, 0xfe31, 0xfe32,
0xfe33, 0xfe34, 0xfe50, 0xfe51, 0xfe52, 0xfe53, 0xfe53,
0xfe54, 0xfe55, 0xfe56, 0xfe57, 0xfe58, 0xfe59, 0xfe5a,
0xfe5b, 0xfe5c, 0xfe5d, 0xfe5e, 0xfe5f, 0xfe60, 0xfe61,
0xfe62, 0xfe63, 0xfe64, 0xfe64, 0xfe65, 0xfe65, 0xfe66,
0xfe67, 0xfe68, 0xfe69, 0xfe6a, 0xfe6b, 0xfe6c, 0xfe6d,
0xfe6e, 0xfe6f, 0xfe80, 0xfe81, 0xfe82, 0xfe83, 0xfe84,
0xfe85, 0xfe86, 0xfe87, 0xfe88, 0xfe89, 0xfe8a, 0xfe8b,
0xfe8c, 0xfed0, 0xfed1, 0xfed2, 0xfed4, 0xfed5, 0xfe70,
0xfe71, 0xfe72, 0xfe73, 0xfe74, 0xfe75, 0xfe76, 0xfe77,
0xfe78, 0xfe79, 0xfe7a, 0xfee0, 0xfee1, 0xfee2, 0xfee3,
0xfee4, 0xfee5, 0xfee6, 0xfee7, 0xfee8, 0xfee9, 0xfeea,
0xfeeb, 0xfeec, 0xfeed, 0xfeee, 0xfeef, 0xfef0, 0xfef1,
0xfef2, 0xfef3, 0xfef4, 0xfef5, 0xfef6, 0xfef7, 0xfef8,
0xfefd, 0xfef9, 0xfefa, 0xfefb, 0xfefc, 0xfea0, 0xfea1,
0xfea2, 0xfea3, 0xfea4, 0xfea5, 0xfd01, 0xfd02, 0xfd03,
0xfd04, 0xfd05, 0xfd06, 0xfd07, 0xfd08, 0xfd09, 0xfd0a,
0xfd0b, 0xfd0c, 0xfd0d, 0xfd0e, 0xfd0f, 0xfd10, 0xfd11,
0xfd12, 0xfd13, 0xfd14, 0xfd15, 0xfd16, 0xfd17, 0xfd18,
0xfd19, 0xfd1a, 0xfd1b, 0xfd1c, 0xfd1d, 0xfd1e, 0x0020,
0x0021, 0x0022, 0x0023, 0x0024, 0x0025, 0x0026, 0x0027,
0x0027, 0x0028, 0x0029, 0x002a, 0x002b, 0x002c, 0x002d,
0x002e, 0x002f, 0x0030, 0x0031, 0x0032, 0x0033, 0x0034,
0x0035, 0x0036, 0x0037, 0x0038, 0x0039, 0x003a, 0x003b,
0x003c, 0x003d, 0x003e, 0x003f, 0x0040, 0x0041, 0x0042,
0x0043, 0x0044, 0x0045, 0x0046, 0x0047, 0x0048, 0x0049,
0x004a, 0x004b, 0x004c, 0x004d, 0x004e, 0x004f, 0x0050,
0x0051, 0x0052, 0x0053, 0x0054, 0x0055, 0x0056, 0x0057,
0x0058, 0x0059, 0x005a, 0x005b, 0x005c, 0x005d, 0x005e,
0x005f, 0x0060, 0x0060, 0x0061, 0x0062, 0x0063, 0x0064,
0x0065, 0x0066, 0x0067, 0x0068, 0x0069, 0x006a, 0x006b,
0x006c, 0x006d, 0x006e, 0x006f, 0x0070, 0x0071, 0x0072,
0x0073, 0x0074, 0x0075, 0x0076, 0x0077, 0x0078, 0x0079,
0x007a, 0x007b, 0x007c, 0x007d, 0x007e, 0x00a0, 0x00a1,
0x00a2, 0x00a3, 0x00a4, 0x00a5, 0x00a6, 0x00a7, 0x00a8,
0x00a9, 0x00aa, 0x00ab, 0x00ac, 0x00ad, 0x00ae, 0x00af,
0x00b0, 0x00b1, 0x00b2, 0x00b3, 0x00b4, 0x00b5, 0x00b6,
0x00b7, 0x00b8, 0x00b9, 0x00ba, 0x00bb, 0x00bc, 0x00bd,
0x00be, 0x00bf, 0x00c0, 0x00c1, 0x00c2, 0x00c3, 0x00c4,
0x00c5, 0x00c6, 0x00c7, 0x00c8, 0x00c9, 0x00ca, 0x00cb,
0x00cc, 0x00cd, 0x00ce, 0x00cf, 0x00d0, 0x00d0, 0x00d1,
0x00d2, 0x00d3, 0x00d4, 0x00d5, 0x00d6, 0x00d7, 0x00d8,
0x00d8, 0x00d9, 0x00da, 0x00db, 0x00dc, 0x00dd, 0x00de,
0x00de, 0x00df, 0x00e0, 0x00e1, 0x00e2, 0x00e3, 0x00e4,
0x00e5, 0x00e6, 0x00e7, 0x00e8, 0x00e9, 0x00ea, 0x00eb,
0x00ec, 0x00ed, 0x00ee, 0x00ef, 0x00f0, 0x00f1, 0x00f2,
0x00f3, 0x00f4, 0x00f5, 0x00f6, 0x00f7, 0x00f8, 0x00f8,
0x00f9, 0x00fa, 0x00fb, 0x00fc, 0x00fd, 0x00fe, 0x00ff,
0x01a1, 0x01a2, 0x01a3, 0x01a5, 0x01a6, 0x01a9, 0x01aa,
0x01ab, 0x01ac, 0x01ae, 0x01af, 0x01b1, 0x01b2, 0x01b3,
0x01b5, 0x01b6, 0x01b7, 0x01b9, 0x01ba, 0x01bb, 0x01bc,
0x01bd, 0x01be, 0x01bf, 0x01c0, 0x01c3, 0x01c5, 0x01c6,
0x01c8, 0x01ca, 0x01cc, 0x01cf, 0x01d0, 0x01d1, 0x01d2,
0x01d5, 0x01d8, 0x01d9, 0x01db, 0x01de, 0x01e0, 0x01e3,
0x01e5, 0x01e6, 0x01e8, 0x01ea, 0x01ec, 0x01ef, 0x01f0,
0x01f1, 0x01f2, 0x01f5, 0x01f8, 0x01f9, 0x01fb, 0x01fe,
0x01ff, 0x02a1, 0x02a6, 0x02a9, 0x02ab, 0x02ac, 0x02b1,
0x02b6, 0x02b9, 0x02bb, 0x02bc, 0x02c5, 0x02c6, 0x02d5,
0x02d8, 0x02dd, 0x02de, 0x02e5, 0x02e6, 0x02f5, 0x02f8,
0x02fd, 0x02fe, 0x03a2, 0x03a2, 0x03a3, 0x03a5, 0x03a6,
0x03aa, 0x03ab, 0x03ac, 0x03b3, 0x03b5, 0x03b6, 0x03ba,
0x03bb, 0x03bc, 0x03bd, 0x03bf, 0x03c0, 0x03c7, 0x03cc,
0x03cf, 0x03d1, 0x03d2, 0x03d3, 0x03d9, 0x03dd, 0x03de,
0x03e0, 0x03e7, 0x03ec, 0x03ef, 0x03f1, 0x03f2, 0x03f3,
0x03f9, 0x03fd, 0x03fe, 0x1000174, 0x1000175, 0x1000176,
0x1000177, 0x1001e02, 0x1001e03, 0x1001e0a, 0x1001e0b,
0x1001e1e, 0x1001e1f, 0x1001e40, 0x1001e41, 0x1001e56,
0x1001e57, 0x1001e60, 0x1001e61, 0x1001e6a, 0x1001e6b,
0x1001e80, 0x1001e81, 0x1001e82, 0x1001e83, 0x1001e84,
0x1001e85, 0x1001ef2, 0x1001ef3, 0x13bc, 0x13bd, 0x13be,
0x047e, 0x04a1, 0x04a2, 0x04a3, 0x04a4, 0x04a5, 0x04a5,
0x04a6, 0x04a7, 0x04a8, 0x04a9, 0x04aa, 0x04ab, 0x04ac,
0x04ad, 0x04ae, 0x04af, 0x04af, 0x04b0, 0x04b1, 0x04b2,
0x04b3, 0x04b4, 0x04b5, 0x04b6, 0x04b7, 0x04b8, 0x04b9,
0x04ba, 0x04bb, 0x04bc, 0x04bd, 0x04be, 0x04bf, 0x04c0,
0x04c1, 0x04c1, 0x04c2, 0x04c2, 0x04c3, 0x04c4, 0x04c5,
0x04c6, 0x04c7, 0x04c8, 0x04c9, 0x04ca, 0x04cb, 0x04cc,
0x04cc, 0x04cd, 0x04ce, 0x04cf, 0x04d0, 0x04d1, 0x04d2,
0x04d3, 0x04d4, 0x04d5, 0x04d6, 0x04d7, 0x04d8, 0x04d9,
0x04da, 0x04db, 0x04dc, 0x04dd, 0x04de, 0x04df, 0xff7e,
0x10006f0, 0x10006f1, 0x10006f2, 0x10006f3, 0x10006f4,
0x10006f5, 0x10006f6, 0x10006f7, 0x10006f8, 0x10006f9,
0x100066a, 0x1000670, 0x1000679, 0x100067e, 0x1000686,
0x1000688, 0x1000691, 0x05ac, 0x10006d4, 0x1000660,
0x1000661, 0x1000662, 0x1000663, 0x1000664, 0x1000665,
0x1000666, 0x1000667, 0x1000668, 0x1000669, 0x05bb, 0x05bf,
0x05c1, 0x05c2, 0x05c3, 0x05c4, 0x05c5, 0x05c6, 0x05c7,
0x05c8, 0x05c9, 0x05ca, 0x05cb, 0x05cc, 0x05cd, 0x05ce,
0x05cf, 0x05d0, 0x05d1, 0x05d2, 0x05d3, 0x05d4, 0x05d5,
0x05d6, 0x05d7, 0x05d8, 0x05d9, 0x05da, 0x05e0, 0x05e1,
0x05e2, 0x05e3, 0x05e4, 0x05e5, 0x05e6, 0x05e7, 0x05e7,
0x05e8, 0x05e9, 0x05ea, 0x05eb, 0x05ec, 0x05ed, 0x05ee,
0x05ef, 0x05f0, 0x05f1, 0x05f2, 0x1000653, 0x1000654,
0x1000655, 0x1000698, 0x10006a4, 0x10006a9, 0x10006af,
0x10006ba, 0x10006be, 0x10006cc, 0x10006cc, 0x10006d2,
0x10006c1, 0xff7e, 0x1000492, 0x1000493, 0x1000496,
0x1000497, 0x100049a, 0x100049b, 0x100049c, 0x100049d,
0x10004a2, 0x10004a3, 0x10004ae, 0x10004af, 0x10004b0,
0x10004b1, 0x10004b2, 0x10004b3, 0x10004b6, 0x10004b7,
0x10004b8, 0x10004b9, 0x10004ba, 0x10004bb, 0x10004d8,
0x10004d9, 0x10004e2, 0x10004e3, 0x10004e8, 0x10004e9,
0x10004ee, 0x10004ef, 0x06a1, 0x06a2, 0x06a3, 0x06a4,
0x06a4, 0x06a5, 0x06a6, 0x06a6, 0x06a7, 0x06a7, 0x06a8,
0x06a8, 0x06a9, 0x06a9, 0x06aa, 0x06aa, 0x06ab, 0x06ac,
0x06ad, 0x06ae, 0x06af, 0x06af, 0x06b0, 0x06b1, 0x06b2,
0x06b3, 0x06b4, 0x06b4, 0x06b5, 0x06b6, 0x06b6, 0x06b7,
0x06b7, 0x06b8, 0x06b8, 0x06b9, 0x06b9, 0x06ba, 0x06ba,
0x06bb, 0x06bc, 0x06bd, 0x06be, 0x06bf, 0x06bf, 0x06c0,
0x06c1, 0x06c2, 0x06c3, 0x06c4, 0x06c5, 0x06c6, 0x06c7,
0x06c8, 0x06c9, 0x06ca, 0x06cb, 0x06cc, 0x06cd, 0x06ce,
0x06cf, 0x06d0, 0x06d1, 0x06d2, 0x06d3, 0x06d4, 0x06d5,
0x06d6, 0x06d7, 0x06d8, 0x06d9, 0x06da, 0x06db, 0x06dc,
0x06dd, 0x06de, 0x06df, 0x06e0, 0x06e1, 0x06e2, 0x06e3,
0x06e4, 0x06e5, 0x06e6, 0x06e7, 0x06e8, 0x06e9, 0x06ea,
0x06eb, 0x06ec, 0x06ed, 0x06ee, 0x06ef, 0x06f0, 0x06f1,
0x06f2, 0x06f3, 0x06f4, 0x06f5, 0x06f6, 0x06f7, 0x06f8,
0x06f9, 0x06fa, 0x06fb, 0x06fc, 0x06fd, 0x06fe, 0x06ff,
0x07a1, 0x07a2, 0x07a3, 0x07a4, 0x07a5, 0x07a5, 0x07a7,
0x07a8, 0x07a9, 0x07ab, 0x07ae, 0x07af, 0x07b1, 0x07b2,
0x07b3, 0x07b4, 0x07b5, 0x07b6, 0x07b7, 0x07b8, 0x07b9,
0x07ba, 0x07bb, 0x07c1, 0x07c2, 0x07c3, 0x07c4, 0x07c5,
0x07c6, 0x07c7, 0x07c8, 0x07c9, 0x07ca, 0x07cb, 0x07cb,
0x07cc, 0x07cd, 0x07ce, 0x07cf, 0x07d0, 0x07d1, 0x07d2,
0x07d4, 0x07d5, 0x07d6, 0x07d7, 0x07d8, 0x07d9, 0x07e1,
0x07e2, 0x07e3, 0x07e4, 0x07e5, 0x07e6, 0x07e7, 0x07e8,
0x07e9, 0x07ea, 0x07eb, 0x07eb, 0x07ec, 0x07ed, 0x07ee,
0x07ef, 0x07f0, 0x07f1, 0x07f2, 0x07f3, 0x07f4, 0x07f5,
0x07f6, 0x07f7, 0x07f8, 0x07f9, 0xff7e, 0x08a1, 0x08a2,
0x08a3, 0x08a4, 0x08a5, 0x08a6, 0x08a7, 0x08a8, 0x08a9,
0x08aa, 0x08ab, 0x08ac, 0x08ad, 0x08ae, 0x08af, 0x08b0,
0x08b1, 0x08b2, 0x08b3, 0x08b4, 0x08b5, 0x08b6, 0x08b7,
0x08bc, 0x08bd, 0x08be, 0x08bf, 0x08c0, 0x08c1, 0x08c2,
0x08c5, 0x08c8, 0x08c9, 0x08cd, 0x08ce, 0x08cf, 0x08d6,
0x08da, 0x08db, 0x08dc, 0x08dd, 0x08de, 0x08df, 0x08ef,
0x08f6, 0x08fb, 0x08fc, 0x08fd, 0x08fe, 0x09df, 0x09e0,
0x09e1, 0x09e2, 0x09e3, 0x09e4, 0x09e5, 0x09e8, 0x09e9,
0x09ea, 0x09eb, 0x09ec, 0x09ed, 0x09ee, 0x09ef, 0x09f0,
0x09f1, 0x09f2, 0x09f3, 0x09f4, 0x09f5, 0x09f6, 0x09f7,
0x09f8, 0x0aa1, 0x0aa2, 0x0aa3, 0x0aa4, 0x0aa5, 0x0aa6,
0x0aa7, 0x0aa8, 0x0aa9, 0x0aaa, 0x0aac, 0x0aae, 0x0aaf,
0x0ab0, 0x0ab1, 0x0ab2, 0x0ab3, 0x0ab4, 0x0ab5, 0x0ab6,
0x0ab7, 0x0ab8, 0x0abb, 0x0abc, 0x0abd, 0x0abe, 0x0abf,
0x0ac3, 0x0ac4, 0x0ac5, 0x0ac6, 0x0ac9, 0x0aca, 0x0acb,
0x0acc, 0x0acd, 0x0ace, 0x0acf, 0x0ad0, 0x0ad1, 0x0ad2,
0x0ad3, 0x0ad4, 0x0ad5, 0x0ad6, 0x0ad7, 0x0ad9, 0x0ada,
0x0adb, 0x0adc, 0x0add, 0x0ade, 0x0adf, 0x0ae0, 0x0ae1,
0x0ae2, 0x0ae3, 0x0ae4, 0x0ae5, 0x0ae6, 0x0ae7, 0x0ae8,
0x0ae9, 0x0aea, 0x0aeb, 0x0aec, 0x0aed, 0x0aee, 0x0af0,
0x0af1, 0x0af2, 0x0af3, 0x0af4, 0x0af5, 0x0af6, 0x0af7,
0x0af8, 0x0af9, 0x0afa, 0x0afb, 0x0afc, 0x0afd, 0x0afe,
0x0aff, 0x0ba3, 0x0ba6, 0x0ba8, 0x0ba9, 0x0bc0, 0x0bc2,
0x0bc3, 0x0bc4, 0x0bc6, 0x0bca, 0x0bcc, 0x0bce, 0x0bcf,
0x0bd3, 0x0bd6, 0x0bd8, 0x0bda, 0x0bdc, 0x0bfc, 0x0cdf,
0x0ce0, 0x0ce1, 0x0ce1, 0x0ce2, 0x0ce2, 0x0ce3, 0x0ce3,
0x0ce4, 0x0ce5, 0x0ce6, 0x0ce6, 0x0ce7, 0x0ce7, 0x0ce8,
0x0ce8, 0x0ce9, 0x0cea, 0x0ceb, 0x0cec, 0x0ced, 0x0cee,
0x0cef, 0x0cf0, 0x0cf1, 0x0cf1, 0x0cf2, 0x0cf3, 0x0cf4,
0x0cf5, 0x0cf5, 0x0cf6, 0x0cf6, 0x0cf7, 0x0cf7, 0x0cf8,
0x0cf9, 0x0cfa, 0x0cfa, 0xff7e, 0x0da1, 0x0da2, 0x0da3,
0x0da4, 0x0da5, 0x0da6, 0x0da7, 0x0da8, 0x0da9, 0x0daa,
0x0dab, 0x0dac, 0x0dad, 0x0dae, 0x0daf, 0x0db0, 0x0db1,
0x0db2, 0x0db3, 0x0db4, 0x0db5, 0x0db6, 0x0db7, 0x0db8,
0x0db9, 0x0dba, 0x0dbb, 0x0dbc, 0x0dbd, 0x0dbe, 0x0dbf,
0x0dc0, 0x0dc1, 0x0dc2, 0x0dc3, 0x0dc4, 0x0dc5, 0x0dc6,
0x0dc7, 0x0dc8, 0x0dc9, 0x0dca, 0x0dcb, 0x0dcc, 0x0dcd,
0x0dce, 0x0dcf, 0x0dd0, 0x0dd1, 0x0dd2, 0x0dd3, 0x0dd4,
0x0dd5, 0x0dd6, 0x0dd7, 0x0dd8, 0x0dd9, 0x0dda, 0x0dde,
0x0ddf, 0x0de0, 0x0de1, 0x0de2, 0x0de3, 0x0de4, 0x0de5,
0x0de6, 0x0de7, 0x0de8, 0x0de9, 0x0dea, 0x0deb, 0x0dec,
0x0ded, 0x0df0, 0x0df1, 0x0df2, 0x0df3, 0x0df4, 0x0df5,
0x0df6, 0x0df7, 0x0df8, 0x0df9, 0xff31, 0xff32, 0xff33,
0xff34, 0xff35, 0xff36, 0xff37, 0xff38, 0xff39, 0xff3a,
0xff3b, 0xff3c, 0xff3d, 0xff3e, 0xff3f, 0xff7e, 0x0ea1,
0x0ea2, 0x0ea3, 0x0ea4, 0x0ea5, 0x0ea6, 0x0ea7, 0x0ea8,
0x0ea9, 0x0eaa, 0x0eab, 0x0eac, 0x0ead, 0x0eae, 0x0eaf,
0x0eb0, 0x0eb1, 0x0eb2, 0x0eb3, 0x0eb4, 0x0eb5, 0x0eb6,
0x0eb7, 0x0eb8, 0x0eb9, 0x0eba, 0x0ebb, 0x0ebc, 0x0ebd,
0x0ebe, 0x0ebf, 0x0ec0, 0x0ec1, 0x0ec2, 0x0ec3, 0x0ec4,
0x0ec5, 0x0ec6, 0x0ec7, 0x0ec8, 0x0ec9, 0x0eca, 0x0ecb,
0x0ecc, 0x0ecd, 0x0ece, 0x0ecf, 0x0ed0, 0x0ed1, 0x0ed2,
0x0ed3, 0x0ed4, 0x0ed5, 0x0ed6, 0x0ed7, 0x0ed8, 0x0ed9,
0x0eda, 0x0edb, 0x0edc, 0x0edd, 0x0ede, 0x0edf, 0x0ee0,
0x0ee1, 0x0ee2, 0x0ee3, 0x0ee4, 0x0ee5, 0x0ee6, 0x0ee7,
0x0ee8, 0x0ee9, 0x0eea, 0x0eeb, 0x0eec, 0x0eed, 0x0eee,
0x0eef, 0x0ef0, 0x0ef1, 0x0ef2, 0x0ef3, 0x0ef4, 0x0ef5,
0x0ef6, 0x0ef7, 0x0ef8, 0x0ef9, 0x0efa, 0x0eff, 0x1000587,
0x1000589, 0x1000589, 0x100055d, 0x100055d, 0x100058a,
0x100058a, 0x100055c, 0x100055c, 0x100055b, 0x100055b,
0x100055e, 0x100055e, 0x1000531, 0x1000561, 0x1000532,
0x1000562, 0x1000533, 0x1000563, 0x1000534, 0x1000564,
0x1000535, 0x1000565, 0x1000536, 0x1000566, 0x1000537,
0x1000567, 0x1000538, 0x1000568, 0x1000539, 0x1000569,
0x100053a, 0x100056a, 0x100053b, 0x100056b, 0x100053c,
0x100056c, 0x100053d, 0x100056d, 0x100053e, 0x100056e,
0x100053f, 0x100056f, 0x1000540, 0x1000570, 0x1000541,
0x1000571, 0x1000542, 0x1000572, 0x1000543, 0x1000573,
0x1000544, 0x1000574, 0x1000545, 0x1000575, 0x1000546,
0x1000576, 0x1000547, 0x1000577, 0x1000548, 0x1000578,
0x1000549, 0x1000579, 0x100054a, 0x100057a, 0x100054b,
0x100057b, 0x100054c, 0x100057c, 0x100054d, 0x100057d,
0x100054e, 0x100057e, 0x100054f, 0x100057f, 0x1000550,
0x1000580, 0x1000551, 0x1000581, 0x1000552, 0x1000582,
0x1000553, 0x1000583, 0x1000554, 0x1000584, 0x1000555,
0x1000585, 0x1000556, 0x1000586, 0x100055a, 0x10010d0,
0x10010d1, 0x10010d2, 0x10010d3, 0x10010d4, 0x10010d5,
0x10010d6, 0x10010d7, 0x10010d8, 0x10010d9, 0x10010da,
0x10010db, 0x10010dc, 0x10010dd, 0x10010de, 0x10010df,
0x10010e0, 0x10010e1, 0x10010e2, 0x10010e3, 0x10010e4,
0x10010e5, 0x10010e6, 0x10010e7, 0x10010e8, 0x10010e9,
0x10010ea, 0x10010eb, 0x10010ec, 0x10010ed, 0x10010ee,
0x10010ef, 0x10010f0, 0x10010f1, 0x10010f2, 0x10010f3,
0x10010f4, 0x10010f5, 0x10010f6, 0x1001e8a, 0x100012c,
0x10001b5, 0x10001e6, 0x10001d1, 0x100019f, 0x1001e8b,
0x100012d, 0x10001b6, 0x10001e7, 0x10001d2, 0x1000275,
0x100018f, 0x1000259, 0x10001b7, 0x1000292, 0x1001e36,
0x1001e37, 0x1001ea0, 0x1001ea1, 0x1001ea2, 0x1001ea3,
0x1001ea4, 0x1001ea5, 0x1001ea6, 0x1001ea7, 0x1001ea8,
0x1001ea9, 0x1001eaa, 0x1001eab, 0x1001eac, 0x1001ead,
0x1001eae, 0x1001eaf, 0x1001eb0, 0x1001eb1, 0x1001eb2,
0x1001eb3, 0x1001eb4, 0x1001eb5, 0x1001eb6, 0x1001eb7,
0x1001eb8, 0x1001eb9, 0x1001eba, 0x1001ebb, 0x1001ebc,
0x1001ebd, 0x1001ebe, 0x1001ebf, 0x1001ec0, 0x1001ec1,
0x1001ec2, 0x1001ec3, 0x1001ec4, 0x1001ec5, 0x1001ec6,
0x1001ec7, 0x1001ec8, 0x1001ec9, 0x1001eca, 0x1001ecb,
0x1001ecc, 0x1001ecd, 0x1001ece, 0x1001ecf, 0x1001ed0,
0x1001ed1, 0x1001ed2, 0x1001ed3, 0x1001ed4, 0x1001ed5,
0x1001ed6, 0x1001ed7, 0x1001ed8, 0x1001ed9, 0x1001eda,
0x1001edb, 0x1001edc, 0x1001edd, 0x1001ede, 0x1001edf,
0x1001ee0, 0x1001ee1, 0x1001ee2, 0x1001ee3, 0x1001ee4,
0x1001ee5, 0x1001ee6, 0x1001ee7, 0x1001ee8, 0x1001ee9,
0x1001eea, 0x1001eeb, 0x1001eec, 0x1001eed, 0x1001eee,
0x1001eef, 0x1001ef0, 0x1001ef1, 0x1001ef4, 0x1001ef5,
0x1001ef6, 0x1001ef7, 0x1001ef8, 0x1001ef9, 0x10001a0,
0x10001a1, 0x10001af, 0x10001b0, 0x10020a0, 0x10020a1,
0x10020a2, 0x10020a3, 0x10020a4, 0x10020a5, 0x10020a6,
0x10020a7, 0x10020a8, 0x10020a9, 0x10020aa, 0x10020ab,
0x20ac, 0x1002070, 0x1002074, 0x1002075, 0x1002076,
0x1002077, 0x1002078, 0x1002079, 0x1002080, 0x1002081,
0x1002082, 0x1002083, 0x1002084, 0x1002085, 0x1002086,
0x1002087, 0x1002088, 0x1002089, 0x1002202, 0x1002205,
0x1002208, 0x1002209, 0x100220B, 0x100221A, 0x100221B,
0x100221C, 0x100222C, 0x100222D, 0x1002235, 0x1002248,
0x1002247, 0x1002262, 0x1002263, 0xfff1, 0xfff2, 0xfff3,
0xfff4, 0xfff5, 0xfff6, 0xfff7, 0xfff8, 0xfff9, 0xfffa,
0x1002800, 0x1002801, 0x1002802, 0x1002803, 0x1002804,
0x1002805, 0x1002806, 0x1002807, 0x1002808, 0x1002809,
0x100280a, 0x100280b, 0x100280c, 0x100280d, 0x100280e,
0x100280f, 0x1002810, 0x1002811, 0x1002812, 0x1002813,
0x1002814, 0x1002815, 0x1002816, 0x1002817, 0x1002818,
0x1002819, 0x100281a, 0x100281b, 0x100281c, 0x100281d,
0x100281e, 0x100281f, 0x1002820, 0x1002821, 0x1002822,
0x1002823, 0x1002824, 0x1002825, 0x1002826, 0x1002827,
0x1002828, 0x1002829, 0x100282a, 0x100282b, 0x100282c,
0x100282d, 0x100282e, 0x100282f, 0x1002830, 0x1002831,
0x1002832, 0x1002833, 0x1002834, 0x1002835, 0x1002836,
0x1002837, 0x1002838, 0x1002839, 0x100283a, 0x100283b,
0x100283c, 0x100283d, 0x100283e, 0x100283f, 0x1002840,
0x1002841, 0x1002842, 0x1002843, 0x1002844, 0x1002845,
0x1002846, 0x1002847, 0x1002848, 0x1002849, 0x100284a,
0x100284b, 0x100284c, 0x100284d, 0x100284e, 0x100284f,
0x1002850, 0x1002851, 0x1002852, 0x1002853, 0x1002854,
0x1002855, 0x1002856, 0x1002857, 0x1002858, 0x1002859,
0x100285a, 0x100285b, 0x100285c, 0x100285d, 0x100285e,
0x100285f, 0x1002860, 0x1002861, 0x1002862, 0x1002863,
0x1002864, 0x1002865, 0x1002866, 0x1002867, 0x1002868,
0x1002869, 0x100286a, 0x100286b, 0x100286c, 0x100286d,
0x100286e, 0x100286f, 0x1002870, 0x1002871, 0x1002872,
0x1002873, 0x1002874, 0x1002875, 0x1002876, 0x1002877,
0x1002878, 0x1002879, 0x100287a, 0x100287b, 0x100287c,
0x100287d, 0x100287e, 0x100287f, 0x1002880, 0x1002881,
0x1002882, 0x1002883, 0x1002884, 0x1002885, 0x1002886,
0x1002887, 0x1002888, 0x1002889, 0x100288a, 0x100288b,
0x100288c, 0x100288d, 0x100288e, 0x100288f, 0x1002890,
0x1002891, 0x1002892, 0x1002893, 0x1002894, 0x1002895,
0x1002896, 0x1002897, 0x1002898, 0x1002899, 0x100289a,
0x100289b, 0x100289c, 0x100289d, 0x100289e, 0x100289f,
0x10028a0, 0x10028a1, 0x10028a2, 0x10028a3, 0x10028a4,
0x10028a5, 0x10028a6, 0x10028a7, 0x10028a8, 0x10028a9,
0x10028aa, 0x10028ab, 0x10028ac, 0x10028ad, 0x10028ae,
0x10028af, 0x10028b0, 0x10028b1, 0x10028b2, 0x10028b3,
0x10028b4, 0x10028b5, 0x10028b6, 0x10028b7, 0x10028b8,
0x10028b9, 0x10028ba, 0x10028bb, 0x10028bc, 0x10028bd,
0x10028be, 0x10028bf, 0x10028c0, 0x10028c1, 0x10028c2,
0x10028c3, 0x10028c4, 0x10028c5, 0x10028c6, 0x10028c7,
0x10028c8, 0x10028c9, 0x10028ca, 0x10028cb, 0x10028cc,
0x10028cd, 0x10028ce, 0x10028cf, 0x10028d0, 0x10028d1,
0x10028d2, 0x10028d3, 0x10028d4, 0x10028d5, 0x10028d6,
0x10028d7, 0x10028d8, 0x10028d9, 0x10028da, 0x10028db,
0x10028dc, 0x10028dd, 0x10028de, 0x10028df, 0x10028e0,
0x10028e1, 0x10028e2, 0x10028e3, 0x10028e4, 0x10028e5,
0x10028e6, 0x10028e7, 0x10028e8, 0x10028e9, 0x10028ea,
0x10028eb, 0x10028ec, 0x10028ed, 0x10028ee, 0x10028ef,
0x10028f0, 0x10028f1, 0x10028f2, 0x10028f3, 0x10028f4,
0x10028f5, 0x10028f6, 0x10028f7, 0x10028f8, 0x10028f9,
0x10028fa, 0x10028fb, 0x10028fc, 0x10028fd, 0x10028fe,
0x10028ff, 0x1000d82, 0x1000d83, 0x1000d85, 0x1000d86,
0x1000d87, 0x1000d88, 0x1000d89, 0x1000d8a, 0x1000d8b,
0x1000d8c, 0x1000d8d, 0x1000d8e, 0x1000d8f, 0x1000d90,
0x1000d91, 0x1000d92, 0x1000d93, 0x1000d94, 0x1000d95,
0x1000d96, 0x1000d9a, 0x1000d9b, 0x1000d9c, 0x1000d9d,
0x1000d9e, 0x1000d9f, 0x1000da0, 0x1000da1, 0x1000da2,
0x1000da3, 0x1000da4, 0x1000da5, 0x1000da6, 0x1000da7,
0x1000da8, 0x1000da9, 0x1000daa, 0x1000dab, 0x1000dac,
0x1000dad, 0x1000dae, 0x1000daf, 0x1000db0, 0x1000db1,
0x1000db3, 0x1000db4, 0x1000db5, 0x1000db6, 0x1000db7,
0x1000db8, 0x1000db9, 0x1000dba, 0x1000dbb, 0x1000dbd,
0x1000dc0, 0x1000dc1, 0x1000dc2, 0x1000dc3, 0x1000dc4,
0x1000dc5, 0x1000dc6, 0x1000dca, 0x1000dcf, 0x1000dd0,
0x1000dd1, 0x1000dd2, 0x1000dd3, 0x1000dd4, 0x1000dd6,
0x1000dd8, 0x1000dd9, 0x1000dda, 0x1000ddb, 0x1000ddc,
0x1000ddd, 0x1000dde, 0x1000ddf, 0x1000df2, 0x1000df3,
0x1000df4, ]
* Sun 05 Oct 2014 01:32:13 AM JST
    
* Sun 05 Oct 2014 01:32:30 AM JST
0xfea0
* Sun 05 Oct 2014 01:34:15 AM JST
    
* Sun 05 Oct 2014 01:34:27 AM JST
    
* Sun 05 Oct 2014 01:34:35 AM JST
    
* Sun 05 Oct 2014 01:34:46 AM JST
    
* Sun 05 Oct 2014 01:34:54 AM JST
    
* Sun 05 Oct 2014 01:35:40 AM JST
permille
* Sun 05 Oct 2014 01:37:13 AM JST
    
* Sun 05 Oct 2014 01:37:19 AM JST
0x10001b7
* Sun 05 Oct 2014 01:37:24 AM JST
schwa
* Sun 05 Oct 2014 01:37:46 AM JST
    
* Sun 05 Oct 2014 01:38:14 AM JST
0x1000d82
0x1000d83
0x1000d85
0x1000d86
0x1000d87
0x1000d88
0x1000d89
0x1000d8a
0x1000d8b
0x1000d8c
0x1000d8d
0x1000d8e
0x1000d8f
0x1000d90
0x1000d91
0x1000d92
0x1000d93
0x1000d94
0x1000d95
0x1000d96
0x1000d9a
0x1000d9b
0x1000d9c
0x1000d9d
0x1000d9e
0x1000d9f
0x1000da0
0x1000da1
0x1000da2
0x1000da3
0x1000da4
0x1000da5
0x1000da6
0x1000da7
0x1000da8
0x1000da9
0x1000daa
0x1000dab
0x1000dac
0x1000dad
0x1000dae
0x1000daf
0x1000db0
0x1000db1
0x1000db3
0x1000db4
0x1000db5
0x1000db6
0x1000db7
0x1000db8
0x1000db9
0x1000dba
0x1000dbb
0x1000dbd
0x1000dc0
0x1000dc1
0x1000dc2
0x1000dc3
0x1000dc4
0x1000dc5
0x1000dc6
0x1000dca
0x1000dcf
0x1000dd0
0x1000dd1
0x1000dd2
0x1000dd3
0x1000dd4
0x1000dd6
0x1000dd8
0x1000dd9
0x1000dda
0x1000ddb
0x1000ddc
0x1000ddd
0x1000dde
0x1000ddf
0x1000df2
0x1000df3
0x1000df4
* Sun 05 Oct 2014 01:40:18 AM JST
Sinh
* Sun 05 Oct 2014 01:40:19 AM JST
Sinh_ra
* Sun 05 Oct 2014 01:40:50 AM JST
Sinh_la
* Sun 05 Oct 2014 01:40:58 AM JST
Sinh_va
* Sun 05 Oct 2014 01:41:06 AM JST
Sinh_sha
* Sun 05 Oct 2014 01:46:32 AM JST
0x1000d82: 'Sinh_ng',
0x1000d83: 'Sinh_h2',
0x1000d85: 'Sinh_a',
0x1000d86: 'Sinh_aa',
0x1000d87: 'Sinh_ae',
0x1000d88: 'Sinh_aee',
0x1000d89: 'Sinh_i',
0x1000d8a: 'Sinh_ii',
0x1000d8b: 'Sinh_u',
0x1000d8c: 'Sinh_uu',
0x1000d8d: 'Sinh_ri',
0x1000d8e: 'Sinh_rii',
0x1000d8f: 'Sinh_lu',
0x1000d90: 'Sinh_luu',
0x1000d91: 'Sinh_e',
0x1000d92: 'Sinh_ee',
0x1000d93: 'Sinh_ai',
0x1000d94: 'Sinh_o',
0x1000d95: 'Sinh_oo',
0x1000d96: 'Sinh_au',
0x1000d9a: 'Sinh_ka',
0x1000d9b: 'Sinh_kha',
0x1000d9c: 'Sinh_ga',
0x1000d9d: 'Sinh_gha',
0x1000d9e: 'Sinh_ng2',
0x1000d9f: 'Sinh_nga',
0x1000da0: 'Sinh_ca',
0x1000da1: 'Sinh_cha',
0x1000da2: 'Sinh_ja',
0x1000da3: 'Sinh_jha',
0x1000da4: 'Sinh_nya',
0x1000da5: 'Sinh_jnya',
0x1000da6: 'Sinh_nja',
0x1000da7: 'Sinh_tta',
0x1000da8: 'Sinh_ttha',
0x1000da9: 'Sinh_dda',
0x1000daa: 'Sinh_ddha',
0x1000dab: 'Sinh_nna',
0x1000dac: 'Sinh_ndda',
0x1000dad: 'Sinh_tha',
0x1000dae: 'Sinh_thha',
0x1000daf: 'Sinh_dha',
0x1000db0: 'Sinh_dhha',
0x1000db1: 'Sinh_na',
0x1000db3: 'Sinh_ndha',
0x1000db4: 'Sinh_pa',
0x1000db5: 'Sinh_pha',
0x1000db6: 'Sinh_ba',
0x1000db7: 'Sinh_bha',
0x1000db8: 'Sinh_ma',
0x1000db9: 'Sinh_mba',
0x1000dba: 'Sinh_ya',
0x1000dbb: 'Sinh_ra',
0x1000dbd: 'Sinh_la',
0x1000dc0: 'Sinh_va',
0x1000dc1: 'Sinh_sha',
0x1000dc2: 'Sinh_ssha',
0x1000dc3: 'Sinh_sa',  
0x1000dc4: 'Sinh_ha',  
0x1000dc5: 'Sinh_lla', 
0x1000dc6: 'Sinh_fa',  
0x1000dca: 'Sinh_al',  
0x1000dcf: 'Sinh_aa2', 
0x1000dd0: 'Sinh_ae2', 
0x1000dd1: 'Sinh_aee2',
0x1000dd2: 'Sinh_i2',  
0x1000dd3: 'Sinh_ii2', 
0x1000dd4: 'Sinh_u2',  
0x1000dd6: 'Sinh_uu2', 
0x1000dd8: 'Sinh_ru2', 
0x1000dd9: 'Sinh_e2',  
0x1000dda: 'Sinh_ee2', 
0x1000ddb: 'Sinh_ai2', 
0x1000ddc: 'Sinh_o2',  
0x1000ddd: 'Sinh_oo2', 
0x1000dde: 'Sinh_au2',
0x1000ddf: 'Sinh_lu2',
0x1000df2: 'Sinh_ruu2',
0x1000df3: 'Sinh_luu2',
0x1000df4: 'Sinh_kunddaliya',
* Sun 05 Oct 2014 01:58:43 AM JST
self
* Sun 05 Oct 2014 02:06:33 AM JST
numeric
* Sun 05 Oct 2014 02:09:44 AM JST
value
* Sun 05 Oct 2014 02:11:25 AM JST
from peak.rules import dispatch
* Sun 05 Oct 2014 02:14:02 AM JST

* Sun 05 Oct 2014 02:14:02 AM JST

* Sun 05 Oct 2014 02:14:02 AM JST
    @dispatch.generic()

* Sun 05 Oct 2014 02:14:04 AM JST
pass
* Sun 05 Oct 2014 02:16:44 AM JST
'VoidSymbol'
* Sun 05 Oct 2014 02:17:13 AM JST
0xffffff
* Sun 05 Oct 2014 02:22:14 AM JST
self._syms.get(self._value)
* Sun 05 Oct 2014 02:22:25 AM JST
0xffffff
* Sun 05 Oct 2014 02:23:16 AM JST
'VoidSymbol'
* Sun 05 Oct 2014 02:23:57 AM JST
'VoidSymbol'
* Sun 05 Oct 2014 02:37:30 AM JST

* Sun 05 Oct 2014 02:37:30 AM JST

* Sun 05 Oct 2014 02:37:30 AM JST
        super(KeySym, self).__int__()

* Sun 05 Oct 2014 02:40:58 AM JST
singledispa
* Sun 05 Oct 2014 02:47:41 AM JST
getname()
* Sun 05 Oct 2014 02:49:53 AM JST
0xffffff
* Sun 05 Oct 2014 02:53:50 AM JST

* Sun 05 Oct 2014 02:53:50 AM JST

* Sun 05 Oct 2014 02:53:50 AM JST
        super(KeySym, self).__hex__()

* Sun 05 Oct 2014 02:56:08 AM JST

* Sun 05 Oct 2014 02:56:09 AM JST

* Sun 05 Oct 2014 02:56:09 AM JST
        super(KeySym, self).__oct__()

* Sun 05 Oct 2014 02:56:52 AM JST

* Sun 05 Oct 2014 02:56:52 AM JST

* Sun 05 Oct 2014 02:56:52 AM JST
        super(KeySym, self).__long__()

* Tue 07 Oct 2014 02:56:47 PM JST
._name 
* Tue 07 Oct 2014 03:00:35 PM JST
        # special keysyms
        if keysym in (0, 0x00ffffff):
            raise ConvertError("{} is a special keysym".format(keysym))
        # latin-1 keysyms
        elif (0x0020 <= keysym <= 0x007e or 0x00a0 <= keysym <= 0x00ff):
            return unichr(keysym)
        # unicode keysyms
        elif (0x01000100 <= keysym <= 0x0110ffff):
            return unichr(keysym - 0x01000000)
        # legacy keysyms
        elif keysym in sendkeys.keysymdef.legacy_keysyms:
            return unichr(sendkeys.keysymdef.legacy_keysyms[keysym])
        # dunno!
        else:
            raise ConvertError(
                "Unsupported keysym category or legacy keysym: {}"
                .format(keysym))

* Tue 07 Oct 2014 03:00:55 PM JST
keysym
* Tue 07 Oct 2014 03:01:07 PM JST
keysym
* Tue 07 Oct 2014 03:01:11 PM JST
keysym
* Tue 07 Oct 2014 03:01:15 PM JST
keysym
* Tue 07 Oct 2014 03:01:21 PM JST
keysym
* Tue 07 Oct 2014 03:01:25 PM JST
keysym
* Tue 07 Oct 2014 03:02:28 PM JST
legacy_keysyms = {
    0x01A1: 0x0104,
    0x01A2: 0x02D8,
    0x01A3: 0x0141,
    0x01A5: 0x013D,
    0x01A6: 0x015A,
    0x01A9: 0x0160,
    0x01AA: 0x015E,
    0x01AB: 0x0164,
    0x01AC: 0x0179,
    0x01AE: 0x017D,
    0x01AF: 0x017B,
    0x01B1: 0x0105,
    0x01B2: 0x02DB,
    0x01B3: 0x0142,
    0x01B5: 0x013E,
    0x01B6: 0x015B,
    0x01B7: 0x02C7,
    0x01B9: 0x0161,
    0x01BA: 0x015F,
    0x01BB: 0x0165,
    0x01BC: 0x017A,
    0x01BD: 0x02DD,
    0x01BE: 0x017E,
    0x01BF: 0x017C,
    0x01C0: 0x0154,
    0x01C3: 0x0102,
    0x01C5: 0x0139,
    0x01C6: 0x0106,
    0x01C8: 0x010C,
    0x01CA: 0x0118,
    0x01CC: 0x011A,
    0x01CF: 0x010E,
    0x01D0: 0x0110,
    0x01D1: 0x0143,
    0x01D2: 0x0147,
    0x01D5: 0x0150,
    0x01D8: 0x0158,
    0x01D9: 0x016E,
    0x01DB: 0x0170,
    0x01DE: 0x0162,
    0x01E0: 0x0155,
    0x01E3: 0x0103,
    0x01E5: 0x013A,
    0x01E6: 0x0107,
    0x01E8: 0x010D,
    0x01EA: 0x0119,
    0x01EC: 0x011B,
    0x01EF: 0x010F,
    0x01F0: 0x0111,
    0x01F1: 0x0144,
    0x01F2: 0x0148,
    0x01F5: 0x0151,
    0x01F8: 0x0159,
    0x01F9: 0x016F,
    0x01FB: 0x0171,
    0x01FE: 0x0163,
    0x01FF: 0x02D9,
    0x02A1: 0x0126,
    0x02A6: 0x0124,
    0x02A9: 0x0130,
    0x02AB: 0x011E,
    0x02AC: 0x0134,
    0x02B1: 0x0127,
    0x02B6: 0x0125,
    0x02B9: 0x0131,
    0x02BB: 0x011F,
    0x02BC: 0x0135,
    0x02C5: 0x010A,
    0x02C6: 0x0108,
    0x02D5: 0x0120,
    0x02D8: 0x011C,
    0x02DD: 0x016C,
    0x02DE: 0x015C,
    0x02E5: 0x010B,
    0x02E6: 0x0109,
    0x02F5: 0x0121,
    0x02F8: 0x011D,
    0x02FD: 0x016D,
    0x02FE: 0x015D,
    0x03A2: 0x0138,
    0x03A3: 0x0156,
    0x03A5: 0x0128,
    0x03A6: 0x013B,
    0x03AA: 0x0112,
    0x03AB: 0x0122,
    0x03AC: 0x0166,
    0x03B3: 0x0157,
    0x03B5: 0x0129,
    0x03B6: 0x013C,
    0x03BA: 0x0113,
    0x03BB: 0x0123,
    0x03BC: 0x0167,
    0x03BD: 0x014A,
    0x03BF: 0x014B,
    0x03C0: 0x0100,
    0x03C7: 0x012E,
    0x03CC: 0x0116,
    0x03CF: 0x012A,
    0x03D1: 0x0145,
    0x03D2: 0x014C,
    0x03D3: 0x0136,
    0x03D9: 0x0172,
    0x03DD: 0x0168,
    0x03DE: 0x016A,
    0x03E0: 0x0101,
    0x03E7: 0x012F,
    0x03EC: 0x0117,
    0x03EF: 0x012B,
    0x03F1: 0x0146,
    0x03F2: 0x014D,
    0x03F3: 0x0137,
    0x03F9: 0x0173,
    0x03FD: 0x0169,
    0x03FE: 0x016B,
    0x047E: 0x203E,
    0x04A1: 0x3002,
    0x04A2: 0x300C,
    0x04A3: 0x300D,
    0x04A4: 0x3001,
    0x04A5: 0x30FB,
    0x04A6: 0x30F2,
    0x04A7: 0x30A1,
    0x04A8: 0x30A3,
    0x04A9: 0x30A5,
    0x04AA: 0x30A7,
    0x04AB: 0x30A9,
    0x04AC: 0x30E3,
    0x04AD: 0x30E5,
    0x04AE: 0x30E7,
    0x04AF: 0x30C3,
    0x04B0: 0x30FC,
    0x04B1: 0x30A2,
    0x04B2: 0x30A4,
    0x04B3: 0x30A6,
    0x04B4: 0x30A8,
    0x04B5: 0x30AA,
    0x04B6: 0x30AB,
    0x04B7: 0x30AD,
    0x04B8: 0x30AF,
    0x04B9: 0x30B1,
    0x04BA: 0x30B3,
    0x04BB: 0x30B5,
    0x04BC: 0x30B7,
    0x04BD: 0x30B9,
    0x04BE: 0x30BB,
    0x04BF: 0x30BD,
    0x04C0: 0x30BF,
    0x04C1: 0x30C1,
    0x04C2: 0x30C4,
    0x04C3: 0x30C6,
    0x04C4: 0x30C8,
    0x04C5: 0x30CA,
    0x04C6: 0x30CB,
    0x04C7: 0x30CC,
    0x04C8: 0x30CD,
    0x04C9: 0x30CE,
    0x04CA: 0x30CF,
    0x04CB: 0x30D2,
    0x04CC: 0x30D5,
    0x04CD: 0x30D8,
    0x04CE: 0x30DB,
    0x04CF: 0x30DE,
    0x04D0: 0x30DF,
    0x04D1: 0x30E0,
    0x04D2: 0x30E1,
    0x04D3: 0x30E2,
    0x04D4: 0x30E4,
    0x04D5: 0x30E6,
    0x04D6: 0x30E8,
    0x04D7: 0x30E9,
    0x04D8: 0x30EA,
    0x04D9: 0x30EB,
    0x04DA: 0x30EC,
    0x04DB: 0x30ED,
    0x04DC: 0x30EF,
    0x04DD: 0x30F3,
    0x04DE: 0x309B,
    0x04DF: 0x309C,
    0x05AC: 0x060C,
    0x05BB: 0x061B,
    0x05BF: 0x061F,
    0x05C1: 0x0621,
    0x05C2: 0x0622,
    0x05C3: 0x0623,
    0x05C4: 0x0624,
    0x05C5: 0x0625,
    0x05C6: 0x0626,
    0x05C7: 0x0627,
    0x05C8: 0x0628,
    0x05C9: 0x0629,
    0x05CA: 0x062A,
    0x05CB: 0x062B,
    0x05CC: 0x062C,
    0x05CD: 0x062D,
    0x05CE: 0x062E,
    0x05CF: 0x062F,
    0x05D0: 0x0630,
    0x05D1: 0x0631,
    0x05D2: 0x0632,
    0x05D3: 0x0633,
    0x05D4: 0x0634,
    0x05D5: 0x0635,
    0x05D6: 0x0636,
    0x05D7: 0x0637,
    0x05D8: 0x0638,
    0x05D9: 0x0639,
    0x05DA: 0x063A,
    0x05E0: 0x0640,
    0x05E1: 0x0641,
    0x05E2: 0x0642,
    0x05E3: 0x0643,
    0x05E4: 0x0644,
    0x05E5: 0x0645,
    0x05E6: 0x0646,
    0x05E7: 0x0647,
    0x05E8: 0x0648,
    0x05E9: 0x0649,
    0x05EA: 0x064A,
    0x05EB: 0x064B,
    0x05EC: 0x064C,
    0x05ED: 0x064D,
    0x05EE: 0x064E,
    0x05EF: 0x064F,
    0x05F0: 0x0650,
    0x05F1: 0x0651,
    0x05F2: 0x0652,
    0x06A1: 0x0452,
    0x06A2: 0x0453,
    0x06A3: 0x0451,
    0x06A4: 0x0454,
    0x06A5: 0x0455,
    0x06A6: 0x0456,
    0x06A7: 0x0457,
    0x06A8: 0x0458,
    0x06A9: 0x0459,
    0x06AA: 0x045A,
    0x06AB: 0x045B,
    0x06AC: 0x045C,
    0x06AD: 0x0491,
    0x06AE: 0x045E,
    0x06AF: 0x045F,
    0x06B0: 0x2116,
    0x06B1: 0x0402,
    0x06B2: 0x0403,
    0x06B3: 0x0401,
    0x06B4: 0x0404,
    0x06B5: 0x0405,
    0x06B6: 0x0406,
    0x06B7: 0x0407,
    0x06B8: 0x0408,
    0x06B9: 0x0409,
    0x06BA: 0x040A,
    0x06BB: 0x040B,
    0x06BC: 0x040C,
    0x06BD: 0x0490,
    0x06BE: 0x040E,
    0x06BF: 0x040F,
    0x06C0: 0x044E,
    0x06C1: 0x0430,
    0x06C2: 0x0431,
    0x06C3: 0x0446,
    0x06C4: 0x0434,
    0x06C5: 0x0435,
    0x06C6: 0x0444,
    0x06C7: 0x0433,
    0x06C8: 0x0445,
    0x06C9: 0x0438,
    0x06CA: 0x0439,
    0x06CB: 0x043A,
    0x06CC: 0x043B,
    0x06CD: 0x043C,
    0x06CE: 0x043D,
    0x06CF: 0x043E,
    0x06D0: 0x043F,
    0x06D1: 0x044F,
    0x06D2: 0x0440,
    0x06D3: 0x0441,
    0x06D4: 0x0442,
    0x06D5: 0x0443,
    0x06D6: 0x0436,
    0x06D7: 0x0432,
    0x06D8: 0x044C,
    0x06D9: 0x044B,
    0x06DA: 0x0437,
    0x06DB: 0x0448,
    0x06DC: 0x044D,
    0x06DD: 0x0449,
    0x06DE: 0x0447,
    0x06DF: 0x044A,
    0x06E0: 0x042E,
    0x06E1: 0x0410,
    0x06E2: 0x0411,
    0x06E3: 0x0426,
    0x06E4: 0x0414,
    0x06E5: 0x0415,
    0x06E6: 0x0424,
    0x06E7: 0x0413,
    0x06E8: 0x0425,
    0x06E9: 0x0418,
    0x06EA: 0x0419,
    0x06EB: 0x041A,
    0x06EC: 0x041B,
    0x06ED: 0x041C,
    0x06EE: 0x041D,
    0x06EF: 0x041E,
    0x06F0: 0x041F,
    0x06F1: 0x042F,
    0x06F2: 0x0420,
    0x06F3: 0x0421,
    0x06F4: 0x0422,
    0x06F5: 0x0423,
    0x06F6: 0x0416,
    0x06F7: 0x0412,
    0x06F8: 0x042C,
    0x06F9: 0x042B,
    0x06FA: 0x0417,
    0x06FB: 0x0428,
    0x06FC: 0x042D,
    0x06FD: 0x0429,
    0x06FE: 0x0427,
    0x06FF: 0x042A,
    0x07A1: 0x0386,
    0x07A2: 0x0388,
    0x07A3: 0x0389,
    0x07A4: 0x038A,
    0x07A5: 0x03AA,
    0x07A7: 0x038C,
    0x07A8: 0x038E,
    0x07A9: 0x03AB,
    0x07AB: 0x038F,
    0x07AE: 0x0385,
    0x07AF: 0x2015,
    0x07B1: 0x03AC,
    0x07B2: 0x03AD,
    0x07B3: 0x03AE,
    0x07B4: 0x03AF,
    0x07B5: 0x03CA,
    0x07B6: 0x0390,
    0x07B7: 0x03CC,
    0x07B8: 0x03CD,
    0x07B9: 0x03CB,
    0x07BA: 0x03B0,
    0x07BB: 0x03CE,
    0x07C1: 0x0391,
    0x07C2: 0x0392,
    0x07C3: 0x0393,
    0x07C4: 0x0394,
    0x07C5: 0x0395,
    0x07C6: 0x0396,
    0x07C7: 0x0397,
    0x07C8: 0x0398,
    0x07C9: 0x0399,
    0x07CA: 0x039A,
    0x07CB: 0x039B,
    0x07CC: 0x039C,
    0x07CD: 0x039D,
    0x07CE: 0x039E,
    0x07CF: 0x039F,
    0x07D0: 0x03A0,
    0x07D1: 0x03A1,
    0x07D2: 0x03A3,
    0x07D4: 0x03A4,
    0x07D5: 0x03A5,
    0x07D6: 0x03A6,
    0x07D7: 0x03A7,
    0x07D8: 0x03A8,
    0x07D9: 0x03A9,
    0x07E1: 0x03B1,
    0x07E2: 0x03B2,
    0x07E3: 0x03B3,
    0x07E4: 0x03B4,
    0x07E5: 0x03B5,
    0x07E6: 0x03B6,
    0x07E7: 0x03B7,
    0x07E8: 0x03B8,
    0x07E9: 0x03B9,
    0x07EA: 0x03BA,
    0x07EB: 0x03BB,
    0x07EC: 0x03BC,
    0x07ED: 0x03BD,
    0x07EE: 0x03BE,
    0x07EF: 0x03BF,
    0x07F0: 0x03C0,
    0x07F1: 0x03C1,
    0x07F2: 0x03C3,
    0x07F3: 0x03C2,
    0x07F4: 0x03C4,
    0x07F5: 0x03C5,
    0x07F6: 0x03C6,
    0x07F7: 0x03C7,
    0x07F8: 0x03C8,
    0x07F9: 0x03C9,
    0x08A1: 0x23B7,
    0x08A4: 0x2320,
    0x08A5: 0x2321,
    0x08A7: 0x23A1,
    0x08A8: 0x23A3,
    0x08A9: 0x23A4,
    0x08AA: 0x23A6,
    0x08AB: 0x239B,
    0x08AC: 0x239D,
    0x08AD: 0x239E,
    0x08AE: 0x23A0,
    0x08AF: 0x23A8,
    0x08B0: 0x23AC,
    0x08BC: 0x2264,
    0x08BD: 0x2260,
    0x08BE: 0x2265,
    0x08BF: 0x222B,
    0x08C0: 0x2234,
    0x08C1: 0x221D,
    0x08C2: 0x221E,
    0x08C5: 0x2207,
    0x08C8: 0x223C,
    0x08C9: 0x2243,
    0x08CD: 0x21D4,
    0x08CE: 0x21D2,
    0x08CF: 0x2261,
    0x08D6: 0x221A,
    0x08DA: 0x2282,
    0x08DB: 0x2283,
    0x08DC: 0x2229,
    0x08DD: 0x222A,
    0x08DE: 0x2227,
    0x08DF: 0x2228,
    0x08EF: 0x2202,
    0x08F6: 0x0192,
    0x08FB: 0x2190,
    0x08FC: 0x2191,
    0x08FD: 0x2192,
    0x08FE: 0x2193,
    0x09E0: 0x25C6,
    0x09E1: 0x2592,
    0x09E2: 0x2409,
    0x09E3: 0x240C,
    0x09E4: 0x240D,
    0x09E5: 0x240A,
    0x09E8: 0x2424,
    0x09E9: 0x240B,
    0x09EA: 0x2518,
    0x09EB: 0x2510,
    0x09EC: 0x250C,
    0x09ED: 0x2514,
    0x09EE: 0x253C,
    0x09EF: 0x23BA,
    0x09F0: 0x23BB,
    0x09F1: 0x2500,
    0x09F2: 0x23BC,
    0x09F3: 0x23BD,
    0x09F4: 0x251C,
    0x09F5: 0x2524,
    0x09F6: 0x2534,
    0x09F7: 0x252C,
    0x09F8: 0x2502,
    0x0AA1: 0x2003,
    0x0AA2: 0x2002,
    0x0AA3: 0x2004,
    0x0AA4: 0x2005,
    0x0AA5: 0x2007,
    0x0AA6: 0x2008,
    0x0AA7: 0x2009,
    0x0AA8: 0x200A,
    0x0AA9: 0x2014,
    0x0AAA: 0x2013,
    0x0AAE: 0x2026,
    0x0AAF: 0x2025,
    0x0AB0: 0x2153,
    0x0AB1: 0x2154,
    0x0AB2: 0x2155,
    0x0AB3: 0x2156,
    0x0AB4: 0x2157,
    0x0AB5: 0x2158,
    0x0AB6: 0x2159,
    0x0AB7: 0x215A,
    0x0AB8: 0x2105,
    0x0ABB: 0x2012,
    0x0AC3: 0x215B,
    0x0AC4: 0x215C,
    0x0AC5: 0x215D,
    0x0AC6: 0x215E,
    0x0AC9: 0x2122,
    0x0AD0: 0x2018,
    0x0AD1: 0x2019,
    0x0AD2: 0x201C,
    0x0AD3: 0x201D,
    0x0AD4: 0x211E,
    0x0AD6: 0x2032,
    0x0AD7: 0x2033,
    0x0AD9: 0x271D,
    0x0AEC: 0x2663,
    0x0AED: 0x2666,
    0x0AEE: 0x2665,
    0x0AF0: 0x2720,
    0x0AF1: 0x2020,
    0x0AF2: 0x2021,
    0x0AF3: 0x2713,
    0x0AF4: 0x2717,
    0x0AF5: 0x266F,
    0x0AF6: 0x266D,
    0x0AF7: 0x2642,
    0x0AF8: 0x2640,
    0x0AF9: 0x260E,
    0x0AFA: 0x2315,
    0x0AFB: 0x2117,
    0x0AFC: 0x2038,
    0x0AFD: 0x201A,
    0x0AFE: 0x201E,
    0x0BC2: 0x22A5,
    0x0BC4: 0x230A,
    0x0BCA: 0x2218,
    0x0BCC: 0x2395,
    0x0BCE: 0x22A4,
    0x0BCF: 0x25CB,
    0x0BD3: 0x2308,
    0x0BDC: 0x22A2,
    0x0BFC: 0x22A3,
    0x0CDF: 0x2017,
    0x0CE0: 0x05D0,
    0x0CE1: 0x05D1,
    0x0CE2: 0x05D2,
    0x0CE3: 0x05D3,
    0x0CE4: 0x05D4,
    0x0CE5: 0x05D5,
    0x0CE6: 0x05D6,
    0x0CE7: 0x05D7,
    0x0CE8: 0x05D8,
    0x0CE9: 0x05D9,
    0x0CEA: 0x05DA,
    0x0CEB: 0x05DB,
    0x0CEC: 0x05DC,
    0x0CED: 0x05DD,
    0x0CEE: 0x05DE,
    0x0CEF: 0x05DF,
    0x0CF0: 0x05E0,
    0x0CF1: 0x05E1,
    0x0CF2: 0x05E2,
    0x0CF3: 0x05E3,
    0x0CF4: 0x05E4,
    0x0CF5: 0x05E5,
    0x0CF6: 0x05E6,
    0x0CF7: 0x05E7,
    0x0CF8: 0x05E8,
    0x0CF9: 0x05E9,
    0x0CFA: 0x05EA,
    0x0DA1: 0x0E01,
    0x0DA2: 0x0E02,
    0x0DA3: 0x0E03,
    0x0DA4: 0x0E04,
    0x0DA5: 0x0E05,
    0x0DA6: 0x0E06,
    0x0DA7: 0x0E07,
    0x0DA8: 0x0E08,
    0x0DA9: 0x0E09,
    0x0DAA: 0x0E0A,
    0x0DAB: 0x0E0B,
    0x0DAC: 0x0E0C,
    0x0DAD: 0x0E0D,
    0x0DAE: 0x0E0E,
    0x0DAF: 0x0E0F,
    0x0DB0: 0x0E10,
    0x0DB1: 0x0E11,
    0x0DB2: 0x0E12,
    0x0DB3: 0x0E13,
    0x0DB4: 0x0E14,
    0x0DB5: 0x0E15,
    0x0DB6: 0x0E16,
    0x0DB7: 0x0E17,
    0x0DB8: 0x0E18,
    0x0DB9: 0x0E19,
    0x0DBA: 0x0E1A,
    0x0DBB: 0x0E1B,
    0x0DBC: 0x0E1C,
    0x0DBD: 0x0E1D,
    0x0DBE: 0x0E1E,
    0x0DBF: 0x0E1F,
    0x0DC0: 0x0E20,
    0x0DC1: 0x0E21,
    0x0DC2: 0x0E22,
    0x0DC3: 0x0E23,
    0x0DC4: 0x0E24,
    0x0DC5: 0x0E25,
    0x0DC6: 0x0E26,
    0x0DC7: 0x0E27,
    0x0DC8: 0x0E28,
    0x0DC9: 0x0E29,
    0x0DCA: 0x0E2A,
    0x0DCB: 0x0E2B,
    0x0DCC: 0x0E2C,
    0x0DCD: 0x0E2D,
    0x0DCE: 0x0E2E,
    0x0DCF: 0x0E2F,
    0x0DD0: 0x0E30,
    0x0DD1: 0x0E31,
    0x0DD2: 0x0E32,
    0x0DD3: 0x0E33,
    0x0DD4: 0x0E34,
    0x0DD5: 0x0E35,
    0x0DD6: 0x0E36,
    0x0DD7: 0x0E37,
    0x0DD8: 0x0E38,
    0x0DD9: 0x0E39,
    0x0DDA: 0x0E3A,
    0x0DDF: 0x0E3F,
    0x0DE0: 0x0E40,
    0x0DE1: 0x0E41,
    0x0DE2: 0x0E42,
    0x0DE3: 0x0E43,
    0x0DE4: 0x0E44,
    0x0DE5: 0x0E45,
    0x0DE6: 0x0E46,
    0x0DE7: 0x0E47,
    0x0DE8: 0x0E48,
    0x0DE9: 0x0E49,
    0x0DEA: 0x0E4A,
    0x0DEB: 0x0E4B,
    0x0DEC: 0x0E4C,
    0x0DED: 0x0E4D,
    0x0DF0: 0x0E50,
    0x0DF1: 0x0E51,
    0x0DF2: 0x0E52,
    0x0DF3: 0x0E53,
    0x0DF4: 0x0E54,
    0x0DF5: 0x0E55,
    0x0DF6: 0x0E56,
    0x0DF7: 0x0E57,
    0x0DF8: 0x0E58,
    0x0DF9: 0x0E59,
    0x13BC: 0x0152,
    0x13BD: 0x0153,
    0x13BE: 0x0178,
    0x20AC: 0x20AC,
}

* Tue 07 Oct 2014 03:03:04 PM JST
keysymdef.
* Tue 07 Oct 2014 03:03:04 PM JST
sendkeys.keysymdef.
* Tue 07 Oct 2014 03:03:18 PM JST
keysym
* Tue 07 Oct 2014 03:03:27 PM JST
LEGACY_KEYSYMS
* Tue 07 Oct 2014 03:05:07 PM JST

* Tue 07 Oct 2014 03:05:07 PM JST

* Tue 07 Oct 2014 03:05:07 PM JST
        super(SymbolNum, self).__hex__()

* Tue 07 Oct 2014 03:05:53 PM JST

* Tue 07 Oct 2014 03:05:53 PM JST

* Tue 07 Oct 2014 03:05:53 PM JST
        super(SymbolNum, self).__int__()

* Tue 07 Oct 2014 03:06:09 PM JST

* Tue 07 Oct 2014 03:06:09 PM JST

* Tue 07 Oct 2014 03:06:09 PM JST
        super(SymbolNum, self).__long__()

* Tue 07 Oct 2014 03:08:18 PM JST
other
* Tue 07 Oct 2014 03:08:51 PM JST
other
* Tue 07 Oct 2014 03:17:18 PM JST
TwoWayDict(
* Tue 07 Oct 2014 03:17:49 PM JST
    
* Tue 07 Oct 2014 03:17:52 PM JST
    
* Tue 07 Oct 2014 03:58:32 PM JST
KEYSYMS = {
    0x4bb: 'kana_SA',
    0x20: 'space',
    0x22: 'quotedbl',
    0x23: 'numbersign',
    0x24: 'dollar',
    0x26: 'ampersand',
    0x27: 'apostrophe',
    0x28: 'parenleft',
    0x29: 'parenright',
    0x2a: 'asterisk',
    0x2b: 'plus',
    0x2c: 'comma',
    0x2d: 'minus',
    0x2f: 'slash',
    0x30: '0',
    0x31: '1',
    0x32: '2',
    0x34: '4',
    0x35: '5',
    0x36: '6',
    0x37: '7',
    0x38: '8',
    0x3a: 'colon',
    0x3b: 'semicolon',
    0x3c: 'less',
    0x3d: 'equal',
    0x3e: 'greater',
    0x3f: 'question',
    0x41: 'A',
    0x43: 'C',
    0x44: 'D',
    0x45: 'E',
    0x46: 'F',
    0x47: 'G',
    0x48: 'H',
    0x49: 'I',
    0x4a: 'J',
    0x4b: 'K',
    0x4c: 'L',
    0x4d: 'M',
    0x4f: 'O',
    0x50: 'P',
    0xab8: 'careof',
    0x52: 'R',
    0x53: 'S',
    0x54: 'T',
    0x55: 'U',
    0x57: 'W',
    0x58: 'X',
    0x59: 'Y',
    0x5a: 'Z',
    0x5b: 'bracketleft',
    0x5c: 'backslash',
    0x5d: 'bracketright',
    0x5e: 'asciicircum',
    0x5f: 'underscore',
    0x61: 'a',
    0x63: 'c',
    0x64: 'd',
    0x65: 'e',
    0x67: 'g',
    0x68: 'h',
    0x69: 'i',
    0x6a: 'j',
    0x6b: 'k',
    0x6e: 'n',
    0x6f: 'o',
    0x73: 's',
    0x1002075: 'fivesuperior',
    0x76: 'v',
    0x1002077: 'sevensuperior',
    0x79: 'y',
    0x7a: 'z',
    0x7c: 'bar',
    0x1002080: 'zerosubscript',
    0x1002081: 'onesubscript',
    0x1002082: 'twosubscript',
    0x1002083: 'threesubscript',
    0x1002084: 'foursubscript',
    0x1002085: 'fivesubscript',
    0x1001eeb: 'uhorngrave',
    0x1002089: 'ninesubscript',
    0x100056f: 'Armenian_ken',
    0xa0: 'nobreakspace',
    0x10020a1: 'ColonSign',
    0x10020a3: 'FFrancSign',
    0xa4: 'currency',
    0x10020a6: 'NairaSign',
    0xa7: 'section',
    0xa8: 'diaeresis',
    0xa9: 'copyright',
    0xaa: 'ordfeminine',
    0x10020ab: 'DongSign',
    0xac: 'notsign',
    0xad: 'hyphen',
    0xaf: 'macron',
    0xb0: 'degree',
    0xb1: 'plusminus',
    0xb2: 'twosuperior',
    0xb3: 'threesuperior',
    0xb5: 'mu',
    0xb6: 'paragraph',
    0xb8: 'cedilla',
    0xb9: 'onesuperior',
    0xba: 'masculine',
    0xbb: 'guillemotright',
    0xbc: 'onequarter',
    0xaca: 'signaturemark',
    0xbe: 'threequarters',
    0xbf: 'questiondown',
    0xc0: 'Agrave',
    0xc1: 'Aacute',
    0xc2: 'Acircumflex',
    0xc3: 'Atilde',
    0xc4: 'Adiaeresis',
    0xc5: 'Aring',
    0xc8: 'Egrave',
    0xcb: 'Ediaeresis',
    0xcc: 'Igrave',
    0xcd: 'Iacute',
    0xce: 'Icircumflex',
    0xd0: 'Eth',
    0xd3: 'Oacute',
    0xd4: 'Ocircumflex',
    0xd5: 'Otilde',
    0xd7: 'multiply',
    0xef2: 'Hangul_PanSios',
    0xda: 'Uacute',
    0xdb: 'Ucircumflex',
    0xdc: 'Udiaeresis',
    0xdd: 'Yacute',
    0xde: 'Thorn',
    0xdf: 'ssharp',
    0xe0: 'agrave',
    0xe1: 'aacute',
    0xe2: 'acircumflex',
    0xe3: 'atilde',
    0xe4: 'adiaeresis',
    0xe5: 'aring',
    0xe6: 'ae',
    0xe7: 'ccedilla',
    0xe8: 'egrave',
    0xeb: 'ediaeresis',
    0xef: 'idiaeresis',
    0xf0: 'eth',
    0xf1: 'ntilde',
    0xf3: 'oacute',
    0xf4: 'ocircumflex',
    0xf5: 'otilde',
    0xf7: 'division',
    0xf8: 'ooblique',
    0xfa: 'uacute',
    0xfc: 'udiaeresis',
    0xfd: 'yacute',
    0xfe: 'thorn',
    0xff: 'ydiaeresis',
    0x2e: 'period',
    0xad9: 'latincross',
    0xadc: 'filledlefttribullet',
    0x100012c: 'Ibreve',
    0xadd: 'filledrighttribullet',
    0x33: '3',
    0xab2: 'onefifth',
    0x7ae: 'Greek_accentdieresis',
    0xae1: 'enopensquarebullet',
    0xab3: 'twofifths',
    0x8bf: 'integral',
    0x6d4: 'Cyrillic_te',
    0xae7: 'enfilledsqbullet',
    0xab4: 'threefifths',
    0x1000174: 'Wcircumflex',
    0x1000175: 'wcircumflex',
    0x1000177: 'ycircumflex',
    0x39: '9',
    0x42: 'B',
    0x1001ef4: 'Ybelowdot',
    0x10001a1: 'ohorn',
    0x1a2: 'breve',
    0x1a5: 'Lcaron',
    0x1a6: 'Sacute',
    0x1a9: 'Scaron',
    0x1aa: 'Scedilla',
    0x1ab: 'Tcaron',
    0x1ae: 'Zcaron',
    0x1af: 'Zabovedot',
    0x10001b0: 'uhorn',
    0x1b1: 'aogonek',
    0x1b2: 'ogonek',
    0x1b3: 'lstroke',
    0x1b5: 'lcaron',
    0x10001b6: 'zstroke',
    0x1b7: 'caron',
    0x1b9: 'scaron',
    0x1ba: 'scedilla',
    0x1bb: 'tcaron',
    0x1bc: 'zacute',
    0x1bd: 'doubleacute',
    0x1be: 'zcaron',
    0x1bf: 'zabovedot',
    0x1c3: 'Abreve',
    0x1c5: 'Lacute',
    0x1c6: 'Cacute',
    0x1c8: 'Ccaron',
    0xfee4: 'Pointer_UpLeft',
    0x1ca: 'Eogonek',
    0x1cc: 'Ecaron',
    0xab7: 'fivesixths',
    0x1cf: 'Dcaron',
    0x1d0: 'Dstroke',
    0x1d8: 'Rcaron',
    0x1d9: 'Uring',
    0x1db: 'Udoubleacute',
    0x1e0: 'racute',
    0x1e3: 'abreve',
    0x1e8: 'ccaron',
    0x1000564: 'Armenian_da',
    0x1ea: 'eogonek',
    0x1ec: 'ecaron',
    0x1f0: 'dstroke',
    0x1f1: 'nacute',
    0x1f2: 'ncaron',
    0x1f5: 'odoubleacute',
    0x1f8: 'rcaron',
    0x1f9: 'uring',
    0xaff: 'cursor',
    0x1fe: 'tcedilla',
    0x1002202: 'partdifferential',
    0x56: 'V',
    0x1000565: 'Armenian_yech',
    0x100220b: 'containsas',
    0xbca: 'jot',
    0xffff: 'Delete',
    0x100221c: 'fourthroot',
    0x100222c: 'dintegral',
    0x1002235: 'because',
    0x60: 'quoteleft',
    0x1002247: 'notapproxeq',
    0x1002248: 'approxeq',
    0x62: 'b',
    0x1000259: 'schwa',
    0x10001b7: 'EZH',
    0x1000292: 'ezh',
    0x1002262: 'notidentical',
    0x1002263: 'stricteq',
    0x66: 'f',
    0x1000275: 'obarred',
    0x5bf: 'Arabic_question_mark',
    0x5c2: 'Arabic_maddaonalef',
    0x6d: 'm',
    0x100056a: 'Armenian_zhe',
    0x2a1: 'Hstroke',
    0x2a6: 'Hcircumflex',
    0x71: 'q',
    0x2ab: 'Gbreve',
    0x2ac: 'Jcircumflex',
    0x72: 'r',
    0x2b6: 'hcircumflex',
    0x5c9: 'Arabic_tehmarbuta',
    0x2b9: 'idotless',
    0x100056b: 'Armenian_ini',
    0x2c5: 'Cabovedot',
    0x2c6: 'Ccircumflex',
    0x5cc: 'Arabic_jeem',
    0x78: 'x',
    0x2d5: 'Gabovedot',
    0x1002079: 'ninesuperior',
    0x2dd: 'Ubreve',
    0x2de: 'Scircumflex',
    0x7b: 'braceleft',
    0x2e5: 'cabovedot',
    0x2e6: 'ccircumflex',
    0xaf5: 'musicalsharp',
    0x7d: 'braceright',
    0x7e: 'asciitilde',
    0x2f8: 'gcircumflex',
    0x2fd: 'ubreve',
    0x5d7: 'Arabic_tah',
    0x1002086: 'sixsubscript',
    0x1002087: 'sevensubscript',
    0x1002088: 'eightsubscript',
    0x5e2: 'Arabic_qaf',
    0x5e3: 'Arabic_kaf',
    0x1000571: 'Armenian_dza',
    0x5ed: 'Arabic_kasratan',
    0xac6: 'seveneighths',
    0x5ee: 'Arabic_fatha',
    0x3a3: 'Rcedilla',
    0x3a5: 'Itilde',
    0x3a6: 'Lcedilla',
    0x3aa: 'Emacron',
    0x3ac: 'Tslash',
    0x3b3: 'rcedilla',
    0xbd8: 'rightshoe',
    0x3b5: 'itilde',
    0x3b6: 'lcedilla',
    0x3ba: 'emacron',
    0x3bb: 'gcedilla',
    0x3bc: 'tslash',
    0x3bf: 'eng',
    0x10020a0: 'EcuSign',
    0x3c7: 'Iogonek',
    0x3cc: 'Eabovedot',
    0x10020a2: 'CruzeiroSign',
    0x3cf: 'Imacron',
    0x3d1: 'Ncedilla',
    0x3d3: 'Kcedilla',
    0x10020a4: 'LiraSign',
    0x3dd: 'Utilde',
    0xa5: 'yen',
    0x3e0: 'amacron',
    0xa6: 'brokenbar',
    0x3e7: 'iogonek',
    0x10020a8: 'RupeeSign',
    0x3f2: 'omacron',
    0x3f3: 'kcedilla',
    0x10020a9: 'WonSign',
    0x3f9: 'uogonek',
    0x10020aa: 'NewSheqelSign',
    0x3fe: 'umacron',
    0x20ac: 'EuroSign',
    0x74: 't',
    0x1002070: 'zerosuperior',
    0x10028a2: 'braille_dots_268',
    0xbd: 'onehalf',
    0x47e: 'overline',
    0x10028a4: 'braille_dots_368',
    0x1000492: 'Cyrillic_GHE_bar',
    0x1000493: 'Cyrillic_ghe_bar',
    0x1000497: 'Cyrillic_zhe_descender',
    0x100049a: 'Cyrillic_KA_descender',
    0x100049b: 'Cyrillic_ka_descender',
    0x100049c: 'Cyrillic_KA_vertstroke',
    0x100049d: 'Cyrillic_ka_vertstroke',
    0x4a1: 'kana_fullstop',
    0x4a2: 'kana_openingbracket',
    0x10004a3: 'Cyrillic_en_descender',
    0x4a4: 'kana_comma',
    0xc6: 'AE',
    0x4a6: 'kana_WO',
    0x4a7: 'kana_a',
    0x4a8: 'kana_i',
    0x4a9: 'kana_u',
    0x4aa: 'kana_e',
    0xc7: 'Ccedilla',
    0x4ac: 'kana_ya',
    0x4ad: 'kana_yu',
    0x4af: 'kana_tsu',
    0x4b1: 'kana_A',
    0x4b2: 'kana_I',
    0x10004b3: 'Cyrillic_ha_descender',
    0x4b4: 'kana_E',
    0x4b5: 'kana_O',
    0x10004b6: 'Cyrillic_CHE_descender',
    0xc9: 'Eacute',
    0x10004b8: 'Cyrillic_CHE_vertstroke',
    0x10004b9: 'Cyrillic_che_vertstroke',
    0x10004ba: 'Cyrillic_SHHA',
    0x4bc: 'kana_SHI',
    0x4bd: 'kana_SU',
    0x4be: 'kana_SE',
    0x4c0: 'kana_TA',
    0x4c1: 'kana_TI',
    0x4c4: 'kana_TO',
    0x4c5: 'kana_NA',
    0x4c6: 'kana_NI',
    0x4c7: 'kana_NU',
    0x4c8: 'kana_NE',
    0x4c9: 'kana_NO',
    0x4ca: 'kana_HA',
    0x4cc: 'kana_HU',
    0x4cd: 'kana_HE',
    0x4ce: 'kana_HO',
    0x4cf: 'kana_MA',
    0x4d0: 'kana_MI',
    0x4d1: 'kana_MU',
    0x4d3: 'kana_MO',
    0x4d5: 'kana_YU',
    0x4d6: 'kana_YO',
    0x4d8: 'kana_RI',
    0x4d9: 'kana_RU',
    0x4da: 'kana_RE',
    0x4dc: 'kana_WA',
    0x4dd: 'kana_N',
    0x4de: 'voicedsound',
    0x4df: 'semivoicedsound',
    0x10004e2: 'Cyrillic_I_macron',
    0x10004e3: 'Cyrillic_i_macron',
    0xd1: 'Ntilde',
    0x10004e8: 'Cyrillic_O_bar',
    0x10004e9: 'Cyrillic_o_bar',
    0x8b0: 'rightmiddlecurlybrace',
    0xd2: 'Ograve',
    0x10004ee: 'Cyrillic_U_macron',
    0x10004ef: 'Cyrillic_u_macron',
    0x10010d3: 'Georgian_don',
    0xd6: 'Odiaeresis',
    0xd8: 'Oslash',
    0xd9: 'Ugrave',
    0x1000531: 'Armenian_AYB',
    0x1000532: 'Armenian_BEN',
    0x1000533: 'Armenian_GIM',
    0x1000534: 'Armenian_DA',
    0x1000539: 'Armenian_TO',
    0x100053a: 'Armenian_ZHE',
    0x100053b: 'Armenian_INI',
    0x100053c: 'Armenian_LYUN',
    0x100053d: 'Armenian_KHE',
    0x100053e: 'Armenian_TSA',
    0x100053f: 'Armenian_KEN',
    0x1000542: 'Armenian_GHAT',
    0x1000545: 'Armenian_HI',
    0x1000547: 'Armenian_SHA',
    0x1000548: 'Armenian_VO',
    0x1000549: 'Armenian_CHA',
    0x100054a: 'Armenian_PE',
    0x100054c: 'Armenian_RA',
    0x100054e: 'Armenian_VEV',
    0x1001e03: 'babovedot',
    0x1000551: 'Armenian_TSO',
    0x1000552: 'Armenian_VYUN',
    0x1000553: 'Armenian_PYUR',
    0x1000554: 'Armenian_KE',
    0x1000555: 'Armenian_O',
    0x1000556: 'Armenian_FE',
    0x100055a: 'Armenian_apostrophe',
    0x100055b: 'Armenian_accent',
    0x100055c: 'Armenian_amanak',
    0x100055d: 'Armenian_separation_mark',
    0x100055e: 'Armenian_question',
    0x1000561: 'Armenian_ayb',
    0x1000562: 'Armenian_ben',
    0x1000563: 'Armenian_gim',
    0x1000566: 'Armenian_za',
    0x1000567: 'Armenian_e',
    0x1000568: 'Armenian_at',
    0x1000569: 'Armenian_to',
    0x100056c: 'Armenian_lyun',
    0x100056d: 'Armenian_khe',
    0x100056e: 'Armenian_tsa',
    0x1000570: 'Armenian_ho',
    0x1000572: 'Armenian_ghat',
    0x1000573: 'Armenian_tche',
    0x1000574: 'Armenian_men',
    0x1000575: 'Armenian_hi',
    0x1000576: 'Armenian_nu',
    0x1000577: 'Armenian_sha',
    0x1000578: 'Armenian_vo',
    0x1000579: 'Armenian_cha',
    0x100057a: 'Armenian_pe',
    0x100057b: 'Armenian_je',
    0x100057c: 'Armenian_ra',
    0xea: 'ecircumflex',
    0x100057e: 'Armenian_vev',
    0x100057f: 'Armenian_tyun',
    0x1000580: 'Armenian_re',
    0x1000581: 'Armenian_tso',
    0x1000582: 'Armenian_vyun',
    0x1000583: 'Armenian_pyur',
    0x1000584: 'Armenian_ke',
    0x1000585: 'Armenian_o',
    0x1000586: 'Armenian_fe',
    0x100058a: 'Armenian_yentamna',
    0xed: 'iacute',
    0x40: 'at',
    0x5ac: 'Arabic_comma',
    0xf2: 'ograve',
    0x10010f3: 'Georgian_we',
    0x5bb: 'Arabic_semicolon',
    0x5c1: 'Arabic_hamza',
    0x8fd: 'rightarrow',
    0x5c3: 'Arabic_hamzaonalef',
    0x5c4: 'Arabic_hamzaonwaw',
    0x5c5: 'Arabic_hamzaunderalef',
    0x5c6: 'Arabic_hamzaonyeh',
    0x5c7: 'Arabic_alef',
    0x5c8: 'Arabic_beh',
    0x5ca: 'Arabic_teh',
    0x5cd: 'Arabic_hah',
    0x5ce: 'Arabic_khah',
    0x5cf: 'Arabic_dal',
    0x5d0: 'Arabic_thal',
    0x5d2: 'Arabic_zain',
    0x5d3: 'Arabic_seen',
    0x5d4: 'Arabic_sheen',
    0x5d5: 'Arabic_sad',
    0x5d6: 'Arabic_dad',
    0x5d8: 'Arabic_zah',
    0x5d9: 'Arabic_ain',
    0x5da: 'Arabic_ghain',
    0x5e0: 'Arabic_tatweel',
    0x5e1: 'Arabic_feh',
    0xfb: 'ucircumflex',
    0x5e4: 'Arabic_lam',
    0x5e5: 'Arabic_meem',
    0x5e6: 'Arabic_noon',
    0x5e7: 'Arabic_ha',
    0x5e8: 'Arabic_waw',
    0x5e9: 'Arabic_alefmaksura',
    0x5ea: 'Arabic_yeh',
    0x5eb: 'Arabic_fathatan',
    0x5ec: 'Arabic_dammatan',
    0x5ef: 'Arabic_damma',
    0x1000587: 'Armenian_ligature_ew',
    0xfe6b: 'dead_belowbreve',
    0x10028b2: 'braille_dots_2568',
    0x100054d: 'Armenian_SE',
    0x1000589: 'Armenian_full_stop',
    0x1000653: 'Arabic_madda_above',
    0x1000655: 'Arabic_hamza_below',
    0x1000664: 'Arabic_4',
    0x1000660: 'Arabic_0',
    0x1000661: 'Arabic_1',
    0x1000662: 'Arabic_2',
    0x1000663: 'Arabic_3',
    0x1000665: 'Arabic_5',
    0x1000666: 'Arabic_6',
    0x1000667: 'Arabic_7',
    0x1000668: 'Arabic_8',
    0x100066a: 'Arabic_percent',
    0x1000670: 'Arabic_superscript_alef',
    0x1000669: 'Arabic_9',
    0x1000679: 'Arabic_tteh',
    0x100067e: 'Arabic_peh',
    0x1000686: 'Arabic_tcheh',
    0x1000688: 'Arabic_ddal',
    0x1000698: 'Arabic_jeh',
    0x10028b6: 'braille_dots_23568',
    0x6a1: 'Serbian_dje',
    0x6a2: 'Macedonia_gje',
    0x6a3: 'Cyrillic_io',
    0x10006a4: 'Arabic_veh',
    0x6a5: 'Macedonia_dse',
    0x6a6: 'Ukranian_i',
    0x6a7: 'Ukranian_yi',
    0x6a8: 'Cyrillic_je',
    0x6aa: 'Serbian_nje',
    0x6ab: 'Serbian_tshe',
    0x6ac: 'Macedonia_kje',
    0x6ad: 'Ukrainian_ghe_with_upturn',
    0x6ae: 'Byelorussian_shortu',
    0x6af: 'Cyrillic_dzhe',
    0x6b0: 'numerosign',
    0x6b1: 'Serbian_DJE',
    0x6b3: 'Cyrillic_IO',
    0x6b4: 'Ukranian_JE',
    0x6b5: 'Macedonia_DSE',
    0x6b6: 'Ukranian_I',
    0x6b7: 'Ukrainian_YI',
    0x6b8: 'Serbian_JE',
    0x6b9: 'Cyrillic_LJE',
    0x10006ba: 'Arabic_noon_ghunna',
    0x6bb: 'Serbian_TSHE',
    0x6bd: 'Ukrainian_GHE_WITH_UPTURN',
    0x6be: 'Byelorussian_SHORTU',
    0x6bf: 'Serbian_DZE',
    0x6c1: 'Cyrillic_a',
    0x6c4: 'Cyrillic_de',
    0x6c6: 'Cyrillic_ef',
    0x6c8: 'Cyrillic_ha',
    0x6c9: 'Cyrillic_i',
    0x6ca: 'Cyrillic_shorti',
    0x10006cc: 'Farsi_yeh',
    0x6cf: 'Cyrillic_o',
    0x6d0: 'Cyrillic_pe',
    0x6d1: 'Cyrillic_ya',
    0x10006d2: 'Arabic_yeh_baree',
    0x6d3: 'Cyrillic_es',
    0x10006d4: 'Arabic_fullstop',
    0x6d5: 'Cyrillic_u',
    0x6d6: 'Cyrillic_zhe',
    0x6d7: 'Cyrillic_ve',
    0x6d8: 'Cyrillic_softsign',
    0x6d9: 'Cyrillic_yeru',
    0x6da: 'Cyrillic_ze',
    0x6db: 'Cyrillic_sha',
    0x6dc: 'Cyrillic_e',
    0x6dd: 'Cyrillic_shcha',
    0x6df: 'Cyrillic_hardsign',
    0x6e0: 'Cyrillic_YU',
    0x6e1: 'Cyrillic_A',
    0x6e2: 'Cyrillic_BE',
    0x6e4: 'Cyrillic_DE',
    0x6e5: 'Cyrillic_IE',
    0x6e6: 'Cyrillic_EF',
    0x6e7: 'Cyrillic_GHE',
    0x6e8: 'Cyrillic_HA',
    0x6e9: 'Cyrillic_I',
    0x6ea: 'Cyrillic_SHORTI',
    0x6eb: 'Cyrillic_KA',
    0x6ec: 'Cyrillic_EL',
    0x6ed: 'Cyrillic_EM',
    0x6ef: 'Cyrillic_O',
    0x10006f0: 'Farsi_0',
    0x6f1: 'Cyrillic_YA',
    0x10006f2: 'Farsi_2',
    0x6f5: 'Cyrillic_U',
    0x10006f6: 'Farsi_6',
    0x6f7: 'Cyrillic_VE',
    0x6f8: 'Cyrillic_SOFTSIGN',
    0x6f9: 'Cyrillic_YERU',
    0x6fa: 'Cyrillic_ZE',
    0x6fb: 'Cyrillic_SHA',
    0x6fc: 'Cyrillic_E',
    0x6fe: 'Cyrillic_CHE',
    0x6ff: 'Cyrillic_HARDSIGN',
    0x8c2: 'infinity',
    0x100012d: 'ibreve',
    0xab5: 'fourfifths',
    0x8c5: 'nabla',
    0x1000691: 'Arabic_rreh',
    0xfeea: 'Pointer_Button2',
    0x10028bd: 'braille_dots_134568',
    0x7a1: 'Greek_ALPHAaccent',
    0x7a3: 'Greek_ETAaccent',
    0x7a7: 'Greek_OMICRONaccent',
    0x7a9: 'Greek_UPSILONdieresis',
    0x7ab: 'Greek_OMEGAaccent',
    0x7af: 'Greek_horizbar',
    0x7b1: 'Greek_alphaaccent',
    0x7b2: 'Greek_epsilonaccent',
    0x7b3: 'Greek_etaaccent',
    0x7b4: 'Greek_iotaaccent',
    0x7b5: 'Greek_iotadieresis',
    0x7b6: 'Greek_iotaaccentdieresis',
    0x7b7: 'Greek_omicronaccent',
    0x7b9: 'Greek_upsilondieresis',
    0x7ba: 'Greek_upsilonaccentdieresis',
    0x7bb: 'Greek_omegaaccent',
    0x7c1: 'Greek_ALPHA',
    0x7c2: 'Greek_BETA',
    0x7c5: 'Greek_EPSILON',
    0x7c6: 'Greek_ZETA',
    0x7c7: 'Greek_ETA',
    0x7c8: 'Greek_THETA',
    0x7ca: 'Greek_KAPPA',
    0x7cd: 'Greek_NU',
    0x7cf: 'Greek_OMICRON',
    0x7d0: 'Greek_PI',
    0x7d2: 'Greek_SIGMA',
    0x7d4: 'Greek_TAU',
    0x7d7: 'Greek_CHI',
    0x7d8: 'Greek_PSI',
    0x7e1: 'Greek_alpha',
    0x7e2: 'Greek_beta',
    0x7e3: 'Greek_gamma',
    0x7e4: 'Greek_delta',
    0x7e5: 'Greek_epsilon',
    0x7e6: 'Greek_zeta',
    0x7e7: 'Greek_eta',
    0x7e8: 'Greek_theta',
    0x7ea: 'Greek_kappa',
    0x7eb: 'Greek_lamda',
    0x7ec: 'Greek_mu',
    0x7ed: 'Greek_nu',
    0x7ee: 'Greek_xi',
    0x7ef: 'Greek_omicron',
    0x7f0: 'Greek_pi',
    0x7f2: 'Greek_sigma',
    0x7f4: 'Greek_tau',
    0x7f6: 'Greek_phi',
    0x6a9: 'Serbian_lje',
    0x7f8: 'Greek_psi',
    0x1002800: 'braille_blank',
    0x1002801: 'braille_dots_1',
    0x1002802: 'braille_dots_2',
    0x1002803: 'braille_dots_12',
    0x1002804: 'braille_dots_3',
    0x1002805: 'braille_dots_13',
    0x1002806: 'braille_dots_23',
    0x1002807: 'braille_dots_123',
    0x1002808: 'braille_dots_4',
    0x1002809: 'braille_dots_14',
    0x100280a: 'braille_dots_24',
    0x100280d: 'braille_dots_134',
    0x100280e: 'braille_dots_234',
    0x100280f: 'braille_dots_1234',
    0x1002810: 'braille_dots_5',
    0x1002811: 'braille_dots_15',
    0x1002812: 'braille_dots_25',
    0x1002813: 'braille_dots_125',
    0x1002814: 'braille_dots_35',
    0x1002815: 'braille_dots_135',
    0x1002816: 'braille_dots_235',
    0x1002817: 'braille_dots_1235',
    0x1002818: 'braille_dots_45',
    0x1002819: 'braille_dots_145',
    0x100281a: 'braille_dots_245',
    0x100281b: 'braille_dots_1245',
    0x100281c: 'braille_dots_345',
    0x100281d: 'braille_dots_1345',
    0x100281e: 'braille_dots_2345',
    0x100281f: 'braille_dots_12345',
    0x1002820: 'braille_dots_6',
    0x1002821: 'braille_dots_16',
    0x1002822: 'braille_dots_26',
    0xaed: 'diamond',
    0x1002824: 'braille_dots_36',
    0x1002825: 'braille_dots_136',
    0x1002826: 'braille_dots_236',
    0x1002827: 'braille_dots_1236',
    0x100282a: 'braille_dots_246',
    0x100282b: 'braille_dots_1246',
    0x100282c: 'braille_dots_346',
    0x100282d: 'braille_dots_1346',
    0x100282e: 'braille_dots_2346',
    0x100282f: 'braille_dots_12346',
    0x1002832: 'braille_dots_256',
    0x1002834: 'braille_dots_356',
    0x1002835: 'braille_dots_1356',
    0x1002837: 'braille_dots_12356',
    0x1002839: 'braille_dots_1456',
    0x100283a: 'braille_dots_2456',
    0x100283b: 'braille_dots_12456',
    0x100283c: 'braille_dots_3456',
    0x100283f: 'braille_dots_123456',
    0x1002842: 'braille_dots_27',
    0x1002843: 'braille_dots_127',
    0x1002845: 'braille_dots_137',
    0x1002846: 'braille_dots_237',
    0x1002847: 'braille_dots_1237',
    0x1002848: 'braille_dots_47',
    0x1002849: 'braille_dots_147',
    0x100284a: 'braille_dots_247',
    0x100284b: 'braille_dots_1247',
    0x100284c: 'braille_dots_347',
    0x100284d: 'braille_dots_1347',
    0x100284e: 'braille_dots_2347',
    0x100284f: 'braille_dots_12347',
    0x1002850: 'braille_dots_57',
    0x1002851: 'braille_dots_157',
    0x1002852: 'braille_dots_257',
    0x1002853: 'braille_dots_1257',
    0x1002854: 'braille_dots_357',
    0x1002855: 'braille_dots_1357',
    0x1002858: 'braille_dots_457',
    0x1002859: 'braille_dots_1457',
    0x100285a: 'braille_dots_2457',
    0x100285b: 'braille_dots_12457',
    0x100285c: 'braille_dots_3457',
    0x100285d: 'braille_dots_13457',
    0x100285e: 'braille_dots_23457',
    0x100285f: 'braille_dots_123457',
    0x1002860: 'braille_dots_67',
    0x1002861: 'braille_dots_167',
    0x1002862: 'braille_dots_267',
    0x1002863: 'braille_dots_1267',
    0x1002864: 'braille_dots_367',
    0x1002865: 'braille_dots_1367',
    0x1002866: 'braille_dots_2367',
    0x1002867: 'braille_dots_12367',
    0x1002868: 'braille_dots_467',
    0x1002869: 'braille_dots_1467',
    0x100286a: 'braille_dots_2467',
    0x100286b: 'braille_dots_12467',
    0x100286c: 'braille_dots_3467',
    0x100286d: 'braille_dots_13467',
    0x100286e: 'braille_dots_23467',
    0x100286f: 'braille_dots_123467',
    0x1002870: 'braille_dots_567',
    0x1002871: 'braille_dots_1567',
    0x1002872: 'braille_dots_2567',
    0x1002873: 'braille_dots_12567',
    0x1002874: 'braille_dots_3567',
    0x10006be: 'Arabic_heh_doachashmee',
    0x1002877: 'braille_dots_123567',
    0x1002878: 'braille_dots_4567',
    0x1002879: 'braille_dots_14567',
    0x100287a: 'braille_dots_24567',
    0x100287b: 'braille_dots_124567',
    0x100287c: 'braille_dots_34567',
    0x100287d: 'braille_dots_134567',
    0x100287e: 'braille_dots_234567',
    0x100287f: 'braille_dots_1234567',
    0x1002880: 'braille_dots_8',
    0x1002881: 'braille_dots_18',
    0x1002884: 'braille_dots_38',
    0x1002885: 'braille_dots_138',
    0x1002886: 'braille_dots_238',
    0x1002888: 'braille_dots_48',
    0x100288a: 'braille_dots_248',
    0x100288b: 'braille_dots_1248',
    0x100288c: 'braille_dots_348',
    0x100288d: 'braille_dots_1348',
    0x100288e: 'braille_dots_2348',
    0x100288f: 'braille_dots_12348',
    0x1002890: 'braille_dots_58',
    0x1002891: 'braille_dots_158',
    0x1002892: 'braille_dots_258',
    0x1002894: 'braille_dots_358',
    0x1002895: 'braille_dots_1358',
    0x1002896: 'braille_dots_2358',
    0x1002898: 'braille_dots_458',
    0x1002899: 'braille_dots_1458',
    0x100289a: 'braille_dots_2458',
    0x100289b: 'braille_dots_12458',
    0x100289c: 'braille_dots_3458',
    0x100289e: 'braille_dots_23458',
    0x100289f: 'braille_dots_123458',
    0x8a1: 'leftradical',
    0x8a2: 'topleftradical',
    0x8a3: 'horizconnector',
    0x8a4: 'topintegral',
    0x10028a5: 'braille_dots_1368',
    0x8a6: 'vertconnector',
    0x10028a7: 'braille_dots_12368',
    0x8a8: 'botleftsqbracket',
    0x8a9: 'toprightsqbracket',
    0x10028aa: 'braille_dots_2468',
    0x10028ab: 'braille_dots_12468',
    0x10028ac: 'braille_dots_3468',
    0x10028ad: 'braille_dots_13468',
    0x10028ae: 'braille_dots_23468',
    0x8af: 'leftmiddlecurlybrace',
    0x10028b1: 'braille_dots_1568',
    0x8b3: 'topvertsummationconnector',
    0x10028b5: 'braille_dots_13568',
    0x8b6: 'botrightsummation',
    0x10028b8: 'braille_dots_4568',
    0x10028b9: 'braille_dots_14568',
    0x10028ba: 'braille_dots_24568',
    0x10028bb: 'braille_dots_124568',
    0x10028bc: 'braille_dots_34568',
    0x8be: 'greaterthanequal',
    0x10028bf: 'braille_dots_1234568',
    0x8c0: 'therefore',
    0x10028c1: 'braille_dots_178',
    0x10028c2: 'braille_dots_278',
    0x6cb: 'Cyrillic_ka',
    0x10028c4: 'braille_dots_378',
    0x10028c5: 'braille_dots_1378',
    0x10028c6: 'braille_dots_2378',
    0x10028c7: 'braille_dots_12378',
    0x8c8: 'approximate',
    0x8c9: 'similarequal',
    0x10028ca: 'braille_dots_2478',
    0x10028cb: 'braille_dots_12478',
    0x10028cc: 'braille_dots_3478',
    0x10028cd: 'braille_dots_13478',
    0x10028ce: 'braille_dots_23478',
    0x10028d0: 'braille_dots_578',
    0x10028d1: 'braille_dots_1578',
    0x10028d2: 'braille_dots_2578',
    0x10028d3: 'braille_dots_12578',
    0x8d6: 'radical',
    0x10028d7: 'braille_dots_123578',
    0x10028d8: 'braille_dots_4578',
    0x10028d9: 'braille_dots_14578',
    0x8da: 'includedin',
    0x10028dc: 'braille_dots_34578',
    0x8dd: 'union',
    0x10028de: 'braille_dots_234578',
    0x8df: 'logicalor',
    0x10028e0: 'braille_dots_678',
    0x10028e1: 'braille_dots_1678',
    0x10028e2: 'braille_dots_2678',
    0x10028e3: 'braille_dots_12678',
    0x10028e4: 'braille_dots_3678',
    0x10028e5: 'braille_dots_13678',
    0x10028e6: 'braille_dots_23678',
    0x10028e7: 'braille_dots_123678',
    0x10028e8: 'braille_dots_4678',
    0x10028ea: 'braille_dots_24678',
    0x10028eb: 'braille_dots_124678',
    0x10028ec: 'braille_dots_34678',
    0x10028ed: 'braille_dots_134678',
    0x8ef: 'partialderivative',
    0x10028f0: 'braille_dots_5678',
    0x10028f1: 'braille_dots_15678',
    0x10028f4: 'braille_dots_35678',
    0x10028f5: 'braille_dots_135678',
    0x10028f6: 'braille_dots_235678',
    0x10028f7: 'braille_dots_1235678',
    0x10028f8: 'braille_dots_45678',
    0x10028f9: 'braille_dots_145678',
    0x10028fa: 'braille_dots_245678',
    0x8fb: 'leftarrow',
    0x8fc: 'uparrow',
    0x10028fe: 'braille_dots_2345678',
    0x6b2: 'Macedonia_GJE',
    0x4e: 'N',
    0x1002074: 'foursuperior',
    0x6de: 'Cyrillic_che',
    0x6e3: 'Cyrillic_TSE',
    0x100018f: 'SCHWA',
    0x10028b4: 'braille_dots_3568',
    0x51: 'Q',
    0xeee: 'Hangul_J_Hieuh',
    0x6ee: 'Cyrillic_EN',
    0x6f0: 'Cyrillic_PE',
    0x10006f3: 'Farsi_3',
    0x6f4: 'Cyrillic_TE',
    0x100019f: 'Obarred',
    0x10006f5: 'Farsi_5',
    0x6f6: 'Cyrillic_ZHE',
    0x1a1: 'Aogonek',
    0x10006f8: 'Farsi_8',
    0x1a3: 'Lstroke',
    0x10006f9: 'Farsi_9',
    0x9e0: 'soliddiamond',
    0x9e1: 'checkerboard',
    0x9e2: 'ht',
    0x9e3: 'ff',
    0x9e4: 'cr',
    0x9e8: 'nl',
    0x9e9: 'vt',
    0x9ea: 'lowrightcorner',
    0x9ec: 'upleftcorner',
    0x9ed: 'lowleftcorner',
    0x9ee: 'crossinglines',
    0x9ef: 'horizlinescan1',
    0x9f1: 'horizlinescan5',
    0x9f2: 'horizlinescan7',
    0x9f3: 'horizlinescan9',
    0x9f4: 'leftt',
    0x9f5: 'rightt',
    0x9f6: 'bott',
    0x9f7: 'topt',
    0x9f8: 'vertbar',
    0x6ba: 'Serbian_NJE',
    0x7cb: 'Greek_LAMBDA',
    0x8dc: 'intersection',
    0x10001af: 'Uhorn',
    0xab6: 'onesixth',
    0x7cc: 'Greek_MU',
    0x10001b5: 'Zstroke',
    0x7ce: 'Greek_XI',
    0x9f0: 'horizlinescan3',
    0x1c0: 'Racute',
    0xaa1: 'emspace',
    0xaa2: 'enspace',
    0xaa4: 'em4space',
    0xaa6: 'punctspace',
    0xaa7: 'thinspace',
    0xaa8: 'hairspace',
    0xaa9: 'emdash',
    0xaac: 'signifblank',
    0x10028b7: 'braille_dots_123568',
    0xaae: 'ellipsis',
    0xaaf: 'doubbaselinedot',
    0xab0: 'onethird',
    0xab1: 'twothirds',
    0xabb: 'figdash',
    0xabc: 'leftanglebracket',
    0xabd: 'decimalpoint',
    0xabe: 'rightanglebracket',
    0xabf: 'marker',
    0x7d1: 'Greek_RHO',
    0xac3: 'oneeighth',
    0xac4: 'threeeighths',
    0xac5: 'fiveeighths',
    0xac9: 'trademark',
    0xacb: 'trademarkincircle',
    0xacc: 'leftopentriangle',
    0xacd: 'rightopentriangle',
    0xacf: 'emopenrectangle',
    0xad0: 'leftsinglequotemark',
    0xad1: 'rightsinglequotemark',
    0xad4: 'prescription',
    0xad5: 'permille',
    0xad6: 'minutes',
    0xad7: 'seconds',
    0xadb: 'filledrectbullet',
    0xade: 'emfilledcircle',
    0xae0: 'enopencircbullet',
    0xae2: 'openrectbullet',
    0xae4: 'opentribulletdown',
    0xae5: 'openstar',
    0xae6: 'enfilledcircbullet',
    0xae8: 'filledtribulletup',
    0xae9: 'filledtribulletdown',
    0xaea: 'leftpointer',
    0xaeb: 'rightpointer',
    0xaec: 'club',
    0x10001d2: 'ocaron',
    0xaee: 'heart',
    0xaf0: 'maltesecross',
    0xaf1: 'dagger',
    0xaf2: 'doubledagger',
    0xaf3: 'checkmark',
    0xaf4: 'ballotcross',
    0xaf6: 'musicalflat',
    0xaf7: 'malesymbol',
    0x6c2: 'Cyrillic_be',
    0xaf9: 'telephone',
    0xafa: 'telephonerecorder',
    0xafb: 'phonographcopyright',
    0xafc: 'caret',
    0xafd: 'singlelowquotemark',
    0xafe: 'doublelowquotemark',
    0x1d5: 'Odoubleacute',
    0x6c3: 'Cyrillic_tse',
    0x1de: 'Tcedilla',
    0x6c5: 'Cyrillic_ie',
    0x1e6: 'cacute',
    0x10001e7: 'gcaron',
    0xba3: 'leftcaret',
    0xba6: 'rightcaret',
    0xba8: 'downcaret',
    0xba9: 'upcaret',
    0x10006af: 'Arabic_gaf',
    0xbc0: 'overbar',
    0xbc2: 'downtack',
    0xbc3: 'upshoe',
    0xbc4: 'downstile',
    0xbc6: 'underbar',
    0xbcc: 'quad',
    0xbce: 'uptack',
    0xbcf: 'circle',
    0xbd3: 'upstile',
    0xbd6: 'downshoe',
    0xadf: 'emfilledrect',
    0xbda: 'leftshoe',
    0xbdc: 'lefttack',
    0x1fb: 'udoubleacute',
    0x1000176: 'Ycircumflex',
    0x1ff: 'abovedot',
    0xbfc: 'righttack',
    0x1002205: 'emptyset',
    0x6cc: 'Cyrillic_el',
    0x1002208: 'elementof',
    0x1002209: 'notelementof',
    0x6cd: 'Cyrillic_em',
    0xad3: 'rightdoublequotemark',
    0x6ce: 'Cyrillic_en',
    0x100221a: 'squareroot',
    0x100221b: 'cuberoot',
    0x10004af: 'Cyrillic_u_straight',
    0x6c: 'l',
    0xfe07: 'ISO_Group_Lock',
    0x6d2: 'Cyrillic_er',
    0xce0: 'hebrew_aleph',
    0xce1: 'hebrew_bet',
    0xce2: 'hebrew_gimel',
    0xce3: 'hebrew_daleth',
    0xce4: 'hebrew_he',
    0xce5: 'hebrew_waw',
    0xce6: 'hebrew_zayin',
    0xce7: 'hebrew_chet',
    0xce8: 'hebrew_tet',
    0xce9: 'hebrew_yod',
    0xcea: 'hebrew_finalkaph',
    0xceb: 'hebrew_kaph',
    0xcec: 'hebrew_lamed',
    0xced: 'hebrew_finalmem',
    0xcee: 'hebrew_mem',
    0xcef: 'hebrew_finalnun',
    0xcf1: 'hebrew_samech',
    0xcf3: 'hebrew_finalpe',
    0xcf4: 'hebrew_pe',
    0xcf5: 'hebrew_finalzadi',
    0xcf6: 'hebrew_zadi',
    0xcf7: 'hebrew_kuf',
    0xcf8: 'hebrew_resh',
    0xcf9: 'hebrew_shin',
    0xcfa: 'hebrew_taf',
    0x3ec: 'eabovedot',
    0x100222d: 'tintegral',
    0xae3: 'opentribulletup',
    0x25: 'percent',
    0xfe0a: 'ISO_Prev_Group',
    0xcdf: 'hebrew_doublelowline',
    0x10028ef: 'braille_dots_1234678',
    0xda1: 'Thai_kokai',
    0xda2: 'Thai_khokhai',
    0xda3: 'Thai_khokhuat',
    0xda4: 'Thai_khokhwai',
    0xda5: 'Thai_khokhon',
    0xda6: 'Thai_khorakhang',
    0xda7: 'Thai_ngongu',
    0xda9: 'Thai_choching',
    0xdaa: 'Thai_chochang',
    0xdab: 'Thai_soso',
    0xdac: 'Thai_chochoe',
    0xdad: 'Thai_yoying',
    0xdae: 'Thai_dochada',
    0xdaf: 'Thai_topatak',
    0xdb0: 'Thai_thothan',
    0xdb1: 'Thai_thonangmontho',
    0xdb2: 'Thai_thophuthao',
    0xdb4: 'Thai_dodek',
    0xdb5: 'Thai_totao',
    0xdb6: 'Thai_thothung',
    0xdb7: 'Thai_thothahan',
    0xdb8: 'Thai_thothong',
    0xdb9: 'Thai_nonu',
    0xdba: 'Thai_bobaimai',
    0xdbc: 'Thai_phophung',
    0xdbd: 'Thai_fofa',
    0xdbe: 'Thai_phophan',
    0x75: 'u',
    0xdc2: 'Thai_yoyak',
    0xdc3: 'Thai_rorua',
    0xdc4: 'Thai_ru',
    0xdc5: 'Thai_loling',
    0xdc6: 'Thai_lu',
    0xdc9: 'Thai_sorusi',
    0xdca: 'Thai_sosua',
    0xdcc: 'Thai_lochula',
    0xdcd: 'Thai_oang',
    0xdce: 'Thai_honokhuk',
    0xdcf: 'Thai_paiyannoi',
    0xdd0: 'Thai_saraa',
    0xdd1: 'Thai_maihanakat',
    0xdd2: 'Thai_saraaa',
    0xdd3: 'Thai_saraam',
    0xdd4: 'Thai_sarai',
    0xdd5: 'Thai_saraii',
    0xdd6: 'Thai_saraue',
    0xdd8: 'Thai_sarau',
    0xdd9: 'Thai_sarauu',
    0xdda: 'Thai_phinthu',
    0xdde: 'Thai_maihanakat_maitho',
    0x7a5: 'Greek_IOTAdiaeresis',
    0xde1: 'Thai_saraae',
    0xde2: 'Thai_sarao',
    0xde3: 'Thai_saraaimaimuan',
    0xde4: 'Thai_saraaimaimalai',
    0xde5: 'Thai_lakkhangyao',
    0xde6: 'Thai_maiyamok',
    0xde7: 'Thai_maitaikhu',
    0xde8: 'Thai_maiek',
    0xde9: 'Thai_maitho',
    0xdea: 'Thai_maitri',
    0xdeb: 'Thai_maichattawa',
    0xdec: 'Thai_thanthakhat',
    0xded: 'Thai_nikhahit',
    0xdf0: 'Thai_leksun',
    0xdf1: 'Thai_leknung',
    0xdf2: 'Thai_leksong',
    0xdf3: 'Thai_leksam',
    0xdf4: 'Thai_leksi',
    0xdf5: 'Thai_lekha',
    0xdf6: 'Thai_lekhok',
    0xdf7: 'Thai_lekchet',
    0xdf8: 'Thai_lekpaet',
    0x5cb: 'Arabic_theh',
    0x10004bb: 'Cyrillic_shha',
    0xfd0b: '3270_PA2',
    0x7b8: 'Greek_upsilonaccent',
    0xfd11: '3270_KeyClick',
    0xfd18: '3270_Record',
    0x7c3: 'Greek_GAMMA',
    0xfd19: '3270_ChangeScreen',
    0x7c4: 'Greek_DELTA',
    0xea2: 'Hangul_SsangKiyeog',
    0xea3: 'Hangul_KiyeogSios',
    0xea5: 'Hangul_NieunJieuj',
    0xea6: 'Hangul_NieunHieuh',
    0xea7: 'Hangul_Dikeud',
    0xea8: 'Hangul_SsangDikeud',
    0xea9: 'Hangul_Rieul',
    0xeaa: 'Hangul_RieulKiyeog',
    0xeab: 'Hangul_RieulMieum',
    0xeac: 'Hangul_RieulPieub',
    0xead: 'Hangul_RieulSios',
    0xeae: 'Hangul_RieulTieut',
    0xeaf: 'Hangul_RieulPhieuf',
    0xeb0: 'Hangul_RieulHieuh',
    0xeb1: 'Hangul_Mieum',
    0x5d1: 'Arabic_ra',
    0xeb3: 'Hangul_SsangPieub',
    0xeb4: 'Hangul_PieubSios',
    0xeb5: 'Hangul_Sios',
    0xeb6: 'Hangul_SsangSios',
    0x7c9: 'Greek_IOTA',
    0xeb8: 'Hangul_Jieuj',
    0xeb9: 'Hangul_SsangJieuj',
    0xeba: 'Hangul_Cieuc',
    0xebb: 'Hangul_Khieuq',
    0xebc: 'Hangul_Tieut',
    0xebd: 'Hangul_Phieuf',
    0xebe: 'Hangul_Hieuh',
    0xebf: 'Hangul_A',
    0xec0: 'Hangul_AE',
    0xec1: 'Hangul_YA',
    0xec2: 'Hangul_YAE',
    0xec3: 'Hangul_EO',
    0xec4: 'Hangul_E',
    0xec5: 'Hangul_YEO',
    0xec6: 'Hangul_YE',
    0xec7: 'Hangul_O',
    0xec9: 'Hangul_WAE',
    0xeca: 'Hangul_OE',
    0xecb: 'Hangul_YO',
    0xecc: 'Hangul_U',
    0xecd: 'Hangul_WEO',
    0xece: 'Hangul_WE',
    0xecf: 'Hangul_WI',
    0xed0: 'Hangul_YU',
    0xed1: 'Hangul_EU',
    0xed2: 'Hangul_YI',
    0xed3: 'Hangul_I',
    0xed4: 'Hangul_J_Kiyeog',
    0xed5: 'Hangul_J_SsangKiyeog',
    0xed6: 'Hangul_J_KiyeogSios',
    0xed7: 'Hangul_J_Nieun',
    0xed8: 'Hangul_J_NieunJieuj',
    0xed9: 'Hangul_J_NieunHieuh',
    0xeda: 'Hangul_J_Dikeud',
    0xedc: 'Hangul_J_RieulKiyeog',
    0xedd: 'Hangul_J_RieulMieum',
    0xede: 'Hangul_J_RieulPieub',
    0xedf: 'Hangul_J_RieulSios',
    0xee0: 'Hangul_J_RieulTieut',
    0xee1: 'Hangul_J_RieulPhieuf',
    0xee2: 'Hangul_J_RieulHieuh',
    0xee3: 'Hangul_J_Mieum',
    0xee4: 'Hangul_J_Pieub',
    0xee5: 'Hangul_J_PieubSios',
    0xee6: 'Hangul_J_Sios',
    0xee7: 'Hangul_J_SsangSios',
    0xee8: 'Hangul_J_Ieung',
    0xee9: 'Hangul_J_Jieuj',
    0xeeb: 'Hangul_J_Khieuq',
    0xeec: 'Hangul_J_Tieut',
    0xeed: 'Hangul_J_Phieuf',
    0xeef: 'Hangul_RieulYeorinHieuh',
    0xef0: 'Hangul_SunkyeongeumMieum',
    0xef1: 'Hangul_SunkyeongeumPieub',
    0xef4: 'Hangul_SunkyeongeumPhieuf',
    0xef5: 'Hangul_YeorinHieuh',
    0xef6: 'Hangul_AraeA',
    0xef7: 'Hangul_AraeAE',
    0xef8: 'Hangul_J_PanSios',
    0xef9: 'Hangul_J_KkogjiDalrinIeung',
    0xefa: 'Hangul_J_YeorinHieuh',
    0x7d5: 'Greek_UPSILON',
    0x7d6: 'Greek_PHI',
    0x7d9: 'Greek_OMEGA',
    0x1002078: 'eightsuperior',
    0xaf8: 'femalesymbol',
    0x7e9: 'Greek_iota',
    0x2a9: 'Iabovedot',
    0x7f1: 'Greek_rho',
    0x7f3: 'Greek_finalsmallsigma',
    0x7f5: 'Greek_upsilon',
    0x7f7: 'Greek_chi',
    0x7f9: 'Greek_omega',
    0x4cb: 'kana_HI',
    0xfe22: 'ISO_Move_Line_Down',
    0x2b1: 'hstroke',
    0x100280b: 'braille_dots_124',
    0x100280c: 'braille_dots_34',
    0x2bc: 'jcircumflex',
    0xb4: 'acute',
    0x10006f1: 'Farsi_1',
    0xfe27: 'ISO_Set_Margin_Left',
    0x6f2: 'Cyrillic_ER',
    0x6f3: 'Cyrillic_ES',
    0x1000496: 'Cyrillic_ZHE_descender',
    0x10010d0: 'Georgian_an',
    0x10010d1: 'Georgian_ban',
    0x10010d2: 'Georgian_gan',
    0x10001a0: 'Ohorn',
    0x10010d4: 'Georgian_en',
    0x10010d5: 'Georgian_vin',
    0x10010d6: 'Georgian_zen',
    0x10010d7: 'Georgian_tan',
    0x10010d8: 'Georgian_in',
    0x10010d9: 'Georgian_kan',
    0x10010da: 'Georgian_las',
    0x10010db: 'Georgian_man',
    0x10010dc: 'Georgian_nar',
    0x10010dd: 'Georgian_on',
    0x10010de: 'Georgian_par',
    0x10010df: 'Georgian_zhar',
    0x10010e0: 'Georgian_rae',
    0x10010e1: 'Georgian_san',
    0x10010e2: 'Georgian_tar',
    0x10010e3: 'Georgian_un',
    0x10010e4: 'Georgian_phar',
    0x10010e5: 'Georgian_khar',
    0x10010e6: 'Georgian_ghan',
    0x10010e7: 'Georgian_qar',
    0x10010e8: 'Georgian_shin',
    0x10010e9: 'Georgian_chin',
    0x10010ea: 'Georgian_can',
    0x10010eb: 'Georgian_jil',
    0x10010ed: 'Georgian_char',
    0x10010ee: 'Georgian_xan',
    0x10010ef: 'Georgian_jhan',
    0x10010f0: 'Georgian_hae',
    0x10010f1: 'Georgian_he',
    0x10010f2: 'Georgian_hie',
    0x10010f4: 'Georgian_har',
    0x10010f5: 'Georgian_hoe',
    0x10010f6: 'Georgian_fi',
    0x1002829: 'braille_dots_146',
    0x2d8: 'Gcircumflex',
    0x1001ecd: 'obelowdot',
    0x10006f7: 'Farsi_7',
    0x1002833: 'braille_dots_1256',
    0x1002836: 'braille_dots_2356',
    0x1002838: 'braille_dots_456',
    0xff3f: 'Hangul_Special',
    0x10006a9: 'Arabic_keheh',
    0x100283d: 'braille_dots_13456',
    0x100283e: 'braille_dots_23456',
    0x1002840: 'braille_dots_7',
    0x1002841: 'braille_dots_17',
    0x10004d9: 'Cyrillic_schwa',
    0x2f5: 'gabovedot',
    0x6fd: 'Cyrillic_SHCHA',
    0xda8: 'Thai_chochan',
    0x2fe: 'scircumflex',
    0x1002857: 'braille_dots_12357',
    0x5f0: 'Arabic_kasra',
    0xdbb: 'Thai_popla',
    0x5f1: 'Arabic_shadda',
    0xdbf: 'Thai_fofan',
    0xdc0: 'Thai_phosamphao',
    0xdc1: 'Thai_moma',
    0x1002830: 'braille_dots_56',
    0x5f2: 'Arabic_sukun',
    0xdc7: 'Thai_wowaen',
    0xdc8: 'Thai_sosala',
    0x1002875: 'braille_dots_13567',
    0xdcb: 'Thai_hohip',
    0xa1: 'exclamdown',
    0xa2: 'cent',
    0xdd7: 'Thai_sarauee',
    0x1002882: 'braille_dots_28',
    0x1002883: 'braille_dots_128',
    0xa3: 'sterling',
    0x1002887: 'braille_dots_1238',
    0x1002889: 'braille_dots_148',
    0xddf: 'Thai_baht',
    0xde0: 'Thai_sarae',
    0x6bc: 'Macedonia_KJE',
    0x8a7: 'topleftsqbracket',
    0x1b6: 'sacute',
    0x1002893: 'braille_dots_1258',
    0x21: 'exclam',
    0x1002897: 'braille_dots_12358',
    0x100289d: 'braille_dots_13458',
    0x13bc: 'OE',
    0x13bd: 'oe',
    0x13be: 'Ydiaeresis',
    0x10028a0: 'braille_dots_68',
    0x10028a3: 'braille_dots_1268',
    0xdf9: 'Thai_lekkao',
    0x8a5: 'botintegral',
    0x10028a8: 'braille_dots_468',
    0x10028a9: 'braille_dots_1468',
    0x8aa: 'botrightsqbracket',
    0x8ab: 'topleftparens',
    0x8ac: 'botleftparens',
    0x8ad: 'toprightparens',
    0xab: 'guillemotleft',
    0x10028af: 'braille_dots_123468',
    0x10028b0: 'braille_dots_568',
    0x8b1: 'topleftsummation',
    0x10006f4: 'Farsi_4',
    0x8b2: 'botleftsummation',
    0x10028b3: 'braille_dots_12568',
    0x1001e0a: 'Dabovedot',
    0x8b5: 'toprightsummation',
    0xfe0b: 'ISO_Prev_Group_Lock',
    0x8b7: 'rightmiddlesummation',
    0x4b7: 'kana_KI',
    0x10020a5: 'MillSign',
    0x8bc: 'lessthanequal',
    0x8bd: 'notequal',
    0x10028be: 'braille_dots_234568',
    0x10028c0: 'braille_dots_78',
    0x8c1: 'variation',
    0x10028c3: 'braille_dots_1278',
    0x10020a7: 'PesetaSign',
    0x10028c8: 'braille_dots_478',
    0x10028c9: 'braille_dots_1478',
    0x8cd: 'ifonlyif',
    0xfe23: 'ISO_Partial_Line_Up',
    0x8ce: 'implies',
    0x10028a1: 'braille_dots_168',
    0x10028cf: 'braille_dots_123478',
    0xfe25: 'ISO_Partial_Space_Left',
    0x10028d4: 'braille_dots_3578',
    0x10028d5: 'braille_dots_13578',
    0x10028d6: 'braille_dots_23578',
    0x10004b0: 'Cyrillic_U_straight_bar',
    0x10028da: 'braille_dots_24578',
    0x8db: 'includes',
    0x10028dd: 'braille_dots_134578',
    0x8de: 'logicaland',
    0x10028df: 'braille_dots_1234578',
    0x1002823: 'braille_dots_126',
    0x10028e9: 'braille_dots_14678',
    0xb7: 'periodcentered',
    0x70: 'p',
    0x10028ee: 'braille_dots_234678',
    0x10028f2: 'braille_dots_25678',
    0x6c0: 'Cyrillic_yu',
    0x10028f3: 'braille_dots_125678',
    0x1002076: 'sixsuperior',
    0x8f6: 'function',
    0x3a2: 'kra',
    0x10028fb: 'braille_dots_1245678',
    0x10028fc: 'braille_dots_345678',
    0x8cf: 'identical',
    0x10028fd: 'braille_dots_1345678',
    0x8fe: 'downarrow',
    0x1002828: 'braille_dots_46',
    0x10028ff: 'braille_dots_12345678',
    0x3ab: 'Gcedilla',
    0xfe56: 'dead_abovedot',
    0x1001e57: 'pabovedot',
    0xfe60: 'dead_belowdot',
    0x10006c1: 'Arabic_heh_goal',
    0x10004b7: 'Cyrillic_che_descender',
    0x3bd: 'ENG',
    0x3c0: 'Amacron',
    0xace: 'emopencircle',
    0x10001d1: 'Ocaron',
    0x1d2: 'Ncaron',
    0xcf0: 'hebrew_nun',
    0x10028db: 'braille_dots_124578',
    0x3d2: 'Omacron',
    0x1001e80: 'Wgrave',
    0x1002831: 'braille_dots_156',
    0xfe81: 'dead_A',
    0xfe82: 'dead_e',
    0xfe83: 'dead_E',
    0x3d9: 'Uogonek',
    0xfe84: 'dead_i',
    0x1001e85: 'wdiaeresis',
    0x3de: 'Umacron',
    0x1001e8a: 'Xabovedot',
    0x1001e8b: 'xabovedot',
    0xfe61: 'dead_hook',
    0xea1: 'Hangul_Kiyeog',
    0x8ae: 'botrightparens',
    0x3ef: 'imacron',
    0x3f1: 'ncedilla',
    0xca: 'Ecircumflex',
    0x10028a6: 'braille_dots_2368',
    0xea4: 'Hangul_Nieun',
    0x1001ea5: 'acircumflexacute',
    0x3fd: 'utilde',
    0xcf2: 'hebrew_ayin',
    0x100057d: 'Armenian_se',
    0xeb7: 'Hangul_Ieung',
    0xcf: 'Idiaeresis',
    0xaa5: 'digitspace',
    0xfed4: 'Last_Virtual_Screen',
    0xfe6a: 'dead_belowtilde',
    0xec8: 'Hangul_WA',
    0xad2: 'leftdoublequotemark',
    0xfed0: 'First_Virtual_Screen',
    0x1001ed1: 'ocircumflexacute',
    0x1e5: 'lacute',
    0x1001ed2: 'Ocircumflexgrave',
    0x1001ed5: 'ocircumflexhook',
    0xef3: 'Hangul_KkogjiDalrinIeung',
    0x10001e6: 'Gcaron',
    0xedb: 'Hangul_J_Rieul',
    0x1002844: 'braille_dots_37',
    0xfee0: 'Pointer_Left',
    0x1001ee1: 'ohorntilde',
    0x1001ee2: 'Ohornbelowdot',
    0xfee3: 'Pointer_Down',
    0x1001ee5: 'ubelowdot',
    0x1001ee6: 'Uhook',
    0xfee7: 'Pointer_DownRight',
    0xfee8: 'Pointer_Button_Dflt',
    0x1001ee9: 'uhornacute',
    0xfeec: 'Pointer_Button4',
    0xfeed: 'Pointer_Button5',
    0xeb2: 'Hangul_Pieub',
    0x1001eee: 'Uhorntilde',
    0x1001eef: 'uhorntilde',
    0x1001ef0: 'Uhornbelowdot',
    0x1001ef1: 'uhornbelowdot',
    0x1001ef2: 'Ygrave',
    0xfef3: 'Pointer_DblClick5',
    0xfef5: 'Pointer_Drag1',
    0x1001ef6: 'Yhook',
    0x6c7: 'Cyrillic_ghe',
    0x1001ef7: 'yhook',
    0xfef8: 'Pointer_Drag4',
    0x1001ef9: 'ytilde',
    0xeff: 'Korean_Won',
    0x1001e02: 'Babovedot',
    0x1ef: 'dcaron',
    0x2bb: 'gbreve',
    0x7a2: 'Greek_EPSILONaccent',
    0x6a4: 'Ukranian_je',
    0xae: 'registered',
    0xffb2: 'KP_2',
    0x8b4: 'botvertsummationconnector',
    0xff2a: 'Zenkaku_Hankaku',
    0x1008ff2b: 'XF86WakeUp',
    0x1d1: 'Nacute',
    0xff2f: 'Eisu_Shift',
    0x1ac: 'Zacute',
    0x9df: 'blank',
    0xe9: 'eacute',
    0x1002856: 'braille_dots_2357',
    0x9e5: 'lf',
    0x7a4: 'Greek_IOTAaccent',
    0xdb3: 'Thai_nonen',
    0x9eb: 'uprightcorner',
    0xec: 'igrave',
    0x10004a2: 'Cyrillic_EN_descender',
    0x4a3: 'kana_closingbracket',
    0x4a5: 'kana_conjunctive',
    0xee: 'icircumflex',
    0x4ab: 'kana_o',
    0x4ae: 'kana_yo',
    0x4b0: 'prolongedsound',
    0x10004b1: 'Cyrillic_u_straight_bar',
    0x10004b2: 'Cyrillic_HA_descender',
    0x4b3: 'kana_U',
    0x10010ec: 'Georgian_cil',
    0x4b6: 'kana_KA',
    0x4b8: 'kana_KU',
    0x4b9: 'kana_KE',
    0x4ba: 'kana_KO',
    0x1000535: 'Armenian_YECH',
    0x4bf: 'kana_SO',
    0x4c2: 'kana_TSU',
    0x4c3: 'kana_TE',
    0x1000537: 'Armenian_E',
    0x1000538: 'Armenian_AT',
    0xf6: 'odiaeresis',
    0x4d2: 'kana_ME',
    0x4d4: 'kana_YA',
    0xfd01: '3270_Duplicate',
    0xfd02: '3270_FieldMark',
    0xfd03: '3270_Right2',
    0xfd04: '3270_Left2',
    0xfd05: '3270_BackTab',
    0xfd06: '3270_EraseEOF',
    0xfd07: '3270_EraseInput',
    0xfd08: '3270_Reset',
    0xfd09: '3270_Quit',
    0xfd0a: '3270_PA1',
    0x4d7: 'kana_RA',
    0xfd0c: '3270_PA3',
    0xfd0d: '3270_Test',
    0xfd0e: '3270_Attn',
    0xfd0f: '3270_CursorBlink',
    0xfd10: '3270_AltCursor',
    0x10004d8: 'Cyrillic_SCHWA',
    0xfd12: '3270_Jump',
    0xfd13: '3270_Ident',
    0xfd14: '3270_Rule',
    0xfd15: '3270_Copy',
    0xfd16: '3270_Play',
    0xfd17: '3270_Setup',
    0xfd1a: '3270_DeleteWord',
    0xfd1b: '3270_ExSelect',
    0xfd1c: '3270_CursorSelect',
    0xfd1d: '3270_PrintScreen',
    0xfd1e: '3270_Enter',
    0x4db: 'kana_RO',
    0xf9: 'ugrave',
    0x77: 'w',
    0xada: 'hexagram',
    0xff99: 'KP_Down',
    0x7a8: 'Greek_UPSILONaccent',
    0xeea: 'Hangul_J_Cieuc',
    0xfe01: 'ISO_Lock',
    0xfe02: 'ISO_Level2_Latch',
    0xfe03: 'ISO_Level3_Shift',
    0xfe04: 'ISO_Level3_Latch',
    0xfe05: 'ISO_Level3_Lock',
    0xfe06: 'ISO_Group_Latch',
    0xfe08: 'ISO_Next_Group',
    0xfe09: 'ISO_Next_Group_Lock',
    0x1000543: 'Armenian_TCHE',
    0x1001e0b: 'dabovedot',
    0xfe0c: 'ISO_First_Group',
    0xfe0d: 'ISO_First_Group_Lock',
    0xfe0e: 'ISO_Last_Group',
    0xfe0f: 'ISO_Last_Group_Lock',
    0x1000654: 'Arabic_hamza_above',
    0xfe11: 'ISO_Level5_Shift',
    0xfe12: 'ISO_Level5_Latch',
    0xfe13: 'ISO_Level5_Lock',
    0x1001e1e: 'Fabovedot',
    0x1001e1f: 'fabovedot',
    0xfe20: 'ISO_Left_Tab',
    0xfe21: 'ISO_Move_Line_Up',
    0xfe24: 'ISO_Partial_Line_Down',
    0xfe26: 'ISO_Partial_Space_Right',
    0xfe28: 'ISO_Set_Margin_Right',
    0xfe29: 'ISO_Release_Margin_Left',
    0xfe2a: 'ISO_Release_Margin_Right',
    0xfe2b: 'ISO_Release_Both_Margins',
    0xfe2c: 'ISO_Fast_Cursor_Left',
    0xfe2d: 'ISO_Fast_Cursor_Right',
    0xfe2e: 'ISO_Fast_Cursor_Up',
    0xfe2f: 'ISO_Fast_Cursor_Down',
    0xfe30: 'ISO_Continuous_Underline',
    0xfe31: 'ISO_Discontinuous_Underline',
    0xfe32: 'ISO_Emphasize',
    0xfe33: 'ISO_Center_Object',
    0xfe34: 'ISO_Enter',
    0x1001e36: 'Lbelowdot',
    0x1001e37: 'lbelowdot',
    0x1001e40: 'Mabovedot',
    0x1001e41: 'mabovedot',
    0xfe50: 'dead_grave',
    0xfe51: 'dead_acute',
    0xfe52: 'dead_circumflex',
    0xfe53: 'dead_tilde',
    0xfe54: 'dead_macron',
    0xfe55: 'dead_breve',
    0x1001e56: 'Pabovedot',
    0xfe57: 'dead_diaeresis',
    0xfe58: 'dead_abovering',
    0xfe59: 'dead_doubleacute',
    0xfe5a: 'dead_caron',
    0xfe5b: 'dead_cedilla',
    0xfe5c: 'dead_ogonek',
    0xfe5d: 'dead_iota',
    0xfe5e: 'dead_voiced_sound',
    0xfe5f: 'dead_semivoiced_sound',
    0x1001e60: 'Sabovedot',
    0x1001e61: 'sabovedot',
    0xfe62: 'dead_horn',
    0xfe63: 'dead_stroke',
    0xfe64: 'dead_abovecomma',
    0xfe65: 'dead_abovereversedcomma',
    0xfe66: 'dead_doublegrave',
    0xfe67: 'dead_belowring',
    0xfe68: 'dead_belowmacron',
    0xfe69: 'dead_belowcircumflex',
    0x1001e6a: 'Tabovedot',
    0x1001e6b: 'tabovedot',
    0xfe6c: 'dead_belowdiaeresis',
    0xfe6d: 'dead_invertedbreve',
    0xfe6e: 'dead_belowcomma',
    0xfe6f: 'dead_currency',
    0xfe70: 'AccessX_Enable',
    0xfe71: 'AccessX_Feedback_Enable',
    0xfe72: 'RepeatKeys_Enable',
    0xfe73: 'SlowKeys_Enable',
    0xfe74: 'BounceKeys_Enable',
    0xfe75: 'StickyKeys_Enable',
    0xfe76: 'MouseKeys_Enable',
    0xfe77: 'MouseKeys_Accel_Enable',
    0xfe78: 'Overlay1_Enable',
    0xfe79: 'Overlay2_Enable',
    0xfe7a: 'AudibleBell_Enable',
    0xfe80: 'dead_a',
    0x1001e81: 'wgrave',
    0x1001e82: 'Wacute',
    0x1001e83: 'wacute',
    0x1001e84: 'Wdiaeresis',
    0xfe85: 'dead_I',
    0xfe86: 'dead_o',
    0xfe87: 'dead_O',
    0xfe88: 'dead_u',
    0xfe89: 'dead_U',
    0xfe8a: 'dead_small_schwa',
    0xfe8b: 'dead_capital_schwa',
    0xfe8c: 'dead_greek',
    0xffc3: 'F6',
    0x1001ea0: 'Abelowdot',
    0x1001ea1: 'abelowdot',
    0x1001ea2: 'Ahook',
    0x1001ea3: 'ahook',
    0x1001ea4: 'Acircumflexacute',
    0x1001ea6: 'Acircumflexgrave',
    0x1001ea7: 'acircumflexgrave',
    0x1001ea8: 'Acircumflexhook',
    0x1001ea9: 'acircumflexhook',
    0x1001eaa: 'Acircumflextilde',
    0x1001eab: 'acircumflextilde',
    0x1001eac: 'Acircumflexbelowdot',
    0x1001ead: 'acircumflexbelowdot',
    0x1001eae: 'Abreveacute',
    0x1001eaf: 'abreveacute',
    0x1001eb0: 'Abrevegrave',
    0x1001eb1: 'abrevegrave',
    0x1001eb2: 'Abrevehook',
    0x1001eb3: 'abrevehook',
    0x1001eb4: 'Abrevetilde',
    0x1001eb5: 'abrevetilde',
    0x1001eb6: 'Abrevebelowdot',
    0x1001eb7: 'abrevebelowdot',
    0x1001eb8: 'Ebelowdot',
    0x1001eb9: 'ebelowdot',
    0x1001eba: 'Ehook',
    0x1001ebb: 'ehook',
    0x1001ebc: 'Etilde',
    0x1001ebd: 'etilde',
    0x1001ebe: 'Ecircumflexacute',
    0x1001ebf: 'ecircumflexacute',
    0x1001ec0: 'Ecircumflexgrave',
    0x1001ec1: 'ecircumflexgrave',
    0x1001ec2: 'Ecircumflexhook',
    0x1001ec3: 'ecircumflexhook',
    0x1001ec4: 'Ecircumflextilde',
    0x1001ec5: 'ecircumflextilde',
    0x1001ec6: 'Ecircumflexbelowdot',
    0x1001ec7: 'ecircumflexbelowdot',
    0x1001ec8: 'Ihook',
    0x1001ec9: 'ihook',
    0x1001eca: 'Ibelowdot',
    0x1001ecb: 'ibelowdot',
    0x1001ecc: 'Obelowdot',
    0x10004ae: 'Cyrillic_U_straight',
    0x1001ece: 'Ohook',
    0x1001ecf: 'ohook',
    0x1001ed0: 'Ocircumflexacute',
    0xfed1: 'Prev_Virtual_Screen',
    0xfed2: 'Next_Virtual_Screen',
    0x1001ed3: 'ocircumflexgrave',
    0x1001ed4: 'Ocircumflexhook',
    0xfed5: 'Terminate_Server',
    0x1001ed6: 'Ocircumflextilde',
    0x1001ed7: 'ocircumflextilde',
    0x1001ed8: 'Ocircumflexbelowdot',
    0x1001ed9: 'ocircumflexbelowdot',
    0x1001eda: 'Ohornacute',
    0x1001edb: 'ohornacute',
    0x1001edc: 'Ohorngrave',
    0x1001edd: 'ohorngrave',
    0x1001ede: 'Ohornhook',
    0x1001edf: 'ohornhook',
    0x1001ee0: 'Ohorntilde',
    0xfee1: 'Pointer_Right',
    0xfee2: 'Pointer_Up',
    0x1001ee3: 'ohornbelowdot',
    0x1001ee4: 'Ubelowdot',
    0xfee5: 'Pointer_UpRight',
    0xfee6: 'Pointer_DownLeft',
    0x1001ee7: 'uhook',
    0x1001ee8: 'Uhornacute',
    0xfee9: 'Pointer_Button1',
    0x1001eea: 'Uhorngrave',
    0xfeeb: 'Pointer_Button3',
    0x1001eec: 'Uhornhook',
    0x1001eed: 'uhornhook',
    0xfeee: 'Pointer_DblClick_Dflt',
    0xfeef: 'Pointer_DblClick1',
    0xfef0: 'Pointer_DblClick2',
    0xfef1: 'Pointer_DblClick3',
    0xfef2: 'Pointer_DblClick4',
    0x1001ef3: 'ygrave',
    0xfef4: 'Pointer_Drag_Dflt',
    0x1001ef5: 'ybelowdot',
    0xfef6: 'Pointer_Drag2',
    0xfef7: 'Pointer_Drag3',
    0x1001ef8: 'Ytilde',
    0xfef9: 'Pointer_EnableKeys',
    0xfefa: 'Pointer_Accelerate',
    0xfefb: 'Pointer_DfltBtnNext',
    0xfefc: 'Pointer_DfltBtnPrev',
    0xfefd: 'Pointer_Drag5',
    0xfea0: 'ch',
    0xfea1: 'Ch',
    0xfea2: 'CH',
    0xfea3: 'c_h',
    0xfea4: 'C_h',
    0xfea5: 'C_H',
    0xff08: 'BackSpace',
    0xff09: 'Tab',
    0xff0a: 'Linefeed',
    0xff0b: 'Clear',
    0xff0d: 'Return',
    0xff13: 'Pause',
    0xff14: 'Scroll_Lock',
    0xff15: 'Sys_Req',
    0xff1b: 'Escape',
    0x1002876: 'braille_dots_23567',
    0xff20: 'Multi_key',
    0xff21: 'Kanji',
    0xff22: 'Muhenkan',
    0xff23: 'Henkan',
    0xff24: 'Romaji',
    0xff25: 'Hiragana',
    0xff26: 'Katakana',
    0xff27: 'Hiragana_Katakana',
    0xff28: 'Zenkaku',
    0xff29: 'Hankaku',
    0x1008ff2a: 'XF86PowerOff',
    0xff2b: 'Touroku',
    0xff2c: 'Massyo',
    0xff2d: 'Kana_Lock',
    0xff2e: 'Kana_Shift',
    0x1008ff2f: 'XF86Sleep',
    0xff30: 'Eisu_toggle',
    0xff31: 'Hangul',
    0xff32: 'Hangul_Start',
    0xff33: 'Hangul_End',
    0xff34: 'Hangul_Hanja',
    0xff35: 'Hangul_Jamo',
    0xff36: 'Hangul_Romaja',
    0xff37: 'Hangul_Codeinput',
    0xff38: 'Hangul_Jeonja',
    0xff39: 'Hangul_Banja',
    0xff3a: 'Hangul_PreHanja',
    0xff3b: 'Hangul_PostHanja',
    0xff3c: 'Hangul_SingleCandidate',
    0xff3d: 'Hangul_MultipleCandidate',
    0xff3e: 'Hangul_PreviousCandidate',
    0x1000536: 'Armenian_ZA',
    0xff50: 'Home',
    0xff51: 'Left',
    0xff52: 'Up',
    0xff53: 'Right',
    0xff54: 'Down',
    0xff55: 'Prior',
    0xff56: 'Next',
    0xff57: 'End',
    0xff58: 'Begin',
    0xff60: 'Select',
    0xff61: 'Print',
    0xff62: 'Execute',
    0xff63: 'Insert',
    0xff65: 'Undo',
    0xff66: 'Redo',
    0xff67: 'Menu',
    0xff68: 'Find',
    0xff69: 'Cancel',
    0xff6a: 'Help',
    0xff6b: 'Break',
    0x100054f: 'Armenian_TYUN',
    0xaa3: 'em3space',
    0xff7e: 'Arabic_switch',
    0xff7f: 'Num_Lock',
    0xff80: 'KP_Space',
    0x1000540: 'Armenian_HO',
    0xffeb: 'Super_L',
    0x1000541: 'Armenian_DZA',
    0xff89: 'KP_Tab',
    0xff8d: 'KP_Enter',
    0x1000550: 'Armenian_RE',
    0xff91: 'KP_F1',
    0xff92: 'KP_F2',
    0xff93: 'KP_F3',
    0xff94: 'KP_F4',
    0xff95: 'KP_Home',
    0xff96: 'KP_Left',
    0xff97: 'KP_Up',
    0xff98: 'KP_Right',
    0x1000544: 'Armenian_MEN',
    0xff9a: 'KP_Prior',
    0xff9b: 'KP_Next',
    0xff9c: 'KP_End',
    0xff9d: 'KP_Begin',
    0xff9e: 'KP_Insert',
    0xff9f: 'KP_Delete',
    0x1000546: 'Armenian_NU',
    0xffaa: 'KP_Multiply',
    0xffab: 'KP_Add',
    0xffac: 'KP_Separator',
    0xffad: 'KP_Subtract',
    0xffae: 'KP_Decimal',
    0xffaf: 'KP_Divide',
    0xffb0: 'KP_0',
    0xffb1: 'KP_1',
    0xffb3: 'KP_3',
    0xffb4: 'KP_4',
    0xffb5: 'KP_5',
    0xffb6: 'KP_6',
    0xffb7: 'KP_7',
    0xffb8: 'KP_8',
    0xffb9: 'KP_9',
    0xffbd: 'KP_Equal',
    0xffbe: 'F1',
    0xffbf: 'F2',
    0xffc0: 'F3',
    0xffc1: 'F4',
    0xffc2: 'F5',
    0x100054b: 'Armenian_JE',
    0xffc4: 'F7',
    0xffc5: 'F8',
    0xffc6: 'F9',
    0xffc7: 'F10',
    0xffc8: 'F11',
    0xffc9: 'F12',
    0xffca: 'F13',
    0xffcb: 'F14',
    0xffcc: 'L5',
    0xffcd: 'F16',
    0xffce: 'F17',
    0xffcf: 'F18',
    0xffd0: 'F19',
    0xffd1: 'L10',
    0xffd2: 'R1',
    0xffd3: 'R2',
    0xffd4: 'R3',
    0xffd5: 'F24',
    0xffd6: 'R5',
    0xffd7: 'R6',
    0xffd8: 'R7',
    0xffd9: 'R8',
    0xffda: 'R9',
    0xffdb: 'R10',
    0xffdc: 'R11',
    0xffdd: 'R12',
    0xffde: 'R13',
    0xffdf: 'R14',
    0xffe0: 'R15',
    0xffe1: 'Shift_L',
    0xffe2: 'Shift_R',
    0xffe3: 'Control_L',
    0xffe4: 'Control_R',
    0xffe5: 'Caps_Lock',
    0xffe6: 'Shift_Lock',
    0xffe7: 'Meta_L',
    0xffe8: 'Meta_R',
    0xffe9: 'Alt_L',
    0xffea: 'Alt_R',
    0xffec: 'Super_R',
    0xffed: 'Hyper_L',
    0xffee: 'Hyper_R',
    0xfff1: 'braille_dot_1',
    0xfff2: 'braille_dot_2',
    0xfff3: 'braille_dot_3',
    0xfff4: 'braille_dot_4',
    0xfff5: 'braille_dot_5',
    0xfff6: 'braille_dot_6',
    0xfff7: 'braille_dot_7',
    0xfff8: 'braille_dot_8',
    0xfff9: 'braille_dot_9',
    0xfffa: 'braille_dot_10',
    0xaaa: 'endash',
    0x1000d82: 'Sinh_ng',
    0x1000d83: 'Sinh_h2',
    0x1000d85: 'Sinh_a',
    0x1000d86: 'Sinh_aa',
    0x1000d87: 'Sinh_ae',
    0x1000d88: 'Sinh_aee',
    0x1000d89: 'Sinh_i',
    0x1000d8a: 'Sinh_ii',
    0x1000d8b: 'Sinh_u',
    0x1000d8c: 'Sinh_uu',
    0x1000d8d: 'Sinh_ri',
    0x1000d8e: 'Sinh_rii',
    0x1000d8f: 'Sinh_lu',
    0x1000d90: 'Sinh_luu',
    0x1000d91: 'Sinh_e',
    0x1000d92: 'Sinh_ee',
    0x1000d93: 'Sinh_ai',
    0x1000d94: 'Sinh_o',
    0x1000d95: 'Sinh_oo',
    0x1000d96: 'Sinh_au',
    0x1000d9a: 'Sinh_ka',
    0x1000d9b: 'Sinh_kha',
    0x1000d9c: 'Sinh_ga',
    0x1000d9d: 'Sinh_gha',
    0x1000d9e: 'Sinh_ng2',
    0x1000d9f: 'Sinh_nga',
    0x1000da0: 'Sinh_ca',
    0x1000da1: 'Sinh_cha',
    0x1000da2: 'Sinh_ja',
    0x1000da3: 'Sinh_jha',
    0x1000da4: 'Sinh_nya',
    0x1000da5: 'Sinh_jnya',
    0x1000da6: 'Sinh_nja',
    0x1000da7: 'Sinh_tta',
    0x1000da8: 'Sinh_ttha',
    0x1000da9: 'Sinh_dda',
    0x1000daa: 'Sinh_ddha',
    0x1000dab: 'Sinh_nna',
    0x1000dac: 'Sinh_ndda',
    0x1000dad: 'Sinh_tha',
    0x1000dae: 'Sinh_thha',
    0x1000daf: 'Sinh_dha',
    0x1000db0: 'Sinh_dhha',
    0x1000db1: 'Sinh_na',
    0x1000db3: 'Sinh_ndha',
    0x1000db4: 'Sinh_pa',
    0x1000db5: 'Sinh_pha',
    0x1000db6: 'Sinh_ba',
    0x1000db7: 'Sinh_bha',
    0x1000db8: 'Sinh_ma',
    0x1000db9: 'Sinh_mba',
    0x1000dba: 'Sinh_ya',
    0x1000dbb: 'Sinh_ra',
    0x1000dbd: 'Sinh_la',
    0x1000dc0: 'Sinh_va',
    0x1000dc1: 'Sinh_sha',
    0x1000dc2: 'Sinh_ssha',
    0x1000dc3: 'Sinh_sa',
    0x1000dc4: 'Sinh_ha',
    0x1000dc5: 'Sinh_lla',
    0x1000dc6: 'Sinh_fa',
    0x1000dca: 'Sinh_al',
    0x1000dcf: 'Sinh_aa2',
    0x1000dd0: 'Sinh_ae2',
    0x1000dd1: 'Sinh_aee2',
    0x1000dd2: 'Sinh_i2',
    0x1000dd3: 'Sinh_ii2',
    0x1000dd4: 'Sinh_u2',
    0x1000dd6: 'Sinh_uu2',
    0x1000dd8: 'Sinh_ru2',
    0x1000dd9: 'Sinh_e2',
    0x1000dda: 'Sinh_ee2',
    0x1000ddb: 'Sinh_ai2',
    0x1000ddc: 'Sinh_o2',
    0x1000ddd: 'Sinh_oo2',
    0x1000dde: 'Sinh_au2',
    0x1000ddf: 'Sinh_lu2',
    0x1000df2: 'Sinh_ruu2',
    0x1000df3: 'Sinh_luu2',
    0x1000df4: 'Sinh_kunddaliya',
    0xffffff: 'VoidSymbol',
    }


* Tue 07 Oct 2014 04:00:46 PM JST
keysymdef
* Tue 07 Oct 2014 04:00:48 PM JST
SymbolName, SymbolNum
* Tue 07 Oct 2014 04:07:34 PM JST

* Tue 07 Oct 2014 04:07:34 PM JST

* Tue 07 Oct 2014 04:07:34 PM JST
del num, name

* Tue 07 Oct 2014 04:17:08 PM JST
from sendkey2.keysymdef import keysymdef
name=keysymdef.SymbolName('y')

* Tue 07 Oct 2014 04:17:13 PM JST
from sendkey2.keysymdef import maps
* Tue 07 Oct 2014 04:17:17 PM JST
n=maps.SymNumMap()
* Tue 07 Oct 2014 04:17:33 PM JST
from sendkey2.keysymdef import maps
n=maps.SymNumMap()

* Tue 07 Oct 2014 04:19:04 PM JST
from sendkey2.keysymdef import maps
n=maps.SymNumMap()

* Tue 07 Oct 2014 04:34:08 PM JST
_KEYSYMS = {
    0x4bb: 'kana_SA',
    0x20: 'space',
    0x22: 'quotedbl',
    0x23: 'numbersign',
    0x24: 'dollar',
    0x26: 'ampersand',
    0x27: 'apostrophe',
    0x28: 'parenleft',
    0x29: 'parenright',
    0x2a: 'asterisk',
    0x2b: 'plus',
    0x2c: 'comma',
    0x2d: 'minus',
    0x2f: 'slash',
    0x30: '0',
    0x31: '1',
    0x32: '2',
    0x34: '4',
    0x35: '5',
    0x36: '6',
    0x37: '7',
    0x38: '8',
    0x3a: 'colon',
    0x3b: 'semicolon',
    0x3c: 'less',
    0x3d: 'equal',
    0x3e: 'greater',
    0x3f: 'question',
    0x41: 'A',
    0x43: 'C',
    0x44: 'D',
    0x45: 'E',
    0x46: 'F',
    0x47: 'G',
    0x48: 'H',
    0x49: 'I',
    0x4a: 'J',
    0x4b: 'K',
    0x4c: 'L',
    0x4d: 'M',
    0x4f: 'O',
    0x50: 'P',
    0xab8: 'careof',
    0x52: 'R',
    0x53: 'S',
    0x54: 'T',
    0x55: 'U',
    0x57: 'W',
    0x58: 'X',
    0x59: 'Y',
    0x5a: 'Z',
    0x5b: 'bracketleft',
    0x5c: 'backslash',
    0x5d: 'bracketright',
    0x5e: 'asciicircum',
    0x5f: 'underscore',
    0x61: 'a',
    0x63: 'c',
    0x64: 'd',
    0x65: 'e',
    0x67: 'g',
    0x68: 'h',
    0x69: 'i',
    0x6a: 'j',
    0x6b: 'k',
    0x6e: 'n',
    0x6f: 'o',
    0x73: 's',
    0x1002075: 'fivesuperior',
    0x76: 'v',
    0x1002077: 'sevensuperior',
    0x79: 'y',
    0x7a: 'z',
    0x7c: 'bar',
    0x1002080: 'zerosubscript',
    0x1002081: 'onesubscript',
    0x1002082: 'twosubscript',
    0x1002083: 'threesubscript',
    0x1002084: 'foursubscript',
    0x1002085: 'fivesubscript',
    0x1001eeb: 'uhorngrave',
    0x1002089: 'ninesubscript',
    0x100056f: 'Armenian_ken',
    0xa0: 'nobreakspace',
    0x10020a1: 'ColonSign',
    0x10020a3: 'FFrancSign',
    0xa4: 'currency',
    0x10020a6: 'NairaSign',
    0xa7: 'section',
    0xa8: 'diaeresis',
    0xa9: 'copyright',
    0xaa: 'ordfeminine',
    0x10020ab: 'DongSign',
    0xac: 'notsign',
    0xad: 'hyphen',
    0xaf: 'macron',
    0xb0: 'degree',
    0xb1: 'plusminus',
    0xb2: 'twosuperior',
    0xb3: 'threesuperior',
    0xb5: 'mu',
    0xb6: 'paragraph',
    0xb8: 'cedilla',
    0xb9: 'onesuperior',
    0xba: 'masculine',
    0xbb: 'guillemotright',
    0xbc: 'onequarter',
    0xaca: 'signaturemark',
    0xbe: 'threequarters',
    0xbf: 'questiondown',
    0xc0: 'Agrave',
    0xc1: 'Aacute',
    0xc2: 'Acircumflex',
    0xc3: 'Atilde',
    0xc4: 'Adiaeresis',
    0xc5: 'Aring',
    0xc8: 'Egrave',
    0xcb: 'Ediaeresis',
    0xcc: 'Igrave',
    0xcd: 'Iacute',
    0xce: 'Icircumflex',
    0xd0: 'Eth',
    0xd3: 'Oacute',
    0xd4: 'Ocircumflex',
    0xd5: 'Otilde',
    0xd7: 'multiply',
    0xef2: 'Hangul_PanSios',
    0xda: 'Uacute',
    0xdb: 'Ucircumflex',
    0xdc: 'Udiaeresis',
    0xdd: 'Yacute',
    0xde: 'Thorn',
    0xdf: 'ssharp',
    0xe0: 'agrave',
    0xe1: 'aacute',
    0xe2: 'acircumflex',
    0xe3: 'atilde',
    0xe4: 'adiaeresis',
    0xe5: 'aring',
    0xe6: 'ae',
    0xe7: 'ccedilla',
    0xe8: 'egrave',
    0xeb: 'ediaeresis',
    0xef: 'idiaeresis',
    0xf0: 'eth',
    0xf1: 'ntilde',
    0xf3: 'oacute',
    0xf4: 'ocircumflex',
    0xf5: 'otilde',
    0xf7: 'division',
    0xf8: 'ooblique',
    0xfa: 'uacute',
    0xfc: 'udiaeresis',
    0xfd: 'yacute',
    0xfe: 'thorn',
    0xff: 'ydiaeresis',
    0x2e: 'period',
    0xad9: 'latincross',
    0xadc: 'filledlefttribullet',
    0x100012c: 'Ibreve',
    0xadd: 'filledrighttribullet',
    0x33: '3',
    0xab2: 'onefifth',
    0x7ae: 'Greek_accentdieresis',
    0xae1: 'enopensquarebullet',
    0xab3: 'twofifths',
    0x8bf: 'integral',
    0x6d4: 'Cyrillic_te',
    0xae7: 'enfilledsqbullet',
    0xab4: 'threefifths',
    0x1000174: 'Wcircumflex',
    0x1000175: 'wcircumflex',
    0x1000177: 'ycircumflex',
    0x39: '9',
    0x42: 'B',
    0x1001ef4: 'Ybelowdot',
    0x10001a1: 'ohorn',
    0x1a2: 'breve',
    0x1a5: 'Lcaron',
    0x1a6: 'Sacute',
    0x1a9: 'Scaron',
    0x1aa: 'Scedilla',
    0x1ab: 'Tcaron',
    0x1ae: 'Zcaron',
    0x1af: 'Zabovedot',
    0x10001b0: 'uhorn',
    0x1b1: 'aogonek',
    0x1b2: 'ogonek',
    0x1b3: 'lstroke',
    0x1b5: 'lcaron',
    0x10001b6: 'zstroke',
    0x1b7: 'caron',
    0x1b9: 'scaron',
    0x1ba: 'scedilla',
    0x1bb: 'tcaron',
    0x1bc: 'zacute',
    0x1bd: 'doubleacute',
    0x1be: 'zcaron',
    0x1bf: 'zabovedot',
    0x1c3: 'Abreve',
    0x1c5: 'Lacute',
    0x1c6: 'Cacute',
    0x1c8: 'Ccaron',
    0xfee4: 'Pointer_UpLeft',
    0x1ca: 'Eogonek',
    0x1cc: 'Ecaron',
    0xab7: 'fivesixths',
    0x1cf: 'Dcaron',
    0x1d0: 'Dstroke',
    0x1d8: 'Rcaron',
    0x1d9: 'Uring',
    0x1db: 'Udoubleacute',
    0x1e0: 'racute',
    0x1e3: 'abreve',
    0x1e8: 'ccaron',
    0x1000564: 'Armenian_da',
    0x1ea: 'eogonek',
    0x1ec: 'ecaron',
    0x1f0: 'dstroke',
    0x1f1: 'nacute',
    0x1f2: 'ncaron',
    0x1f5: 'odoubleacute',
    0x1f8: 'rcaron',
    0x1f9: 'uring',
    0xaff: 'cursor',
    0x1fe: 'tcedilla',
    0x1002202: 'partdifferential',
    0x56: 'V',
    0x1000565: 'Armenian_yech',
    0x100220b: 'containsas',
    0xbca: 'jot',
    0xffff: 'Delete',
    0x100221c: 'fourthroot',
    0x100222c: 'dintegral',
    0x1002235: 'because',
    0x60: 'quoteleft',
    0x1002247: 'notapproxeq',
    0x1002248: 'approxeq',
    0x62: 'b',
    0x1000259: 'schwa',
    0x10001b7: 'EZH',
    0x1000292: 'ezh',
    0x1002262: 'notidentical',
    0x1002263: 'stricteq',
    0x66: 'f',
    0x1000275: 'obarred',
    0x5bf: 'Arabic_question_mark',
    0x5c2: 'Arabic_maddaonalef',
    0x6d: 'm',
    0x100056a: 'Armenian_zhe',
    0x2a1: 'Hstroke',
    0x2a6: 'Hcircumflex',
    0x71: 'q',
    0x2ab: 'Gbreve',
    0x2ac: 'Jcircumflex',
    0x72: 'r',
    0x2b6: 'hcircumflex',
    0x5c9: 'Arabic_tehmarbuta',
    0x2b9: 'idotless',
    0x100056b: 'Armenian_ini',
    0x2c5: 'Cabovedot',
    0x2c6: 'Ccircumflex',
    0x5cc: 'Arabic_jeem',
    0x78: 'x',
    0x2d5: 'Gabovedot',
    0x1002079: 'ninesuperior',
    0x2dd: 'Ubreve',
    0x2de: 'Scircumflex',
    0x7b: 'braceleft',
    0x2e5: 'cabovedot',
    0x2e6: 'ccircumflex',
    0xaf5: 'musicalsharp',
    0x7d: 'braceright',
    0x7e: 'asciitilde',
    0x2f8: 'gcircumflex',
    0x2fd: 'ubreve',
    0x5d7: 'Arabic_tah',
    0x1002086: 'sixsubscript',
    0x1002087: 'sevensubscript',
    0x1002088: 'eightsubscript',
    0x5e2: 'Arabic_qaf',
    0x5e3: 'Arabic_kaf',
    0x1000571: 'Armenian_dza',
    0x5ed: 'Arabic_kasratan',
    0xac6: 'seveneighths',
    0x5ee: 'Arabic_fatha',
    0x3a3: 'Rcedilla',
    0x3a5: 'Itilde',
    0x3a6: 'Lcedilla',
    0x3aa: 'Emacron',
    0x3ac: 'Tslash',
    0x3b3: 'rcedilla',
    0xbd8: 'rightshoe',
    0x3b5: 'itilde',
    0x3b6: 'lcedilla',
    0x3ba: 'emacron',
    0x3bb: 'gcedilla',
    0x3bc: 'tslash',
    0x3bf: 'eng',
    0x10020a0: 'EcuSign',
    0x3c7: 'Iogonek',
    0x3cc: 'Eabovedot',
    0x10020a2: 'CruzeiroSign',
    0x3cf: 'Imacron',
    0x3d1: 'Ncedilla',
    0x3d3: 'Kcedilla',
    0x10020a4: 'LiraSign',
    0x3dd: 'Utilde',
    0xa5: 'yen',
    0x3e0: 'amacron',
    0xa6: 'brokenbar',
    0x3e7: 'iogonek',
    0x10020a8: 'RupeeSign',
    0x3f2: 'omacron',
    0x3f3: 'kcedilla',
    0x10020a9: 'WonSign',
    0x3f9: 'uogonek',
    0x10020aa: 'NewSheqelSign',
    0x3fe: 'umacron',
    0x20ac: 'EuroSign',
    0x74: 't',
    0x1002070: 'zerosuperior',
    0x10028a2: 'braille_dots_268',
    0xbd: 'onehalf',
    0x47e: 'overline',
    0x10028a4: 'braille_dots_368',
    0x1000492: 'Cyrillic_GHE_bar',
    0x1000493: 'Cyrillic_ghe_bar',
    0x1000497: 'Cyrillic_zhe_descender',
    0x100049a: 'Cyrillic_KA_descender',
    0x100049b: 'Cyrillic_ka_descender',
    0x100049c: 'Cyrillic_KA_vertstroke',
    0x100049d: 'Cyrillic_ka_vertstroke',
    0x4a1: 'kana_fullstop',
    0x4a2: 'kana_openingbracket',
    0x10004a3: 'Cyrillic_en_descender',
    0x4a4: 'kana_comma',
    0xc6: 'AE',
    0x4a6: 'kana_WO',
    0x4a7: 'kana_a',
    0x4a8: 'kana_i',
    0x4a9: 'kana_u',
    0x4aa: 'kana_e',
    0xc7: 'Ccedilla',
    0x4ac: 'kana_ya',
    0x4ad: 'kana_yu',
    0x4af: 'kana_tsu',
    0x4b1: 'kana_A',
    0x4b2: 'kana_I',
    0x10004b3: 'Cyrillic_ha_descender',
    0x4b4: 'kana_E',
    0x4b5: 'kana_O',
    0x10004b6: 'Cyrillic_CHE_descender',
    0xc9: 'Eacute',
    0x10004b8: 'Cyrillic_CHE_vertstroke',
    0x10004b9: 'Cyrillic_che_vertstroke',
    0x10004ba: 'Cyrillic_SHHA',
    0x4bc: 'kana_SHI',
    0x4bd: 'kana_SU',
    0x4be: 'kana_SE',
    0x4c0: 'kana_TA',
    0x4c1: 'kana_TI',
    0x4c4: 'kana_TO',
    0x4c5: 'kana_NA',
    0x4c6: 'kana_NI',
    0x4c7: 'kana_NU',
    0x4c8: 'kana_NE',
    0x4c9: 'kana_NO',
    0x4ca: 'kana_HA',
    0x4cc: 'kana_HU',
    0x4cd: 'kana_HE',
    0x4ce: 'kana_HO',
    0x4cf: 'kana_MA',
    0x4d0: 'kana_MI',
    0x4d1: 'kana_MU',
    0x4d3: 'kana_MO',
    0x4d5: 'kana_YU',
    0x4d6: 'kana_YO',
    0x4d8: 'kana_RI',
    0x4d9: 'kana_RU',
    0x4da: 'kana_RE',
    0x4dc: 'kana_WA',
    0x4dd: 'kana_N',
    0x4de: 'voicedsound',
    0x4df: 'semivoicedsound',
    0x10004e2: 'Cyrillic_I_macron',
    0x10004e3: 'Cyrillic_i_macron',
    0xd1: 'Ntilde',
    0x10004e8: 'Cyrillic_O_bar',
    0x10004e9: 'Cyrillic_o_bar',
    0x8b0: 'rightmiddlecurlybrace',
    0xd2: 'Ograve',
    0x10004ee: 'Cyrillic_U_macron',
    0x10004ef: 'Cyrillic_u_macron',
    0x10010d3: 'Georgian_don',
    0xd6: 'Odiaeresis',
    0xd8: 'Oslash',
    0xd9: 'Ugrave',
    0x1000531: 'Armenian_AYB',
    0x1000532: 'Armenian_BEN',
    0x1000533: 'Armenian_GIM',
    0x1000534: 'Armenian_DA',
    0x1000539: 'Armenian_TO',
    0x100053a: 'Armenian_ZHE',
    0x100053b: 'Armenian_INI',
    0x100053c: 'Armenian_LYUN',
    0x100053d: 'Armenian_KHE',
    0x100053e: 'Armenian_TSA',
    0x100053f: 'Armenian_KEN',
    0x1000542: 'Armenian_GHAT',
    0x1000545: 'Armenian_HI',
    0x1000547: 'Armenian_SHA',
    0x1000548: 'Armenian_VO',
    0x1000549: 'Armenian_CHA',
    0x100054a: 'Armenian_PE',
    0x100054c: 'Armenian_RA',
    0x100054e: 'Armenian_VEV',
    0x1001e03: 'babovedot',
    0x1000551: 'Armenian_TSO',
    0x1000552: 'Armenian_VYUN',
    0x1000553: 'Armenian_PYUR',
    0x1000554: 'Armenian_KE',
    0x1000555: 'Armenian_O',
    0x1000556: 'Armenian_FE',
    0x100055a: 'Armenian_apostrophe',
    0x100055b: 'Armenian_accent',
    0x100055c: 'Armenian_amanak',
    0x100055d: 'Armenian_separation_mark',
    0x100055e: 'Armenian_question',
    0x1000561: 'Armenian_ayb',
    0x1000562: 'Armenian_ben',
    0x1000563: 'Armenian_gim',
    0x1000566: 'Armenian_za',
    0x1000567: 'Armenian_e',
    0x1000568: 'Armenian_at',
    0x1000569: 'Armenian_to',
    0x100056c: 'Armenian_lyun',
    0x100056d: 'Armenian_khe',
    0x100056e: 'Armenian_tsa',
    0x1000570: 'Armenian_ho',
    0x1000572: 'Armenian_ghat',
    0x1000573: 'Armenian_tche',
    0x1000574: 'Armenian_men',
    0x1000575: 'Armenian_hi',
    0x1000576: 'Armenian_nu',
    0x1000577: 'Armenian_sha',
    0x1000578: 'Armenian_vo',
    0x1000579: 'Armenian_cha',
    0x100057a: 'Armenian_pe',
    0x100057b: 'Armenian_je',
    0x100057c: 'Armenian_ra',
    0xea: 'ecircumflex',
    0x100057e: 'Armenian_vev',
    0x100057f: 'Armenian_tyun',
    0x1000580: 'Armenian_re',
    0x1000581: 'Armenian_tso',
    0x1000582: 'Armenian_vyun',
    0x1000583: 'Armenian_pyur',
    0x1000584: 'Armenian_ke',
    0x1000585: 'Armenian_o',
    0x1000586: 'Armenian_fe',
    0x100058a: 'Armenian_yentamna',
    0xed: 'iacute',
    0x40: 'at',
    0x5ac: 'Arabic_comma',
    0xf2: 'ograve',
    0x10010f3: 'Georgian_we',
    0x5bb: 'Arabic_semicolon',
    0x5c1: 'Arabic_hamza',
    0x8fd: 'rightarrow',
    0x5c3: 'Arabic_hamzaonalef',
    0x5c4: 'Arabic_hamzaonwaw',
    0x5c5: 'Arabic_hamzaunderalef',
    0x5c6: 'Arabic_hamzaonyeh',
    0x5c7: 'Arabic_alef',
    0x5c8: 'Arabic_beh',
    0x5ca: 'Arabic_teh',
    0x5cd: 'Arabic_hah',
    0x5ce: 'Arabic_khah',
    0x5cf: 'Arabic_dal',
    0x5d0: 'Arabic_thal',
    0x5d2: 'Arabic_zain',
    0x5d3: 'Arabic_seen',
    0x5d4: 'Arabic_sheen',
    0x5d5: 'Arabic_sad',
    0x5d6: 'Arabic_dad',
    0x5d8: 'Arabic_zah',
    0x5d9: 'Arabic_ain',
    0x5da: 'Arabic_ghain',
    0x5e0: 'Arabic_tatweel',
    0x5e1: 'Arabic_feh',
    0xfb: 'ucircumflex',
    0x5e4: 'Arabic_lam',
    0x5e5: 'Arabic_meem',
    0x5e6: 'Arabic_noon',
    0x5e7: 'Arabic_ha',
    0x5e8: 'Arabic_waw',
    0x5e9: 'Arabic_alefmaksura',
    0x5ea: 'Arabic_yeh',
    0x5eb: 'Arabic_fathatan',
    0x5ec: 'Arabic_dammatan',
    0x5ef: 'Arabic_damma',
    0x1000587: 'Armenian_ligature_ew',
    0xfe6b: 'dead_belowbreve',
    0x10028b2: 'braille_dots_2568',
    0x100054d: 'Armenian_SE',
    0x1000589: 'Armenian_full_stop',
    0x1000653: 'Arabic_madda_above',
    0x1000655: 'Arabic_hamza_below',
    0x1000664: 'Arabic_4',
    0x1000660: 'Arabic_0',
    0x1000661: 'Arabic_1',
    0x1000662: 'Arabic_2',
    0x1000663: 'Arabic_3',
    0x1000665: 'Arabic_5',
    0x1000666: 'Arabic_6',
    0x1000667: 'Arabic_7',
    0x1000668: 'Arabic_8',
    0x100066a: 'Arabic_percent',
    0x1000670: 'Arabic_superscript_alef',
    0x1000669: 'Arabic_9',
    0x1000679: 'Arabic_tteh',
    0x100067e: 'Arabic_peh',
    0x1000686: 'Arabic_tcheh',
    0x1000688: 'Arabic_ddal',
    0x1000698: 'Arabic_jeh',
    0x10028b6: 'braille_dots_23568',
    0x6a1: 'Serbian_dje',
    0x6a2: 'Macedonia_gje',
    0x6a3: 'Cyrillic_io',
    0x10006a4: 'Arabic_veh',
    0x6a5: 'Macedonia_dse',
    0x6a6: 'Ukranian_i',
    0x6a7: 'Ukranian_yi',
    0x6a8: 'Cyrillic_je',
    0x6aa: 'Serbian_nje',
    0x6ab: 'Serbian_tshe',
    0x6ac: 'Macedonia_kje',
    0x6ad: 'Ukrainian_ghe_with_upturn',
    0x6ae: 'Byelorussian_shortu',
    0x6af: 'Cyrillic_dzhe',
    0x6b0: 'numerosign',
    0x6b1: 'Serbian_DJE',
    0x6b3: 'Cyrillic_IO',
    0x6b4: 'Ukranian_JE',
    0x6b5: 'Macedonia_DSE',
    0x6b6: 'Ukranian_I',
    0x6b7: 'Ukrainian_YI',
    0x6b8: 'Serbian_JE',
    0x6b9: 'Cyrillic_LJE',
    0x10006ba: 'Arabic_noon_ghunna',
    0x6bb: 'Serbian_TSHE',
    0x6bd: 'Ukrainian_GHE_WITH_UPTURN',
    0x6be: 'Byelorussian_SHORTU',
    0x6bf: 'Serbian_DZE',
    0x6c1: 'Cyrillic_a',
    0x6c4: 'Cyrillic_de',
    0x6c6: 'Cyrillic_ef',
    0x6c8: 'Cyrillic_ha',
    0x6c9: 'Cyrillic_i',
    0x6ca: 'Cyrillic_shorti',
    0x10006cc: 'Farsi_yeh',
    0x6cf: 'Cyrillic_o',
    0x6d0: 'Cyrillic_pe',
    0x6d1: 'Cyrillic_ya',
    0x10006d2: 'Arabic_yeh_baree',
    0x6d3: 'Cyrillic_es',
    0x10006d4: 'Arabic_fullstop',
    0x6d5: 'Cyrillic_u',
    0x6d6: 'Cyrillic_zhe',
    0x6d7: 'Cyrillic_ve',
    0x6d8: 'Cyrillic_softsign',
    0x6d9: 'Cyrillic_yeru',
    0x6da: 'Cyrillic_ze',
    0x6db: 'Cyrillic_sha',
    0x6dc: 'Cyrillic_e',
    0x6dd: 'Cyrillic_shcha',
    0x6df: 'Cyrillic_hardsign',
    0x6e0: 'Cyrillic_YU',
    0x6e1: 'Cyrillic_A',
    0x6e2: 'Cyrillic_BE',
    0x6e4: 'Cyrillic_DE',
    0x6e5: 'Cyrillic_IE',
    0x6e6: 'Cyrillic_EF',
    0x6e7: 'Cyrillic_GHE',
    0x6e8: 'Cyrillic_HA',
    0x6e9: 'Cyrillic_I',
    0x6ea: 'Cyrillic_SHORTI',
    0x6eb: 'Cyrillic_KA',
    0x6ec: 'Cyrillic_EL',
    0x6ed: 'Cyrillic_EM',
    0x6ef: 'Cyrillic_O',
    0x10006f0: 'Farsi_0',
    0x6f1: 'Cyrillic_YA',
    0x10006f2: 'Farsi_2',
    0x6f5: 'Cyrillic_U',
    0x10006f6: 'Farsi_6',
    0x6f7: 'Cyrillic_VE',
    0x6f8: 'Cyrillic_SOFTSIGN',
    0x6f9: 'Cyrillic_YERU',
    0x6fa: 'Cyrillic_ZE',
    0x6fb: 'Cyrillic_SHA',
    0x6fc: 'Cyrillic_E',
    0x6fe: 'Cyrillic_CHE',
    0x6ff: 'Cyrillic_HARDSIGN',
    0x8c2: 'infinity',
    0x100012d: 'ibreve',
    0xab5: 'fourfifths',
    0x8c5: 'nabla',
    0x1000691: 'Arabic_rreh',
    0xfeea: 'Pointer_Button2',
    0x10028bd: 'braille_dots_134568',
    0x7a1: 'Greek_ALPHAaccent',
    0x7a3: 'Greek_ETAaccent',
    0x7a7: 'Greek_OMICRONaccent',
    0x7a9: 'Greek_UPSILONdieresis',
    0x7ab: 'Greek_OMEGAaccent',
    0x7af: 'Greek_horizbar',
    0x7b1: 'Greek_alphaaccent',
    0x7b2: 'Greek_epsilonaccent',
    0x7b3: 'Greek_etaaccent',
    0x7b4: 'Greek_iotaaccent',
    0x7b5: 'Greek_iotadieresis',
    0x7b6: 'Greek_iotaaccentdieresis',
    0x7b7: 'Greek_omicronaccent',
    0x7b9: 'Greek_upsilondieresis',
    0x7ba: 'Greek_upsilonaccentdieresis',
    0x7bb: 'Greek_omegaaccent',
    0x7c1: 'Greek_ALPHA',
    0x7c2: 'Greek_BETA',
    0x7c5: 'Greek_EPSILON',
    0x7c6: 'Greek_ZETA',
    0x7c7: 'Greek_ETA',
    0x7c8: 'Greek_THETA',
    0x7ca: 'Greek_KAPPA',
    0x7cd: 'Greek_NU',
    0x7cf: 'Greek_OMICRON',
    0x7d0: 'Greek_PI',
    0x7d2: 'Greek_SIGMA',
    0x7d4: 'Greek_TAU',
    0x7d7: 'Greek_CHI',
    0x7d8: 'Greek_PSI',
    0x7e1: 'Greek_alpha',
    0x7e2: 'Greek_beta',
    0x7e3: 'Greek_gamma',
    0x7e4: 'Greek_delta',
    0x7e5: 'Greek_epsilon',
    0x7e6: 'Greek_zeta',
    0x7e7: 'Greek_eta',
    0x7e8: 'Greek_theta',
    0x7ea: 'Greek_kappa',
    0x7eb: 'Greek_lamda',
    0x7ec: 'Greek_mu',
    0x7ed: 'Greek_nu',
    0x7ee: 'Greek_xi',
    0x7ef: 'Greek_omicron',
    0x7f0: 'Greek_pi',
    0x7f2: 'Greek_sigma',
    0x7f4: 'Greek_tau',
    0x7f6: 'Greek_phi',
    0x6a9: 'Serbian_lje',
    0x7f8: 'Greek_psi',
    0x1002800: 'braille_blank',
    0x1002801: 'braille_dots_1',
    0x1002802: 'braille_dots_2',
    0x1002803: 'braille_dots_12',
    0x1002804: 'braille_dots_3',
    0x1002805: 'braille_dots_13',
    0x1002806: 'braille_dots_23',
    0x1002807: 'braille_dots_123',
    0x1002808: 'braille_dots_4',
    0x1002809: 'braille_dots_14',
    0x100280a: 'braille_dots_24',
    0x100280d: 'braille_dots_134',
    0x100280e: 'braille_dots_234',
    0x100280f: 'braille_dots_1234',
    0x1002810: 'braille_dots_5',
    0x1002811: 'braille_dots_15',
    0x1002812: 'braille_dots_25',
    0x1002813: 'braille_dots_125',
    0x1002814: 'braille_dots_35',
    0x1002815: 'braille_dots_135',
    0x1002816: 'braille_dots_235',
    0x1002817: 'braille_dots_1235',
    0x1002818: 'braille_dots_45',
    0x1002819: 'braille_dots_145',
    0x100281a: 'braille_dots_245',
    0x100281b: 'braille_dots_1245',
    0x100281c: 'braille_dots_345',
    0x100281d: 'braille_dots_1345',
    0x100281e: 'braille_dots_2345',
    0x100281f: 'braille_dots_12345',
    0x1002820: 'braille_dots_6',
    0x1002821: 'braille_dots_16',
    0x1002822: 'braille_dots_26',
    0xaed: 'diamond',
    0x1002824: 'braille_dots_36',
    0x1002825: 'braille_dots_136',
    0x1002826: 'braille_dots_236',
    0x1002827: 'braille_dots_1236',
    0x100282a: 'braille_dots_246',
    0x100282b: 'braille_dots_1246',
    0x100282c: 'braille_dots_346',
    0x100282d: 'braille_dots_1346',
    0x100282e: 'braille_dots_2346',
    0x100282f: 'braille_dots_12346',
    0x1002832: 'braille_dots_256',
    0x1002834: 'braille_dots_356',
    0x1002835: 'braille_dots_1356',
    0x1002837: 'braille_dots_12356',
    0x1002839: 'braille_dots_1456',
    0x100283a: 'braille_dots_2456',
    0x100283b: 'braille_dots_12456',
    0x100283c: 'braille_dots_3456',
    0x100283f: 'braille_dots_123456',
    0x1002842: 'braille_dots_27',
    0x1002843: 'braille_dots_127',
    0x1002845: 'braille_dots_137',
    0x1002846: 'braille_dots_237',
    0x1002847: 'braille_dots_1237',
    0x1002848: 'braille_dots_47',
    0x1002849: 'braille_dots_147',
    0x100284a: 'braille_dots_247',
    0x100284b: 'braille_dots_1247',
    0x100284c: 'braille_dots_347',
    0x100284d: 'braille_dots_1347',
    0x100284e: 'braille_dots_2347',
    0x100284f: 'braille_dots_12347',
    0x1002850: 'braille_dots_57',
    0x1002851: 'braille_dots_157',
    0x1002852: 'braille_dots_257',
    0x1002853: 'braille_dots_1257',
    0x1002854: 'braille_dots_357',
    0x1002855: 'braille_dots_1357',
    0x1002858: 'braille_dots_457',
    0x1002859: 'braille_dots_1457',
    0x100285a: 'braille_dots_2457',
    0x100285b: 'braille_dots_12457',
    0x100285c: 'braille_dots_3457',
    0x100285d: 'braille_dots_13457',
    0x100285e: 'braille_dots_23457',
    0x100285f: 'braille_dots_123457',
    0x1002860: 'braille_dots_67',
    0x1002861: 'braille_dots_167',
    0x1002862: 'braille_dots_267',
    0x1002863: 'braille_dots_1267',
    0x1002864: 'braille_dots_367',
    0x1002865: 'braille_dots_1367',
    0x1002866: 'braille_dots_2367',
    0x1002867: 'braille_dots_12367',
    0x1002868: 'braille_dots_467',
    0x1002869: 'braille_dots_1467',
    0x100286a: 'braille_dots_2467',
    0x100286b: 'braille_dots_12467',
    0x100286c: 'braille_dots_3467',
    0x100286d: 'braille_dots_13467',
    0x100286e: 'braille_dots_23467',
    0x100286f: 'braille_dots_123467',
    0x1002870: 'braille_dots_567',
    0x1002871: 'braille_dots_1567',
    0x1002872: 'braille_dots_2567',
    0x1002873: 'braille_dots_12567',
    0x1002874: 'braille_dots_3567',
    0x10006be: 'Arabic_heh_doachashmee',
    0x1002877: 'braille_dots_123567',
    0x1002878: 'braille_dots_4567',
    0x1002879: 'braille_dots_14567',
    0x100287a: 'braille_dots_24567',
    0x100287b: 'braille_dots_124567',
    0x100287c: 'braille_dots_34567',
    0x100287d: 'braille_dots_134567',
    0x100287e: 'braille_dots_234567',
    0x100287f: 'braille_dots_1234567',
    0x1002880: 'braille_dots_8',
    0x1002881: 'braille_dots_18',
    0x1002884: 'braille_dots_38',
    0x1002885: 'braille_dots_138',
    0x1002886: 'braille_dots_238',
    0x1002888: 'braille_dots_48',
    0x100288a: 'braille_dots_248',
    0x100288b: 'braille_dots_1248',
    0x100288c: 'braille_dots_348',
    0x100288d: 'braille_dots_1348',
    0x100288e: 'braille_dots_2348',
    0x100288f: 'braille_dots_12348',
    0x1002890: 'braille_dots_58',
    0x1002891: 'braille_dots_158',
    0x1002892: 'braille_dots_258',
    0x1002894: 'braille_dots_358',
    0x1002895: 'braille_dots_1358',
    0x1002896: 'braille_dots_2358',
    0x1002898: 'braille_dots_458',
    0x1002899: 'braille_dots_1458',
    0x100289a: 'braille_dots_2458',
    0x100289b: 'braille_dots_12458',
    0x100289c: 'braille_dots_3458',
    0x100289e: 'braille_dots_23458',
    0x100289f: 'braille_dots_123458',
    0x8a1: 'leftradical',
    0x8a2: 'topleftradical',
    0x8a3: 'horizconnector',
    0x8a4: 'topintegral',
    0x10028a5: 'braille_dots_1368',
    0x8a6: 'vertconnector',
    0x10028a7: 'braille_dots_12368',
    0x8a8: 'botleftsqbracket',
    0x8a9: 'toprightsqbracket',
    0x10028aa: 'braille_dots_2468',
    0x10028ab: 'braille_dots_12468',
    0x10028ac: 'braille_dots_3468',
    0x10028ad: 'braille_dots_13468',
    0x10028ae: 'braille_dots_23468',
    0x8af: 'leftmiddlecurlybrace',
    0x10028b1: 'braille_dots_1568',
    0x8b3: 'topvertsummationconnector',
    0x10028b5: 'braille_dots_13568',
    0x8b6: 'botrightsummation',
    0x10028b8: 'braille_dots_4568',
    0x10028b9: 'braille_dots_14568',
    0x10028ba: 'braille_dots_24568',
    0x10028bb: 'braille_dots_124568',
    0x10028bc: 'braille_dots_34568',
    0x8be: 'greaterthanequal',
    0x10028bf: 'braille_dots_1234568',
    0x8c0: 'therefore',
    0x10028c1: 'braille_dots_178',
    0x10028c2: 'braille_dots_278',
    0x6cb: 'Cyrillic_ka',
    0x10028c4: 'braille_dots_378',
    0x10028c5: 'braille_dots_1378',
    0x10028c6: 'braille_dots_2378',
    0x10028c7: 'braille_dots_12378',
    0x8c8: 'approximate',
    0x8c9: 'similarequal',
    0x10028ca: 'braille_dots_2478',
    0x10028cb: 'braille_dots_12478',
    0x10028cc: 'braille_dots_3478',
    0x10028cd: 'braille_dots_13478',
    0x10028ce: 'braille_dots_23478',
    0x10028d0: 'braille_dots_578',
    0x10028d1: 'braille_dots_1578',
    0x10028d2: 'braille_dots_2578',
    0x10028d3: 'braille_dots_12578',
    0x8d6: 'radical',
    0x10028d7: 'braille_dots_123578',
    0x10028d8: 'braille_dots_4578',
    0x10028d9: 'braille_dots_14578',
    0x8da: 'includedin',
    0x10028dc: 'braille_dots_34578',
    0x8dd: 'union',
    0x10028de: 'braille_dots_234578',
    0x8df: 'logicalor',
    0x10028e0: 'braille_dots_678',
    0x10028e1: 'braille_dots_1678',
    0x10028e2: 'braille_dots_2678',
    0x10028e3: 'braille_dots_12678',
    0x10028e4: 'braille_dots_3678',
    0x10028e5: 'braille_dots_13678',
    0x10028e6: 'braille_dots_23678',
    0x10028e7: 'braille_dots_123678',
    0x10028e8: 'braille_dots_4678',
    0x10028ea: 'braille_dots_24678',
    0x10028eb: 'braille_dots_124678',
    0x10028ec: 'braille_dots_34678',
    0x10028ed: 'braille_dots_134678',
    0x8ef: 'partialderivative',
    0x10028f0: 'braille_dots_5678',
    0x10028f1: 'braille_dots_15678',
    0x10028f4: 'braille_dots_35678',
    0x10028f5: 'braille_dots_135678',
    0x10028f6: 'braille_dots_235678',
    0x10028f7: 'braille_dots_1235678',
    0x10028f8: 'braille_dots_45678',
    0x10028f9: 'braille_dots_145678',
    0x10028fa: 'braille_dots_245678',
    0x8fb: 'leftarrow',
    0x8fc: 'uparrow',
    0x10028fe: 'braille_dots_2345678',
    0x6b2: 'Macedonia_GJE',
    0x4e: 'N',
    0x1002074: 'foursuperior',
    0x6de: 'Cyrillic_che',
    0x6e3: 'Cyrillic_TSE',
    0x100018f: 'SCHWA',
    0x10028b4: 'braille_dots_3568',
    0x51: 'Q',
    0xeee: 'Hangul_J_Hieuh',
    0x6ee: 'Cyrillic_EN',
    0x6f0: 'Cyrillic_PE',
    0x10006f3: 'Farsi_3',
    0x6f4: 'Cyrillic_TE',
    0x100019f: 'Obarred',
    0x10006f5: 'Farsi_5',
    0x6f6: 'Cyrillic_ZHE',
    0x1a1: 'Aogonek',
    0x10006f8: 'Farsi_8',
    0x1a3: 'Lstroke',
    0x10006f9: 'Farsi_9',
    0x9e0: 'soliddiamond',
    0x9e1: 'checkerboard',
    0x9e2: 'ht',
    0x9e3: 'ff',
    0x9e4: 'cr',
    0x9e8: 'nl',
    0x9e9: 'vt',
    0x9ea: 'lowrightcorner',
    0x9ec: 'upleftcorner',
    0x9ed: 'lowleftcorner',
    0x9ee: 'crossinglines',
    0x9ef: 'horizlinescan1',
    0x9f1: 'horizlinescan5',
    0x9f2: 'horizlinescan7',
    0x9f3: 'horizlinescan9',
    0x9f4: 'leftt',
    0x9f5: 'rightt',
    0x9f6: 'bott',
    0x9f7: 'topt',
    0x9f8: 'vertbar',
    0x6ba: 'Serbian_NJE',
    0x7cb: 'Greek_LAMBDA',
    0x8dc: 'intersection',
    0x10001af: 'Uhorn',
    0xab6: 'onesixth',
    0x7cc: 'Greek_MU',
    0x10001b5: 'Zstroke',
    0x7ce: 'Greek_XI',
    0x9f0: 'horizlinescan3',
    0x1c0: 'Racute',
    0xaa1: 'emspace',
    0xaa2: 'enspace',
    0xaa4: 'em4space',
    0xaa6: 'punctspace',
    0xaa7: 'thinspace',
    0xaa8: 'hairspace',
    0xaa9: 'emdash',
    0xaac: 'signifblank',
    0x10028b7: 'braille_dots_123568',
    0xaae: 'ellipsis',
    0xaaf: 'doubbaselinedot',
    0xab0: 'onethird',
    0xab1: 'twothirds',
    0xabb: 'figdash',
    0xabc: 'leftanglebracket',
    0xabd: 'decimalpoint',
    0xabe: 'rightanglebracket',
    0xabf: 'marker',
    0x7d1: 'Greek_RHO',
    0xac3: 'oneeighth',
    0xac4: 'threeeighths',
    0xac5: 'fiveeighths',
    0xac9: 'trademark',
    0xacb: 'trademarkincircle',
    0xacc: 'leftopentriangle',
    0xacd: 'rightopentriangle',
    0xacf: 'emopenrectangle',
    0xad0: 'leftsinglequotemark',
    0xad1: 'rightsinglequotemark',
    0xad4: 'prescription',
    0xad5: 'permille',
    0xad6: 'minutes',
    0xad7: 'seconds',
    0xadb: 'filledrectbullet',
    0xade: 'emfilledcircle',
    0xae0: 'enopencircbullet',
    0xae2: 'openrectbullet',
    0xae4: 'opentribulletdown',
    0xae5: 'openstar',
    0xae6: 'enfilledcircbullet',
    0xae8: 'filledtribulletup',
    0xae9: 'filledtribulletdown',
    0xaea: 'leftpointer',
    0xaeb: 'rightpointer',
    0xaec: 'club',
    0x10001d2: 'ocaron',
    0xaee: 'heart',
    0xaf0: 'maltesecross',
    0xaf1: 'dagger',
    0xaf2: 'doubledagger',
    0xaf3: 'checkmark',
    0xaf4: 'ballotcross',
    0xaf6: 'musicalflat',
    0xaf7: 'malesymbol',
    0x6c2: 'Cyrillic_be',
    0xaf9: 'telephone',
    0xafa: 'telephonerecorder',
    0xafb: 'phonographcopyright',
    0xafc: 'caret',
    0xafd: 'singlelowquotemark',
    0xafe: 'doublelowquotemark',
    0x1d5: 'Odoubleacute',
    0x6c3: 'Cyrillic_tse',
    0x1de: 'Tcedilla',
    0x6c5: 'Cyrillic_ie',
    0x1e6: 'cacute',
    0x10001e7: 'gcaron',
    0xba3: 'leftcaret',
    0xba6: 'rightcaret',
    0xba8: 'downcaret',
    0xba9: 'upcaret',
    0x10006af: 'Arabic_gaf',
    0xbc0: 'overbar',
    0xbc2: 'downtack',
    0xbc3: 'upshoe',
    0xbc4: 'downstile',
    0xbc6: 'underbar',
    0xbcc: 'quad',
    0xbce: 'uptack',
    0xbcf: 'circle',
    0xbd3: 'upstile',
    0xbd6: 'downshoe',
    0xadf: 'emfilledrect',
    0xbda: 'leftshoe',
    0xbdc: 'lefttack',
    0x1fb: 'udoubleacute',
    0x1000176: 'Ycircumflex',
    0x1ff: 'abovedot',
    0xbfc: 'righttack',
    0x1002205: 'emptyset',
    0x6cc: 'Cyrillic_el',
    0x1002208: 'elementof',
    0x1002209: 'notelementof',
    0x6cd: 'Cyrillic_em',
    0xad3: 'rightdoublequotemark',
    0x6ce: 'Cyrillic_en',
    0x100221a: 'squareroot',
    0x100221b: 'cuberoot',
    0x10004af: 'Cyrillic_u_straight',
    0x6c: 'l',
    0xfe07: 'ISO_Group_Lock',
    0x6d2: 'Cyrillic_er',
    0xce0: 'hebrew_aleph',
    0xce1: 'hebrew_bet',
    0xce2: 'hebrew_gimel',
    0xce3: 'hebrew_daleth',
    0xce4: 'hebrew_he',
    0xce5: 'hebrew_waw',
    0xce6: 'hebrew_zayin',
    0xce7: 'hebrew_chet',
    0xce8: 'hebrew_tet',
    0xce9: 'hebrew_yod',
    0xcea: 'hebrew_finalkaph',
    0xceb: 'hebrew_kaph',
    0xcec: 'hebrew_lamed',
    0xced: 'hebrew_finalmem',
    0xcee: 'hebrew_mem',
    0xcef: 'hebrew_finalnun',
    0xcf1: 'hebrew_samech',
    0xcf3: 'hebrew_finalpe',
    0xcf4: 'hebrew_pe',
    0xcf5: 'hebrew_finalzadi',
    0xcf6: 'hebrew_zadi',
    0xcf7: 'hebrew_kuf',
    0xcf8: 'hebrew_resh',
    0xcf9: 'hebrew_shin',
    0xcfa: 'hebrew_taf',
    0x3ec: 'eabovedot',
    0x100222d: 'tintegral',
    0xae3: 'opentribulletup',
    0x25: 'percent',
    0xfe0a: 'ISO_Prev_Group',
    0xcdf: 'hebrew_doublelowline',
    0x10028ef: 'braille_dots_1234678',
    0xda1: 'Thai_kokai',
    0xda2: 'Thai_khokhai',
    0xda3: 'Thai_khokhuat',
    0xda4: 'Thai_khokhwai',
    0xda5: 'Thai_khokhon',
    0xda6: 'Thai_khorakhang',
    0xda7: 'Thai_ngongu',
    0xda9: 'Thai_choching',
    0xdaa: 'Thai_chochang',
    0xdab: 'Thai_soso',
    0xdac: 'Thai_chochoe',
    0xdad: 'Thai_yoying',
    0xdae: 'Thai_dochada',
    0xdaf: 'Thai_topatak',
    0xdb0: 'Thai_thothan',
    0xdb1: 'Thai_thonangmontho',
    0xdb2: 'Thai_thophuthao',
    0xdb4: 'Thai_dodek',
    0xdb5: 'Thai_totao',
    0xdb6: 'Thai_thothung',
    0xdb7: 'Thai_thothahan',
    0xdb8: 'Thai_thothong',
    0xdb9: 'Thai_nonu',
    0xdba: 'Thai_bobaimai',
    0xdbc: 'Thai_phophung',
    0xdbd: 'Thai_fofa',
    0xdbe: 'Thai_phophan',
    0x75: 'u',
    0xdc2: 'Thai_yoyak',
    0xdc3: 'Thai_rorua',
    0xdc4: 'Thai_ru',
    0xdc5: 'Thai_loling',
    0xdc6: 'Thai_lu',
    0xdc9: 'Thai_sorusi',
    0xdca: 'Thai_sosua',
    0xdcc: 'Thai_lochula',
    0xdcd: 'Thai_oang',
    0xdce: 'Thai_honokhuk',
    0xdcf: 'Thai_paiyannoi',
    0xdd0: 'Thai_saraa',
    0xdd1: 'Thai_maihanakat',
    0xdd2: 'Thai_saraaa',
    0xdd3: 'Thai_saraam',
    0xdd4: 'Thai_sarai',
    0xdd5: 'Thai_saraii',
    0xdd6: 'Thai_saraue',
    0xdd8: 'Thai_sarau',
    0xdd9: 'Thai_sarauu',
    0xdda: 'Thai_phinthu',
    0xdde: 'Thai_maihanakat_maitho',
    0x7a5: 'Greek_IOTAdiaeresis',
    0xde1: 'Thai_saraae',
    0xde2: 'Thai_sarao',
    0xde3: 'Thai_saraaimaimuan',
    0xde4: 'Thai_saraaimaimalai',
    0xde5: 'Thai_lakkhangyao',
    0xde6: 'Thai_maiyamok',
    0xde7: 'Thai_maitaikhu',
    0xde8: 'Thai_maiek',
    0xde9: 'Thai_maitho',
    0xdea: 'Thai_maitri',
    0xdeb: 'Thai_maichattawa',
    0xdec: 'Thai_thanthakhat',
    0xded: 'Thai_nikhahit',
    0xdf0: 'Thai_leksun',
    0xdf1: 'Thai_leknung',
    0xdf2: 'Thai_leksong',
    0xdf3: 'Thai_leksam',
    0xdf4: 'Thai_leksi',
    0xdf5: 'Thai_lekha',
    0xdf6: 'Thai_lekhok',
    0xdf7: 'Thai_lekchet',
    0xdf8: 'Thai_lekpaet',
    0x5cb: 'Arabic_theh',
    0x10004bb: 'Cyrillic_shha',
    0xfd0b: '3270_PA2',
    0x7b8: 'Greek_upsilonaccent',
    0xfd11: '3270_KeyClick',
    0xfd18: '3270_Record',
    0x7c3: 'Greek_GAMMA',
    0xfd19: '3270_ChangeScreen',
    0x7c4: 'Greek_DELTA',
    0xea2: 'Hangul_SsangKiyeog',
    0xea3: 'Hangul_KiyeogSios',
    0xea5: 'Hangul_NieunJieuj',
    0xea6: 'Hangul_NieunHieuh',
    0xea7: 'Hangul_Dikeud',
    0xea8: 'Hangul_SsangDikeud',
    0xea9: 'Hangul_Rieul',
    0xeaa: 'Hangul_RieulKiyeog',
    0xeab: 'Hangul_RieulMieum',
    0xeac: 'Hangul_RieulPieub',
    0xead: 'Hangul_RieulSios',
    0xeae: 'Hangul_RieulTieut',
    0xeaf: 'Hangul_RieulPhieuf',
    0xeb0: 'Hangul_RieulHieuh',
    0xeb1: 'Hangul_Mieum',
    0x5d1: 'Arabic_ra',
    0xeb3: 'Hangul_SsangPieub',
    0xeb4: 'Hangul_PieubSios',
    0xeb5: 'Hangul_Sios',
    0xeb6: 'Hangul_SsangSios',
    0x7c9: 'Greek_IOTA',
    0xeb8: 'Hangul_Jieuj',
    0xeb9: 'Hangul_SsangJieuj',
    0xeba: 'Hangul_Cieuc',
    0xebb: 'Hangul_Khieuq',
    0xebc: 'Hangul_Tieut',
    0xebd: 'Hangul_Phieuf',
    0xebe: 'Hangul_Hieuh',
    0xebf: 'Hangul_A',
    0xec0: 'Hangul_AE',
    0xec1: 'Hangul_YA',
    0xec2: 'Hangul_YAE',
    0xec3: 'Hangul_EO',
    0xec4: 'Hangul_E',
    0xec5: 'Hangul_YEO',
    0xec6: 'Hangul_YE',
    0xec7: 'Hangul_O',
    0xec9: 'Hangul_WAE',
    0xeca: 'Hangul_OE',
    0xecb: 'Hangul_YO',
    0xecc: 'Hangul_U',
    0xecd: 'Hangul_WEO',
    0xece: 'Hangul_WE',
    0xecf: 'Hangul_WI',
    0xed0: 'Hangul_YU',
    0xed1: 'Hangul_EU',
    0xed2: 'Hangul_YI',
    0xed3: 'Hangul_I',
    0xed4: 'Hangul_J_Kiyeog',
    0xed5: 'Hangul_J_SsangKiyeog',
    0xed6: 'Hangul_J_KiyeogSios',
    0xed7: 'Hangul_J_Nieun',
    0xed8: 'Hangul_J_NieunJieuj',
    0xed9: 'Hangul_J_NieunHieuh',
    0xeda: 'Hangul_J_Dikeud',
    0xedc: 'Hangul_J_RieulKiyeog',
    0xedd: 'Hangul_J_RieulMieum',
    0xede: 'Hangul_J_RieulPieub',
    0xedf: 'Hangul_J_RieulSios',
    0xee0: 'Hangul_J_RieulTieut',
    0xee1: 'Hangul_J_RieulPhieuf',
    0xee2: 'Hangul_J_RieulHieuh',
    0xee3: 'Hangul_J_Mieum',
    0xee4: 'Hangul_J_Pieub',
    0xee5: 'Hangul_J_PieubSios',
    0xee6: 'Hangul_J_Sios',
    0xee7: 'Hangul_J_SsangSios',
    0xee8: 'Hangul_J_Ieung',
    0xee9: 'Hangul_J_Jieuj',
    0xeeb: 'Hangul_J_Khieuq',
    0xeec: 'Hangul_J_Tieut',
    0xeed: 'Hangul_J_Phieuf',
    0xeef: 'Hangul_RieulYeorinHieuh',
    0xef0: 'Hangul_SunkyeongeumMieum',
    0xef1: 'Hangul_SunkyeongeumPieub',
    0xef4: 'Hangul_SunkyeongeumPhieuf',
    0xef5: 'Hangul_YeorinHieuh',
    0xef6: 'Hangul_AraeA',
    0xef7: 'Hangul_AraeAE',
    0xef8: 'Hangul_J_PanSios',
    0xef9: 'Hangul_J_KkogjiDalrinIeung',
    0xefa: 'Hangul_J_YeorinHieuh',
    0x7d5: 'Greek_UPSILON',
    0x7d6: 'Greek_PHI',
    0x7d9: 'Greek_OMEGA',
    0x1002078: 'eightsuperior',
    0xaf8: 'femalesymbol',
    0x7e9: 'Greek_iota',
    0x2a9: 'Iabovedot',
    0x7f1: 'Greek_rho',
    0x7f3: 'Greek_finalsmallsigma',
    0x7f5: 'Greek_upsilon',
    0x7f7: 'Greek_chi',
    0x7f9: 'Greek_omega',
    0x4cb: 'kana_HI',
    0xfe22: 'ISO_Move_Line_Down',
    0x2b1: 'hstroke',
    0x100280b: 'braille_dots_124',
    0x100280c: 'braille_dots_34',
    0x2bc: 'jcircumflex',
    0xb4: 'acute',
    0x10006f1: 'Farsi_1',
    0xfe27: 'ISO_Set_Margin_Left',
    0x6f2: 'Cyrillic_ER',
    0x6f3: 'Cyrillic_ES',
    0x1000496: 'Cyrillic_ZHE_descender',
    0x10010d0: 'Georgian_an',
    0x10010d1: 'Georgian_ban',
    0x10010d2: 'Georgian_gan',
    0x10001a0: 'Ohorn',
    0x10010d4: 'Georgian_en',
    0x10010d5: 'Georgian_vin',
    0x10010d6: 'Georgian_zen',
    0x10010d7: 'Georgian_tan',
    0x10010d8: 'Georgian_in',
    0x10010d9: 'Georgian_kan',
    0x10010da: 'Georgian_las',
    0x10010db: 'Georgian_man',
    0x10010dc: 'Georgian_nar',
    0x10010dd: 'Georgian_on',
    0x10010de: 'Georgian_par',
    0x10010df: 'Georgian_zhar',
    0x10010e0: 'Georgian_rae',
    0x10010e1: 'Georgian_san',
    0x10010e2: 'Georgian_tar',
    0x10010e3: 'Georgian_un',
    0x10010e4: 'Georgian_phar',
    0x10010e5: 'Georgian_khar',
    0x10010e6: 'Georgian_ghan',
    0x10010e7: 'Georgian_qar',
    0x10010e8: 'Georgian_shin',
    0x10010e9: 'Georgian_chin',
    0x10010ea: 'Georgian_can',
    0x10010eb: 'Georgian_jil',
    0x10010ed: 'Georgian_char',
    0x10010ee: 'Georgian_xan',
    0x10010ef: 'Georgian_jhan',
    0x10010f0: 'Georgian_hae',
    0x10010f1: 'Georgian_he',
    0x10010f2: 'Georgian_hie',
    0x10010f4: 'Georgian_har',
    0x10010f5: 'Georgian_hoe',
    0x10010f6: 'Georgian_fi',
    0x1002829: 'braille_dots_146',
    0x2d8: 'Gcircumflex',
    0x1001ecd: 'obelowdot',
    0x10006f7: 'Farsi_7',
    0x1002833: 'braille_dots_1256',
    0x1002836: 'braille_dots_2356',
    0x1002838: 'braille_dots_456',
    0xff3f: 'Hangul_Special',
    0x10006a9: 'Arabic_keheh',
    0x100283d: 'braille_dots_13456',
    0x100283e: 'braille_dots_23456',
    0x1002840: 'braille_dots_7',
    0x1002841: 'braille_dots_17',
    0x10004d9: 'Cyrillic_schwa',
    0x2f5: 'gabovedot',
    0x6fd: 'Cyrillic_SHCHA',
    0xda8: 'Thai_chochan',
    0x2fe: 'scircumflex',
    0x1002857: 'braille_dots_12357',
    0x5f0: 'Arabic_kasra',
    0xdbb: 'Thai_popla',
    0x5f1: 'Arabic_shadda',
    0xdbf: 'Thai_fofan',
    0xdc0: 'Thai_phosamphao',
    0xdc1: 'Thai_moma',
    0x1002830: 'braille_dots_56',
    0x5f2: 'Arabic_sukun',
    0xdc7: 'Thai_wowaen',
    0xdc8: 'Thai_sosala',
    0x1002875: 'braille_dots_13567',
    0xdcb: 'Thai_hohip',
    0xa1: 'exclamdown',
    0xa2: 'cent',
    0xdd7: 'Thai_sarauee',
    0x1002882: 'braille_dots_28',
    0x1002883: 'braille_dots_128',
    0xa3: 'sterling',
    0x1002887: 'braille_dots_1238',
    0x1002889: 'braille_dots_148',
    0xddf: 'Thai_baht',
    0xde0: 'Thai_sarae',
    0x6bc: 'Macedonia_KJE',
    0x8a7: 'topleftsqbracket',
    0x1b6: 'sacute',
    0x1002893: 'braille_dots_1258',
    0x21: 'exclam',
    0x1002897: 'braille_dots_12358',
    0x100289d: 'braille_dots_13458',
    0x13bc: 'OE',
    0x13bd: 'oe',
    0x13be: 'Ydiaeresis',
    0x10028a0: 'braille_dots_68',
    0x10028a3: 'braille_dots_1268',
    0xdf9: 'Thai_lekkao',
    0x8a5: 'botintegral',
    0x10028a8: 'braille_dots_468',
    0x10028a9: 'braille_dots_1468',
    0x8aa: 'botrightsqbracket',
    0x8ab: 'topleftparens',
    0x8ac: 'botleftparens',
    0x8ad: 'toprightparens',
    0xab: 'guillemotleft',
    0x10028af: 'braille_dots_123468',
    0x10028b0: 'braille_dots_568',
    0x8b1: 'topleftsummation',
    0x10006f4: 'Farsi_4',
    0x8b2: 'botleftsummation',
    0x10028b3: 'braille_dots_12568',
    0x1001e0a: 'Dabovedot',
    0x8b5: 'toprightsummation',
    0xfe0b: 'ISO_Prev_Group_Lock',
    0x8b7: 'rightmiddlesummation',
    0x4b7: 'kana_KI',
    0x10020a5: 'MillSign',
    0x8bc: 'lessthanequal',
    0x8bd: 'notequal',
    0x10028be: 'braille_dots_234568',
    0x10028c0: 'braille_dots_78',
    0x8c1: 'variation',
    0x10028c3: 'braille_dots_1278',
    0x10020a7: 'PesetaSign',
    0x10028c8: 'braille_dots_478',
    0x10028c9: 'braille_dots_1478',
    0x8cd: 'ifonlyif',
    0xfe23: 'ISO_Partial_Line_Up',
    0x8ce: 'implies',
    0x10028a1: 'braille_dots_168',
    0x10028cf: 'braille_dots_123478',
    0xfe25: 'ISO_Partial_Space_Left',
    0x10028d4: 'braille_dots_3578',
    0x10028d5: 'braille_dots_13578',
    0x10028d6: 'braille_dots_23578',
    0x10004b0: 'Cyrillic_U_straight_bar',
    0x10028da: 'braille_dots_24578',
    0x8db: 'includes',
    0x10028dd: 'braille_dots_134578',
    0x8de: 'logicaland',
    0x10028df: 'braille_dots_1234578',
    0x1002823: 'braille_dots_126',
    0x10028e9: 'braille_dots_14678',
    0xb7: 'periodcentered',
    0x70: 'p',
    0x10028ee: 'braille_dots_234678',
    0x10028f2: 'braille_dots_25678',
    0x6c0: 'Cyrillic_yu',
    0x10028f3: 'braille_dots_125678',
    0x1002076: 'sixsuperior',
    0x8f6: 'function',
    0x3a2: 'kra',
    0x10028fb: 'braille_dots_1245678',
    0x10028fc: 'braille_dots_345678',
    0x8cf: 'identical',
    0x10028fd: 'braille_dots_1345678',
    0x8fe: 'downarrow',
    0x1002828: 'braille_dots_46',
    0x10028ff: 'braille_dots_12345678',
    0x3ab: 'Gcedilla',
    0xfe56: 'dead_abovedot',
    0x1001e57: 'pabovedot',
    0xfe60: 'dead_belowdot',
    0x10006c1: 'Arabic_heh_goal',
    0x10004b7: 'Cyrillic_che_descender',
    0x3bd: 'ENG',
    0x3c0: 'Amacron',
    0xace: 'emopencircle',
    0x10001d1: 'Ocaron',
    0x1d2: 'Ncaron',
    0xcf0: 'hebrew_nun',
    0x10028db: 'braille_dots_124578',
    0x3d2: 'Omacron',
    0x1001e80: 'Wgrave',
    0x1002831: 'braille_dots_156',
    0xfe81: 'dead_A',
    0xfe82: 'dead_e',
    0xfe83: 'dead_E',
    0x3d9: 'Uogonek',
    0xfe84: 'dead_i',
    0x1001e85: 'wdiaeresis',
    0x3de: 'Umacron',
    0x1001e8a: 'Xabovedot',
    0x1001e8b: 'xabovedot',
    0xfe61: 'dead_hook',
    0xea1: 'Hangul_Kiyeog',
    0x8ae: 'botrightparens',
    0x3ef: 'imacron',
    0x3f1: 'ncedilla',
    0xca: 'Ecircumflex',
    0x10028a6: 'braille_dots_2368',
    0xea4: 'Hangul_Nieun',
    0x1001ea5: 'acircumflexacute',
    0x3fd: 'utilde',
    0xcf2: 'hebrew_ayin',
    0x100057d: 'Armenian_se',
    0xeb7: 'Hangul_Ieung',
    0xcf: 'Idiaeresis',
    0xaa5: 'digitspace',
    0xfed4: 'Last_Virtual_Screen',
    0xfe6a: 'dead_belowtilde',
    0xec8: 'Hangul_WA',
    0xad2: 'leftdoublequotemark',
    0xfed0: 'First_Virtual_Screen',
    0x1001ed1: 'ocircumflexacute',
    0x1e5: 'lacute',
    0x1001ed2: 'Ocircumflexgrave',
    0x1001ed5: 'ocircumflexhook',
    0xef3: 'Hangul_KkogjiDalrinIeung',
    0x10001e6: 'Gcaron',
    0xedb: 'Hangul_J_Rieul',
    0x1002844: 'braille_dots_37',
    0xfee0: 'Pointer_Left',
    0x1001ee1: 'ohorntilde',
    0x1001ee2: 'Ohornbelowdot',
    0xfee3: 'Pointer_Down',
    0x1001ee5: 'ubelowdot',
    0x1001ee6: 'Uhook',
    0xfee7: 'Pointer_DownRight',
    0xfee8: 'Pointer_Button_Dflt',
    0x1001ee9: 'uhornacute',
    0xfeec: 'Pointer_Button4',
    0xfeed: 'Pointer_Button5',
    0xeb2: 'Hangul_Pieub',
    0x1001eee: 'Uhorntilde',
    0x1001eef: 'uhorntilde',
    0x1001ef0: 'Uhornbelowdot',
    0x1001ef1: 'uhornbelowdot',
    0x1001ef2: 'Ygrave',
    0xfef3: 'Pointer_DblClick5',
    0xfef5: 'Pointer_Drag1',
    0x1001ef6: 'Yhook',
    0x6c7: 'Cyrillic_ghe',
    0x1001ef7: 'yhook',
    0xfef8: 'Pointer_Drag4',
    0x1001ef9: 'ytilde',
    0xeff: 'Korean_Won',
    0x1001e02: 'Babovedot',
    0x1ef: 'dcaron',
    0x2bb: 'gbreve',
    0x7a2: 'Greek_EPSILONaccent',
    0x6a4: 'Ukranian_je',
    0xae: 'registered',
    0xffb2: 'KP_2',
    0x8b4: 'botvertsummationconnector',
    0xff2a: 'Zenkaku_Hankaku',
    0x1008ff2b: 'XF86WakeUp',
    0x1d1: 'Nacute',
    0xff2f: 'Eisu_Shift',
    0x1ac: 'Zacute',
    0x9df: 'blank',
    0xe9: 'eacute',
    0x1002856: 'braille_dots_2357',
    0x9e5: 'lf',
    0x7a4: 'Greek_IOTAaccent',
    0xdb3: 'Thai_nonen',
    0x9eb: 'uprightcorner',
    0xec: 'igrave',
    0x10004a2: 'Cyrillic_EN_descender',
    0x4a3: 'kana_closingbracket',
    0x4a5: 'kana_conjunctive',
    0xee: 'icircumflex',
    0x4ab: 'kana_o',
    0x4ae: 'kana_yo',
    0x4b0: 'prolongedsound',
    0x10004b1: 'Cyrillic_u_straight_bar',
    0x10004b2: 'Cyrillic_HA_descender',
    0x4b3: 'kana_U',
    0x10010ec: 'Georgian_cil',
    0x4b6: 'kana_KA',
    0x4b8: 'kana_KU',
    0x4b9: 'kana_KE',
    0x4ba: 'kana_KO',
    0x1000535: 'Armenian_YECH',
    0x4bf: 'kana_SO',
    0x4c2: 'kana_TSU',
    0x4c3: 'kana_TE',
    0x1000537: 'Armenian_E',
    0x1000538: 'Armenian_AT',
    0xf6: 'odiaeresis',
    0x4d2: 'kana_ME',
    0x4d4: 'kana_YA',
    0xfd01: '3270_Duplicate',
    0xfd02: '3270_FieldMark',
    0xfd03: '3270_Right2',
    0xfd04: '3270_Left2',
    0xfd05: '3270_BackTab',
    0xfd06: '3270_EraseEOF',
    0xfd07: '3270_EraseInput',
    0xfd08: '3270_Reset',
    0xfd09: '3270_Quit',
    0xfd0a: '3270_PA1',
    0x4d7: 'kana_RA',
    0xfd0c: '3270_PA3',
    0xfd0d: '3270_Test',
    0xfd0e: '3270_Attn',
    0xfd0f: '3270_CursorBlink',
    0xfd10: '3270_AltCursor',
    0x10004d8: 'Cyrillic_SCHWA',
    0xfd12: '3270_Jump',
    0xfd13: '3270_Ident',
    0xfd14: '3270_Rule',
    0xfd15: '3270_Copy',
    0xfd16: '3270_Play',
    0xfd17: '3270_Setup',
    0xfd1a: '3270_DeleteWord',
    0xfd1b: '3270_ExSelect',
    0xfd1c: '3270_CursorSelect',
    0xfd1d: '3270_PrintScreen',
    0xfd1e: '3270_Enter',
    0x4db: 'kana_RO',
    0xf9: 'ugrave',
    0x77: 'w',
    0xada: 'hexagram',
    0xff99: 'KP_Down',
    0x7a8: 'Greek_UPSILONaccent',
    0xeea: 'Hangul_J_Cieuc',
    0xfe01: 'ISO_Lock',
    0xfe02: 'ISO_Level2_Latch',
    0xfe03: 'ISO_Level3_Shift',
    0xfe04: 'ISO_Level3_Latch',
    0xfe05: 'ISO_Level3_Lock',
    0xfe06: 'ISO_Group_Latch',
    0xfe08: 'ISO_Next_Group',
    0xfe09: 'ISO_Next_Group_Lock',
    0x1000543: 'Armenian_TCHE',
    0x1001e0b: 'dabovedot',
    0xfe0c: 'ISO_First_Group',
    0xfe0d: 'ISO_First_Group_Lock',
    0xfe0e: 'ISO_Last_Group',
    0xfe0f: 'ISO_Last_Group_Lock',
    0x1000654: 'Arabic_hamza_above',
    0xfe11: 'ISO_Level5_Shift',
    0xfe12: 'ISO_Level5_Latch',
    0xfe13: 'ISO_Level5_Lock',
    0x1001e1e: 'Fabovedot',
    0x1001e1f: 'fabovedot',
    0xfe20: 'ISO_Left_Tab',
    0xfe21: 'ISO_Move_Line_Up',
    0xfe24: 'ISO_Partial_Line_Down',
    0xfe26: 'ISO_Partial_Space_Right',
    0xfe28: 'ISO_Set_Margin_Right',
    0xfe29: 'ISO_Release_Margin_Left',
    0xfe2a: 'ISO_Release_Margin_Right',
    0xfe2b: 'ISO_Release_Both_Margins',
    0xfe2c: 'ISO_Fast_Cursor_Left',
    0xfe2d: 'ISO_Fast_Cursor_Right',
    0xfe2e: 'ISO_Fast_Cursor_Up',
    0xfe2f: 'ISO_Fast_Cursor_Down',
    0xfe30: 'ISO_Continuous_Underline',
    0xfe31: 'ISO_Discontinuous_Underline',
    0xfe32: 'ISO_Emphasize',
    0xfe33: 'ISO_Center_Object',
    0xfe34: 'ISO_Enter',
    0x1001e36: 'Lbelowdot',
    0x1001e37: 'lbelowdot',
    0x1001e40: 'Mabovedot',
    0x1001e41: 'mabovedot',
    0xfe50: 'dead_grave',
    0xfe51: 'dead_acute',
    0xfe52: 'dead_circumflex',
    0xfe53: 'dead_tilde',
    0xfe54: 'dead_macron',
    0xfe55: 'dead_breve',
    0x1001e56: 'Pabovedot',
    0xfe57: 'dead_diaeresis',
    0xfe58: 'dead_abovering',
    0xfe59: 'dead_doubleacute',
    0xfe5a: 'dead_caron',
    0xfe5b: 'dead_cedilla',
    0xfe5c: 'dead_ogonek',
    0xfe5d: 'dead_iota',
    0xfe5e: 'dead_voiced_sound',
    0xfe5f: 'dead_semivoiced_sound',
    0x1001e60: 'Sabovedot',
    0x1001e61: 'sabovedot',
    0xfe62: 'dead_horn',
    0xfe63: 'dead_stroke',
    0xfe64: 'dead_abovecomma',
    0xfe65: 'dead_abovereversedcomma',
    0xfe66: 'dead_doublegrave',
    0xfe67: 'dead_belowring',
    0xfe68: 'dead_belowmacron',
    0xfe69: 'dead_belowcircumflex',
    0x1001e6a: 'Tabovedot',
    0x1001e6b: 'tabovedot',
    0xfe6c: 'dead_belowdiaeresis',
    0xfe6d: 'dead_invertedbreve',
    0xfe6e: 'dead_belowcomma',
    0xfe6f: 'dead_currency',
    0xfe70: 'AccessX_Enable',
    0xfe71: 'AccessX_Feedback_Enable',
    0xfe72: 'RepeatKeys_Enable',
    0xfe73: 'SlowKeys_Enable',
    0xfe74: 'BounceKeys_Enable',
    0xfe75: 'StickyKeys_Enable',
    0xfe76: 'MouseKeys_Enable',
    0xfe77: 'MouseKeys_Accel_Enable',
    0xfe78: 'Overlay1_Enable',
    0xfe79: 'Overlay2_Enable',
    0xfe7a: 'AudibleBell_Enable',
    0xfe80: 'dead_a',
    0x1001e81: 'wgrave',
    0x1001e82: 'Wacute',
    0x1001e83: 'wacute',
    0x1001e84: 'Wdiaeresis',
    0xfe85: 'dead_I',
    0xfe86: 'dead_o',
    0xfe87: 'dead_O',
    0xfe88: 'dead_u',
    0xfe89: 'dead_U',
    0xfe8a: 'dead_small_schwa',
    0xfe8b: 'dead_capital_schwa',
    0xfe8c: 'dead_greek',
    0xffc3: 'F6',
    0x1001ea0: 'Abelowdot',
    0x1001ea1: 'abelowdot',
    0x1001ea2: 'Ahook',
    0x1001ea3: 'ahook',
    0x1001ea4: 'Acircumflexacute',
    0x1001ea6: 'Acircumflexgrave',
    0x1001ea7: 'acircumflexgrave',
    0x1001ea8: 'Acircumflexhook',
    0x1001ea9: 'acircumflexhook',
    0x1001eaa: 'Acircumflextilde',
    0x1001eab: 'acircumflextilde',
    0x1001eac: 'Acircumflexbelowdot',
    0x1001ead: 'acircumflexbelowdot',
    0x1001eae: 'Abreveacute',
    0x1001eaf: 'abreveacute',
    0x1001eb0: 'Abrevegrave',
    0x1001eb1: 'abrevegrave',
    0x1001eb2: 'Abrevehook',
    0x1001eb3: 'abrevehook',
    0x1001eb4: 'Abrevetilde',
    0x1001eb5: 'abrevetilde',
    0x1001eb6: 'Abrevebelowdot',
    0x1001eb7: 'abrevebelowdot',
    0x1001eb8: 'Ebelowdot',
    0x1001eb9: 'ebelowdot',
    0x1001eba: 'Ehook',
    0x1001ebb: 'ehook',
    0x1001ebc: 'Etilde',
    0x1001ebd: 'etilde',
    0x1001ebe: 'Ecircumflexacute',
    0x1001ebf: 'ecircumflexacute',
    0x1001ec0: 'Ecircumflexgrave',
    0x1001ec1: 'ecircumflexgrave',
    0x1001ec2: 'Ecircumflexhook',
    0x1001ec3: 'ecircumflexhook',
    0x1001ec4: 'Ecircumflextilde',
    0x1001ec5: 'ecircumflextilde',
    0x1001ec6: 'Ecircumflexbelowdot',
    0x1001ec7: 'ecircumflexbelowdot',
    0x1001ec8: 'Ihook',
    0x1001ec9: 'ihook',
    0x1001eca: 'Ibelowdot',
    0x1001ecb: 'ibelowdot',
    0x1001ecc: 'Obelowdot',
    0x10004ae: 'Cyrillic_U_straight',
    0x1001ece: 'Ohook',
    0x1001ecf: 'ohook',
    0x1001ed0: 'Ocircumflexacute',
    0xfed1: 'Prev_Virtual_Screen',
    0xfed2: 'Next_Virtual_Screen',
    0x1001ed3: 'ocircumflexgrave',
    0x1001ed4: 'Ocircumflexhook',
    0xfed5: 'Terminate_Server',
    0x1001ed6: 'Ocircumflextilde',
    0x1001ed7: 'ocircumflextilde',
    0x1001ed8: 'Ocircumflexbelowdot',
    0x1001ed9: 'ocircumflexbelowdot',
    0x1001eda: 'Ohornacute',
    0x1001edb: 'ohornacute',
    0x1001edc: 'Ohorngrave',
    0x1001edd: 'ohorngrave',
    0x1001ede: 'Ohornhook',
    0x1001edf: 'ohornhook',
    0x1001ee0: 'Ohorntilde',
    0xfee1: 'Pointer_Right',
    0xfee2: 'Pointer_Up',
    0x1001ee3: 'ohornbelowdot',
    0x1001ee4: 'Ubelowdot',
    0xfee5: 'Pointer_UpRight',
    0xfee6: 'Pointer_DownLeft',
    0x1001ee7: 'uhook',
    0x1001ee8: 'Uhornacute',
    0xfee9: 'Pointer_Button1',
    0x1001eea: 'Uhorngrave',
    0xfeeb: 'Pointer_Button3',
    0x1001eec: 'Uhornhook',
    0x1001eed: 'uhornhook',
    0xfeee: 'Pointer_DblClick_Dflt',
    0xfeef: 'Pointer_DblClick1',
    0xfef0: 'Pointer_DblClick2',
    0xfef1: 'Pointer_DblClick3',
    0xfef2: 'Pointer_DblClick4',
    0x1001ef3: 'ygrave',
    0xfef4: 'Pointer_Drag_Dflt',
    0x1001ef5: 'ybelowdot',
    0xfef6: 'Pointer_Drag2',
    0xfef7: 'Pointer_Drag3',
    0x1001ef8: 'Ytilde',
    0xfef9: 'Pointer_EnableKeys',
    0xfefa: 'Pointer_Accelerate',
    0xfefb: 'Pointer_DfltBtnNext',
    0xfefc: 'Pointer_DfltBtnPrev',
    0xfefd: 'Pointer_Drag5',
    0xfea0: 'ch',
    0xfea1: 'Ch',
    0xfea2: 'CH',
    0xfea3: 'c_h',
    0xfea4: 'C_h',
    0xfea5: 'C_H',
    0xff08: 'BackSpace',
    0xff09: 'Tab',
    0xff0a: 'Linefeed',
    0xff0b: 'Clear',
    0xff0d: 'Return',
    0xff13: 'Pause',
    0xff14: 'Scroll_Lock',
    0xff15: 'Sys_Req',
    0xff1b: 'Escape',
    0x1002876: 'braille_dots_23567',
    0xff20: 'Multi_key',
    0xff21: 'Kanji',
    0xff22: 'Muhenkan',
    0xff23: 'Henkan',
    0xff24: 'Romaji',
    0xff25: 'Hiragana',
    0xff26: 'Katakana',
    0xff27: 'Hiragana_Katakana',
    0xff28: 'Zenkaku',
    0xff29: 'Hankaku',
    0x1008ff2a: 'XF86PowerOff',
    0xff2b: 'Touroku',
    0xff2c: 'Massyo',
    0xff2d: 'Kana_Lock',
    0xff2e: 'Kana_Shift',
    0x1008ff2f: 'XF86Sleep',
    0xff30: 'Eisu_toggle',
    0xff31: 'Hangul',
    0xff32: 'Hangul_Start',
    0xff33: 'Hangul_End',
    0xff34: 'Hangul_Hanja',
    0xff35: 'Hangul_Jamo',
    0xff36: 'Hangul_Romaja',
    0xff37: 'Hangul_Codeinput',
    0xff38: 'Hangul_Jeonja',
    0xff39: 'Hangul_Banja',
    0xff3a: 'Hangul_PreHanja',
    0xff3b: 'Hangul_PostHanja',
    0xff3c: 'Hangul_SingleCandidate',
    0xff3d: 'Hangul_MultipleCandidate',
    0xff3e: 'Hangul_PreviousCandidate',
    0x1000536: 'Armenian_ZA',
    0xff50: 'Home',
    0xff51: 'Left',
    0xff52: 'Up',
    0xff53: 'Right',
    0xff54: 'Down',
    0xff55: 'Prior',
    0xff56: 'Next',
    0xff57: 'End',
    0xff58: 'Begin',
    0xff60: 'Select',
    0xff61: 'Print',
    0xff62: 'Execute',
    0xff63: 'Insert',
    0xff65: 'Undo',
    0xff66: 'Redo',
    0xff67: 'Menu',
    0xff68: 'Find',
    0xff69: 'Cancel',
    0xff6a: 'Help',
    0xff6b: 'Break',
    0x100054f: 'Armenian_TYUN',
    0xaa3: 'em3space',
    0xff7e: 'Arabic_switch',
    0xff7f: 'Num_Lock',
    0xff80: 'KP_Space',
    0x1000540: 'Armenian_HO',
    0xffeb: 'Super_L',
    0x1000541: 'Armenian_DZA',
    0xff89: 'KP_Tab',
    0xff8d: 'KP_Enter',
    0x1000550: 'Armenian_RE',
    0xff91: 'KP_F1',
    0xff92: 'KP_F2',
    0xff93: 'KP_F3',
    0xff94: 'KP_F4',
    0xff95: 'KP_Home',
    0xff96: 'KP_Left',
    0xff97: 'KP_Up',
    0xff98: 'KP_Right',
    0x1000544: 'Armenian_MEN',
    0xff9a: 'KP_Prior',
    0xff9b: 'KP_Next',
    0xff9c: 'KP_End',
    0xff9d: 'KP_Begin',
    0xff9e: 'KP_Insert',
    0xff9f: 'KP_Delete',
    0x1000546: 'Armenian_NU',
    0xffaa: 'KP_Multiply',
    0xffab: 'KP_Add',
    0xffac: 'KP_Separator',
    0xffad: 'KP_Subtract',
    0xffae: 'KP_Decimal',
    0xffaf: 'KP_Divide',
    0xffb0: 'KP_0',
    0xffb1: 'KP_1',
    0xffb3: 'KP_3',
    0xffb4: 'KP_4',
    0xffb5: 'KP_5',
    0xffb6: 'KP_6',
    0xffb7: 'KP_7',
    0xffb8: 'KP_8',
    0xffb9: 'KP_9',
    0xffbd: 'KP_Equal',
    0xffbe: 'F1',
    0xffbf: 'F2',
    0xffc0: 'F3',
    0xffc1: 'F4',
    0xffc2: 'F5',
    0x100054b: 'Armenian_JE',
    0xffc4: 'F7',
    0xffc5: 'F8',
    0xffc6: 'F9',
    0xffc7: 'F10',
    0xffc8: 'F11',
    0xffc9: 'F12',
    0xffca: 'F13',
    0xffcb: 'F14',
    0xffcc: 'L5',
    0xffcd: 'F16',
    0xffce: 'F17',
    0xffcf: 'F18',
    0xffd0: 'F19',
    0xffd1: 'L10',
    0xffd2: 'R1',
    0xffd3: 'R2',
    0xffd4: 'R3',
    0xffd5: 'F24',
    0xffd6: 'R5',
    0xffd7: 'R6',
    0xffd8: 'R7',
    0xffd9: 'R8',
    0xffda: 'R9',
    0xffdb: 'R10',
    0xffdc: 'R11',
    0xffdd: 'R12',
    0xffde: 'R13',
    0xffdf: 'R14',
    0xffe0: 'R15',
    0xffe1: 'Shift_L',
    0xffe2: 'Shift_R',
    0xffe3: 'Control_L',
    0xffe4: 'Control_R',
    0xffe5: 'Caps_Lock',
    0xffe6: 'Shift_Lock',
    0xffe7: 'Meta_L',
    0xffe8: 'Meta_R',
    0xffe9: 'Alt_L',
    0xffea: 'Alt_R',
    0xffec: 'Super_R',
    0xffed: 'Hyper_L',
    0xffee: 'Hyper_R',
    0xfff1: 'braille_dot_1',
    0xfff2: 'braille_dot_2',
    0xfff3: 'braille_dot_3',
    0xfff4: 'braille_dot_4',
    0xfff5: 'braille_dot_5',
    0xfff6: 'braille_dot_6',
    0xfff7: 'braille_dot_7',
    0xfff8: 'braille_dot_8',
    0xfff9: 'braille_dot_9',
    0xfffa: 'braille_dot_10',
    0xaaa: 'endash',
    0x1000d82: 'Sinh_ng',
    0x1000d83: 'Sinh_h2',
    0x1000d85: 'Sinh_a',
    0x1000d86: 'Sinh_aa',
    0x1000d87: 'Sinh_ae',
    0x1000d88: 'Sinh_aee',
    0x1000d89: 'Sinh_i',
    0x1000d8a: 'Sinh_ii',
    0x1000d8b: 'Sinh_u',
    0x1000d8c: 'Sinh_uu',
    0x1000d8d: 'Sinh_ri',
    0x1000d8e: 'Sinh_rii',
    0x1000d8f: 'Sinh_lu',
    0x1000d90: 'Sinh_luu',
    0x1000d91: 'Sinh_e',
    0x1000d92: 'Sinh_ee',
    0x1000d93: 'Sinh_ai',
    0x1000d94: 'Sinh_o',
    0x1000d95: 'Sinh_oo',
    0x1000d96: 'Sinh_au',
    0x1000d9a: 'Sinh_ka',
    0x1000d9b: 'Sinh_kha',
    0x1000d9c: 'Sinh_ga',
    0x1000d9d: 'Sinh_gha',
    0x1000d9e: 'Sinh_ng2',
    0x1000d9f: 'Sinh_nga',
    0x1000da0: 'Sinh_ca',
    0x1000da1: 'Sinh_cha',
    0x1000da2: 'Sinh_ja',
    0x1000da3: 'Sinh_jha',
    0x1000da4: 'Sinh_nya',
    0x1000da5: 'Sinh_jnya',
    0x1000da6: 'Sinh_nja',
    0x1000da7: 'Sinh_tta',
    0x1000da8: 'Sinh_ttha',
    0x1000da9: 'Sinh_dda',
    0x1000daa: 'Sinh_ddha',
    0x1000dab: 'Sinh_nna',
    0x1000dac: 'Sinh_ndda',
    0x1000dad: 'Sinh_tha',
    0x1000dae: 'Sinh_thha',
    0x1000daf: 'Sinh_dha',
    0x1000db0: 'Sinh_dhha',
    0x1000db1: 'Sinh_na',
    0x1000db3: 'Sinh_ndha',
    0x1000db4: 'Sinh_pa',
    0x1000db5: 'Sinh_pha',
    0x1000db6: 'Sinh_ba',
    0x1000db7: 'Sinh_bha',
    0x1000db8: 'Sinh_ma',
    0x1000db9: 'Sinh_mba',
    0x1000dba: 'Sinh_ya',
    0x1000dbb: 'Sinh_ra',
    0x1000dbd: 'Sinh_la',
    0x1000dc0: 'Sinh_va',
    0x1000dc1: 'Sinh_sha',
    0x1000dc2: 'Sinh_ssha',
    0x1000dc3: 'Sinh_sa',
    0x1000dc4: 'Sinh_ha',
    0x1000dc5: 'Sinh_lla',
    0x1000dc6: 'Sinh_fa',
    0x1000dca: 'Sinh_al',
    0x1000dcf: 'Sinh_aa2',
    0x1000dd0: 'Sinh_ae2',
    0x1000dd1: 'Sinh_aee2',
    0x1000dd2: 'Sinh_i2',
    0x1000dd3: 'Sinh_ii2',
    0x1000dd4: 'Sinh_u2',
    0x1000dd6: 'Sinh_uu2',
    0x1000dd8: 'Sinh_ru2',
    0x1000dd9: 'Sinh_e2',
    0x1000dda: 'Sinh_ee2',
    0x1000ddb: 'Sinh_ai2',
    0x1000ddc: 'Sinh_o2',
    0x1000ddd: 'Sinh_oo2',
    0x1000dde: 'Sinh_au2',
    0x1000ddf: 'Sinh_lu2',
    0x1000df2: 'Sinh_ruu2',
    0x1000df3: 'Sinh_luu2',
    0x1000df4: 'Sinh_kunddaliya',
    0xffffff: 'VoidSymbol',
    }

* Tue 07 Oct 2014 04:35:49 PM JST
keysymdef
* Tue 07 Oct 2014 04:35:54 PM JST

* Tue 07 Oct 2014 04:35:55 PM JST
keysymdef
* Tue 07 Oct 2014 04:39:55 PM JST
keysymdef.SymbolNum(num)] = keysymdef.SymbolName(name)
* Tue 07 Oct 2014 04:40:09 PM JST

* Tue 07 Oct 2014 04:40:10 PM JST

* Tue 07 Oct 2014 04:40:10 PM JST
    # _dict = _KEYSYMMAPS.copy()

* Tue 07 Oct 2014 04:40:18 PM JST

* Tue 07 Oct 2014 04:40:18 PM JST

* Tue 07 Oct 2014 04:40:18 PM JST
    _dict = _KEYSYMMAPS.swap()

* Tue 07 Oct 2014 04:40:19 PM JST

* Tue 07 Oct 2014 04:40:19 PM JST

* Tue 07 Oct 2014 04:40:19 PM JST
del _KEYSYMS, _KEYSYMMAPS

* Tue 07 Oct 2014 04:42:43 PM JST
_KEYSYMS, 
* Tue 07 Oct 2014 04:43:05 PM JST
from sendkey2.keysymdef import maps
n=maps.SymNumMap()

* Tue 07 Oct 2014 04:43:38 PM JST
from sendkey2.keysymdef import maps
n=maps.SymNumMap()

* Tue 07 Oct 2014 04:49:39 PM JST
num
* Tue 07 Oct 2014 04:49:39 PM JST
name, num
* Tue 07 Oct 2014 04:49:50 PM JST
from sendkey2.keysymdef import maps
* Tue 07 Oct 2014 05:01:28 PM JST
keysymdef
* Tue 07 Oct 2014 05:01:37 PM JST
keysymdef
* Tue 07 Oct 2014 05:01:41 PM JST
keysymdef
* Tue 07 Oct 2014 05:05:15 PM JST


* Tue 07 Oct 2014 05:05:17 PM JST
valueNon
* Tue 07 Oct 2014 05:05:17 PM JST
_keysym = valueNon
* Tue 07 Oct 2014 05:06:11 PM JST
from peak.rules import dispatch
* Tue 07 Oct 2014 05:08:58 PM JST
int, 
* Tue 07 Oct 2014 05:09:07 PM JST
symobj.SymbolNum(int(value))
* Tue 07 Oct 2014 05:09:17 PM JST
when
* Tue 07 Oct 2014 05:09:18 PM JST
set.when
* Tue 07 Oct 2014 05:09:30 PM JST
    @set.when('isinstance(value, symobj.SymbolNum)')
    def _set_symnum(self, value):
        r"""SUMMARY
        
        _set_num(value)
        
        @Arguments:
        - `value`:
        
        @Return:

        @Error:
        """
        
        self._keysym = value

* Tue 07 Oct 2014 05:09:46 PM JST
value
* Tue 07 Oct 2014 05:11:48 PM JST
symobj.SymbolName
* Tue 07 Oct 2014 05:15:50 PM JST

* Tue 07 Oct 2014 05:15:50 PM JST

* Tue 07 Oct 2014 05:15:50 PM JST
        super(KeySym, self).__add__()

* Tue 07 Oct 2014 05:16:00 PM JST

* Tue 07 Oct 2014 05:16:00 PM JST

* Tue 07 Oct 2014 05:16:00 PM JST
        super(KeySym, self).__and__()

* Tue 07 Oct 2014 05:16:27 PM JST

* Tue 07 Oct 2014 05:16:27 PM JST

* Tue 07 Oct 2014 05:16:27 PM JST
        super(KeySym, self).__div__()

* Tue 07 Oct 2014 05:16:34 PM JST

* Tue 07 Oct 2014 05:16:35 PM JST

* Tue 07 Oct 2014 05:16:35 PM JST
        super(KeySym, self).__divmod__()

* Tue 07 Oct 2014 05:17:55 PM JST
    def __add__(self, other):
        """function __add__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __and__(self, other):
        """function __and__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __cmp__(self, other):
        """function __cmp__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __div__(self, other):
        """function __div__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __divmod__(self, other):
        """function __divmod__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __hash__(self):
        """function __hash__
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __int__(self):
        """function __int__
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __long__(self):
        """function __long__
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __mod__(self, other):
        """function __mod__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __mul__(self, other):
        """function __mul__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __nonzero__(self):
        """function __nonzero__
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __or__(self, other):
        """function __or__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __radd__(self, other):
        """function __radd__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __rand__(self, other):
        """function __rand__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __rdiv__(self, other):
        """function __rdiv__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __rdivmod__(self, other):
        """function __rdivmod__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __repr__(self):
        """function __repr__
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __rmod__(self, other):
        """function __rmod__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __rmul__(self, other):
        """function __rmul__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __sub__(self, other):
        """function __sub__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __str__(self):
        """function __str__
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __eq__(self, other):
        """function __eq__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __ne__(self, other):
        """function __ne__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __hex__(self):
        """function __hex__
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def setsymmap(self):
        """function setsymmap
        
        returns 
        """
        return None # should raise NotImplementedError()

* Tue 07 Oct 2014 05:18:17 PM JST
return None # should raise NotImplementedError()
* Tue 07 Oct 2014 05:18:22 PM JST
_
* Tue 07 Oct 2014 05:18:22 PM JST
self._
* Tue 07 Oct 2014 05:18:25 PM JST
self
* Tue 07 Oct 2014 05:18:52 PM JST
    @classmethod
    def setsymmap(cls, maps):
        """function setsymmap
        
        returns 
        """
        KeySym._keysymap = maps

* Tue 07 Oct 2014 05:19:20 PM JST
maps
* Tue 07 Oct 2014 05:19:23 PM JST
maps
* Wed 08 Oct 2014 01:02:01 PM JST
pass
* Wed 08 Oct 2014 01:02:02 PM JST
self.
* Wed 08 Oct 2014 01:02:09 PM JST
pass
* Wed 08 Oct 2014 01:02:49 PM JST
pass
* Wed 08 Oct 2014 01:03:15 PM JST
None # should raise NotImplementedError()
* Wed 08 Oct 2014 01:03:34 PM JST
None # should raise NotImplementedError()
* Wed 08 Oct 2014 01:07:26 PM JST
None # should raise NotImplementedError()
* Wed 08 Oct 2014 01:08:12 PM JST
num={}
* Wed 08 Oct 2014 01:08:48 PM JST
self.getnum()
* Wed 08 Oct 2014 01:12:39 PM JST
str(self.getname())
* Wed 08 Oct 2014 02:04:30 PM JST
0xffffff
* Wed 08 Oct 2014 02:28:08 PM JST

* Wed 08 Oct 2014 03:10:08 PM JST
symobj.SymbolNum(num)
* Wed 08 Oct 2014 03:10:16 PM JST
num
* Thu 09 Oct 2014 05:01:55 PM JST
IsCursorKey
* Tue 14 Oct 2014 02:48:21 AM JST
self
* Tue 14 Oct 2014 02:48:50 AM JST
_defualt
* Tue 14 Oct 2014 02:49:34 AM JST
_defualt
* Tue 14 Oct 2014 02:49:42 AM JST
_defualt
* Tue 14 Oct 2014 02:50:03 AM JST
class DefaultDisplay(object):
    r"""DefaultDisplay

    DefaultDisplay is a object.
    Responsibility:
    """
    _default = os.getenv('DISPLAY') or ':0.0'

    @classmethod
    def set(cls, default):
        r"""SUMMARY

        set(default)

        @Arguments:
        - `default`:

        @Return:

        @Error:
        """
        cls._default = default

    def get(self, ):
        r"""SUMMARY

        get()

        @Return:

        @Error:
        """
        return self._default

    def __str__(self):
        return self._default

* Tue 14 Oct 2014 05:48:06 AM JST
SendEvent
* Tue 14 Oct 2014 05:48:41 AM JST
KeyPress?
* Tue 14 Oct 2014 06:04:07 AM JST
ClientMessage?
* Tue 14 Oct 2014 06:05:17 AM JST
Button1Motion?
* Tue 14 Oct 2014 03:40:25 PM JST
/usr/share/pyshared/Xlib/
* Tue 14 Oct 2014 03:52:05 PM JST
0x4a9
* Tue 14 Oct 2014 03:54:38 PM JST
0x4a7
* Tue 14 Oct 2014 03:56:10 PM JST
65469
* Tue 14 Oct 2014 03:57:22 PM JST
0x4af
* Tue 14 Oct 2014 03:57:57 PM JST
keysym_to_keycode
* Tue 14 Oct 2014 04:02:25 PM JST
0x01000000
* Tue 14 Oct 2014 04:13:13 PM JST
KeyboardMapping
* Tue 14 Oct 2014 04:14:07 PM JST
KeymapDisplay
* Wed 15 Oct 2014 09:38:24 AM JST
tes
* Wed 15 Oct 2014 10:48:09 AM JST
Name
* Wed 15 Oct 2014 10:49:01 AM JST
from Int import Int

class Keysym(Int):
    """Class Keysym
    """
    # Attributes:
    
    # Operations
    def to_name(self):
        """function to_name
        
        returns Namesym
        """
        return None # should raise NotImplementedError()
    
    def to_char(self):
        """function to_char
        
        returns Charsym
        """
        return None # should raise NotImplementedError()
    
    def to_code(self):
        """function to_code
        
        returns tuple
        """
        return None # should raise NotImplementedError()
    
    def to_key(self):
        """function to_key
        
        returns Key
        """
        return None # should raise NotImplementedError()
    
    def isnosymbol(self):
        """function isnosymbol
        
        returns bool
        """
        return None # should raise NotImplementedError()
    
    def iscursorkey(self):
        """function iscursorkey
        
        returns bool
        """
        return None # should raise NotImplementedError()
    
    def isfunctionkey(self):
        """function isfunctionkey
        
        returns bool
        """
        return None # should raise NotImplementedError()
    
    def iskeypadkey(self):
        """function iskeypadkey
        
        returns bool
        """
        return None # should raise NotImplementedError()
    
    def isprivatekeypadkey(self):
        """function isprivatekeypadkey
        
        returns bool
        """
        return None # should raise NotImplementedError()
    
    def ismiscfunctionkey(self):
        """function ismiscfunctionkey
        
        returns bool
        """
        return None # should raise NotImplementedError()
    
    def ismodifierkey(self):
        """function ismodifierkey
        
        returns bool
        """
        return None # should raise NotImplementedError()
    
    def ispfkey(self):
        """function ispfkey
        
        returns bool
        """
        return None # should raise NotImplementedError()
    
    def __repr__(self):
        """function __repr__
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __str__(self):
        """function __str__
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Wed 15 Oct 2014 10:49:11 AM JST

* Wed 15 Oct 2014 10:49:11 AM JST

* Wed 15 Oct 2014 10:49:11 AM JST
from Int import Int

* Wed 15 Oct 2014 10:50:18 AM JST
None # should raise NotImplementedError()
* Wed 15 Oct 2014 10:53:00 AM JST
KEYSYMS = {
    0x4bb: 'kana_SA',
    0x20: 'space',
    0x22: 'quotedbl',
    0x23: 'numbersign',
    0x24: 'dollar',
    0x26: 'ampersand',
    0x27: 'apostrophe',
    0x28: 'parenleft',
    0x29: 'parenright',
    0x2a: 'asterisk',
    0x2b: 'plus',
    0x2c: 'comma',
    0x2d: 'minus',
    0x2f: 'slash',
    0x30: '0',
    0x31: '1',
    0x32: '2',
    0x34: '4',
    0x35: '5',
    0x36: '6',
    0x37: '7',
    0x38: '8',
    0x3a: 'colon',
    0x3b: 'semicolon',
    0x3c: 'less',
    0x3d: 'equal',
    0x3e: 'greater',
    0x3f: 'question',
    0x41: 'A',
    0x43: 'C',
    0x44: 'D',
    0x45: 'E',
    0x46: 'F',
    0x47: 'G',
    0x48: 'H',
    0x49: 'I',
    0x4a: 'J',
    0x4b: 'K',
    0x4c: 'L',
    0x4d: 'M',
    0x4f: 'O',
    0x50: 'P',
    0xab8: 'careof',
    0x52: 'R',
    0x53: 'S',
    0x54: 'T',
    0x55: 'U',
    0x57: 'W',
    0x58: 'X',
    0x59: 'Y',
    0x5a: 'Z',
    0x5b: 'bracketleft',
    0x5c: 'backslash',
    0x5d: 'bracketright',
    0x5e: 'asciicircum',
    0x5f: 'underscore',
    0x61: 'a',
    0x63: 'c',
    0x64: 'd',
    0x65: 'e',
    0x67: 'g',
    0x68: 'h',
    0x69: 'i',
    0x6a: 'j',
    0x6b: 'k',
    0x6e: 'n',
    0x6f: 'o',
    0x73: 's',
    0x1002075: 'fivesuperior',
    0x76: 'v',
    0x1002077: 'sevensuperior',
    0x79: 'y',
    0x7a: 'z',
    0x7c: 'bar',
    0x1002080: 'zerosubscript',
    0x1002081: 'onesubscript',
    0x1002082: 'twosubscript',
    0x1002083: 'threesubscript',
    0x1002084: 'foursubscript',
    0x1002085: 'fivesubscript',
    0x1001eeb: 'uhorngrave',
    0x1002089: 'ninesubscript',
    0x100056f: 'Armenian_ken',
    0xa0: 'nobreakspace',
    0x10020a1: 'ColonSign',
    0x10020a3: 'FFrancSign',
    0xa4: 'currency',
    0x10020a6: 'NairaSign',
    0xa7: 'section',
    0xa8: 'diaeresis',
    0xa9: 'copyright',
    0xaa: 'ordfeminine',
    0x10020ab: 'DongSign',
    0xac: 'notsign',
    0xad: 'hyphen',
    0xaf: 'macron',
    0xb0: 'degree',
    0xb1: 'plusminus',
    0xb2: 'twosuperior',
    0xb3: 'threesuperior',
    0xb5: 'mu',
    0xb6: 'paragraph',
    0xb8: 'cedilla',
    0xb9: 'onesuperior',
    0xba: 'masculine',
    0xbb: 'guillemotright',
    0xbc: 'onequarter',
    0xaca: 'signaturemark',
    0xbe: 'threequarters',
    0xbf: 'questiondown',
    0xc0: 'Agrave',
    0xc1: 'Aacute',
    0xc2: 'Acircumflex',
    0xc3: 'Atilde',
    0xc4: 'Adiaeresis',
    0xc5: 'Aring',
    0xc8: 'Egrave',
    0xcb: 'Ediaeresis',
    0xcc: 'Igrave',
    0xcd: 'Iacute',
    0xce: 'Icircumflex',
    0xd0: 'Eth',
    0xd3: 'Oacute',
    0xd4: 'Ocircumflex',
    0xd5: 'Otilde',
    0xd7: 'multiply',
    0xef2: 'Hangul_PanSios',
    0xda: 'Uacute',
    0xdb: 'Ucircumflex',
    0xdc: 'Udiaeresis',
    0xdd: 'Yacute',
    0xde: 'Thorn',
    0xdf: 'ssharp',
    0xe0: 'agrave',
    0xe1: 'aacute',
    0xe2: 'acircumflex',
    0xe3: 'atilde',
    0xe4: 'adiaeresis',
    0xe5: 'aring',
    0xe6: 'ae',
    0xe7: 'ccedilla',
    0xe8: 'egrave',
    0xeb: 'ediaeresis',
    0xef: 'idiaeresis',
    0xf0: 'eth',
    0xf1: 'ntilde',
    0xf3: 'oacute',
    0xf4: 'ocircumflex',
    0xf5: 'otilde',
    0xf7: 'division',
    0xf8: 'ooblique',
    0xfa: 'uacute',
    0xfc: 'udiaeresis',
    0xfd: 'yacute',
    0xfe: 'thorn',
    0xff: 'ydiaeresis',
    0x2e: 'period',
    0xad9: 'latincross',
    0xadc: 'filledlefttribullet',
    0x100012c: 'Ibreve',
    0xadd: 'filledrighttribullet',
    0x33: '3',
    0xab2: 'onefifth',
    0x7ae: 'Greek_accentdieresis',
    0xae1: 'enopensquarebullet',
    0xab3: 'twofifths',
    0x8bf: 'integral',
    0x6d4: 'Cyrillic_te',
    0xae7: 'enfilledsqbullet',
    0xab4: 'threefifths',
    0x1000174: 'Wcircumflex',
    0x1000175: 'wcircumflex',
    0x1000177: 'ycircumflex',
    0x39: '9',
    0x42: 'B',
    0x1001ef4: 'Ybelowdot',
    0x10001a1: 'ohorn',
    0x1a2: 'breve',
    0x1a5: 'Lcaron',
    0x1a6: 'Sacute',
    0x1a9: 'Scaron',
    0x1aa: 'Scedilla',
    0x1ab: 'Tcaron',
    0x1ae: 'Zcaron',
    0x1af: 'Zabovedot',
    0x10001b0: 'uhorn',
    0x1b1: 'aogonek',
    0x1b2: 'ogonek',
    0x1b3: 'lstroke',
    0x1b5: 'lcaron',
    0x10001b6: 'zstroke',
    0x1b7: 'caron',
    0x1b9: 'scaron',
    0x1ba: 'scedilla',
    0x1bb: 'tcaron',
    0x1bc: 'zacute',
    0x1bd: 'doubleacute',
    0x1be: 'zcaron',
    0x1bf: 'zabovedot',
    0x1c3: 'Abreve',
    0x1c5: 'Lacute',
    0x1c6: 'Cacute',
    0x1c8: 'Ccaron',
    0xfee4: 'Pointer_UpLeft',
    0x1ca: 'Eogonek',
    0x1cc: 'Ecaron',
    0xab7: 'fivesixths',
    0x1cf: 'Dcaron',
    0x1d0: 'Dstroke',
    0x1d8: 'Rcaron',
    0x1d9: 'Uring',
    0x1db: 'Udoubleacute',
    0x1e0: 'racute',
    0x1e3: 'abreve',
    0x1e8: 'ccaron',
    0x1000564: 'Armenian_da',
    0x1ea: 'eogonek',
    0x1ec: 'ecaron',
    0x1f0: 'dstroke',
    0x1f1: 'nacute',
    0x1f2: 'ncaron',
    0x1f5: 'odoubleacute',
    0x1f8: 'rcaron',
    0x1f9: 'uring',
    0xaff: 'cursor',
    0x1fe: 'tcedilla',
    0x1002202: 'partdifferential',
    0x56: 'V',
    0x1000565: 'Armenian_yech',
    0x100220b: 'containsas',
    0xbca: 'jot',
    0xffff: 'Delete',
    0x100221c: 'fourthroot',
    0x100222c: 'dintegral',
    0x1002235: 'because',
    0x60: 'quoteleft',
    0x1002247: 'notapproxeq',
    0x1002248: 'approxeq',
    0x62: 'b',
    0x1000259: 'schwa',
    0x10001b7: 'EZH',
    0x1000292: 'ezh',
    0x1002262: 'notidentical',
    0x1002263: 'stricteq',
    0x66: 'f',
    0x1000275: 'obarred',
    0x5bf: 'Arabic_question_mark',
    0x5c2: 'Arabic_maddaonalef',
    0x6d: 'm',
    0x100056a: 'Armenian_zhe',
    0x2a1: 'Hstroke',
    0x2a6: 'Hcircumflex',
    0x71: 'q',
    0x2ab: 'Gbreve',
    0x2ac: 'Jcircumflex',
    0x72: 'r',
    0x2b6: 'hcircumflex',
    0x5c9: 'Arabic_tehmarbuta',
    0x2b9: 'idotless',
    0x100056b: 'Armenian_ini',
    0x2c5: 'Cabovedot',
    0x2c6: 'Ccircumflex',
    0x5cc: 'Arabic_jeem',
    0x78: 'x',
    0x2d5: 'Gabovedot',
    0x1002079: 'ninesuperior',
    0x2dd: 'Ubreve',
    0x2de: 'Scircumflex',
    0x7b: 'braceleft',
    0x2e5: 'cabovedot',
    0x2e6: 'ccircumflex',
    0xaf5: 'musicalsharp',
    0x7d: 'braceright',
    0x7e: 'asciitilde',
    0x2f8: 'gcircumflex',
    0x2fd: 'ubreve',
    0x5d7: 'Arabic_tah',
    0x1002086: 'sixsubscript',
    0x1002087: 'sevensubscript',
    0x1002088: 'eightsubscript',
    0x5e2: 'Arabic_qaf',
    0x5e3: 'Arabic_kaf',
    0x1000571: 'Armenian_dza',
    0x5ed: 'Arabic_kasratan',
    0xac6: 'seveneighths',
    0x5ee: 'Arabic_fatha',
    0x3a3: 'Rcedilla',
    0x3a5: 'Itilde',
    0x3a6: 'Lcedilla',
    0x3aa: 'Emacron',
    0x3ac: 'Tslash',
    0x3b3: 'rcedilla',
    0xbd8: 'rightshoe',
    0x3b5: 'itilde',
    0x3b6: 'lcedilla',
    0x3ba: 'emacron',
    0x3bb: 'gcedilla',
    0x3bc: 'tslash',
    0x3bf: 'eng',
    0x10020a0: 'EcuSign',
    0x3c7: 'Iogonek',
    0x3cc: 'Eabovedot',
    0x10020a2: 'CruzeiroSign',
    0x3cf: 'Imacron',
    0x3d1: 'Ncedilla',
    0x3d3: 'Kcedilla',
    0x10020a4: 'LiraSign',
    0x3dd: 'Utilde',
    0xa5: 'yen',
    0x3e0: 'amacron',
    0xa6: 'brokenbar',
    0x3e7: 'iogonek',
    0x10020a8: 'RupeeSign',
    0x3f2: 'omacron',
    0x3f3: 'kcedilla',
    0x10020a9: 'WonSign',
    0x3f9: 'uogonek',
    0x10020aa: 'NewSheqelSign',
    0x3fe: 'umacron',
    0x20ac: 'EuroSign',
    0x74: 't',
    0x1002070: 'zerosuperior',
    0x10028a2: 'braille_dots_268',
    0xbd: 'onehalf',
    0x47e: 'overline',
    0x10028a4: 'braille_dots_368',
    0x1000492: 'Cyrillic_GHE_bar',
    0x1000493: 'Cyrillic_ghe_bar',
    0x1000497: 'Cyrillic_zhe_descender',
    0x100049a: 'Cyrillic_KA_descender',
    0x100049b: 'Cyrillic_ka_descender',
    0x100049c: 'Cyrillic_KA_vertstroke',
    0x100049d: 'Cyrillic_ka_vertstroke',
    0x4a1: 'kana_fullstop',
    0x4a2: 'kana_openingbracket',
    0x10004a3: 'Cyrillic_en_descender',
    0x4a4: 'kana_comma',
    0xc6: 'AE',
    0x4a6: 'kana_WO',
    0x4a7: 'kana_a',
    0x4a8: 'kana_i',
    0x4a9: 'kana_u',
    0x4aa: 'kana_e',
    0xc7: 'Ccedilla',
    0x4ac: 'kana_ya',
    0x4ad: 'kana_yu',
    0x4af: 'kana_tsu',
    0x4b1: 'kana_A',
    0x4b2: 'kana_I',
    0x10004b3: 'Cyrillic_ha_descender',
    0x4b4: 'kana_E',
    0x4b5: 'kana_O',
    0x10004b6: 'Cyrillic_CHE_descender',
    0xc9: 'Eacute',
    0x10004b8: 'Cyrillic_CHE_vertstroke',
    0x10004b9: 'Cyrillic_che_vertstroke',
    0x10004ba: 'Cyrillic_SHHA',
    0x4bc: 'kana_SHI',
    0x4bd: 'kana_SU',
    0x4be: 'kana_SE',
    0x4c0: 'kana_TA',
    0x4c1: 'kana_TI',
    0x4c4: 'kana_TO',
    0x4c5: 'kana_NA',
    0x4c6: 'kana_NI',
    0x4c7: 'kana_NU',
    0x4c8: 'kana_NE',
    0x4c9: 'kana_NO',
    0x4ca: 'kana_HA',
    0x4cc: 'kana_HU',
    0x4cd: 'kana_HE',
    0x4ce: 'kana_HO',
    0x4cf: 'kana_MA',
    0x4d0: 'kana_MI',
    0x4d1: 'kana_MU',
    0x4d3: 'kana_MO',
    0x4d5: 'kana_YU',
    0x4d6: 'kana_YO',
    0x4d8: 'kana_RI',
    0x4d9: 'kana_RU',
    0x4da: 'kana_RE',
    0x4dc: 'kana_WA',
    0x4dd: 'kana_N',
    0x4de: 'voicedsound',
    0x4df: 'semivoicedsound',
    0x10004e2: 'Cyrillic_I_macron',
    0x10004e3: 'Cyrillic_i_macron',
    0xd1: 'Ntilde',
    0x10004e8: 'Cyrillic_O_bar',
    0x10004e9: 'Cyrillic_o_bar',
    0x8b0: 'rightmiddlecurlybrace',
    0xd2: 'Ograve',
    0x10004ee: 'Cyrillic_U_macron',
    0x10004ef: 'Cyrillic_u_macron',
    0x10010d3: 'Georgian_don',
    0xd6: 'Odiaeresis',
    0xd8: 'Oslash',
    0xd9: 'Ugrave',
    0x1000531: 'Armenian_AYB',
    0x1000532: 'Armenian_BEN',
    0x1000533: 'Armenian_GIM',
    0x1000534: 'Armenian_DA',
    0x1000539: 'Armenian_TO',
    0x100053a: 'Armenian_ZHE',
    0x100053b: 'Armenian_INI',
    0x100053c: 'Armenian_LYUN',
    0x100053d: 'Armenian_KHE',
    0x100053e: 'Armenian_TSA',
    0x100053f: 'Armenian_KEN',
    0x1000542: 'Armenian_GHAT',
    0x1000545: 'Armenian_HI',
    0x1000547: 'Armenian_SHA',
    0x1000548: 'Armenian_VO',
    0x1000549: 'Armenian_CHA',
    0x100054a: 'Armenian_PE',
    0x100054c: 'Armenian_RA',
    0x100054e: 'Armenian_VEV',
    0x1001e03: 'babovedot',
    0x1000551: 'Armenian_TSO',
    0x1000552: 'Armenian_VYUN',
    0x1000553: 'Armenian_PYUR',
    0x1000554: 'Armenian_KE',
    0x1000555: 'Armenian_O',
    0x1000556: 'Armenian_FE',
    0x100055a: 'Armenian_apostrophe',
    0x100055b: 'Armenian_accent',
    0x100055c: 'Armenian_amanak',
    0x100055d: 'Armenian_separation_mark',
    0x100055e: 'Armenian_question',
    0x1000561: 'Armenian_ayb',
    0x1000562: 'Armenian_ben',
    0x1000563: 'Armenian_gim',
    0x1000566: 'Armenian_za',
    0x1000567: 'Armenian_e',
    0x1000568: 'Armenian_at',
    0x1000569: 'Armenian_to',
    0x100056c: 'Armenian_lyun',
    0x100056d: 'Armenian_khe',
    0x100056e: 'Armenian_tsa',
    0x1000570: 'Armenian_ho',
    0x1000572: 'Armenian_ghat',
    0x1000573: 'Armenian_tche',
    0x1000574: 'Armenian_men',
    0x1000575: 'Armenian_hi',
    0x1000576: 'Armenian_nu',
    0x1000577: 'Armenian_sha',
    0x1000578: 'Armenian_vo',
    0x1000579: 'Armenian_cha',
    0x100057a: 'Armenian_pe',
    0x100057b: 'Armenian_je',
    0x100057c: 'Armenian_ra',
    0xea: 'ecircumflex',
    0x100057e: 'Armenian_vev',
    0x100057f: 'Armenian_tyun',
    0x1000580: 'Armenian_re',
    0x1000581: 'Armenian_tso',
    0x1000582: 'Armenian_vyun',
    0x1000583: 'Armenian_pyur',
    0x1000584: 'Armenian_ke',
    0x1000585: 'Armenian_o',
    0x1000586: 'Armenian_fe',
    0x100058a: 'Armenian_yentamna',
    0xed: 'iacute',
    0x40: 'at',
    0x5ac: 'Arabic_comma',
    0xf2: 'ograve',
    0x10010f3: 'Georgian_we',
    0x5bb: 'Arabic_semicolon',
    0x5c1: 'Arabic_hamza',
    0x8fd: 'rightarrow',
    0x5c3: 'Arabic_hamzaonalef',
    0x5c4: 'Arabic_hamzaonwaw',
    0x5c5: 'Arabic_hamzaunderalef',
    0x5c6: 'Arabic_hamzaonyeh',
    0x5c7: 'Arabic_alef',
    0x5c8: 'Arabic_beh',
    0x5ca: 'Arabic_teh',
    0x5cd: 'Arabic_hah',
    0x5ce: 'Arabic_khah',
    0x5cf: 'Arabic_dal',
    0x5d0: 'Arabic_thal',
    0x5d2: 'Arabic_zain',
    0x5d3: 'Arabic_seen',
    0x5d4: 'Arabic_sheen',
    0x5d5: 'Arabic_sad',
    0x5d6: 'Arabic_dad',
    0x5d8: 'Arabic_zah',
    0x5d9: 'Arabic_ain',
    0x5da: 'Arabic_ghain',
    0x5e0: 'Arabic_tatweel',
    0x5e1: 'Arabic_feh',
    0xfb: 'ucircumflex',
    0x5e4: 'Arabic_lam',
    0x5e5: 'Arabic_meem',
    0x5e6: 'Arabic_noon',
    0x5e7: 'Arabic_ha',
    0x5e8: 'Arabic_waw',
    0x5e9: 'Arabic_alefmaksura',
    0x5ea: 'Arabic_yeh',
    0x5eb: 'Arabic_fathatan',
    0x5ec: 'Arabic_dammatan',
    0x5ef: 'Arabic_damma',
    0x1000587: 'Armenian_ligature_ew',
    0xfe6b: 'dead_belowbreve',
    0x10028b2: 'braille_dots_2568',
    0x100054d: 'Armenian_SE',
    0x1000589: 'Armenian_full_stop',
    0x1000653: 'Arabic_madda_above',
    0x1000655: 'Arabic_hamza_below',
    0x1000664: 'Arabic_4',
    0x1000660: 'Arabic_0',
    0x1000661: 'Arabic_1',
    0x1000662: 'Arabic_2',
    0x1000663: 'Arabic_3',
    0x1000665: 'Arabic_5',
    0x1000666: 'Arabic_6',
    0x1000667: 'Arabic_7',
    0x1000668: 'Arabic_8',
    0x100066a: 'Arabic_percent',
    0x1000670: 'Arabic_superscript_alef',
    0x1000669: 'Arabic_9',
    0x1000679: 'Arabic_tteh',
    0x100067e: 'Arabic_peh',
    0x1000686: 'Arabic_tcheh',
    0x1000688: 'Arabic_ddal',
    0x1000698: 'Arabic_jeh',
    0x10028b6: 'braille_dots_23568',
    0x6a1: 'Serbian_dje',
    0x6a2: 'Macedonia_gje',
    0x6a3: 'Cyrillic_io',
    0x10006a4: 'Arabic_veh',
    0x6a5: 'Macedonia_dse',
    0x6a6: 'Ukranian_i',
    0x6a7: 'Ukranian_yi',
    0x6a8: 'Cyrillic_je',
    0x6aa: 'Serbian_nje',
    0x6ab: 'Serbian_tshe',
    0x6ac: 'Macedonia_kje',
    0x6ad: 'Ukrainian_ghe_with_upturn',
    0x6ae: 'Byelorussian_shortu',
    0x6af: 'Cyrillic_dzhe',
    0x6b0: 'numerosign',
    0x6b1: 'Serbian_DJE',
    0x6b3: 'Cyrillic_IO',
    0x6b4: 'Ukranian_JE',
    0x6b5: 'Macedonia_DSE',
    0x6b6: 'Ukranian_I',
    0x6b7: 'Ukrainian_YI',
    0x6b8: 'Serbian_JE',
    0x6b9: 'Cyrillic_LJE',
    0x10006ba: 'Arabic_noon_ghunna',
    0x6bb: 'Serbian_TSHE',
    0x6bd: 'Ukrainian_GHE_WITH_UPTURN',
    0x6be: 'Byelorussian_SHORTU',
    0x6bf: 'Serbian_DZE',
    0x6c1: 'Cyrillic_a',
    0x6c4: 'Cyrillic_de',
    0x6c6: 'Cyrillic_ef',
    0x6c8: 'Cyrillic_ha',
    0x6c9: 'Cyrillic_i',
    0x6ca: 'Cyrillic_shorti',
    0x10006cc: 'Farsi_yeh',
    0x6cf: 'Cyrillic_o',
    0x6d0: 'Cyrillic_pe',
    0x6d1: 'Cyrillic_ya',
    0x10006d2: 'Arabic_yeh_baree',
    0x6d3: 'Cyrillic_es',
    0x10006d4: 'Arabic_fullstop',
    0x6d5: 'Cyrillic_u',
    0x6d6: 'Cyrillic_zhe',
    0x6d7: 'Cyrillic_ve',
    0x6d8: 'Cyrillic_softsign',
    0x6d9: 'Cyrillic_yeru',
    0x6da: 'Cyrillic_ze',
    0x6db: 'Cyrillic_sha',
    0x6dc: 'Cyrillic_e',
    0x6dd: 'Cyrillic_shcha',
    0x6df: 'Cyrillic_hardsign',
    0x6e0: 'Cyrillic_YU',
    0x6e1: 'Cyrillic_A',
    0x6e2: 'Cyrillic_BE',
    0x6e4: 'Cyrillic_DE',
    0x6e5: 'Cyrillic_IE',
    0x6e6: 'Cyrillic_EF',
    0x6e7: 'Cyrillic_GHE',
    0x6e8: 'Cyrillic_HA',
    0x6e9: 'Cyrillic_I',
    0x6ea: 'Cyrillic_SHORTI',
    0x6eb: 'Cyrillic_KA',
    0x6ec: 'Cyrillic_EL',
    0x6ed: 'Cyrillic_EM',
    0x6ef: 'Cyrillic_O',
    0x10006f0: 'Farsi_0',
    0x6f1: 'Cyrillic_YA',
    0x10006f2: 'Farsi_2',
    0x6f5: 'Cyrillic_U',
    0x10006f6: 'Farsi_6',
    0x6f7: 'Cyrillic_VE',
    0x6f8: 'Cyrillic_SOFTSIGN',
    0x6f9: 'Cyrillic_YERU',
    0x6fa: 'Cyrillic_ZE',
    0x6fb: 'Cyrillic_SHA',
    0x6fc: 'Cyrillic_E',
    0x6fe: 'Cyrillic_CHE',
    0x6ff: 'Cyrillic_HARDSIGN',
    0x8c2: 'infinity',
    0x100012d: 'ibreve',
    0xab5: 'fourfifths',
    0x8c5: 'nabla',
    0x1000691: 'Arabic_rreh',
    0xfeea: 'Pointer_Button2',
    0x10028bd: 'braille_dots_134568',
    0x7a1: 'Greek_ALPHAaccent',
    0x7a3: 'Greek_ETAaccent',
    0x7a7: 'Greek_OMICRONaccent',
    0x7a9: 'Greek_UPSILONdieresis',
    0x7ab: 'Greek_OMEGAaccent',
    0x7af: 'Greek_horizbar',
    0x7b1: 'Greek_alphaaccent',
    0x7b2: 'Greek_epsilonaccent',
    0x7b3: 'Greek_etaaccent',
    0x7b4: 'Greek_iotaaccent',
    0x7b5: 'Greek_iotadieresis',
    0x7b6: 'Greek_iotaaccentdieresis',
    0x7b7: 'Greek_omicronaccent',
    0x7b9: 'Greek_upsilondieresis',
    0x7ba: 'Greek_upsilonaccentdieresis',
    0x7bb: 'Greek_omegaaccent',
    0x7c1: 'Greek_ALPHA',
    0x7c2: 'Greek_BETA',
    0x7c5: 'Greek_EPSILON',
    0x7c6: 'Greek_ZETA',
    0x7c7: 'Greek_ETA',
    0x7c8: 'Greek_THETA',
    0x7ca: 'Greek_KAPPA',
    0x7cd: 'Greek_NU',
    0x7cf: 'Greek_OMICRON',
    0x7d0: 'Greek_PI',
    0x7d2: 'Greek_SIGMA',
    0x7d4: 'Greek_TAU',
    0x7d7: 'Greek_CHI',
    0x7d8: 'Greek_PSI',
    0x7e1: 'Greek_alpha',
    0x7e2: 'Greek_beta',
    0x7e3: 'Greek_gamma',
    0x7e4: 'Greek_delta',
    0x7e5: 'Greek_epsilon',
    0x7e6: 'Greek_zeta',
    0x7e7: 'Greek_eta',
    0x7e8: 'Greek_theta',
    0x7ea: 'Greek_kappa',
    0x7eb: 'Greek_lamda',
    0x7ec: 'Greek_mu',
    0x7ed: 'Greek_nu',
    0x7ee: 'Greek_xi',
    0x7ef: 'Greek_omicron',
    0x7f0: 'Greek_pi',
    0x7f2: 'Greek_sigma',
    0x7f4: 'Greek_tau',
    0x7f6: 'Greek_phi',
    0x6a9: 'Serbian_lje',
    0x7f8: 'Greek_psi',
    0x1002800: 'braille_blank',
    0x1002801: 'braille_dots_1',
    0x1002802: 'braille_dots_2',
    0x1002803: 'braille_dots_12',
    0x1002804: 'braille_dots_3',
    0x1002805: 'braille_dots_13',
    0x1002806: 'braille_dots_23',
    0x1002807: 'braille_dots_123',
    0x1002808: 'braille_dots_4',
    0x1002809: 'braille_dots_14',
    0x100280a: 'braille_dots_24',
    0x100280d: 'braille_dots_134',
    0x100280e: 'braille_dots_234',
    0x100280f: 'braille_dots_1234',
    0x1002810: 'braille_dots_5',
    0x1002811: 'braille_dots_15',
    0x1002812: 'braille_dots_25',
    0x1002813: 'braille_dots_125',
    0x1002814: 'braille_dots_35',
    0x1002815: 'braille_dots_135',
    0x1002816: 'braille_dots_235',
    0x1002817: 'braille_dots_1235',
    0x1002818: 'braille_dots_45',
    0x1002819: 'braille_dots_145',
    0x100281a: 'braille_dots_245',
    0x100281b: 'braille_dots_1245',
    0x100281c: 'braille_dots_345',
    0x100281d: 'braille_dots_1345',
    0x100281e: 'braille_dots_2345',
    0x100281f: 'braille_dots_12345',
    0x1002820: 'braille_dots_6',
    0x1002821: 'braille_dots_16',
    0x1002822: 'braille_dots_26',
    0xaed: 'diamond',
    0x1002824: 'braille_dots_36',
    0x1002825: 'braille_dots_136',
    0x1002826: 'braille_dots_236',
    0x1002827: 'braille_dots_1236',
    0x100282a: 'braille_dots_246',
    0x100282b: 'braille_dots_1246',
    0x100282c: 'braille_dots_346',
    0x100282d: 'braille_dots_1346',
    0x100282e: 'braille_dots_2346',
    0x100282f: 'braille_dots_12346',
    0x1002832: 'braille_dots_256',
    0x1002834: 'braille_dots_356',
    0x1002835: 'braille_dots_1356',
    0x1002837: 'braille_dots_12356',
    0x1002839: 'braille_dots_1456',
    0x100283a: 'braille_dots_2456',
    0x100283b: 'braille_dots_12456',
    0x100283c: 'braille_dots_3456',
    0x100283f: 'braille_dots_123456',
    0x1002842: 'braille_dots_27',
    0x1002843: 'braille_dots_127',
    0x1002845: 'braille_dots_137',
    0x1002846: 'braille_dots_237',
    0x1002847: 'braille_dots_1237',
    0x1002848: 'braille_dots_47',
    0x1002849: 'braille_dots_147',
    0x100284a: 'braille_dots_247',
    0x100284b: 'braille_dots_1247',
    0x100284c: 'braille_dots_347',
    0x100284d: 'braille_dots_1347',
    0x100284e: 'braille_dots_2347',
    0x100284f: 'braille_dots_12347',
    0x1002850: 'braille_dots_57',
    0x1002851: 'braille_dots_157',
    0x1002852: 'braille_dots_257',
    0x1002853: 'braille_dots_1257',
    0x1002854: 'braille_dots_357',
    0x1002855: 'braille_dots_1357',
    0x1002858: 'braille_dots_457',
    0x1002859: 'braille_dots_1457',
    0x100285a: 'braille_dots_2457',
    0x100285b: 'braille_dots_12457',
    0x100285c: 'braille_dots_3457',
    0x100285d: 'braille_dots_13457',
    0x100285e: 'braille_dots_23457',
    0x100285f: 'braille_dots_123457',
    0x1002860: 'braille_dots_67',
    0x1002861: 'braille_dots_167',
    0x1002862: 'braille_dots_267',
    0x1002863: 'braille_dots_1267',
    0x1002864: 'braille_dots_367',
    0x1002865: 'braille_dots_1367',
    0x1002866: 'braille_dots_2367',
    0x1002867: 'braille_dots_12367',
    0x1002868: 'braille_dots_467',
    0x1002869: 'braille_dots_1467',
    0x100286a: 'braille_dots_2467',
    0x100286b: 'braille_dots_12467',
    0x100286c: 'braille_dots_3467',
    0x100286d: 'braille_dots_13467',
    0x100286e: 'braille_dots_23467',
    0x100286f: 'braille_dots_123467',
    0x1002870: 'braille_dots_567',
    0x1002871: 'braille_dots_1567',
    0x1002872: 'braille_dots_2567',
    0x1002873: 'braille_dots_12567',
    0x1002874: 'braille_dots_3567',
    0x10006be: 'Arabic_heh_doachashmee',
    0x1002877: 'braille_dots_123567',
    0x1002878: 'braille_dots_4567',
    0x1002879: 'braille_dots_14567',
    0x100287a: 'braille_dots_24567',
    0x100287b: 'braille_dots_124567',
    0x100287c: 'braille_dots_34567',
    0x100287d: 'braille_dots_134567',
    0x100287e: 'braille_dots_234567',
    0x100287f: 'braille_dots_1234567',
    0x1002880: 'braille_dots_8',
    0x1002881: 'braille_dots_18',
    0x1002884: 'braille_dots_38',
    0x1002885: 'braille_dots_138',
    0x1002886: 'braille_dots_238',
    0x1002888: 'braille_dots_48',
    0x100288a: 'braille_dots_248',
    0x100288b: 'braille_dots_1248',
    0x100288c: 'braille_dots_348',
    0x100288d: 'braille_dots_1348',
    0x100288e: 'braille_dots_2348',
    0x100288f: 'braille_dots_12348',
    0x1002890: 'braille_dots_58',
    0x1002891: 'braille_dots_158',
    0x1002892: 'braille_dots_258',
    0x1002894: 'braille_dots_358',
    0x1002895: 'braille_dots_1358',
    0x1002896: 'braille_dots_2358',
    0x1002898: 'braille_dots_458',
    0x1002899: 'braille_dots_1458',
    0x100289a: 'braille_dots_2458',
    0x100289b: 'braille_dots_12458',
    0x100289c: 'braille_dots_3458',
    0x100289e: 'braille_dots_23458',
    0x100289f: 'braille_dots_123458',
    0x8a1: 'leftradical',
    0x8a2: 'topleftradical',
    0x8a3: 'horizconnector',
    0x8a4: 'topintegral',
    0x10028a5: 'braille_dots_1368',
    0x8a6: 'vertconnector',
    0x10028a7: 'braille_dots_12368',
    0x8a8: 'botleftsqbracket',
    0x8a9: 'toprightsqbracket',
    0x10028aa: 'braille_dots_2468',
    0x10028ab: 'braille_dots_12468',
    0x10028ac: 'braille_dots_3468',
    0x10028ad: 'braille_dots_13468',
    0x10028ae: 'braille_dots_23468',
    0x8af: 'leftmiddlecurlybrace',
    0x10028b1: 'braille_dots_1568',
    0x8b3: 'topvertsummationconnector',
    0x10028b5: 'braille_dots_13568',
    0x8b6: 'botrightsummation',
    0x10028b8: 'braille_dots_4568',
    0x10028b9: 'braille_dots_14568',
    0x10028ba: 'braille_dots_24568',
    0x10028bb: 'braille_dots_124568',
    0x10028bc: 'braille_dots_34568',
    0x8be: 'greaterthanequal',
    0x10028bf: 'braille_dots_1234568',
    0x8c0: 'therefore',
    0x10028c1: 'braille_dots_178',
    0x10028c2: 'braille_dots_278',
    0x6cb: 'Cyrillic_ka',
    0x10028c4: 'braille_dots_378',
    0x10028c5: 'braille_dots_1378',
    0x10028c6: 'braille_dots_2378',
    0x10028c7: 'braille_dots_12378',
    0x8c8: 'approximate',
    0x8c9: 'similarequal',
    0x10028ca: 'braille_dots_2478',
    0x10028cb: 'braille_dots_12478',
    0x10028cc: 'braille_dots_3478',
    0x10028cd: 'braille_dots_13478',
    0x10028ce: 'braille_dots_23478',
    0x10028d0: 'braille_dots_578',
    0x10028d1: 'braille_dots_1578',
    0x10028d2: 'braille_dots_2578',
    0x10028d3: 'braille_dots_12578',
    0x8d6: 'radical',
    0x10028d7: 'braille_dots_123578',
    0x10028d8: 'braille_dots_4578',
    0x10028d9: 'braille_dots_14578',
    0x8da: 'includedin',
    0x10028dc: 'braille_dots_34578',
    0x8dd: 'union',
    0x10028de: 'braille_dots_234578',
    0x8df: 'logicalor',
    0x10028e0: 'braille_dots_678',
    0x10028e1: 'braille_dots_1678',
    0x10028e2: 'braille_dots_2678',
    0x10028e3: 'braille_dots_12678',
    0x10028e4: 'braille_dots_3678',
    0x10028e5: 'braille_dots_13678',
    0x10028e6: 'braille_dots_23678',
    0x10028e7: 'braille_dots_123678',
    0x10028e8: 'braille_dots_4678',
    0x10028ea: 'braille_dots_24678',
    0x10028eb: 'braille_dots_124678',
    0x10028ec: 'braille_dots_34678',
    0x10028ed: 'braille_dots_134678',
    0x8ef: 'partialderivative',
    0x10028f0: 'braille_dots_5678',
    0x10028f1: 'braille_dots_15678',
    0x10028f4: 'braille_dots_35678',
    0x10028f5: 'braille_dots_135678',
    0x10028f6: 'braille_dots_235678',
    0x10028f7: 'braille_dots_1235678',
    0x10028f8: 'braille_dots_45678',
    0x10028f9: 'braille_dots_145678',
    0x10028fa: 'braille_dots_245678',
    0x8fb: 'leftarrow',
    0x8fc: 'uparrow',
    0x10028fe: 'braille_dots_2345678',
    0x6b2: 'Macedonia_GJE',
    0x4e: 'N',
    0x1002074: 'foursuperior',
    0x6de: 'Cyrillic_che',
    0x6e3: 'Cyrillic_TSE',
    0x100018f: 'SCHWA',
    0x10028b4: 'braille_dots_3568',
    0x51: 'Q',
    0xeee: 'Hangul_J_Hieuh',
    0x6ee: 'Cyrillic_EN',
    0x6f0: 'Cyrillic_PE',
    0x10006f3: 'Farsi_3',
    0x6f4: 'Cyrillic_TE',
    0x100019f: 'Obarred',
    0x10006f5: 'Farsi_5',
    0x6f6: 'Cyrillic_ZHE',
    0x1a1: 'Aogonek',
    0x10006f8: 'Farsi_8',
    0x1a3: 'Lstroke',
    0x10006f9: 'Farsi_9',
    0x9e0: 'soliddiamond',
    0x9e1: 'checkerboard',
    0x9e2: 'ht',
    0x9e3: 'ff',
    0x9e4: 'cr',
    0x9e8: 'nl',
    0x9e9: 'vt',
    0x9ea: 'lowrightcorner',
    0x9ec: 'upleftcorner',
    0x9ed: 'lowleftcorner',
    0x9ee: 'crossinglines',
    0x9ef: 'horizlinescan1',
    0x9f1: 'horizlinescan5',
    0x9f2: 'horizlinescan7',
    0x9f3: 'horizlinescan9',
    0x9f4: 'leftt',
    0x9f5: 'rightt',
    0x9f6: 'bott',
    0x9f7: 'topt',
    0x9f8: 'vertbar',
    0x6ba: 'Serbian_NJE',
    0x7cb: 'Greek_LAMBDA',
    0x8dc: 'intersection',
    0x10001af: 'Uhorn',
    0xab6: 'onesixth',
    0x7cc: 'Greek_MU',
    0x10001b5: 'Zstroke',
    0x7ce: 'Greek_XI',
    0x9f0: 'horizlinescan3',
    0x1c0: 'Racute',
    0xaa1: 'emspace',
    0xaa2: 'enspace',
    0xaa4: 'em4space',
    0xaa6: 'punctspace',
    0xaa7: 'thinspace',
    0xaa8: 'hairspace',
    0xaa9: 'emdash',
    0xaac: 'signifblank',
    0x10028b7: 'braille_dots_123568',
    0xaae: 'ellipsis',
    0xaaf: 'doubbaselinedot',
    0xab0: 'onethird',
    0xab1: 'twothirds',
    0xabb: 'figdash',
    0xabc: 'leftanglebracket',
    0xabd: 'decimalpoint',
    0xabe: 'rightanglebracket',
    0xabf: 'marker',
    0x7d1: 'Greek_RHO',
    0xac3: 'oneeighth',
    0xac4: 'threeeighths',
    0xac5: 'fiveeighths',
    0xac9: 'trademark',
    0xacb: 'trademarkincircle',
    0xacc: 'leftopentriangle',
    0xacd: 'rightopentriangle',
    0xacf: 'emopenrectangle',
    0xad0: 'leftsinglequotemark',
    0xad1: 'rightsinglequotemark',
    0xad4: 'prescription',
    0xad5: 'permille',
    0xad6: 'minutes',
    0xad7: 'seconds',
    0xadb: 'filledrectbullet',
    0xade: 'emfilledcircle',
    0xae0: 'enopencircbullet',
    0xae2: 'openrectbullet',
    0xae4: 'opentribulletdown',
    0xae5: 'openstar',
    0xae6: 'enfilledcircbullet',
    0xae8: 'filledtribulletup',
    0xae9: 'filledtribulletdown',
    0xaea: 'leftpointer',
    0xaeb: 'rightpointer',
    0xaec: 'club',
    0x10001d2: 'ocaron',
    0xaee: 'heart',
    0xaf0: 'maltesecross',
    0xaf1: 'dagger',
    0xaf2: 'doubledagger',
    0xaf3: 'checkmark',
    0xaf4: 'ballotcross',
    0xaf6: 'musicalflat',
    0xaf7: 'malesymbol',
    0x6c2: 'Cyrillic_be',
    0xaf9: 'telephone',
    0xafa: 'telephonerecorder',
    0xafb: 'phonographcopyright',
    0xafc: 'caret',
    0xafd: 'singlelowquotemark',
    0xafe: 'doublelowquotemark',
    0x1d5: 'Odoubleacute',
    0x6c3: 'Cyrillic_tse',
    0x1de: 'Tcedilla',
    0x6c5: 'Cyrillic_ie',
    0x1e6: 'cacute',
    0x10001e7: 'gcaron',
    0xba3: 'leftcaret',
    0xba6: 'rightcaret',
    0xba8: 'downcaret',
    0xba9: 'upcaret',
    0x10006af: 'Arabic_gaf',
    0xbc0: 'overbar',
    0xbc2: 'downtack',
    0xbc3: 'upshoe',
    0xbc4: 'downstile',
    0xbc6: 'underbar',
    0xbcc: 'quad',
    0xbce: 'uptack',
    0xbcf: 'circle',
    0xbd3: 'upstile',
    0xbd6: 'downshoe',
    0xadf: 'emfilledrect',
    0xbda: 'leftshoe',
    0xbdc: 'lefttack',
    0x1fb: 'udoubleacute',
    0x1000176: 'Ycircumflex',
    0x1ff: 'abovedot',
    0xbfc: 'righttack',
    0x1002205: 'emptyset',
    0x6cc: 'Cyrillic_el',
    0x1002208: 'elementof',
    0x1002209: 'notelementof',
    0x6cd: 'Cyrillic_em',
    0xad3: 'rightdoublequotemark',
    0x6ce: 'Cyrillic_en',
    0x100221a: 'squareroot',
    0x100221b: 'cuberoot',
    0x10004af: 'Cyrillic_u_straight',
    0x6c: 'l',
    0xfe07: 'ISO_Group_Lock',
    0x6d2: 'Cyrillic_er',
    0xce0: 'hebrew_aleph',
    0xce1: 'hebrew_bet',
    0xce2: 'hebrew_gimel',
    0xce3: 'hebrew_daleth',
    0xce4: 'hebrew_he',
    0xce5: 'hebrew_waw',
    0xce6: 'hebrew_zayin',
    0xce7: 'hebrew_chet',
    0xce8: 'hebrew_tet',
    0xce9: 'hebrew_yod',
    0xcea: 'hebrew_finalkaph',
    0xceb: 'hebrew_kaph',
    0xcec: 'hebrew_lamed',
    0xced: 'hebrew_finalmem',
    0xcee: 'hebrew_mem',
    0xcef: 'hebrew_finalnun',
    0xcf1: 'hebrew_samech',
    0xcf3: 'hebrew_finalpe',
    0xcf4: 'hebrew_pe',
    0xcf5: 'hebrew_finalzadi',
    0xcf6: 'hebrew_zadi',
    0xcf7: 'hebrew_kuf',
    0xcf8: 'hebrew_resh',
    0xcf9: 'hebrew_shin',
    0xcfa: 'hebrew_taf',
    0x3ec: 'eabovedot',
    0x100222d: 'tintegral',
    0xae3: 'opentribulletup',
    0x25: 'percent',
    0xfe0a: 'ISO_Prev_Group',
    0xcdf: 'hebrew_doublelowline',
    0x10028ef: 'braille_dots_1234678',
    0xda1: 'Thai_kokai',
    0xda2: 'Thai_khokhai',
    0xda3: 'Thai_khokhuat',
    0xda4: 'Thai_khokhwai',
    0xda5: 'Thai_khokhon',
    0xda6: 'Thai_khorakhang',
    0xda7: 'Thai_ngongu',
    0xda9: 'Thai_choching',
    0xdaa: 'Thai_chochang',
    0xdab: 'Thai_soso',
    0xdac: 'Thai_chochoe',
    0xdad: 'Thai_yoying',
    0xdae: 'Thai_dochada',
    0xdaf: 'Thai_topatak',
    0xdb0: 'Thai_thothan',
    0xdb1: 'Thai_thonangmontho',
    0xdb2: 'Thai_thophuthao',
    0xdb4: 'Thai_dodek',
    0xdb5: 'Thai_totao',
    0xdb6: 'Thai_thothung',
    0xdb7: 'Thai_thothahan',
    0xdb8: 'Thai_thothong',
    0xdb9: 'Thai_nonu',
    0xdba: 'Thai_bobaimai',
    0xdbc: 'Thai_phophung',
    0xdbd: 'Thai_fofa',
    0xdbe: 'Thai_phophan',
    0x75: 'u',
    0xdc2: 'Thai_yoyak',
    0xdc3: 'Thai_rorua',
    0xdc4: 'Thai_ru',
    0xdc5: 'Thai_loling',
    0xdc6: 'Thai_lu',
    0xdc9: 'Thai_sorusi',
    0xdca: 'Thai_sosua',
    0xdcc: 'Thai_lochula',
    0xdcd: 'Thai_oang',
    0xdce: 'Thai_honokhuk',
    0xdcf: 'Thai_paiyannoi',
    0xdd0: 'Thai_saraa',
    0xdd1: 'Thai_maihanakat',
    0xdd2: 'Thai_saraaa',
    0xdd3: 'Thai_saraam',
    0xdd4: 'Thai_sarai',
    0xdd5: 'Thai_saraii',
    0xdd6: 'Thai_saraue',
    0xdd8: 'Thai_sarau',
    0xdd9: 'Thai_sarauu',
    0xdda: 'Thai_phinthu',
    0xdde: 'Thai_maihanakat_maitho',
    0x7a5: 'Greek_IOTAdiaeresis',
    0xde1: 'Thai_saraae',
    0xde2: 'Thai_sarao',
    0xde3: 'Thai_saraaimaimuan',
    0xde4: 'Thai_saraaimaimalai',
    0xde5: 'Thai_lakkhangyao',
    0xde6: 'Thai_maiyamok',
    0xde7: 'Thai_maitaikhu',
    0xde8: 'Thai_maiek',
    0xde9: 'Thai_maitho',
    0xdea: 'Thai_maitri',
    0xdeb: 'Thai_maichattawa',
    0xdec: 'Thai_thanthakhat',
    0xded: 'Thai_nikhahit',
    0xdf0: 'Thai_leksun',
    0xdf1: 'Thai_leknung',
    0xdf2: 'Thai_leksong',
    0xdf3: 'Thai_leksam',
    0xdf4: 'Thai_leksi',
    0xdf5: 'Thai_lekha',
    0xdf6: 'Thai_lekhok',
    0xdf7: 'Thai_lekchet',
    0xdf8: 'Thai_lekpaet',
    0x5cb: 'Arabic_theh',
    0x10004bb: 'Cyrillic_shha',
    0xfd0b: '3270_PA2',
    0x7b8: 'Greek_upsilonaccent',
    0xfd11: '3270_KeyClick',
    0xfd18: '3270_Record',
    0x7c3: 'Greek_GAMMA',
    0xfd19: '3270_ChangeScreen',
    0x7c4: 'Greek_DELTA',
    0xea2: 'Hangul_SsangKiyeog',
    0xea3: 'Hangul_KiyeogSios',
    0xea5: 'Hangul_NieunJieuj',
    0xea6: 'Hangul_NieunHieuh',
    0xea7: 'Hangul_Dikeud',
    0xea8: 'Hangul_SsangDikeud',
    0xea9: 'Hangul_Rieul',
    0xeaa: 'Hangul_RieulKiyeog',
    0xeab: 'Hangul_RieulMieum',
    0xeac: 'Hangul_RieulPieub',
    0xead: 'Hangul_RieulSios',
    0xeae: 'Hangul_RieulTieut',
    0xeaf: 'Hangul_RieulPhieuf',
    0xeb0: 'Hangul_RieulHieuh',
    0xeb1: 'Hangul_Mieum',
    0x5d1: 'Arabic_ra',
    0xeb3: 'Hangul_SsangPieub',
    0xeb4: 'Hangul_PieubSios',
    0xeb5: 'Hangul_Sios',
    0xeb6: 'Hangul_SsangSios',
    0x7c9: 'Greek_IOTA',
    0xeb8: 'Hangul_Jieuj',
    0xeb9: 'Hangul_SsangJieuj',
    0xeba: 'Hangul_Cieuc',
    0xebb: 'Hangul_Khieuq',
    0xebc: 'Hangul_Tieut',
    0xebd: 'Hangul_Phieuf',
    0xebe: 'Hangul_Hieuh',
    0xebf: 'Hangul_A',
    0xec0: 'Hangul_AE',
    0xec1: 'Hangul_YA',
    0xec2: 'Hangul_YAE',
    0xec3: 'Hangul_EO',
    0xec4: 'Hangul_E',
    0xec5: 'Hangul_YEO',
    0xec6: 'Hangul_YE',
    0xec7: 'Hangul_O',
    0xec9: 'Hangul_WAE',
    0xeca: 'Hangul_OE',
    0xecb: 'Hangul_YO',
    0xecc: 'Hangul_U',
    0xecd: 'Hangul_WEO',
    0xece: 'Hangul_WE',
    0xecf: 'Hangul_WI',
    0xed0: 'Hangul_YU',
    0xed1: 'Hangul_EU',
    0xed2: 'Hangul_YI',
    0xed3: 'Hangul_I',
    0xed4: 'Hangul_J_Kiyeog',
    0xed5: 'Hangul_J_SsangKiyeog',
    0xed6: 'Hangul_J_KiyeogSios',
    0xed7: 'Hangul_J_Nieun',
    0xed8: 'Hangul_J_NieunJieuj',
    0xed9: 'Hangul_J_NieunHieuh',
    0xeda: 'Hangul_J_Dikeud',
    0xedc: 'Hangul_J_RieulKiyeog',
    0xedd: 'Hangul_J_RieulMieum',
    0xede: 'Hangul_J_RieulPieub',
    0xedf: 'Hangul_J_RieulSios',
    0xee0: 'Hangul_J_RieulTieut',
    0xee1: 'Hangul_J_RieulPhieuf',
    0xee2: 'Hangul_J_RieulHieuh',
    0xee3: 'Hangul_J_Mieum',
    0xee4: 'Hangul_J_Pieub',
    0xee5: 'Hangul_J_PieubSios',
    0xee6: 'Hangul_J_Sios',
    0xee7: 'Hangul_J_SsangSios',
    0xee8: 'Hangul_J_Ieung',
    0xee9: 'Hangul_J_Jieuj',
    0xeeb: 'Hangul_J_Khieuq',
    0xeec: 'Hangul_J_Tieut',
    0xeed: 'Hangul_J_Phieuf',
    0xeef: 'Hangul_RieulYeorinHieuh',
    0xef0: 'Hangul_SunkyeongeumMieum',
    0xef1: 'Hangul_SunkyeongeumPieub',
    0xef4: 'Hangul_SunkyeongeumPhieuf',
    0xef5: 'Hangul_YeorinHieuh',
    0xef6: 'Hangul_AraeA',
    0xef7: 'Hangul_AraeAE',
    0xef8: 'Hangul_J_PanSios',
    0xef9: 'Hangul_J_KkogjiDalrinIeung',
    0xefa: 'Hangul_J_YeorinHieuh',
    0x7d5: 'Greek_UPSILON',
    0x7d6: 'Greek_PHI',
    0x7d9: 'Greek_OMEGA',
    0x1002078: 'eightsuperior',
    0xaf8: 'femalesymbol',
    0x7e9: 'Greek_iota',
    0x2a9: 'Iabovedot',
    0x7f1: 'Greek_rho',
    0x7f3: 'Greek_finalsmallsigma',
    0x7f5: 'Greek_upsilon',
    0x7f7: 'Greek_chi',
    0x7f9: 'Greek_omega',
    0x4cb: 'kana_HI',
    0xfe22: 'ISO_Move_Line_Down',
    0x2b1: 'hstroke',
    0x100280b: 'braille_dots_124',
    0x100280c: 'braille_dots_34',
    0x2bc: 'jcircumflex',
    0xb4: 'acute',
    0x10006f1: 'Farsi_1',
    0xfe27: 'ISO_Set_Margin_Left',
    0x6f2: 'Cyrillic_ER',
    0x6f3: 'Cyrillic_ES',
    0x1000496: 'Cyrillic_ZHE_descender',
    0x10010d0: 'Georgian_an',
    0x10010d1: 'Georgian_ban',
    0x10010d2: 'Georgian_gan',
    0x10001a0: 'Ohorn',
    0x10010d4: 'Georgian_en',
    0x10010d5: 'Georgian_vin',
    0x10010d6: 'Georgian_zen',
    0x10010d7: 'Georgian_tan',
    0x10010d8: 'Georgian_in',
    0x10010d9: 'Georgian_kan',
    0x10010da: 'Georgian_las',
    0x10010db: 'Georgian_man',
    0x10010dc: 'Georgian_nar',
    0x10010dd: 'Georgian_on',
    0x10010de: 'Georgian_par',
    0x10010df: 'Georgian_zhar',
    0x10010e0: 'Georgian_rae',
    0x10010e1: 'Georgian_san',
    0x10010e2: 'Georgian_tar',
    0x10010e3: 'Georgian_un',
    0x10010e4: 'Georgian_phar',
    0x10010e5: 'Georgian_khar',
    0x10010e6: 'Georgian_ghan',
    0x10010e7: 'Georgian_qar',
    0x10010e8: 'Georgian_shin',
    0x10010e9: 'Georgian_chin',
    0x10010ea: 'Georgian_can',
    0x10010eb: 'Georgian_jil',
    0x10010ed: 'Georgian_char',
    0x10010ee: 'Georgian_xan',
    0x10010ef: 'Georgian_jhan',
    0x10010f0: 'Georgian_hae',
    0x10010f1: 'Georgian_he',
    0x10010f2: 'Georgian_hie',
    0x10010f4: 'Georgian_har',
    0x10010f5: 'Georgian_hoe',
    0x10010f6: 'Georgian_fi',
    0x1002829: 'braille_dots_146',
    0x2d8: 'Gcircumflex',
    0x1001ecd: 'obelowdot',
    0x10006f7: 'Farsi_7',
    0x1002833: 'braille_dots_1256',
    0x1002836: 'braille_dots_2356',
    0x1002838: 'braille_dots_456',
    0xff3f: 'Hangul_Special',
    0x10006a9: 'Arabic_keheh',
    0x100283d: 'braille_dots_13456',
    0x100283e: 'braille_dots_23456',
    0x1002840: 'braille_dots_7',
    0x1002841: 'braille_dots_17',
    0x10004d9: 'Cyrillic_schwa',
    0x2f5: 'gabovedot',
    0x6fd: 'Cyrillic_SHCHA',
    0xda8: 'Thai_chochan',
    0x2fe: 'scircumflex',
    0x1002857: 'braille_dots_12357',
    0x5f0: 'Arabic_kasra',
    0xdbb: 'Thai_popla',
    0x5f1: 'Arabic_shadda',
    0xdbf: 'Thai_fofan',
    0xdc0: 'Thai_phosamphao',
    0xdc1: 'Thai_moma',
    0x1002830: 'braille_dots_56',
    0x5f2: 'Arabic_sukun',
    0xdc7: 'Thai_wowaen',
    0xdc8: 'Thai_sosala',
    0x1002875: 'braille_dots_13567',
    0xdcb: 'Thai_hohip',
    0xa1: 'exclamdown',
    0xa2: 'cent',
    0xdd7: 'Thai_sarauee',
    0x1002882: 'braille_dots_28',
    0x1002883: 'braille_dots_128',
    0xa3: 'sterling',
    0x1002887: 'braille_dots_1238',
    0x1002889: 'braille_dots_148',
    0xddf: 'Thai_baht',
    0xde0: 'Thai_sarae',
    0x6bc: 'Macedonia_KJE',
    0x8a7: 'topleftsqbracket',
    0x1b6: 'sacute',
    0x1002893: 'braille_dots_1258',
    0x21: 'exclam',
    0x1002897: 'braille_dots_12358',
    0x100289d: 'braille_dots_13458',
    0x13bc: 'OE',
    0x13bd: 'oe',
    0x13be: 'Ydiaeresis',
    0x10028a0: 'braille_dots_68',
    0x10028a3: 'braille_dots_1268',
    0xdf9: 'Thai_lekkao',
    0x8a5: 'botintegral',
    0x10028a8: 'braille_dots_468',
    0x10028a9: 'braille_dots_1468',
    0x8aa: 'botrightsqbracket',
    0x8ab: 'topleftparens',
    0x8ac: 'botleftparens',
    0x8ad: 'toprightparens',
    0xab: 'guillemotleft',
    0x10028af: 'braille_dots_123468',
    0x10028b0: 'braille_dots_568',
    0x8b1: 'topleftsummation',
    0x10006f4: 'Farsi_4',
    0x8b2: 'botleftsummation',
    0x10028b3: 'braille_dots_12568',
    0x1001e0a: 'Dabovedot',
    0x8b5: 'toprightsummation',
    0xfe0b: 'ISO_Prev_Group_Lock',
    0x8b7: 'rightmiddlesummation',
    0x4b7: 'kana_KI',
    0x10020a5: 'MillSign',
    0x8bc: 'lessthanequal',
    0x8bd: 'notequal',
    0x10028be: 'braille_dots_234568',
    0x10028c0: 'braille_dots_78',
    0x8c1: 'variation',
    0x10028c3: 'braille_dots_1278',
    0x10020a7: 'PesetaSign',
    0x10028c8: 'braille_dots_478',
    0x10028c9: 'braille_dots_1478',
    0x8cd: 'ifonlyif',
    0xfe23: 'ISO_Partial_Line_Up',
    0x8ce: 'implies',
    0x10028a1: 'braille_dots_168',
    0x10028cf: 'braille_dots_123478',
    0xfe25: 'ISO_Partial_Space_Left',
    0x10028d4: 'braille_dots_3578',
    0x10028d5: 'braille_dots_13578',
    0x10028d6: 'braille_dots_23578',
    0x10004b0: 'Cyrillic_U_straight_bar',
    0x10028da: 'braille_dots_24578',
    0x8db: 'includes',
    0x10028dd: 'braille_dots_134578',
    0x8de: 'logicaland',
    0x10028df: 'braille_dots_1234578',
    0x1002823: 'braille_dots_126',
    0x10028e9: 'braille_dots_14678',
    0xb7: 'periodcentered',
    0x70: 'p',
    0x10028ee: 'braille_dots_234678',
    0x10028f2: 'braille_dots_25678',
    0x6c0: 'Cyrillic_yu',
    0x10028f3: 'braille_dots_125678',
    0x1002076: 'sixsuperior',
    0x8f6: 'function',
    0x3a2: 'kra',
    0x10028fb: 'braille_dots_1245678',
    0x10028fc: 'braille_dots_345678',
    0x8cf: 'identical',
    0x10028fd: 'braille_dots_1345678',
    0x8fe: 'downarrow',
    0x1002828: 'braille_dots_46',
    0x10028ff: 'braille_dots_12345678',
    0x3ab: 'Gcedilla',
    0xfe56: 'dead_abovedot',
    0x1001e57: 'pabovedot',
    0xfe60: 'dead_belowdot',
    0x10006c1: 'Arabic_heh_goal',
    0x10004b7: 'Cyrillic_che_descender',
    0x3bd: 'ENG',
    0x3c0: 'Amacron',
    0xace: 'emopencircle',
    0x10001d1: 'Ocaron',
    0x1d2: 'Ncaron',
    0xcf0: 'hebrew_nun',
    0x10028db: 'braille_dots_124578',
    0x3d2: 'Omacron',
    0x1001e80: 'Wgrave',
    0x1002831: 'braille_dots_156',
    0xfe81: 'dead_A',
    0xfe82: 'dead_e',
    0xfe83: 'dead_E',
    0x3d9: 'Uogonek',
    0xfe84: 'dead_i',
    0x1001e85: 'wdiaeresis',
    0x3de: 'Umacron',
    0x1001e8a: 'Xabovedot',
    0x1001e8b: 'xabovedot',
    0xfe61: 'dead_hook',
    0xea1: 'Hangul_Kiyeog',
    0x8ae: 'botrightparens',
    0x3ef: 'imacron',
    0x3f1: 'ncedilla',
    0xca: 'Ecircumflex',
    0x10028a6: 'braille_dots_2368',
    0xea4: 'Hangul_Nieun',
    0x1001ea5: 'acircumflexacute',
    0x3fd: 'utilde',
    0xcf2: 'hebrew_ayin',
    0x100057d: 'Armenian_se',
    0xeb7: 'Hangul_Ieung',
    0xcf: 'Idiaeresis',
    0xaa5: 'digitspace',
    0xfed4: 'Last_Virtual_Screen',
    0xfe6a: 'dead_belowtilde',
    0xec8: 'Hangul_WA',
    0xad2: 'leftdoublequotemark',
    0xfed0: 'First_Virtual_Screen',
    0x1001ed1: 'ocircumflexacute',
    0x1e5: 'lacute',
    0x1001ed2: 'Ocircumflexgrave',
    0x1001ed5: 'ocircumflexhook',
    0xef3: 'Hangul_KkogjiDalrinIeung',
    0x10001e6: 'Gcaron',
    0xedb: 'Hangul_J_Rieul',
    0x1002844: 'braille_dots_37',
    0xfee0: 'Pointer_Left',
    0x1001ee1: 'ohorntilde',
    0x1001ee2: 'Ohornbelowdot',
    0xfee3: 'Pointer_Down',
    0x1001ee5: 'ubelowdot',
    0x1001ee6: 'Uhook',
    0xfee7: 'Pointer_DownRight',
    0xfee8: 'Pointer_Button_Dflt',
    0x1001ee9: 'uhornacute',
    0xfeec: 'Pointer_Button4',
    0xfeed: 'Pointer_Button5',
    0xeb2: 'Hangul_Pieub',
    0x1001eee: 'Uhorntilde',
    0x1001eef: 'uhorntilde',
    0x1001ef0: 'Uhornbelowdot',
    0x1001ef1: 'uhornbelowdot',
    0x1001ef2: 'Ygrave',
    0xfef3: 'Pointer_DblClick5',
    0xfef5: 'Pointer_Drag1',
    0x1001ef6: 'Yhook',
    0x6c7: 'Cyrillic_ghe',
    0x1001ef7: 'yhook',
    0xfef8: 'Pointer_Drag4',
    0x1001ef9: 'ytilde',
    0xeff: 'Korean_Won',
    0x1001e02: 'Babovedot',
    0x1ef: 'dcaron',
    0x2bb: 'gbreve',
    0x7a2: 'Greek_EPSILONaccent',
    0x6a4: 'Ukranian_je',
    0xae: 'registered',
    0xffb2: 'KP_2',
    0x8b4: 'botvertsummationconnector',
    0xff2a: 'Zenkaku_Hankaku',
    0x1008ff2b: 'XF86WakeUp',
    0x1d1: 'Nacute',
    0xff2f: 'Eisu_Shift',
    0x1ac: 'Zacute',
    0x9df: 'blank',
    0xe9: 'eacute',
    0x1002856: 'braille_dots_2357',
    0x9e5: 'lf',
    0x7a4: 'Greek_IOTAaccent',
    0xdb3: 'Thai_nonen',
    0x9eb: 'uprightcorner',
    0xec: 'igrave',
    0x10004a2: 'Cyrillic_EN_descender',
    0x4a3: 'kana_closingbracket',
    0x4a5: 'kana_conjunctive',
    0xee: 'icircumflex',
    0x4ab: 'kana_o',
    0x4ae: 'kana_yo',
    0x4b0: 'prolongedsound',
    0x10004b1: 'Cyrillic_u_straight_bar',
    0x10004b2: 'Cyrillic_HA_descender',
    0x4b3: 'kana_U',
    0x10010ec: 'Georgian_cil',
    0x4b6: 'kana_KA',
    0x4b8: 'kana_KU',
    0x4b9: 'kana_KE',
    0x4ba: 'kana_KO',
    0x1000535: 'Armenian_YECH',
    0x4bf: 'kana_SO',
    0x4c2: 'kana_TSU',
    0x4c3: 'kana_TE',
    0x1000537: 'Armenian_E',
    0x1000538: 'Armenian_AT',
    0xf6: 'odiaeresis',
    0x4d2: 'kana_ME',
    0x4d4: 'kana_YA',
    0xfd01: '3270_Duplicate',
    0xfd02: '3270_FieldMark',
    0xfd03: '3270_Right2',
    0xfd04: '3270_Left2',
    0xfd05: '3270_BackTab',
    0xfd06: '3270_EraseEOF',
    0xfd07: '3270_EraseInput',
    0xfd08: '3270_Reset',
    0xfd09: '3270_Quit',
    0xfd0a: '3270_PA1',
    0x4d7: 'kana_RA',
    0xfd0c: '3270_PA3',
    0xfd0d: '3270_Test',
    0xfd0e: '3270_Attn',
    0xfd0f: '3270_CursorBlink',
    0xfd10: '3270_AltCursor',
    0x10004d8: 'Cyrillic_SCHWA',
    0xfd12: '3270_Jump',
    0xfd13: '3270_Ident',
    0xfd14: '3270_Rule',
    0xfd15: '3270_Copy',
    0xfd16: '3270_Play',
    0xfd17: '3270_Setup',
    0xfd1a: '3270_DeleteWord',
    0xfd1b: '3270_ExSelect',
    0xfd1c: '3270_CursorSelect',
    0xfd1d: '3270_PrintScreen',
    0xfd1e: '3270_Enter',
    0x4db: 'kana_RO',
    0xf9: 'ugrave',
    0x77: 'w',
    0xada: 'hexagram',
    0xff99: 'KP_Down',
    0x7a8: 'Greek_UPSILONaccent',
    0xeea: 'Hangul_J_Cieuc',
    0xfe01: 'ISO_Lock',
    0xfe02: 'ISO_Level2_Latch',
    0xfe03: 'ISO_Level3_Shift',
    0xfe04: 'ISO_Level3_Latch',
    0xfe05: 'ISO_Level3_Lock',
    0xfe06: 'ISO_Group_Latch',
    0xfe08: 'ISO_Next_Group',
    0xfe09: 'ISO_Next_Group_Lock',
    0x1000543: 'Armenian_TCHE',
    0x1001e0b: 'dabovedot',
    0xfe0c: 'ISO_First_Group',
    0xfe0d: 'ISO_First_Group_Lock',
    0xfe0e: 'ISO_Last_Group',
    0xfe0f: 'ISO_Last_Group_Lock',
    0x1000654: 'Arabic_hamza_above',
    0xfe11: 'ISO_Level5_Shift',
    0xfe12: 'ISO_Level5_Latch',
    0xfe13: 'ISO_Level5_Lock',
    0x1001e1e: 'Fabovedot',
    0x1001e1f: 'fabovedot',
    0xfe20: 'ISO_Left_Tab',
    0xfe21: 'ISO_Move_Line_Up',
    0xfe24: 'ISO_Partial_Line_Down',
    0xfe26: 'ISO_Partial_Space_Right',
    0xfe28: 'ISO_Set_Margin_Right',
    0xfe29: 'ISO_Release_Margin_Left',
    0xfe2a: 'ISO_Release_Margin_Right',
    0xfe2b: 'ISO_Release_Both_Margins',
    0xfe2c: 'ISO_Fast_Cursor_Left',
    0xfe2d: 'ISO_Fast_Cursor_Right',
    0xfe2e: 'ISO_Fast_Cursor_Up',
    0xfe2f: 'ISO_Fast_Cursor_Down',
    0xfe30: 'ISO_Continuous_Underline',
    0xfe31: 'ISO_Discontinuous_Underline',
    0xfe32: 'ISO_Emphasize',
    0xfe33: 'ISO_Center_Object',
    0xfe34: 'ISO_Enter',
    0x1001e36: 'Lbelowdot',
    0x1001e37: 'lbelowdot',
    0x1001e40: 'Mabovedot',
    0x1001e41: 'mabovedot',
    0xfe50: 'dead_grave',
    0xfe51: 'dead_acute',
    0xfe52: 'dead_circumflex',
    0xfe53: 'dead_tilde',
    0xfe54: 'dead_macron',
    0xfe55: 'dead_breve',
    0x1001e56: 'Pabovedot',
    0xfe57: 'dead_diaeresis',
    0xfe58: 'dead_abovering',
    0xfe59: 'dead_doubleacute',
    0xfe5a: 'dead_caron',
    0xfe5b: 'dead_cedilla',
    0xfe5c: 'dead_ogonek',
    0xfe5d: 'dead_iota',
    0xfe5e: 'dead_voiced_sound',
    0xfe5f: 'dead_semivoiced_sound',
    0x1001e60: 'Sabovedot',
    0x1001e61: 'sabovedot',
    0xfe62: 'dead_horn',
    0xfe63: 'dead_stroke',
    0xfe64: 'dead_abovecomma',
    0xfe65: 'dead_abovereversedcomma',
    0xfe66: 'dead_doublegrave',
    0xfe67: 'dead_belowring',
    0xfe68: 'dead_belowmacron',
    0xfe69: 'dead_belowcircumflex',
    0x1001e6a: 'Tabovedot',
    0x1001e6b: 'tabovedot',
    0xfe6c: 'dead_belowdiaeresis',
    0xfe6d: 'dead_invertedbreve',
    0xfe6e: 'dead_belowcomma',
    0xfe6f: 'dead_currency',
    0xfe70: 'AccessX_Enable',
    0xfe71: 'AccessX_Feedback_Enable',
    0xfe72: 'RepeatKeys_Enable',
    0xfe73: 'SlowKeys_Enable',
    0xfe74: 'BounceKeys_Enable',
    0xfe75: 'StickyKeys_Enable',
    0xfe76: 'MouseKeys_Enable',
    0xfe77: 'MouseKeys_Accel_Enable',
    0xfe78: 'Overlay1_Enable',
    0xfe79: 'Overlay2_Enable',
    0xfe7a: 'AudibleBell_Enable',
    0xfe80: 'dead_a',
    0x1001e81: 'wgrave',
    0x1001e82: 'Wacute',
    0x1001e83: 'wacute',
    0x1001e84: 'Wdiaeresis',
    0xfe85: 'dead_I',
    0xfe86: 'dead_o',
    0xfe87: 'dead_O',
    0xfe88: 'dead_u',
    0xfe89: 'dead_U',
    0xfe8a: 'dead_small_schwa',
    0xfe8b: 'dead_capital_schwa',
    0xfe8c: 'dead_greek',
    0xffc3: 'F6',
    0x1001ea0: 'Abelowdot',
    0x1001ea1: 'abelowdot',
    0x1001ea2: 'Ahook',
    0x1001ea3: 'ahook',
    0x1001ea4: 'Acircumflexacute',
    0x1001ea6: 'Acircumflexgrave',
    0x1001ea7: 'acircumflexgrave',
    0x1001ea8: 'Acircumflexhook',
    0x1001ea9: 'acircumflexhook',
    0x1001eaa: 'Acircumflextilde',
    0x1001eab: 'acircumflextilde',
    0x1001eac: 'Acircumflexbelowdot',
    0x1001ead: 'acircumflexbelowdot',
    0x1001eae: 'Abreveacute',
    0x1001eaf: 'abreveacute',
    0x1001eb0: 'Abrevegrave',
    0x1001eb1: 'abrevegrave',
    0x1001eb2: 'Abrevehook',
    0x1001eb3: 'abrevehook',
    0x1001eb4: 'Abrevetilde',
    0x1001eb5: 'abrevetilde',
    0x1001eb6: 'Abrevebelowdot',
    0x1001eb7: 'abrevebelowdot',
    0x1001eb8: 'Ebelowdot',
    0x1001eb9: 'ebelowdot',
    0x1001eba: 'Ehook',
    0x1001ebb: 'ehook',
    0x1001ebc: 'Etilde',
    0x1001ebd: 'etilde',
    0x1001ebe: 'Ecircumflexacute',
    0x1001ebf: 'ecircumflexacute',
    0x1001ec0: 'Ecircumflexgrave',
    0x1001ec1: 'ecircumflexgrave',
    0x1001ec2: 'Ecircumflexhook',
    0x1001ec3: 'ecircumflexhook',
    0x1001ec4: 'Ecircumflextilde',
    0x1001ec5: 'ecircumflextilde',
    0x1001ec6: 'Ecircumflexbelowdot',
    0x1001ec7: 'ecircumflexbelowdot',
    0x1001ec8: 'Ihook',
    0x1001ec9: 'ihook',
    0x1001eca: 'Ibelowdot',
    0x1001ecb: 'ibelowdot',
    0x1001ecc: 'Obelowdot',
    0x10004ae: 'Cyrillic_U_straight',
    0x1001ece: 'Ohook',
    0x1001ecf: 'ohook',
    0x1001ed0: 'Ocircumflexacute',
    0xfed1: 'Prev_Virtual_Screen',
    0xfed2: 'Next_Virtual_Screen',
    0x1001ed3: 'ocircumflexgrave',
    0x1001ed4: 'Ocircumflexhook',
    0xfed5: 'Terminate_Server',
    0x1001ed6: 'Ocircumflextilde',
    0x1001ed7: 'ocircumflextilde',
    0x1001ed8: 'Ocircumflexbelowdot',
    0x1001ed9: 'ocircumflexbelowdot',
    0x1001eda: 'Ohornacute',
    0x1001edb: 'ohornacute',
    0x1001edc: 'Ohorngrave',
    0x1001edd: 'ohorngrave',
    0x1001ede: 'Ohornhook',
    0x1001edf: 'ohornhook',
    0x1001ee0: 'Ohorntilde',
    0xfee1: 'Pointer_Right',
    0xfee2: 'Pointer_Up',
    0x1001ee3: 'ohornbelowdot',
    0x1001ee4: 'Ubelowdot',
    0xfee5: 'Pointer_UpRight',
    0xfee6: 'Pointer_DownLeft',
    0x1001ee7: 'uhook',
    0x1001ee8: 'Uhornacute',
    0xfee9: 'Pointer_Button1',
    0x1001eea: 'Uhorngrave',
    0xfeeb: 'Pointer_Button3',
    0x1001eec: 'Uhornhook',
    0x1001eed: 'uhornhook',
    0xfeee: 'Pointer_DblClick_Dflt',
    0xfeef: 'Pointer_DblClick1',
    0xfef0: 'Pointer_DblClick2',
    0xfef1: 'Pointer_DblClick3',
    0xfef2: 'Pointer_DblClick4',
    0x1001ef3: 'ygrave',
    0xfef4: 'Pointer_Drag_Dflt',
    0x1001ef5: 'ybelowdot',
    0xfef6: 'Pointer_Drag2',
    0xfef7: 'Pointer_Drag3',
    0x1001ef8: 'Ytilde',
    0xfef9: 'Pointer_EnableKeys',
    0xfefa: 'Pointer_Accelerate',
    0xfefb: 'Pointer_DfltBtnNext',
    0xfefc: 'Pointer_DfltBtnPrev',
    0xfefd: 'Pointer_Drag5',
    0xfea0: 'ch',
    0xfea1: 'Ch',
    0xfea2: 'CH',
    0xfea3: 'c_h',
    0xfea4: 'C_h',
    0xfea5: 'C_H',
    0xff08: 'BackSpace',
    0xff09: 'Tab',
    0xff0a: 'Linefeed',
    0xff0b: 'Clear',
    0xff0d: 'Return',
    0xff13: 'Pause',
    0xff14: 'Scroll_Lock',
    0xff15: 'Sys_Req',
    0xff1b: 'Escape',
    0x1002876: 'braille_dots_23567',
    0xff20: 'Multi_key',
    0xff21: 'Kanji',
    0xff22: 'Muhenkan',
    0xff23: 'Henkan',
    0xff24: 'Romaji',
    0xff25: 'Hiragana',
    0xff26: 'Katakana',
    0xff27: 'Hiragana_Katakana',
    0xff28: 'Zenkaku',
    0xff29: 'Hankaku',
    0x1008ff2a: 'XF86PowerOff',
    0xff2b: 'Touroku',
    0xff2c: 'Massyo',
    0xff2d: 'Kana_Lock',
    0xff2e: 'Kana_Shift',
    0x1008ff2f: 'XF86Sleep',
    0xff30: 'Eisu_toggle',
    0xff31: 'Hangul',
    0xff32: 'Hangul_Start',
    0xff33: 'Hangul_End',
    0xff34: 'Hangul_Hanja',
    0xff35: 'Hangul_Jamo',
    0xff36: 'Hangul_Romaja',
    0xff37: 'Hangul_Codeinput',
    0xff38: 'Hangul_Jeonja',
    0xff39: 'Hangul_Banja',
    0xff3a: 'Hangul_PreHanja',
    0xff3b: 'Hangul_PostHanja',
    0xff3c: 'Hangul_SingleCandidate',
    0xff3d: 'Hangul_MultipleCandidate',
    0xff3e: 'Hangul_PreviousCandidate',
    0x1000536: 'Armenian_ZA',
    0xff50: 'Home',
    0xff51: 'Left',
    0xff52: 'Up',
    0xff53: 'Right',
    0xff54: 'Down',
    0xff55: 'Prior',
    0xff56: 'Next',
    0xff57: 'End',
    0xff58: 'Begin',
    0xff60: 'Select',
    0xff61: 'Print',
    0xff62: 'Execute',
    0xff63: 'Insert',
    0xff65: 'Undo',
    0xff66: 'Redo',
    0xff67: 'Menu',
    0xff68: 'Find',
    0xff69: 'Cancel',
    0xff6a: 'Help',
    0xff6b: 'Break',
    0x100054f: 'Armenian_TYUN',
    0xaa3: 'em3space',
    0xff7e: 'Arabic_switch',
    0xff7f: 'Num_Lock',
    0xff80: 'KP_Space',
    0x1000540: 'Armenian_HO',
    0xffeb: 'Super_L',
    0x1000541: 'Armenian_DZA',
    0xff89: 'KP_Tab',
    0xff8d: 'KP_Enter',
    0x1000550: 'Armenian_RE',
    0xff91: 'KP_F1',
    0xff92: 'KP_F2',
    0xff93: 'KP_F3',
    0xff94: 'KP_F4',
    0xff95: 'KP_Home',
    0xff96: 'KP_Left',
    0xff97: 'KP_Up',
    0xff98: 'KP_Right',
    0x1000544: 'Armenian_MEN',
    0xff9a: 'KP_Prior',
    0xff9b: 'KP_Next',
    0xff9c: 'KP_End',
    0xff9d: 'KP_Begin',
    0xff9e: 'KP_Insert',
    0xff9f: 'KP_Delete',
    0x1000546: 'Armenian_NU',
    0xffaa: 'KP_Multiply',
    0xffab: 'KP_Add',
    0xffac: 'KP_Separator',
    0xffad: 'KP_Subtract',
    0xffae: 'KP_Decimal',
    0xffaf: 'KP_Divide',
    0xffb0: 'KP_0',
    0xffb1: 'KP_1',
    0xffb3: 'KP_3',
    0xffb4: 'KP_4',
    0xffb5: 'KP_5',
    0xffb6: 'KP_6',
    0xffb7: 'KP_7',
    0xffb8: 'KP_8',
    0xffb9: 'KP_9',
    0xffbd: 'KP_Equal',
    0xffbe: 'F1',
    0xffbf: 'F2',
    0xffc0: 'F3',
    0xffc1: 'F4',
    0xffc2: 'F5',
    0x100054b: 'Armenian_JE',
    0xffc4: 'F7',
    0xffc5: 'F8',
    0xffc6: 'F9',
    0xffc7: 'F10',
    0xffc8: 'F11',
    0xffc9: 'F12',
    0xffca: 'F13',
    0xffcb: 'F14',
    0xffcc: 'L5',
    0xffcd: 'F16',
    0xffce: 'F17',
    0xffcf: 'F18',
    0xffd0: 'F19',
    0xffd1: 'L10',
    0xffd2: 'R1',
    0xffd3: 'R2',
    0xffd4: 'R3',
    0xffd5: 'F24',
    0xffd6: 'R5',
    0xffd7: 'R6',
    0xffd8: 'R7',
    0xffd9: 'R8',
    0xffda: 'R9',
    0xffdb: 'R10',
    0xffdc: 'R11',
    0xffdd: 'R12',
    0xffde: 'R13',
    0xffdf: 'R14',
    0xffe0: 'R15',
    0xffe1: 'Shift_L',
    0xffe2: 'Shift_R',
    0xffe3: 'Control_L',
    0xffe4: 'Control_R',
    0xffe5: 'Caps_Lock',
    0xffe6: 'Shift_Lock',
    0xffe7: 'Meta_L',
    0xffe8: 'Meta_R',
    0xffe9: 'Alt_L',
    0xffea: 'Alt_R',
    0xffec: 'Super_R',
    0xffed: 'Hyper_L',
    0xffee: 'Hyper_R',
    0xfff1: 'braille_dot_1',
    0xfff2: 'braille_dot_2',
    0xfff3: 'braille_dot_3',
    0xfff4: 'braille_dot_4',
    0xfff5: 'braille_dot_5',
    0xfff6: 'braille_dot_6',
    0xfff7: 'braille_dot_7',
    0xfff8: 'braille_dot_8',
    0xfff9: 'braille_dot_9',
    0xfffa: 'braille_dot_10',
    0xaaa: 'endash',
    0x1000d82: 'Sinh_ng',
    0x1000d83: 'Sinh_h2',
    0x1000d85: 'Sinh_a',
    0x1000d86: 'Sinh_aa',
    0x1000d87: 'Sinh_ae',
    0x1000d88: 'Sinh_aee',
    0x1000d89: 'Sinh_i',
    0x1000d8a: 'Sinh_ii',
    0x1000d8b: 'Sinh_u',
    0x1000d8c: 'Sinh_uu',
    0x1000d8d: 'Sinh_ri',
    0x1000d8e: 'Sinh_rii',
    0x1000d8f: 'Sinh_lu',
    0x1000d90: 'Sinh_luu',
    0x1000d91: 'Sinh_e',
    0x1000d92: 'Sinh_ee',
    0x1000d93: 'Sinh_ai',
    0x1000d94: 'Sinh_o',
    0x1000d95: 'Sinh_oo',
    0x1000d96: 'Sinh_au',
    0x1000d9a: 'Sinh_ka',
    0x1000d9b: 'Sinh_kha',
    0x1000d9c: 'Sinh_ga',
    0x1000d9d: 'Sinh_gha',
    0x1000d9e: 'Sinh_ng2',
    0x1000d9f: 'Sinh_nga',
    0x1000da0: 'Sinh_ca',
    0x1000da1: 'Sinh_cha',
    0x1000da2: 'Sinh_ja',
    0x1000da3: 'Sinh_jha',
    0x1000da4: 'Sinh_nya',
    0x1000da5: 'Sinh_jnya',
    0x1000da6: 'Sinh_nja',
    0x1000da7: 'Sinh_tta',
    0x1000da8: 'Sinh_ttha',
    0x1000da9: 'Sinh_dda',
    0x1000daa: 'Sinh_ddha',
    0x1000dab: 'Sinh_nna',
    0x1000dac: 'Sinh_ndda',
    0x1000dad: 'Sinh_tha',
    0x1000dae: 'Sinh_thha',
    0x1000daf: 'Sinh_dha',
    0x1000db0: 'Sinh_dhha',
    0x1000db1: 'Sinh_na',
    0x1000db3: 'Sinh_ndha',
    0x1000db4: 'Sinh_pa',
    0x1000db5: 'Sinh_pha',
    0x1000db6: 'Sinh_ba',
    0x1000db7: 'Sinh_bha',
    0x1000db8: 'Sinh_ma',
    0x1000db9: 'Sinh_mba',
    0x1000dba: 'Sinh_ya',
    0x1000dbb: 'Sinh_ra',
    0x1000dbd: 'Sinh_la',
    0x1000dc0: 'Sinh_va',
    0x1000dc1: 'Sinh_sha',
    0x1000dc2: 'Sinh_ssha',
    0x1000dc3: 'Sinh_sa',
    0x1000dc4: 'Sinh_ha',
    0x1000dc5: 'Sinh_lla',
    0x1000dc6: 'Sinh_fa',
    0x1000dca: 'Sinh_al',
    0x1000dcf: 'Sinh_aa2',
    0x1000dd0: 'Sinh_ae2',
    0x1000dd1: 'Sinh_aee2',
    0x1000dd2: 'Sinh_i2',
    0x1000dd3: 'Sinh_ii2',
    0x1000dd4: 'Sinh_u2',
    0x1000dd6: 'Sinh_uu2',
    0x1000dd8: 'Sinh_ru2',
    0x1000dd9: 'Sinh_e2',
    0x1000dda: 'Sinh_ee2',
    0x1000ddb: 'Sinh_ai2',
    0x1000ddc: 'Sinh_o2',
    0x1000ddd: 'Sinh_oo2',
    0x1000dde: 'Sinh_au2',
    0x1000ddf: 'Sinh_lu2',
    0x1000df2: 'Sinh_ruu2',
    0x1000df3: 'Sinh_luu2',
    0x1000df4: 'Sinh_kunddaliya',
    0xffffff: 'VoidSymbol',
    }

* Wed 15 Oct 2014 10:58:04 AM JST
keysym.Keysym(code)
* Wed 15 Oct 2014 10:59:15 AM JST
import 
* Wed 15 Oct 2014 10:59:48 AM JST
keysymdef
* Wed 15 Oct 2014 11:00:28 AM JST
None # should raise NotImplementedError()
* Wed 15 Oct 2014 11:01:19 AM JST
self
* Wed 15 Oct 2014 11:02:43 AM JST
from collections.Sequence import collections.Sequence

class Namesym(collections.Sequence):
    """Class Namesym
    """
    # Attributes:
    __name = None  # (str) 
    
    # Operations
    def to_sym(self):
        """function to_sym
        
        returns Keysym
        """
        return None # should raise NotImplementedError()
    
    def ispredefined(self):
        """function ispredefined
        
        returns bool
        """
        return None # should raise NotImplementedError()
    
    def __str__(self):
        """function __str__
        
        returns str
        """
        return None # should raise NotImplementedError()
    
    def __repr__(self):
        """function __repr__
        
        returns str
        """
        return None # should raise NotImplementedError()
    
    def __int__(self):
        """function __int__
        
        returns int
        """
        return None # should raise NotImplementedError()
    
    def __long__(self):
        """function __long__
        
        returns long
        """
        return None # should raise NotImplementedError()
    
    def __hash__(self):
        """function __hash__
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __cmp__(self, other):
        """function __cmp__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __contains__(self, char):
        """function __contains__
        
        char: 
        
        returns bool
        """
        return None # should raise NotImplementedError()
    
    def __len__(self):
        """function __len__
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __getitem__(self, index):
        """function __getitem__
        
        index: int
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __getslice__(self, start, end):
        """function __getslice__
        
        start: 
        end: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __nonzero__(self):
        """function __nonzero__
        
        returns bool
        """
        return None # should raise NotImplementedError()
    


* Wed 15 Oct 2014 11:03:04 AM JST
Sequence
* Wed 15 Oct 2014 11:03:06 AM JST
collections.
* Wed 15 Oct 2014 11:03:12 AM JST
collections.
* Wed 15 Oct 2014 11:03:32 AM JST

* Wed 15 Oct 2014 11:03:32 AM JST

* Wed 15 Oct 2014 11:03:32 AM JST
    __name = None  # (str)

* Wed 15 Oct 2014 11:03:48 AM JST
None # should raise NotImplementedError()
* Wed 15 Oct 2014 11:04:55 AM JST
None # should raise NotImplementedError()
* Wed 15 Oct 2014 11:05:33 AM JST
name
* Wed 15 Oct 2014 11:08:18 AM JST
None # should raise NotImplementedError()
* Wed 15 Oct 2014 11:21:40 AM JST
0x4bb
* Wed 15 Oct 2014 11:21:48 AM JST

* Wed 15 Oct 2014 11:21:48 AM JST

* Wed 15 Oct 2014 11:21:48 AM JST
    0x4bb: 'kana_SA',

* Wed 15 Oct 2014 11:22:11 AM JST

* Wed 15 Oct 2014 11:22:11 AM JST

* Wed 15 Oct 2014 11:22:11 AM JST
    0x4bb: 'kana_SA',

* Wed 15 Oct 2014 11:23:03 AM JST
DictUtil
* Wed 15 Oct 2014 11:26:13 AM JST
'Abrevegrave': 16785072,
'space': 32,
'exclam': 33,
'quotedbl': 34,
'numbersign': 35,
'dollar': 36,
'percent': 37,
'ampersand': 38,
'apostrophe': 39,
'parenleft': 40,
'parenright': 41,
'asterisk': 42,
'plus': 43,
'comma': 44,
'minus': 45,
'period': 46,
'slash': 47,
'0': 48,
'1': 49,
'2': 50,
'3': 51,
'4': 52,
'5': 53,
'6': 54,
'7': 55,
'8': 56,
'9': 57,
'colon': 58,
'semicolon': 59,
'less': 60,
'equal': 61,
'greater': 62,
'question': 63,
'at': 64,
'A': 65,
'B': 66,
'C': 67,
'D': 68,
'E': 69,
'F': 70,
'G': 71,
'H': 72,
'I': 73,
'J': 74,
'K': 75,
'L': 76,
'M': 77,
'N': 78,
'O': 79,
'P': 80,
'Q': 81,
'R': 82,
'S': 83,
'T': 84,
'U': 85,
'V': 86,
'W': 87,
'X': 88,
'Y': 89,
'Z': 90,
'bracketleft': 91,
'backslash': 92,
'bracketright': 93,
'asciicircum': 94,
'underscore': 95,
'quoteleft': 96,
'a': 97,
'b': 98,
'c': 99,
'd': 100,
'e': 101,
'f': 102,
'g': 103,
'h': 104,
'i': 105,
'j': 106,
'k': 107,
'l': 108,
'm': 109,
'n': 110,
'o': 111,
'zerosuperior': 16785520,
'q': 113,
'r': 114,
's': 115,
't': 116,
'fivesuperior': 16785525,
'v': 118,
'sevensuperior': 16785527,
'x': 120,
'y': 121,
'z': 122,
'braceleft': 123,
'bar': 124,
'braceright': 125,
'asciitilde': 126,
'zerosubscript': 16785536,
'onesubscript': 16785537,
'twosubscript': 16785538,
'threesubscript': 16785539,
'foursubscript': 16785540,
'fivesubscript': 16785541,
'sixsubscript': 16785542,
'sevensubscript': 16785543,
'eightsubscript': 16785544,
'ninesubscript': 16785545,
'Pointer_Drag3': 65271,
'nobreakspace': 160,
'ColonSign': 16785569,
'CruzeiroSign': 16785570,
'FFrancSign': 16785571,
'currency': 164,
'yen': 165,
'NairaSign': 16785574,
'section': 167,
'diaeresis': 168,
'copyright': 169,
'ordfeminine': 170,
'DongSign': 16785579,
'notsign': 172,
'hyphen': 173,
'registered': 174,
'macron': 175,
'degree': 176,
'plusminus': 177,
'twosuperior': 178,
'threesuperior': 179,
'acute': 180,
'mu': 181,
'paragraph': 182,
'periodcentered': 183,
'cedilla': 184,
'onesuperior': 185,
'masculine': 186,
'guillemotright': 187,
'onequarter': 188,
'onehalf': 189,
'threequarters': 190,
'questiondown': 191,
'Agrave': 192,
'Aacute': 193,
'Acircumflex': 194,
'Atilde': 195,
'Adiaeresis': 196,
'Aring': 197,
'AE': 198,
'Ccedilla': 199,
'Egrave': 200,
'Eacute': 201,
'Ecircumflex': 202,
'Ediaeresis': 203,
'Igrave': 204,
'Iacute': 205,
'Icircumflex': 206,
'Idiaeresis': 207,
'Eth': 208,
'Ntilde': 209,
'Ograve': 210,
'Oacute': 211,
'Ocircumflex': 212,
'Otilde': 213,
'Odiaeresis': 214,
'multiply': 215,
'Oslash': 216,
'Ugrave': 217,
'Uacute': 218,
'Ucircumflex': 219,
'Udiaeresis': 220,
'Yacute': 221,
'Thorn': 222,
'ssharp': 223,
'agrave': 224,
'aacute': 225,
'acircumflex': 226,
'atilde': 227,
'adiaeresis': 228,
'aring': 229,
'ae': 230,
'ccedilla': 231,
'egrave': 232,
'eacute': 233,
'ecircumflex': 234,
'ediaeresis': 235,
'igrave': 236,
'iacute': 237,
'icircumflex': 238,
'idiaeresis': 239,
'eth': 240,
'ntilde': 241,
'ograve': 242,
'oacute': 243,
'ocircumflex': 244,
'otilde': 245,
'odiaeresis': 246,
'division': 247,
'ooblique': 248,
'ugrave': 249,
'uacute': 250,
'ucircumflex': 251,
'udiaeresis': 252,
'yacute': 253,
'thorn': 254,
'ydiaeresis': 255,
'obelowdot': 16785101,
'Uhornbelowdot': 16785136,
'Ibreve': 16777516,
'ibreve': 16777517,
'Abrevehook': 16785074,
'Ygrave': 16785138,
'Ncaron': 466,
'Wcircumflex': 16777588,
'wcircumflex': 16777589,
'Ycircumflex': 16777590,
'ycircumflex': 16777591,
'uhornacute': 16785129,
'SCHWA': 16777615,
'Ybelowdot': 16785140,
'kana_RU': 1241,
'Obarred': 16777631,
'Ohorn': 16777632,
'ohorn': 16777633,
'breve': 418,
'Lstroke': 419,
'Lcaron': 421,
'Sacute': 422,
'Scaron': 425,
'Scedilla': 426,
'Tcaron': 427,
'Zacute': 428,
'Zcaron': 430,
'Zabovedot': 431,
'uhorn': 16777648,
'aogonek': 433,
'ogonek': 434,
'lstroke': 435,
'lcaron': 437,
'zstroke': 16777654,
'caron': 439,
'scaron': 441,
'scedilla': 442,
'tcaron': 443,
'zacute': 444,
'doubleacute': 445,
'zcaron': 446,
'zabovedot': 447,
'Racute': 448,
'Abreve': 451,
'Lacute': 453,
'Cacute': 454,
'Sinh_cha': 16780705,
'Ccaron': 456,
'idotless': 697,
'Eogonek': 458,
'Ecaron': 460,
'Sinh_ja': 16780706,
'F14': 65483,
'Dcaron': 463,
'Dstroke': 464,
'Ocaron': 16777681,
'ocaron': 16777682,
'Sinh_jha': 16780707,
'Odoubleacute': 469,
'Rcaron': 472,
'Uring': 473,
'Udoubleacute': 475,
'Pointer_Button4': 65260,
'Tcedilla': 478,
'Sinh_jnya': 16780709,
'racute': 480,
'abreve': 483,
'lacute': 485,
'cacute': 486,
'gcaron': 16777703,
'ccaron': 488,
'eogonek': 490,
'Sinh_tta': 16780711,
'ecaron': 492,
'dcaron': 495,
'dstroke': 496,
'nacute': 497,
'ncaron': 498,
'odoubleacute': 501,
'Sinh_dda': 16780713,
'rcaron': 504,
'uring': 505,
'udoubleacute': 507,
'Sinh_ddha': 16780714,
'tcedilla': 510,
'abovedot': 511,
'partdifferential': 16785922,
'Sinh_nna': 16780715,
'emptyset': 16785925,
'elementof': 16785928,
'notelementof': 16785929,
'containsas': 16785931,
'Ytilde': 16785144,
'Sinh_tha': 16780717,
'acircumflexacute': 16785061,
'Sinh_thha': 16780718,
'squareroot': 16785946,
'cuberoot': 16785947,
'fourthroot': 16785948,
'Sinh_dhha': 16780720,
'Sinh_na': 16780721,
'ytilde': 16785145,
'dintegral': 16785964,
'tintegral': 16785965,
'Sinh_ndha': 16780723,
'because': 16785973,
'Sinh_pa': 16780724,
'Sinh_pha': 16780725,
'Sinh_ba': 16780726,
'notapproxeq': 16785991,
'approxeq': 16785992,
'Sinh_bha': 16780727,
'Sinh_ma': 16780728,
'Sinh_mba': 16780729,
'schwa': 16777817,
'Sinh_ya': 16780730,
'notidentical': 16786018,
'stricteq': 16786019,
'Sinh_la': 16780733,
'obarred': 16777845,
'yhook': 16785143,
'Sinh_va': 16780736,
'Sinh_sha': 16780737,
'Sinh_ssha': 16780738,
'ezh': 16777874,
'Sinh_sa': 16780739,
'Sinh_ha': 16780740,
'Sinh_lla': 16780741,
'Hstroke': 673,
'Sinh_fa': 16780742,
'Hcircumflex': 678,
'Iabovedot': 681,
'Gbreve': 683,
'Jcircumflex': 684,
'hstroke': 689,
'hcircumflex': 694,
'foursuperior': 16785524,
'gbreve': 699,
'jcircumflex': 700,
'Sinh_al': 16780746,
'R2': 65491,
'u': 117,
'Cabovedot': 709,
'Ccircumflex': 710,
'w': 119,
'eightsuperior': 16785528,
'Gabovedot': 725,
'ninesuperior': 16785529,
'Gcircumflex': 728,
'utilde': 1021,
'Sinh_aa2': 16780751,
'Ubreve': 733,
'Scircumflex': 734,
'Sinh_ae2': 16780752,
'cabovedot': 741,
'ccircumflex': 742,
'Sinh_aee2': 16780753,
'exclamdown': 161,
'Sinh_i2': 16780754,
'Sinh_luu2': 16780787,
'Sinh_ii2': 16780755,
'gabovedot': 757,
'gcircumflex': 760,
'Sinh_u2': 16780756,
'ubreve': 765,
'scircumflex': 766,
'abrevegrave': 16785073,
'Sinh_uu2': 16780758,
'Sinh_ru2': 16780760,
'Sinh_e2': 16780761,
'Sinh_ee2': 16780762,
'Sinh_au2': 16780766,
'Sinh_lu2': 16780767,
'Pointer_Button5': 65261,
'OE': 5052,
'Abelowdot': 16785056,
'kra': 930,
'Rcedilla': 931,
'Itilde': 933,
'Lcedilla': 934,
'Emacron': 938,
'Gcedilla': 939,
'Tslash': 940,
'Sinh_ruu2': 16780786,
'rcedilla': 947,
'itilde': 949,
'lcedilla': 950,
'Sinh_kunddaliya': 16780788,
'emacron': 954,
'gcedilla': 955,
'tslash': 956,
'ENG': 957,
'Ydiaeresis': 5054,
'eng': 959,
'Amacron': 960,
'EcuSign': 16785568,
'Iogonek': 967,
'Eabovedot': 972,
'cent': 162,
'Imacron': 975,
'Ncedilla': 977,
'Omacron': 978,
'sterling': 163,
'LiraSign': 16785572,
'Utilde': 989,
'Umacron': 990,
'MillSign': 16785573,
'amacron': 992,
'brokenbar': 166,
'iogonek': 999,
'PesetaSign': 16785575,
'eabovedot': 1004,
'imacron': 1007,
'RupeeSign': 16785576,
'omacron': 1010,
'kcedilla': 1011,
'WonSign': 16785577,
'uogonek': 1017,
'NewSheqelSign': 16785578,
'umacron': 1022,
'Sinh_dha': 16780719,
'guillemotleft': 171,
'EuroSign': 8364,
'Babovedot': 16784898,
'toprightparens': 2221,
'babovedot': 16784899,
'botrightparens': 2222,
'toprightsqbracket': 2217,
'braille_dots_123468': 16787631,
'braille_dots_568': 16787632,
'topleftsummation': 2225,
'braille_dots_168': 16787617,
'botleftsummation': 2226,
'braille_dots_12568': 16787635,
'botvertsummationconnector': 2228,
'Dabovedot': 16784906,
'braille_dots_124578': 16787675,
'braille_dots_13568': 16787637,
'ISO_Prev_Group_Lock': 65035,
'identical': 2255,
'botrightsummation': 2230,
'braille_dots_268': 16787618,
'rightmiddlesummation': 2231,
'topleftparens': 2219,
'First_Virtual_Screen': 65232,
'braille_dots_1268': 16787619,
'braille_dots_34568': 16787644,
'Obelowdot': 16785100,
'notequal': 2237,
'botleftparens': 2220,
'braille_dots_234568': 16787646,
'Prev_Virtual_Screen': 65233,
'braille_dots_1234568': 16787647,
'overline': 1150,
'braille_dots_78': 16787648,
'braille_dots_368': 16787620,
'braille_dots_178': 16787649,
'infinity': 2242,
'Cyrillic_GHE_bar': 16778386,
'Cyrillic_ghe_bar': 16778387,
'Cyrillic_ZHE_descender': 16778390,
'Cyrillic_zhe_descender': 16778391,
'Next_Virtual_Screen': 65234,
'Cyrillic_KA_descender': 16778394,
'Cyrillic_ka_descender': 16778395,
'Cyrillic_KA_vertstroke': 16778396,
'Cyrillic_ka_vertstroke': 16778397,
'nabla': 2245,
'kana_fullstop': 1185,
'kana_openingbracket': 1186,
'Cyrillic_en_descender': 16778403,
'kana_comma': 1188,
'kana_conjunctive': 1189,
'kana_WO': 1190,
'kana_a': 1191,
'kana_i': 1192,
'kana_u': 1193,
'kana_e': 1194,
'kana_o': 1195,
'kana_ya': 1196,
'kana_yu': 1197,
'kana_yo': 1198,
'kana_tsu': 1199,
'Cyrillic_U_straight_bar': 16778416,
'kana_A': 1201,
'kana_I': 1202,
'Cyrillic_ha_descender': 16778419,
'kana_E': 1204,
'kana_O': 1205,
'Cyrillic_CHE_descender': 16778422,
'kana_KI': 1207,
'Cyrillic_CHE_vertstroke': 16778424,
'Cyrillic_che_vertstroke': 16778425,
'Cyrillic_SHHA': 16778426,
'kana_SA': 1211,
'kana_SHI': 1212,
'kana_SU': 1213,
'kana_SE': 1214,
'kana_SO': 1215,
'kana_TA': 1216,
'kana_TI': 1217,
'kana_TSU': 1218,
'kana_TE': 1219,
'kana_TO': 1220,
'kana_NA': 1221,
'kana_NI': 1222,
'kana_NU': 1223,
'kana_NE': 1224,
'kana_NO': 1225,
'kana_HA': 1226,
'kana_HI': 1227,
'kana_HU': 1228,
'kana_HE': 1229,
'kana_HO': 1230,
'kana_MA': 1231,
'kana_MI': 1232,
'kana_MU': 1233,
'kana_ME': 1234,
'kana_MO': 1235,
'kana_YA': 1236,
'kana_YU': 1237,
'kana_YO': 1238,
'kana_RA': 1239,
'kana_RI': 1240,
'Cyrillic_schwa': 16778457,
'kana_RE': 1242,
'kana_RO': 1243,
'kana_WA': 1244,
'kana_N': 1245,
'voicedsound': 1246,
'semivoicedsound': 1247,
'Georgian_an': 16781520,
'Cyrillic_I_macron': 16778466,
'Cyrillic_i_macron': 16778467,
'Georgian_ban': 16781521,
'Cyrillic_O_bar': 16778472,
'Cyrillic_o_bar': 16778473,
'Georgian_gan': 16781522,
'Cyrillic_U_macron': 16778478,
'Cyrillic_u_macron': 16778479,
'Terminate_Server': 65237,
'Georgian_don': 16781523,
'Georgian_en': 16781524,
'braille_dots_468': 16787624,
'Georgian_vin': 16781525,
'Acircumflexgrave': 16785062,
'uhorntilde': 16785135,
'Georgian_zen': 16781526,
'Georgian_tan': 16781527,
'Georgian_in': 16781528,
'Georgian_kan': 16781529,
'Georgian_las': 16781530,
'Georgian_man': 16781531,
'Georgian_nar': 16781532,
'Ocircumflexhook': 16785108,
'Georgian_on': 16781533,
'Armenian_AYB': 16778545,
'Armenian_BEN': 16778546,
'Armenian_GIM': 16778547,
'Armenian_DA': 16778548,
'Armenian_YECH': 16778549,
'Armenian_ZA': 16778550,
'Armenian_E': 16778551,
'Armenian_AT': 16778552,
'Armenian_TO': 16778553,
'Armenian_ZHE': 16778554,
'Armenian_INI': 16778555,
'Armenian_LYUN': 16778556,
'Armenian_KHE': 16778557,
'Armenian_TSA': 16778558,
'Armenian_KEN': 16778559,
'Armenian_HO': 16778560,
'Armenian_DZA': 16778561,
'Armenian_GHAT': 16778562,
'Armenian_TCHE': 16778563,
'Armenian_MEN': 16778564,
'Armenian_HI': 16778565,
'Armenian_NU': 16778566,
'Armenian_SHA': 16778567,
'Armenian_VO': 16778568,
'Armenian_CHA': 16778569,
'Armenian_PE': 16778570,
'Armenian_JE': 16778571,
'Armenian_RA': 16778572,
'Armenian_SE': 16778573,
'Armenian_VEV': 16778574,
'Armenian_TYUN': 16778575,
'Armenian_RE': 16778576,
'Armenian_TSO': 16778577,
'Armenian_VYUN': 16778578,
'Armenian_PYUR': 16778579,
'Armenian_KE': 16778580,
'Armenian_O': 16778581,
'Armenian_FE': 16778582,
'Georgian_phar': 16781540,
'Armenian_apostrophe': 16778586,
'Armenian_accent': 16778587,
'Armenian_amanak': 16778588,
'Armenian_separation_mark': 16778589,
'Armenian_question': 16778590,
'Georgian_khar': 16781541,
'Armenian_ayb': 16778593,
'Armenian_ben': 16778594,
'Armenian_gim': 16778595,
'Armenian_da': 16778596,
'Armenian_yech': 16778597,
'Armenian_za': 16778598,
'Armenian_e': 16778599,
'Armenian_at': 16778600,
'Armenian_to': 16778601,
'Armenian_zhe': 16778602,
'Armenian_ini': 16778603,
'Armenian_lyun': 16778604,
'Armenian_khe': 16778605,
'Armenian_tsa': 16778606,
'Armenian_ken': 16778607,
'Armenian_ho': 16778608,
'Armenian_dza': 16778609,
'Armenian_ghat': 16778610,
'Armenian_tche': 16778611,
'Armenian_men': 16778612,
'Armenian_hi': 16778613,
'Armenian_nu': 16778614,
'Armenian_sha': 16778615,
'Armenian_vo': 16778616,
'Armenian_cha': 16778617,
'Armenian_pe': 16778618,
'Armenian_je': 16778619,
'Armenian_ra': 16778620,
'Armenian_se': 16778621,
'Armenian_vev': 16778622,
'Armenian_tyun': 16778623,
'Armenian_re': 16778624,
'Armenian_tso': 16778625,
'Armenian_vyun': 16778626,
'Armenian_pyur': 16778627,
'Armenian_ke': 16778628,
'Armenian_o': 16778629,
'Armenian_fe': 16778630,
'Armenian_ligature_ew': 16778631,
'Armenian_full_stop': 16778633,
'Armenian_yentamna': 16778634,
'Georgian_char': 16781549,
'Georgian_xan': 16781550,
'Georgian_jhan': 16781551,
'Georgian_hae': 16781552,
'Georgian_he': 16781553,
'Arabic_comma': 1452,
'Georgian_hie': 16781554,
'Georgian_we': 16781555,
'Georgian_har': 16781556,
'Arabic_semicolon': 1467,
'Arabic_question_mark': 1471,
'Arabic_hamza': 1473,
'Arabic_maddaonalef': 1474,
'Arabic_hamzaonalef': 1475,
'Arabic_hamzaonwaw': 1476,
'Arabic_hamzaunderalef': 1477,
'Arabic_hamzaonyeh': 1478,
'Arabic_alef': 1479,
'Arabic_beh': 1480,
'Arabic_tehmarbuta': 1481,
'Arabic_teh': 1482,
'Arabic_theh': 1483,
'Arabic_jeem': 1484,
'Arabic_hah': 1485,
'Arabic_khah': 1486,
'Arabic_dal': 1487,
'Arabic_thal': 1488,
'Arabic_ra': 1489,
'Arabic_zain': 1490,
'Arabic_seen': 1491,
'Arabic_sheen': 1492,
'Arabic_sad': 1493,
'Arabic_dad': 1494,
'Arabic_tah': 1495,
'Arabic_zah': 1496,
'Arabic_ain': 1497,
'Arabic_ghain': 1498,
'Arabic_tatweel': 1504,
'Arabic_feh': 1505,
'Arabic_qaf': 1506,
'Arabic_kaf': 1507,
'Arabic_lam': 1508,
'Arabic_meem': 1509,
'Arabic_noon': 1510,
'Arabic_ha': 1511,
'Arabic_waw': 1512,
'Arabic_alefmaksura': 1513,
'Arabic_yeh': 1514,
'Arabic_fathatan': 1515,
'Arabic_dammatan': 1516,
'Arabic_kasratan': 1517,
'Arabic_fatha': 1518,
'Arabic_damma': 1519,
'Arabic_kasra': 1520,
'Arabic_shadda': 1521,
'Arabic_sukun': 1522,
'downarrow': 2302,
'dead_abovedot': 65110,
'Georgian_rae': 16781536,
'pabovedot': 16784983,
'uhornbelowdot': 16785137,
'Zenkaku_Hankaku': 65322,
'Pointer_Left': 65248,
'dead_belowdot': 65120,
'Arabic_heh_goal': 16778945,
'dead_hook': 65121,
'Arabic_madda_above': 16778835,
'Arabic_hamza_above': 16778836,
'Arabic_hamza_below': 16778837,
'Arabic_0': 16778848,
'Arabic_1': 16778849,
'Arabic_2': 16778850,
'Arabic_3': 16778851,
'Arabic_4': 16778852,
'Arabic_5': 16778853,
'Arabic_6': 16778854,
'Arabic_7': 16778855,
'Arabic_8': 16778856,
'Arabic_9': 16778857,
'Arabic_percent': 16778858,
'dead_belowring': 65127,
'oe': 5053,
'Arabic_superscript_alef': 16778864,
'Arabic_tteh': 16778873,
'dead_belowtilde': 65130,
'Arabic_peh': 16778878,
'ehook': 16785083,
'dead_belowbreve': 65131,
'Kcedilla': 979,
'Arabic_tcheh': 16778886,
'Arabic_ddal': 16778888,
'Arabic_rreh': 16778897,
'Nacute': 465,
'acircumflexgrave': 16785063,
'Pointer_Down': 65251,
'Arabic_jeh': 16778904,
'Georgian_san': 16781537,
'Serbian_dje': 1697,
'Macedonia_gje': 1698,
'Cyrillic_io': 1699,
'Arabic_veh': 16778916,
'Macedonia_dse': 1701,
'Ukranian_i': 1702,
'Ukranian_yi': 1703,
'Cyrillic_je': 1704,
'Arabic_keheh': 16778921,
'Serbian_nje': 1706,
'Serbian_tshe': 1707,
'Macedonia_kje': 1708,
'Ukrainian_ghe_with_upturn': 1709,
'Byelorussian_shortu': 1710,
'Arabic_gaf': 16778927,
'numerosign': 1712,
'Serbian_DJE': 1713,
'Macedonia_GJE': 1714,
'Cyrillic_IO': 1715,
'Ukranian_JE': 1716,
'Macedonia_DSE': 1717,
'Ukranian_I': 1718,
'Ukrainian_YI': 1719,
'Serbian_JE': 1720,
'Cyrillic_LJE': 1721,
'Serbian_NJE': 1722,
'Serbian_TSHE': 1723,
'Macedonia_KJE': 1724,
'Ukrainian_GHE_WITH_UPTURN': 1725,
'Arabic_heh_doachashmee': 16778942,
'Serbian_DZE': 1727,
'Cyrillic_yu': 1728,
'Cyrillic_a': 1729,
'Cyrillic_be': 1730,
'Cyrillic_tse': 1731,
'Cyrillic_de': 1732,
'Cyrillic_ie': 1733,
'Cyrillic_ef': 1734,
'Cyrillic_ghe': 1735,
'Cyrillic_ha': 1736,
'Cyrillic_i': 1737,
'Cyrillic_shorti': 1738,
'Cyrillic_ka': 1739,
'Cyrillic_el': 1740,
'Cyrillic_em': 1741,
'Cyrillic_en': 1742,
'Cyrillic_o': 1743,
'Cyrillic_pe': 1744,
'Cyrillic_ya': 1745,
'Cyrillic_er': 1746,
'Cyrillic_es': 1747,
'Arabic_fullstop': 16778964,
'Cyrillic_u': 1749,
'Cyrillic_zhe': 1750,
'Cyrillic_ve': 1751,
'Cyrillic_softsign': 1752,
'Cyrillic_yeru': 1753,
'Cyrillic_ze': 1754,
'Cyrillic_sha': 1755,
'Cyrillic_e': 1756,
'Cyrillic_shcha': 1757,
'Cyrillic_che': 1758,
'Cyrillic_hardsign': 1759,
'Cyrillic_YU': 1760,
'Cyrillic_A': 1761,
'Cyrillic_BE': 1762,
'Cyrillic_TSE': 1763,
'Cyrillic_DE': 1764,
'Cyrillic_IE': 1765,
'Cyrillic_EF': 1766,
'Cyrillic_GHE': 1767,
'Cyrillic_HA': 1768,
'Cyrillic_I': 1769,
'Cyrillic_SHORTI': 1770,
'Cyrillic_KA': 1771,
'Cyrillic_EL': 1772,
'Cyrillic_EM': 1773,
'Cyrillic_EN': 1774,
'Cyrillic_O': 1775,
'Cyrillic_PE': 1776,
'Farsi_1': 16778993,
'Cyrillic_ER': 1778,
'Cyrillic_ES': 1779,
'Farsi_4': 16778996,
'Cyrillic_U': 1781,
'Cyrillic_ZHE': 1782,
'Cyrillic_VE': 1783,
'Farsi_8': 16779000,
'Farsi_9': 16779001,
'Cyrillic_ZE': 1786,
'Cyrillic_SHA': 1787,
'Cyrillic_E': 1788,
'Cyrillic_SHCHA': 1789,
'Cyrillic_CHE': 1790,
'Cyrillic_HARDSIGN': 1791,
'Wgrave': 16785024,
'dead_A': 65153,
'dead_e': 65154,
'Pointer_DownRight': 65255,
'braille_dots_1345678': 16787709,
'dead_E': 65155,
'Uogonek': 985,
'dead_i': 65156,
'wdiaeresis': 16785029,
'Pointer_Button_Dflt': 65256,
'braille_dots_1368': 16787621,
'Xabovedot': 16785034,
'xabovedot': 16785035,
'abelowdot': 16785057,
'ygrave': 16785139,
'Pointer_Button2': 65258,
'Greek_ALPHAaccent': 1953,
'Greek_EPSILONaccent': 1954,
'Greek_ETAaccent': 1955,
'Greek_IOTAaccent': 1956,
'Greek_IOTAdiaeresis': 1957,
'Greek_OMICRONaccent': 1959,
'Greek_UPSILONaccent': 1960,
'Greek_UPSILONdieresis': 1961,
'Greek_OMEGAaccent': 1963,
'Greek_accentdieresis': 1966,
'Greek_horizbar': 1967,
'Greek_alphaaccent': 1969,
'Greek_epsilonaccent': 1970,
'Greek_etaaccent': 1971,
'Greek_iotaaccent': 1972,
'Greek_iotadieresis': 1973,
'Greek_iotaaccentdieresis': 1974,
'Greek_omicronaccent': 1975,
'Greek_upsilonaccent': 1976,
'Greek_upsilondieresis': 1977,
'Greek_upsilonaccentdieresis': 1978,
'Greek_omegaaccent': 1979,
'Greek_ALPHA': 1985,
'Greek_BETA': 1986,
'Greek_GAMMA': 1987,
'Greek_DELTA': 1988,
'Greek_EPSILON': 1989,
'Greek_ZETA': 1990,
'Greek_ETA': 1991,
'Greek_THETA': 1992,
'Greek_IOTA': 1993,
'Greek_KAPPA': 1994,
'Greek_LAMBDA': 1995,
'Greek_MU': 1996,
'Greek_NU': 1997,
'Greek_XI': 1998,
'Greek_OMICRON': 1999,
'Greek_PI': 2000,
'Greek_RHO': 2001,
'Greek_SIGMA': 2002,
'c_h': 65187,
'Greek_TAU': 2004,
'Greek_UPSILON': 2005,
'Greek_PHI': 2006,
'Greek_CHI': 2007,
'Greek_PSI': 2008,
'Ukranian_je': 1700,
'Ahook': 16785058,
'C_H': 65189,
'Greek_alpha': 2017,
'Greek_beta': 2018,
'Greek_gamma': 2019,
'Greek_delta': 2020,
'Greek_epsilon': 2021,
'Greek_zeta': 2022,
'Greek_eta': 2023,
'Greek_theta': 2024,
'Greek_iota': 2025,
'Greek_kappa': 2026,
'Greek_lamda': 2027,
'Greek_mu': 2028,
'Greek_nu': 2029,
'Greek_xi': 2030,
'Greek_omicron': 2031,
'Greek_pi': 2032,
'Greek_rho': 2033,
'Greek_sigma': 2034,
'Greek_finalsmallsigma': 2035,
'Greek_tau': 2036,
'Greek_upsilon': 2037,
'Greek_phi': 2038,
'Serbian_lje': 1705,
'Greek_psi': 2040,
'Greek_omega': 2041,
'Acircumflextilde': 16785066,
'braille_blank': 16787456,
'braille_dots_1': 16787457,
'braille_dots_2': 16787458,
'braille_dots_12': 16787459,
'braille_dots_3': 16787460,
'braille_dots_13': 16787461,
'braille_dots_23': 16787462,
'braille_dots_123': 16787463,
'braille_dots_4': 16787464,
'braille_dots_14': 16787465,
'braille_dots_24': 16787466,
'braille_dots_124': 16787467,
'braille_dots_34': 16787468,
'braille_dots_134': 16787469,
'braille_dots_234': 16787470,
'braille_dots_1234': 16787471,
'braille_dots_5': 16787472,
'braille_dots_15': 16787473,
'braille_dots_25': 16787474,
'braille_dots_125': 16787475,
'braille_dots_35': 16787476,
'braille_dots_135': 16787477,
'braille_dots_235': 16787478,
'braille_dots_1235': 16787479,
'braille_dots_45': 16787480,
'braille_dots_145': 16787481,
'braille_dots_245': 16787482,
'braille_dots_1245': 16787483,
'braille_dots_345': 16787484,
'braille_dots_1345': 16787485,
'braille_dots_2345': 16787486,
'braille_dots_12345': 16787487,
'braille_dots_6': 16787488,
'braille_dots_16': 16787489,
'braille_dots_26': 16787490,
'braille_dots_126': 16787491,
'braille_dots_36': 16787492,
'braille_dots_136': 16787493,
'braille_dots_236': 16787494,
'braille_dots_1236': 16787495,
'braille_dots_46': 16787496,
'braille_dots_146': 16787497,
'braille_dots_246': 16787498,
'braille_dots_1246': 16787499,
'braille_dots_346': 16787500,
'braille_dots_1346': 16787501,
'braille_dots_2346': 16787502,
'braille_dots_12346': 16787503,
'braille_dots_56': 16787504,
'braille_dots_156': 16787505,
'braille_dots_256': 16787506,
'braille_dots_1256': 16787507,
'braille_dots_356': 16787508,
'braille_dots_1356': 16787509,
'braille_dots_2356': 16787510,
'braille_dots_12356': 16787511,
'braille_dots_456': 16787512,
'braille_dots_1456': 16787513,
'braille_dots_2456': 16787514,
'braille_dots_12456': 16787515,
'braille_dots_3456': 16787516,
'braille_dots_13456': 16787517,
'braille_dots_23456': 16787518,
'braille_dots_123456': 16787519,
'braille_dots_7': 16787520,
'braille_dots_17': 16787521,
'braille_dots_27': 16787522,
'braille_dots_127': 16787523,
'braille_dots_37': 16787524,
'braille_dots_137': 16787525,
'braille_dots_237': 16787526,
'braille_dots_1237': 16787527,
'braille_dots_47': 16787528,
'braille_dots_147': 16787529,
'braille_dots_247': 16787530,
'braille_dots_1247': 16787531,
'braille_dots_347': 16787532,
'braille_dots_1347': 16787533,
'braille_dots_2347': 16787534,
'braille_dots_12347': 16787535,
'braille_dots_57': 16787536,
'braille_dots_157': 16787537,
'braille_dots_257': 16787538,
'braille_dots_1257': 16787539,
'braille_dots_357': 16787540,
'braille_dots_1357': 16787541,
'braille_dots_2357': 16787542,
'braille_dots_12357': 16787543,
'braille_dots_457': 16787544,
'braille_dots_1457': 16787545,
'braille_dots_2457': 16787546,
'braille_dots_12457': 16787547,
'braille_dots_3457': 16787548,
'braille_dots_13457': 16787549,
'braille_dots_23457': 16787550,
'braille_dots_123457': 16787551,
'braille_dots_67': 16787552,
'braille_dots_167': 16787553,
'braille_dots_267': 16787554,
'braille_dots_1267': 16787555,
'braille_dots_367': 16787556,
'braille_dots_1367': 16787557,
'braille_dots_2367': 16787558,
'braille_dots_12367': 16787559,
'braille_dots_467': 16787560,
'braille_dots_1467': 16787561,
'braille_dots_2467': 16787562,
'braille_dots_12467': 16787563,
'braille_dots_3467': 16787564,
'braille_dots_13467': 16787565,
'braille_dots_23467': 16787566,
'braille_dots_123467': 16787567,
'braille_dots_567': 16787568,
'braille_dots_1567': 16787569,
'braille_dots_2567': 16787570,
'braille_dots_12567': 16787571,
'braille_dots_3567': 16787572,
'braille_dots_13567': 16787573,
'braille_dots_23567': 16787574,
'braille_dots_123567': 16787575,
'braille_dots_4567': 16787576,
'braille_dots_14567': 16787577,
'braille_dots_24567': 16787578,
'braille_dots_124567': 16787579,
'braille_dots_34567': 16787580,
'braille_dots_134567': 16787581,
'braille_dots_234567': 16787582,
'braille_dots_1234567': 16787583,
'braille_dots_8': 16787584,
'braille_dots_18': 16787585,
'braille_dots_28': 16787586,
'braille_dots_128': 16787587,
'braille_dots_38': 16787588,
'braille_dots_138': 16787589,
'braille_dots_238': 16787590,
'braille_dots_1238': 16787591,
'braille_dots_48': 16787592,
'braille_dots_148': 16787593,
'braille_dots_248': 16787594,
'braille_dots_1248': 16787595,
'braille_dots_348': 16787596,
'braille_dots_1348': 16787597,
'braille_dots_2348': 16787598,
'braille_dots_12348': 16787599,
'braille_dots_58': 16787600,
'braille_dots_158': 16787601,
'braille_dots_258': 16787602,
'braille_dots_1258': 16787603,
'braille_dots_358': 16787604,
'braille_dots_1358': 16787605,
'braille_dots_2358': 16787606,
'braille_dots_12358': 16787607,
'braille_dots_458': 16787608,
'braille_dots_1458': 16787609,
'braille_dots_2458': 16787610,
'braille_dots_12458': 16787611,
'braille_dots_3458': 16787612,
'braille_dots_13458': 16787613,
'braille_dots_23458': 16787614,
'braille_dots_123458': 16787615,
'braille_dots_68': 16787616,
'leftradical': 2209,
'topleftradical': 2210,
'horizconnector': 2211,
'topintegral': 2212,
'botintegral': 2213,
'vertconnector': 2214,
'topleftsqbracket': 2215,
'botleftsqbracket': 2216,
'braille_dots_1468': 16787625,
'botrightsqbracket': 2218,
'braille_dots_12468': 16787627,
'braille_dots_3468': 16787628,
'braille_dots_13468': 16787629,
'braille_dots_23468': 16787630,
'leftmiddlecurlybrace': 2223,
'rightmiddlecurlybrace': 2224,
'braille_dots_1568': 16787633,
'braille_dots_2568': 16787634,
'topvertsummationconnector': 2227,
'braille_dots_3568': 16787636,
'toprightsummation': 2229,
'braille_dots_23568': 16787638,
'braille_dots_123568': 16787639,
'braille_dots_4568': 16787640,
'braille_dots_14568': 16787641,
'braille_dots_24568': 16787642,
'braille_dots_124568': 16787643,
'lessthanequal': 2236,
'braille_dots_134568': 16787645,
'greaterthanequal': 2238,
'integral': 2239,
'therefore': 2240,
'variation': 2241,
'braille_dots_278': 16787650,
'braille_dots_1278': 16787651,
'braille_dots_378': 16787652,
'braille_dots_1378': 16787653,
'braille_dots_2378': 16787654,
'braille_dots_12378': 16787655,
'approximate': 2248,
'similarequal': 2249,
'braille_dots_2478': 16787658,
'braille_dots_12478': 16787659,
'braille_dots_3478': 16787660,
'braille_dots_13478': 16787661,
'braille_dots_23478': 16787662,
'braille_dots_123478': 16787663,
'braille_dots_578': 16787664,
'braille_dots_1578': 16787665,
'braille_dots_2578': 16787666,
'braille_dots_12578': 16787667,
'braille_dots_3578': 16787668,
'braille_dots_13578': 16787669,
'radical': 2262,
'braille_dots_123578': 16787671,
'braille_dots_4578': 16787672,
'braille_dots_14578': 16787673,
'includedin': 2266,
'includes': 2267,
'intersection': 2268,
'union': 2269,
'braille_dots_234578': 16787678,
'logicalor': 2271,
'braille_dots_678': 16787680,
'braille_dots_1678': 16787681,
'braille_dots_2678': 16787682,
'braille_dots_12678': 16787683,
'braille_dots_3678': 16787684,
'braille_dots_13678': 16787685,
'braille_dots_23678': 16787686,
'braille_dots_123678': 16787687,
'braille_dots_4678': 16787688,
'braille_dots_14678': 16787689,
'braille_dots_24678': 16787690,
'braille_dots_124678': 16787691,
'braille_dots_34678': 16787692,
'braille_dots_134678': 16787693,
'braille_dots_234678': 16787694,
'braille_dots_1234678': 16787695,
'braille_dots_5678': 16787696,
'braille_dots_15678': 16787697,
'braille_dots_25678': 16787698,
'braille_dots_125678': 16787699,
'braille_dots_35678': 16787700,
'braille_dots_135678': 16787701,
'braille_dots_235678': 16787702,
'braille_dots_1235678': 16787703,
'braille_dots_45678': 16787704,
'braille_dots_145678': 16787705,
'braille_dots_245678': 16787706,
'leftarrow': 2299,
'uparrow': 2300,
'rightarrow': 2301,
'braille_dots_2345678': 16787710,
'braille_dots_12345678': 16787711,
'acircumflextilde': 16785067,
'Acircumflexacute': 16785060,
'ocircumflextilde': 16785111,
'Last_Virtual_Screen': 65236,
'Pointer_Drag4': 65272,
'Ocircumflexbelowdot': 16785112,
'ocircumflexbelowdot': 16785113,
'Ohornacute': 16785114,
'Acircumflexbelowdot': 16785068,
'Ohorngrave': 16785116,
'Pointer_EnableKeys': 65273,
'Hangul_J_RieulMieum': 3805,
'Ohornhook': 16785118,
'ohornhook': 16785119,
'Ohorntilde': 16785120,
'ohornacute': 16785115,
'Pointer_Right': 65249,
'Pointer_Up': 65250,
'ohornbelowdot': 16785123,
'Ubelowdot': 16785124,
'Pointer_UpRight': 65253,
'Pointer_DownLeft': 65254,
'Pointer_DblClick3': 65265,
'uhook': 16785127,
'Uhornacute': 16785128,
'Pointer_Button1': 65257,
'Uhorngrave': 16785130,
'Pointer_Button3': 65259,
'Uhornhook': 16785132,
'uhornhook': 16785133,
'Pointer_DblClick_Dflt': 65262,
'Pointer_DblClick1': 65263,
'ifonlyif': 2253,
'braille_dots_1245678': 16787707,
'Farsi_0': 16778992,
'Cyrillic_YA': 1777,
'Sinh_nya': 16780708,
'Farsi_2': 16778994,
'Farsi_3': 16778995,
'Cyrillic_TE': 1780,
'Farsi_5': 16778997,
'Farsi_6': 16778998,
'Aogonek': 417,
'Farsi_7': 16778999,
'Cyrillic_SOFTSIGN': 1784,
'Cyrillic_YERU': 1785,
'Pointer_Accelerate': 65274,
'blank': 2527,
'soliddiamond': 2528,
'checkerboard': 2529,
'ht': 2530,
'ff': 2531,
'cr': 2532,
'lf': 2533,
'Sinh_nja': 16780710,
'nl': 2536,
'vt': 2537,
'lowrightcorner': 2538,
'uprightcorner': 2539,
'upleftcorner': 2540,
'lowleftcorner': 2541,
'crossinglines': 2542,
'horizlinescan1': 2543,
'horizlinescan3': 2544,
'horizlinescan5': 2545,
'horizlinescan7': 2546,
'horizlinescan9': 2547,
'leftt': 2548,
'rightt': 2549,
'bott': 2550,
'topt': 2551,
'vertbar': 2552,
'Pointer_DblClick4': 65266,
'Ihook': 16785096,
'Arabic_noon_ghunna': 16778938,
'ocircumflexhook': 16785109,
'Abrevetilde': 16785076,
'Uhorn': 16777647,
'braille_dots_2468': 16787626,
'Sinh_ttha': 16780712,
'Overlay2_Enable': 65145,
'abrevetilde': 16785077,
'implies': 2254,
'braille_dots_345678': 16787708,
'Zstroke': 16777653,
'sacute': 438,
'Uhorntilde': 16785134,
'EZH': 16777655,
'Abrevebelowdot': 16785078,
'logicaland': 2270,
'braille_dots_23578': 16787670,
'abrevebelowdot': 16785079,
'ohorngrave': 16785117,
'Ch': 65185,
'Byelorussian_SHORTU': 1726,
'Ebelowdot': 16785080,
'Georgian_par': 16781534,
'Pointer_DblClick5': 65267,
'Sinh_ndda': 16780716,
'emspace': 2721,
'enspace': 2722,
'em3space': 2723,
'em4space': 2724,
'digitspace': 2725,
'punctspace': 2726,
'thinspace': 2727,
'hairspace': 2728,
'emdash': 2729,
'endash': 2730,
'signifblank': 2732,
'ellipsis': 2734,
'doubbaselinedot': 2735,
'onethird': 2736,
'twothirds': 2737,
'onefifth': 2738,
'twofifths': 2739,
'threefifths': 2740,
'fourfifths': 2741,
'onesixth': 2742,
'fivesixths': 2743,
'careof': 2744,
'figdash': 2747,
'leftanglebracket': 2748,
'decimalpoint': 2749,
'rightanglebracket': 2750,
'marker': 2751,
'oneeighth': 2755,
'threeeighths': 2756,
'fiveeighths': 2757,
'seveneighths': 2758,
'Ehook': 16785082,
'trademark': 2761,
'signaturemark': 2762,
'trademarkincircle': 2763,
'leftopentriangle': 2764,
'rightopentriangle': 2765,
'emopencircle': 2766,
'emopenrectangle': 2767,
'leftsinglequotemark': 2768,
'rightsinglequotemark': 2769,
'leftdoublequotemark': 2770,
'rightdoublequotemark': 2771,
'prescription': 2772,
'permille': 2773,
'minutes': 2774,
'seconds': 2775,
'braille_dots_24578': 16787674,
'latincross': 2777,
'hexagram': 2778,
'filledrectbullet': 2779,
'filledlefttribullet': 2780,
'filledrighttribullet': 2781,
'emfilledcircle': 2782,
'emfilledrect': 2783,
'enopencircbullet': 2784,
'enopensquarebullet': 2785,
'openrectbullet': 2786,
'opentribulletup': 2787,
'opentribulletdown': 2788,
'openstar': 2789,
'enfilledcircbullet': 2790,
'enfilledsqbullet': 2791,
'filledtribulletup': 2792,
'filledtribulletdown': 2793,
'leftpointer': 2794,
'rightpointer': 2795,
'club': 2796,
'diamond': 2797,
'heart': 2798,
'maltesecross': 2800,
'dagger': 2801,
'doubledagger': 2802,
'checkmark': 2803,
'ballotcross': 2804,
'musicalsharp': 2805,
'musicalflat': 2806,
'malesymbol': 2807,
'femalesymbol': 2808,
'telephone': 2809,
'telephonerecorder': 2810,
'phonographcopyright': 2811,
'caret': 2812,
'singlelowquotemark': 2813,
'doublelowquotemark': 2814,
'cursor': 2815,
'Etilde': 16785084,
'Georgian_tar': 16781538,
'CH': 65186,
'braille_dots_34578': 16787676,
'abrevehook': 16785075,
'Eisu_Shift': 65327,
'KP_F2': 65426,
'etilde': 16785085,
'Georgian_un': 16781539,
'Pointer_Drag_Dflt': 65268,
'braille_dots_134578': 16787677,
'Hangul_End': 65331,
'ecircumflexhook': 16785091,
'Ecircumflexacute': 16785086,
'kana_closingbracket': 1187,
'ecircumflexacute': 16785087,
'Acircumflexhook': 16785064,
'Gcaron': 16777702,
'braille_dots_1234578': 16787679,
'Ecircumflexgrave': 16785088,
'Georgian_ghan': 16781542,
'ecircumflexgrave': 16785089,
'Georgian_qar': 16781543,
'leftcaret': 2979,
'rightcaret': 2982,
'downcaret': 2984,
'upcaret': 2985,
'Cyrillic_dzhe': 1711,
'braille_dots_478': 16787656,
'Ecircumflexhook': 16785090,
'Georgian_shin': 16781544,
'Pointer_Drag1': 65269,
'overbar': 3008,
'downtack': 3010,
'upshoe': 3011,
'downstile': 3012,
'underbar': 3014,
'jot': 3018,
'quad': 3020,
'braille_dots_12368': 16787623,
'uptack': 3022,
'circle': 3023,
'upstile': 3027,
'downshoe': 3030,
'rightshoe': 3032,
'leftshoe': 3034,
'Georgian_chin': 16781545,
'lefttack': 3036,
'Ecircumflextilde': 16785092,
'acircumflexhook': 16785065,
'Georgian_can': 16781546,
'righttack': 3068,
'Begin': 65368,
'ecircumflextilde': 16785093,
'Cyrillic_U_straight': 16778414,
'Georgian_jil': 16781547,
'Cyrillic_u_straight': 16778415,
'prolongedsound': 1200,
'Farsi_yeh': 16778956,
'Cyrillic_u_straight_bar': 16778417,
'Cyrillic_HA_descender': 16778418,
'Ecircumflexbelowdot': 16785094,
'kana_U': 1203,
'Georgian_cil': 16781548,
'ahook': 16785059,
'kana_KA': 1206,
'Cyrillic_che_descender': 16778423,
'braille_dots_1478': 16787657,
'ecircumflexbelowdot': 16785095,
'partialderivative': 2287,
'kana_KU': 1208,
'Cyrillic_EN_descender': 16778402,
'Pointer_Drag2': 65270,
'kana_KE': 1209,
'Sinh_ra': 16780731,
'Cyrillic_shha': 16778427,
'braille_dots_2368': 16787622,
'Abreveacute': 16785070,
'Pointer_DblClick2': 65264,
'ihook': 16785097,
'ybelowdot': 16785141,
'Ibelowdot': 16785098,
'ebelowdot': 16785081,
'Pointer_UpLeft': 65252,
'ocircumflexgrave': 16785107,
'ibelowdot': 16785099,
'Arabic_yeh_baree': 16778962,
'hebrew_doublelowline': 3295,
'hebrew_aleph': 3296,
'hebrew_bet': 3297,
'hebrew_gimel': 3298,
'hebrew_daleth': 3299,
'hebrew_he': 3300,
'hebrew_waw': 3301,
'hebrew_zayin': 3302,
'hebrew_chet': 3303,
'hebrew_tet': 3304,
'hebrew_yod': 3305,
'hebrew_finalkaph': 3306,
'hebrew_kaph': 3307,
'hebrew_lamed': 3308,
'hebrew_finalmem': 3309,
'hebrew_mem': 3310,
'hebrew_finalnun': 3311,
'hebrew_nun': 3312,
'hebrew_samech': 3313,
'hebrew_ayin': 3314,
'hebrew_finalpe': 3315,
'hebrew_pe': 3316,
'hebrew_finalzadi': 3317,
'hebrew_zadi': 3318,
'hebrew_kuf': 3319,
'hebrew_resh': 3320,
'hebrew_shin': 3321,
'hebrew_taf': 3322,
'3270_Duplicate': 64769,
'3270_FieldMark': 64770,
'3270_Right2': 64771,
'3270_Left2': 64772,
'3270_BackTab': 64773,
'3270_EraseEOF': 64774,
'3270_EraseInput': 64775,
'3270_Reset': 64776,
'3270_Quit': 64777,
'3270_PA1': 64778,
'3270_PA2': 64779,
'3270_PA3': 64780,
'3270_Test': 64781,
'3270_Attn': 64782,
'3270_CursorBlink': 64783,
'3270_AltCursor': 64784,
'Cyrillic_SCHWA': 16778456,
'3270_Jump': 64786,
'3270_Ident': 64787,
'Cyrillic_te': 1748,
'3270_Copy': 64789,
'3270_Play': 64790,
'3270_Setup': 64791,
'Georgian_zhar': 16781535,
'3270_ChangeScreen': 64793,
'3270_DeleteWord': 64794,
'3270_ExSelect': 64795,
'3270_CursorSelect': 64796,
'3270_PrintScreen': 64797,
'3270_Enter': 64798,
'Ohook': 16785102,
'function': 2294,
'p': 112,
'kana_KO': 1210,
'ohook': 16785103,
'Georgian_hoe': 16781557,
'Ocircumflexacute': 16785104,
'Georgian_fi': 16781558,
'Ohornbelowdot': 16785122,
'XF86WakeUp': 269025067,
'ocircumflexacute': 16785105,
'Sinh_ng': 16780674,
'Sinh_h2': 16780675,
'Sinh_a': 16780677,
'Sinh_aa': 16780678,
'Sinh_ae': 16780679,
'Sinh_aee': 16780680,
'Sinh_i': 16780681,
'Sinh_ii': 16780682,
'Sinh_u': 16780683,
'Sinh_uu': 16780684,
'Sinh_ri': 16780685,
'Sinh_rii': 16780686,
'Sinh_lu': 16780687,
'Sinh_luu': 16780688,
'Sinh_e': 16780689,
'Sinh_ee': 16780690,
'Sinh_ai': 16780691,
'Sinh_o': 16780692,
'Sinh_oo': 16780693,
'Sinh_au': 16780694,
'Ocircumflexgrave': 16785106,
'Sinh_ka': 16780698,
'Sinh_kha': 16780699,
'Sinh_ga': 16780700,
'Sinh_gha': 16780701,
'Sinh_ng2': 16780702,
'Sinh_nga': 16780703,
'Sinh_ca': 16780704,
'Thai_kokai': 3489,
'Thai_khokhai': 3490,
'Thai_khokhuat': 3491,
'Thai_khokhwai': 3492,
'Thai_khokhon': 3493,
'Thai_khorakhang': 3494,
'Thai_ngongu': 3495,
'Thai_chochan': 3496,
'Thai_choching': 3497,
'Thai_chochang': 3498,
'Thai_soso': 3499,
'Thai_chochoe': 3500,
'Thai_yoying': 3501,
'Thai_dochada': 3502,
'Thai_topatak': 3503,
'Thai_thothan': 3504,
'Thai_thonangmontho': 3505,
'Thai_thophuthao': 3506,
'Thai_nonen': 3507,
'Thai_dodek': 3508,
'Thai_totao': 3509,
'Thai_thothung': 3510,
'Thai_thothahan': 3511,
'Thai_thothong': 3512,
'Thai_nonu': 3513,
'Thai_bobaimai': 3514,
'Thai_popla': 3515,
'Thai_phophung': 3516,
'Thai_fofa': 3517,
'Thai_phophan': 3518,
'Thai_fofan': 3519,
'Thai_phosamphao': 3520,
'Thai_moma': 3521,
'Thai_yoyak': 3522,
'Thai_rorua': 3523,
'Thai_ru': 3524,
'Thai_loling': 3525,
'Thai_lu': 3526,
'Thai_wowaen': 3527,
'Thai_sosala': 3528,
'Thai_sorusi': 3529,
'Thai_sosua': 3530,
'Thai_hohip': 3531,
'Thai_lochula': 3532,
'Thai_oang': 3533,
'Thai_honokhuk': 3534,
'Thai_paiyannoi': 3535,
'Thai_saraa': 3536,
'Thai_maihanakat': 3537,
'Thai_saraaa': 3538,
'Thai_saraam': 3539,
'Thai_sarai': 3540,
'Thai_saraii': 3541,
'Thai_saraue': 3542,
'Thai_sarauee': 3543,
'Thai_sarau': 3544,
'Thai_sarauu': 3545,
'Thai_phinthu': 3546,
'Sinh_ai2': 16780763,
'Sinh_o2': 16780764,
'Sinh_oo2': 16780765,
'Thai_maihanakat_maitho': 3550,
'Thai_baht': 3551,
'Thai_sarae': 3552,
'Thai_saraae': 3553,
'Thai_sarao': 3554,
'Thai_saraaimaimuan': 3555,
'Thai_saraaimaimalai': 3556,
'Thai_lakkhangyao': 3557,
'Thai_maiyamok': 3558,
'Thai_maitaikhu': 3559,
'Thai_maiek': 3560,
'Thai_maitho': 3561,
'Thai_maitri': 3562,
'Thai_maichattawa': 3563,
'Thai_thanthakhat': 3564,
'Thai_nikhahit': 3565,
'Thai_leksun': 3568,
'Thai_leknung': 3569,
'Thai_leksong': 3570,
'Thai_leksam': 3571,
'Thai_leksi': 3572,
'Thai_lekha': 3573,
'Thai_lekhok': 3574,
'Thai_lekchet': 3575,
'Thai_lekpaet': 3576,
'Thai_lekkao': 3577,
'ISO_Lock': 65025,
'ISO_Level2_Latch': 65026,
'ISO_Level3_Shift': 65027,
'ISO_Level3_Latch': 65028,
'ISO_Level3_Lock': 65029,
'ISO_Group_Latch': 65030,
'ISO_Group_Lock': 65031,
'ISO_Next_Group': 65032,
'ISO_Next_Group_Lock': 65033,
'ISO_Prev_Group': 65034,
'dabovedot': 16784907,
'ISO_First_Group': 65036,
'ISO_First_Group_Lock': 65037,
'ISO_Last_Group': 65038,
'ISO_Last_Group_Lock': 65039,
'Ocircumflextilde': 16785110,
'ISO_Level5_Shift': 65041,
'ISO_Level5_Latch': 65042,
'ISO_Level5_Lock': 65043,
'Fabovedot': 16784926,
'fabovedot': 16784927,
'ISO_Left_Tab': 65056,
'ISO_Move_Line_Up': 65057,
'ISO_Move_Line_Down': 65058,
'ISO_Partial_Line_Up': 65059,
'ISO_Partial_Line_Down': 65060,
'ISO_Partial_Space_Left': 65061,
'ISO_Partial_Space_Right': 65062,
'ISO_Set_Margin_Left': 65063,
'ISO_Set_Margin_Right': 65064,
'ISO_Release_Margin_Left': 65065,
'ISO_Release_Margin_Right': 65066,
'ISO_Release_Both_Margins': 65067,
'ISO_Fast_Cursor_Left': 65068,
'ISO_Fast_Cursor_Right': 65069,
'ISO_Fast_Cursor_Up': 65070,
'ISO_Fast_Cursor_Down': 65071,
'ISO_Continuous_Underline': 65072,
'ISO_Discontinuous_Underline': 65073,
'ISO_Emphasize': 65074,
'ISO_Center_Object': 65075,
'ISO_Enter': 65076,
'Lbelowdot': 16784950,
'lbelowdot': 16784951,
'Mabovedot': 16784960,
'mabovedot': 16784961,
'acircumflexbelowdot': 16785069,
'dead_grave': 65104,
'dead_acute': 65105,
'dead_circumflex': 65106,
'dead_tilde': 65107,
'dead_macron': 65108,
'dead_breve': 65109,
'Pabovedot': 16784982,
'dead_diaeresis': 65111,
'dead_abovering': 65112,
'dead_doubleacute': 65113,
'dead_caron': 65114,
'dead_cedilla': 65115,
'dead_ogonek': 65116,
'dead_iota': 65117,
'dead_voiced_sound': 65118,
'dead_semivoiced_sound': 65119,
'Sabovedot': 16784992,
'sabovedot': 16784993,
'dead_horn': 65122,
'dead_stroke': 65123,
'dead_abovecomma': 65124,
'dead_abovereversedcomma': 65125,
'dead_doublegrave': 65126,
'3270_KeyClick': 64785,
'dead_belowmacron': 65128,
'dead_belowcircumflex': 65129,
'Tabovedot': 16785002,
'tabovedot': 16785003,
'dead_belowdiaeresis': 65132,
'dead_invertedbreve': 65133,
'dead_belowcomma': 65134,
'dead_currency': 65135,
'AccessX_Enable': 65136,
'AccessX_Feedback_Enable': 65137,
'RepeatKeys_Enable': 65138,
'SlowKeys_Enable': 65139,
'BounceKeys_Enable': 65140,
'StickyKeys_Enable': 65141,
'MouseKeys_Enable': 65142,
'MouseKeys_Accel_Enable': 65143,
'Overlay1_Enable': 65144,
'3270_Rule': 64788,
'AudibleBell_Enable': 65146,
'dead_a': 65152,
'wgrave': 16785025,
'Wacute': 16785026,
'wacute': 16785027,
'Wdiaeresis': 16785028,
'dead_I': 65157,
'dead_o': 65158,
'dead_O': 65159,
'dead_u': 65160,
'dead_U': 65161,
'dead_small_schwa': 65162,
'dead_capital_schwa': 65163,
'dead_greek': 65164,
'3270_Record': 64792,
'ch': 65184,
'Hangul_Kiyeog': 3745,
'Hangul_SsangKiyeog': 3746,
'Hangul_KiyeogSios': 3747,
'Hangul_Nieun': 3748,
'Hangul_NieunJieuj': 3749,
'Hangul_NieunHieuh': 3750,
'Hangul_Dikeud': 3751,
'Hangul_SsangDikeud': 3752,
'Hangul_Rieul': 3753,
'Hangul_RieulKiyeog': 3754,
'Hangul_RieulMieum': 3755,
'Hangul_RieulPieub': 3756,
'Hangul_RieulSios': 3757,
'Hangul_RieulTieut': 3758,
'Hangul_RieulPhieuf': 3759,
'Hangul_RieulHieuh': 3760,
'Hangul_Mieum': 3761,
'Hangul_Pieub': 3762,
'Hangul_SsangPieub': 3763,
'Hangul_PieubSios': 3764,
'Hangul_Sios': 3765,
'Hangul_SsangSios': 3766,
'Hangul_Ieung': 3767,
'Hangul_Jieuj': 3768,
'Hangul_SsangJieuj': 3769,
'Hangul_Cieuc': 3770,
'Hangul_Khieuq': 3771,
'Hangul_Tieut': 3772,
'Hangul_Phieuf': 3773,
'Hangul_Hieuh': 3774,
'Hangul_A': 3775,
'Hangul_AE': 3776,
'Hangul_YA': 3777,
'Hangul_YAE': 3778,
'Hangul_EO': 3779,
'Hangul_E': 3780,
'Hangul_YEO': 3781,
'Hangul_YE': 3782,
'Hangul_O': 3783,
'Hangul_WA': 3784,
'Hangul_WAE': 3785,
'Hangul_OE': 3786,
'Hangul_YO': 3787,
'Hangul_U': 3788,
'Hangul_WEO': 3789,
'Hangul_WE': 3790,
'Hangul_WI': 3791,
'Hangul_YU': 3792,
'Hangul_EU': 3793,
'Hangul_YI': 3794,
'Hangul_I': 3795,
'Hangul_J_Kiyeog': 3796,
'Hangul_J_SsangKiyeog': 3797,
'Hangul_J_KiyeogSios': 3798,
'Hangul_J_Nieun': 3799,
'Hangul_J_NieunJieuj': 3800,
'Hangul_J_NieunHieuh': 3801,
'Hangul_J_Dikeud': 3802,
'Hangul_J_Rieul': 3803,
'Hangul_J_RieulKiyeog': 3804,
'sixsuperior': 16785526,
'Hangul_J_RieulPieub': 3806,
'Hangul_J_RieulSios': 3807,
'Hangul_J_RieulTieut': 3808,
'Hangul_J_RieulPhieuf': 3809,
'Hangul_J_RieulHieuh': 3810,
'Hangul_J_Mieum': 3811,
'Hangul_J_Pieub': 3812,
'Hangul_J_PieubSios': 3813,
'Hangul_J_Sios': 3814,
'Hangul_J_SsangSios': 3815,
'Hangul_J_Ieung': 3816,
'Hangul_J_Jieuj': 3817,
'Hangul_J_Cieuc': 3818,
'Hangul_J_Khieuq': 3819,
'Hangul_J_Tieut': 3820,
'Hangul_J_Phieuf': 3821,
'Hangul_J_Hieuh': 3822,
'Hangul_RieulYeorinHieuh': 3823,
'Hangul_SunkyeongeumMieum': 3824,
'Hangul_SunkyeongeumPieub': 3825,
'Hangul_PanSios': 3826,
'Hangul_KkogjiDalrinIeung': 3827,
'Hangul_SunkyeongeumPhieuf': 3828,
'Hangul_YeorinHieuh': 3829,
'Hangul_AraeA': 3830,
'Hangul_AraeAE': 3831,
'Hangul_J_PanSios': 3832,
'Hangul_J_KkogjiDalrinIeung': 3833,
'Hangul_J_YeorinHieuh': 3834,
'Pointer_DfltBtnNext': 65275,
'Pointer_DfltBtnPrev': 65276,
'Pointer_Drag5': 65277,
'Korean_Won': 3839,
'BackSpace': 65288,
'Tab': 65289,
'Linefeed': 65290,
'Clear': 65291,
'Return': 65293,
'Pause': 65299,
'Scroll_Lock': 65300,
'Sys_Req': 65301,
'Greek_OMEGA': 2009,
'Escape': 65307,
'Multi_key': 65312,
'Kanji': 65313,
'Muhenkan': 65314,
'Henkan': 65315,
'Romaji': 65316,
'Hiragana': 65317,
'Katakana': 65318,
'Hiragana_Katakana': 65319,
'Zenkaku': 65320,
'Hankaku': 65321,
'XF86PowerOff': 269025066,
'Touroku': 65323,
'Massyo': 65324,
'Kana_Lock': 65325,
'Kana_Shift': 65326,
'XF86Sleep': 269025071,
'Eisu_toggle': 65328,
'Hangul': 65329,
'Hangul_Start': 65330,
'C_h': 65188,
'Hangul_Hanja': 65332,
'Hangul_Jamo': 65333,
'Hangul_Romaja': 65334,
'Hangul_Codeinput': 65335,
'Hangul_Jeonja': 65336,
'Hangul_Banja': 65337,
'Hangul_PreHanja': 65338,
'Hangul_PostHanja': 65339,
'Hangul_SingleCandidate': 65340,
'Hangul_MultipleCandidate': 65341,
'Hangul_PreviousCandidate': 65342,
'Hangul_Special': 65343,
'Home': 65360,
'Left': 65361,
'Up': 65362,
'Right': 65363,
'Down': 65364,
'Prior': 65365,
'Next': 65366,
'End': 65367,
'uhorngrave': 16785131,
'ohorntilde': 16785121,
'Select': 65376,
'Print': 65377,
'Execute': 65378,
'Insert': 65379,
'Undo': 65381,
'Redo': 65382,
'Menu': 65383,
'Find': 65384,
'Cancel': 65385,
'Help': 65386,
'Break': 65387,
'abreveacute': 16785071,
'Arabic_switch': 65406,
'Num_Lock': 65407,
'KP_Space': 65408,
'KP_Tab': 65417,
'KP_Enter': 65421,
'KP_F1': 65425,
'Yhook': 16785142,
'KP_F3': 65427,
'KP_F4': 65428,
'KP_Home': 65429,
'KP_Left': 65430,
'KP_Up': 65431,
'KP_Right': 65432,
'KP_Down': 65433,
'KP_Prior': 65434,
'KP_Next': 65435,
'KP_End': 65436,
'KP_Begin': 65437,
'KP_Insert': 65438,
'KP_Delete': 65439,
'braille_dot_1': 65521,
'KP_Multiply': 65450,
'KP_Add': 65451,
'KP_Separator': 65452,
'KP_Subtract': 65453,
'KP_Decimal': 65454,
'KP_Divide': 65455,
'KP_0': 65456,
'KP_1': 65457,
'KP_2': 65458,
'KP_3': 65459,
'KP_4': 65460,
'KP_5': 65461,
'KP_6': 65462,
'KP_7': 65463,
'KP_8': 65464,
'KP_9': 65465,
'KP_Equal': 65469,
'F1': 65470,
'F2': 65471,
'F3': 65472,
'F4': 65473,
'F5': 65474,
'F6': 65475,
'F7': 65476,
'F8': 65477,
'F9': 65478,
'F10': 65479,
'F11': 65480,
'F12': 65481,
'F13': 65482,
'Greek_chi': 2039,
'L5': 65484,
'F16': 65485,
'F17': 65486,
'F18': 65487,
'F19': 65488,
'L10': 65489,
'R1': 65490,
'ubelowdot': 16785125,
'R3': 65492,
'F24': 65493,
'R5': 65494,
'R6': 65495,
'R7': 65496,
'R8': 65497,
'R9': 65498,
'R10': 65499,
'R11': 65500,
'R12': 65501,
'R13': 65502,
'R14': 65503,
'R15': 65504,
'Shift_L': 65505,
'Shift_R': 65506,
'Control_L': 65507,
'Control_R': 65508,
'Caps_Lock': 65509,
'Shift_Lock': 65510,
'Meta_L': 65511,
'Meta_R': 65512,
'Alt_L': 65513,
'Alt_R': 65514,
'Super_L': 65515,
'Super_R': 65516,
'Hyper_L': 65517,
'Hyper_R': 65518,
'ncedilla': 1009,
'Uhook': 16785126,
'braille_dot_2': 65522,
'braille_dot_3': 65523,
'braille_dot_4': 65524,
'braille_dot_5': 65525,
'braille_dot_6': 65526,
'braille_dot_7': 65527,
'braille_dot_8': 65528,
'braille_dot_9': 65529,
'braille_dot_10': 65530,
'Delete': 65535,
'VoidSymbol': 16777215,

* Wed 15 Oct 2014 11:32:39 AM JST
#!/usr/bin/env python
# -*- coding: utf-8 -*-

# $Id$
# $Revision$
# $Date$
# $Author$
# $LastChangedBy$
# $LastChangedDate$

r"""keysymdef -- DESCRIPTION

"""
from t1.dictutil import DictUtil


from . import keysym
from . import namesym


KEYSYMS = {
    0x20: 'space',
    0x22: 'quotedbl',
    0x23: 'numbersign',
    0x24: 'dollar',
    0x26: 'ampersand',
    0x27: 'apostrophe',
    0x28: 'parenleft',
    0x29: 'parenright',
    0x2a: 'asterisk',
    0x2b: 'plus',
    0x2c: 'comma',
    0x2d: 'minus',
    0x2f: 'slash',
    0x30: '0',
    0x31: '1',
    0x32: '2',
    0x34: '4',
    0x35: '5',
    0x36: '6',
    0x37: '7',
    0x38: '8',
    0x3a: 'colon',
    0x3b: 'semicolon',
    0x3c: 'less',
    0x3d: 'equal',
    0x3e: 'greater',
    0x3f: 'question',
    0x41: 'A',
    0x43: 'C',
    0x44: 'D',
    0x45: 'E',
    0x46: 'F',
    0x47: 'G',
    0x48: 'H',
    0x49: 'I',
    0x4a: 'J',
    0x4b: 'K',
    0x4c: 'L',
    0x4d: 'M',
    0x4f: 'O',
    0x50: 'P',
    0xab8: 'careof',
    0x52: 'R',
    0x53: 'S',
    0x54: 'T',
    0x55: 'U',
    0x57: 'W',
    0x58: 'X',
    0x59: 'Y',
    0x5a: 'Z',
    0x5b: 'bracketleft',
    0x5c: 'backslash',
    0x5d: 'bracketright',
    0x5e: 'asciicircum',
    0x5f: 'underscore',
    0x61: 'a',
    0x63: 'c',
    0x64: 'd',
    0x65: 'e',
    0x67: 'g',
    0x68: 'h',
    0x69: 'i',
    0x6a: 'j',
    0x6b: 'k',
    0x6e: 'n',
    0x6f: 'o',
    0x73: 's',
    0x1002075: 'fivesuperior',
    0x76: 'v',
    0x1002077: 'sevensuperior',
    0x79: 'y',
    0x7a: 'z',
    0x7c: 'bar',
    0x1002080: 'zerosubscript',
    0x1002081: 'onesubscript',
    0x1002082: 'twosubscript',
    0x1002083: 'threesubscript',
    0x1002084: 'foursubscript',
    0x1002085: 'fivesubscript',
    0x1001eeb: 'uhorngrave',
    0x1002089: 'ninesubscript',
    0x100056f: 'Armenian_ken',
    0xa0: 'nobreakspace',
    0x10020a1: 'ColonSign',
    0x10020a3: 'FFrancSign',
    0xa4: 'currency',
    0x10020a6: 'NairaSign',
    0xa7: 'section',
    0xa8: 'diaeresis',
    0xa9: 'copyright',
    0xaa: 'ordfeminine',
    0x10020ab: 'DongSign',
    0xac: 'notsign',
    0xad: 'hyphen',
    0xaf: 'macron',
    0xb0: 'degree',
    0xb1: 'plusminus',
    0xb2: 'twosuperior',
    0xb3: 'threesuperior',
    0xb5: 'mu',
    0xb6: 'paragraph',
    0xb8: 'cedilla',
    0xb9: 'onesuperior',
    0xba: 'masculine',
    0xbb: 'guillemotright',
    0xbc: 'onequarter',
    0xaca: 'signaturemark',
    0xbe: 'threequarters',
    0xbf: 'questiondown',
    0xc0: 'Agrave',
    0xc1: 'Aacute',
    0xc2: 'Acircumflex',
    0xc3: 'Atilde',
    0xc4: 'Adiaeresis',
    0xc5: 'Aring',
    0xc8: 'Egrave',
    0xcb: 'Ediaeresis',
    0xcc: 'Igrave',
    0xcd: 'Iacute',
    0xce: 'Icircumflex',
    0xd0: 'Eth',
    0xd3: 'Oacute',
    0xd4: 'Ocircumflex',
    0xd5: 'Otilde',
    0xd7: 'multiply',
    0xef2: 'Hangul_PanSios',
    0xda: 'Uacute',
    0xdb: 'Ucircumflex',
    0xdc: 'Udiaeresis',
    0xdd: 'Yacute',
    0xde: 'Thorn',
    0xdf: 'ssharp',
    0xe0: 'agrave',
    0xe1: 'aacute',
    0xe2: 'acircumflex',
    0xe3: 'atilde',
    0xe4: 'adiaeresis',
    0xe5: 'aring',
    0xe6: 'ae',
    0xe7: 'ccedilla',
    0xe8: 'egrave',
    0xeb: 'ediaeresis',
    0xef: 'idiaeresis',
    0xf0: 'eth',
    0xf1: 'ntilde',
    0xf3: 'oacute',
    0xf4: 'ocircumflex',
    0xf5: 'otilde',
    0xf7: 'division',
    0xf8: 'ooblique',
    0xfa: 'uacute',
    0xfc: 'udiaeresis',
    0xfd: 'yacute',
    0xfe: 'thorn',
    0xff: 'ydiaeresis',
    0x2e: 'period',
    0xad9: 'latincross',
    0xadc: 'filledlefttribullet',
    0x100012c: 'Ibreve',
    0xadd: 'filledrighttribullet',
    0x33: '3',
    0xab2: 'onefifth',
    0x7ae: 'Greek_accentdieresis',
    0xae1: 'enopensquarebullet',
    0xab3: 'twofifths',
    0x8bf: 'integral',
    0x6d4: 'Cyrillic_te',
    0xae7: 'enfilledsqbullet',
    0xab4: 'threefifths',
    0x1000174: 'Wcircumflex',
    0x1000175: 'wcircumflex',
    0x1000177: 'ycircumflex',
    0x39: '9',
    0x42: 'B',
    0x1001ef4: 'Ybelowdot',
    0x10001a1: 'ohorn',
    0x1a2: 'breve',
    0x1a5: 'Lcaron',
    0x1a6: 'Sacute',
    0x1a9: 'Scaron',
    0x1aa: 'Scedilla',
    0x1ab: 'Tcaron',
    0x1ae: 'Zcaron',
    0x1af: 'Zabovedot',
    0x10001b0: 'uhorn',
    0x1b1: 'aogonek',
    0x1b2: 'ogonek',
    0x1b3: 'lstroke',
    0x1b5: 'lcaron',
    0x10001b6: 'zstroke',
    0x1b7: 'caron',
    0x1b9: 'scaron',
    0x1ba: 'scedilla',
    0x1bb: 'tcaron',
    0x1bc: 'zacute',
    0x1bd: 'doubleacute',
    0x1be: 'zcaron',
    0x1bf: 'zabovedot',
    0x1c3: 'Abreve',
    0x1c5: 'Lacute',
    0x1c6: 'Cacute',
    0x1c8: 'Ccaron',
    0xfee4: 'Pointer_UpLeft',
    0x1ca: 'Eogonek',
    0x1cc: 'Ecaron',
    0xab7: 'fivesixths',
    0x1cf: 'Dcaron',
    0x1d0: 'Dstroke',
    0x1d8: 'Rcaron',
    0x1d9: 'Uring',
    0x1db: 'Udoubleacute',
    0x1e0: 'racute',
    0x1e3: 'abreve',
    0x1e8: 'ccaron',
    0x1000564: 'Armenian_da',
    0x1ea: 'eogonek',
    0x1ec: 'ecaron',
    0x1f0: 'dstroke',
    0x1f1: 'nacute',
    0x1f2: 'ncaron',
    0x1f5: 'odoubleacute',
    0x1f8: 'rcaron',
    0x1f9: 'uring',
    0xaff: 'cursor',
    0x1fe: 'tcedilla',
    0x1002202: 'partdifferential',
    0x56: 'V',
    0x1000565: 'Armenian_yech',
    0x100220b: 'containsas',
    0xbca: 'jot',
    0xffff: 'Delete',
    0x100221c: 'fourthroot',
    0x100222c: 'dintegral',
    0x1002235: 'because',
    0x60: 'quoteleft',
    0x1002247: 'notapproxeq',
    0x1002248: 'approxeq',
    0x62: 'b',
    0x1000259: 'schwa',
    0x10001b7: 'EZH',
    0x1000292: 'ezh',
    0x1002262: 'notidentical',
    0x1002263: 'stricteq',
    0x66: 'f',
    0x1000275: 'obarred',
    0x5bf: 'Arabic_question_mark',
    0x5c2: 'Arabic_maddaonalef',
    0x6d: 'm',
    0x100056a: 'Armenian_zhe',
    0x2a1: 'Hstroke',
    0x2a6: 'Hcircumflex',
    0x71: 'q',
    0x2ab: 'Gbreve',
    0x2ac: 'Jcircumflex',
    0x72: 'r',
    0x2b6: 'hcircumflex',
    0x5c9: 'Arabic_tehmarbuta',
    0x2b9: 'idotless',
    0x100056b: 'Armenian_ini',
    0x2c5: 'Cabovedot',
    0x2c6: 'Ccircumflex',
    0x5cc: 'Arabic_jeem',
    0x78: 'x',
    0x2d5: 'Gabovedot',
    0x1002079: 'ninesuperior',
    0x2dd: 'Ubreve',
    0x2de: 'Scircumflex',
    0x7b: 'braceleft',
    0x2e5: 'cabovedot',
    0x2e6: 'ccircumflex',
    0xaf5: 'musicalsharp',
    0x7d: 'braceright',
    0x7e: 'asciitilde',
    0x2f8: 'gcircumflex',
    0x2fd: 'ubreve',
    0x5d7: 'Arabic_tah',
    0x1002086: 'sixsubscript',
    0x1002087: 'sevensubscript',
    0x1002088: 'eightsubscript',
    0x5e2: 'Arabic_qaf',
    0x5e3: 'Arabic_kaf',
    0x1000571: 'Armenian_dza',
    0x5ed: 'Arabic_kasratan',
    0xac6: 'seveneighths',
    0x5ee: 'Arabic_fatha',
    0x3a3: 'Rcedilla',
    0x3a5: 'Itilde',
    0x3a6: 'Lcedilla',
    0x3aa: 'Emacron',
    0x3ac: 'Tslash',
    0x3b3: 'rcedilla',
    0xbd8: 'rightshoe',
    0x3b5: 'itilde',
    0x3b6: 'lcedilla',
    0x3ba: 'emacron',
    0x3bb: 'gcedilla',
    0x3bc: 'tslash',
    0x3bf: 'eng',
    0x10020a0: 'EcuSign',
    0x3c7: 'Iogonek',
    0x3cc: 'Eabovedot',
    0x10020a2: 'CruzeiroSign',
    0x3cf: 'Imacron',
    0x3d1: 'Ncedilla',
    0x3d3: 'Kcedilla',
    0x10020a4: 'LiraSign',
    0x3dd: 'Utilde',
    0xa5: 'yen',
    0x3e0: 'amacron',
    0xa6: 'brokenbar',
    0x3e7: 'iogonek',
    0x10020a8: 'RupeeSign',
    0x3f2: 'omacron',
    0x3f3: 'kcedilla',
    0x10020a9: 'WonSign',
    0x3f9: 'uogonek',
    0x10020aa: 'NewSheqelSign',
    0x3fe: 'umacron',
    0x20ac: 'EuroSign',
    0x74: 't',
    0x1002070: 'zerosuperior',
    0x10028a2: 'braille_dots_268',
    0xbd: 'onehalf',
    0x47e: 'overline',
    0x10028a4: 'braille_dots_368',
    0x1000492: 'Cyrillic_GHE_bar',
    0x1000493: 'Cyrillic_ghe_bar',
    0x1000497: 'Cyrillic_zhe_descender',
    0x100049a: 'Cyrillic_KA_descender',
    0x100049b: 'Cyrillic_ka_descender',
    0x100049c: 'Cyrillic_KA_vertstroke',
    0x100049d: 'Cyrillic_ka_vertstroke',
    0x4a1: 'kana_fullstop',
    0x4a2: 'kana_openingbracket',
    0x10004a3: 'Cyrillic_en_descender',
    0x4a4: 'kana_comma',
    0xc6: 'AE',
    0x4a6: 'kana_WO',
    0x4a7: 'kana_a',
    0x4a8: 'kana_i',
    0x4a9: 'kana_u',
    0x4aa: 'kana_e',
    0xc7: 'Ccedilla',
    0x4ac: 'kana_ya',
    0x4ad: 'kana_yu',
    0x4af: 'kana_tsu',
    0x4b1: 'kana_A',
    0x4b2: 'kana_I',
    0x10004b3: 'Cyrillic_ha_descender',
    0x4b4: 'kana_E',
    0x4b5: 'kana_O',
    0x10004b6: 'Cyrillic_CHE_descender',
    0xc9: 'Eacute',
    0x10004b8: 'Cyrillic_CHE_vertstroke',
    0x10004b9: 'Cyrillic_che_vertstroke',
    0x10004ba: 'Cyrillic_SHHA',
    0x4bb: 'kana_SA',
    0x4bc: 'kana_SHI',
    0x4bd: 'kana_SU',
    0x4be: 'kana_SE',
    0x4c0: 'kana_TA',
    0x4c1: 'kana_TI',
    0x4c4: 'kana_TO',
    0x4c5: 'kana_NA',
    0x4c6: 'kana_NI',
    0x4c7: 'kana_NU',
    0x4c8: 'kana_NE',
    0x4c9: 'kana_NO',
    0x4ca: 'kana_HA',
    0x4cc: 'kana_HU',
    0x4cd: 'kana_HE',
    0x4ce: 'kana_HO',
    0x4cf: 'kana_MA',
    0x4d0: 'kana_MI',
    0x4d1: 'kana_MU',
    0x4d3: 'kana_MO',
    0x4d5: 'kana_YU',
    0x4d6: 'kana_YO',
    0x4d8: 'kana_RI',
    0x4d9: 'kana_RU',
    0x4da: 'kana_RE',
    0x4dc: 'kana_WA',
    0x4dd: 'kana_N',
    0x4de: 'voicedsound',
    0x4df: 'semivoicedsound',
    0x10004e2: 'Cyrillic_I_macron',
    0x10004e3: 'Cyrillic_i_macron',
    0xd1: 'Ntilde',
    0x10004e8: 'Cyrillic_O_bar',
    0x10004e9: 'Cyrillic_o_bar',
    0x8b0: 'rightmiddlecurlybrace',
    0xd2: 'Ograve',
    0x10004ee: 'Cyrillic_U_macron',
    0x10004ef: 'Cyrillic_u_macron',
    0x10010d3: 'Georgian_don',
    0xd6: 'Odiaeresis',
    0xd8: 'Oslash',
    0xd9: 'Ugrave',
    0x1000531: 'Armenian_AYB',
    0x1000532: 'Armenian_BEN',
    0x1000533: 'Armenian_GIM',
    0x1000534: 'Armenian_DA',
    0x1000539: 'Armenian_TO',
    0x100053a: 'Armenian_ZHE',
    0x100053b: 'Armenian_INI',
    0x100053c: 'Armenian_LYUN',
    0x100053d: 'Armenian_KHE',
    0x100053e: 'Armenian_TSA',
    0x100053f: 'Armenian_KEN',
    0x1000542: 'Armenian_GHAT',
    0x1000545: 'Armenian_HI',
    0x1000547: 'Armenian_SHA',
    0x1000548: 'Armenian_VO',
    0x1000549: 'Armenian_CHA',
    0x100054a: 'Armenian_PE',
    0x100054c: 'Armenian_RA',
    0x100054e: 'Armenian_VEV',
    0x1001e03: 'babovedot',
    0x1000551: 'Armenian_TSO',
    0x1000552: 'Armenian_VYUN',
    0x1000553: 'Armenian_PYUR',
    0x1000554: 'Armenian_KE',
    0x1000555: 'Armenian_O',
    0x1000556: 'Armenian_FE',
    0x100055a: 'Armenian_apostrophe',
    0x100055b: 'Armenian_accent',
    0x100055c: 'Armenian_amanak',
    0x100055d: 'Armenian_separation_mark',
    0x100055e: 'Armenian_question',
    0x1000561: 'Armenian_ayb',
    0x1000562: 'Armenian_ben',
    0x1000563: 'Armenian_gim',
    0x1000566: 'Armenian_za',
    0x1000567: 'Armenian_e',
    0x1000568: 'Armenian_at',
    0x1000569: 'Armenian_to',
    0x100056c: 'Armenian_lyun',
    0x100056d: 'Armenian_khe',
    0x100056e: 'Armenian_tsa',
    0x1000570: 'Armenian_ho',
    0x1000572: 'Armenian_ghat',
    0x1000573: 'Armenian_tche',
    0x1000574: 'Armenian_men',
    0x1000575: 'Armenian_hi',
    0x1000576: 'Armenian_nu',
    0x1000577: 'Armenian_sha',
    0x1000578: 'Armenian_vo',
    0x1000579: 'Armenian_cha',
    0x100057a: 'Armenian_pe',
    0x100057b: 'Armenian_je',
    0x100057c: 'Armenian_ra',
    0xea: 'ecircumflex',
    0x100057e: 'Armenian_vev',
    0x100057f: 'Armenian_tyun',
    0x1000580: 'Armenian_re',
    0x1000581: 'Armenian_tso',
    0x1000582: 'Armenian_vyun',
    0x1000583: 'Armenian_pyur',
    0x1000584: 'Armenian_ke',
    0x1000585: 'Armenian_o',
    0x1000586: 'Armenian_fe',
    0x100058a: 'Armenian_yentamna',
    0xed: 'iacute',
    0x40: 'at',
    0x5ac: 'Arabic_comma',
    0xf2: 'ograve',
    0x10010f3: 'Georgian_we',
    0x5bb: 'Arabic_semicolon',
    0x5c1: 'Arabic_hamza',
    0x8fd: 'rightarrow',
    0x5c3: 'Arabic_hamzaonalef',
    0x5c4: 'Arabic_hamzaonwaw',
    0x5c5: 'Arabic_hamzaunderalef',
    0x5c6: 'Arabic_hamzaonyeh',
    0x5c7: 'Arabic_alef',
    0x5c8: 'Arabic_beh',
    0x5ca: 'Arabic_teh',
    0x5cd: 'Arabic_hah',
    0x5ce: 'Arabic_khah',
    0x5cf: 'Arabic_dal',
    0x5d0: 'Arabic_thal',
    0x5d2: 'Arabic_zain',
    0x5d3: 'Arabic_seen',
    0x5d4: 'Arabic_sheen',
    0x5d5: 'Arabic_sad',
    0x5d6: 'Arabic_dad',
    0x5d8: 'Arabic_zah',
    0x5d9: 'Arabic_ain',
    0x5da: 'Arabic_ghain',
    0x5e0: 'Arabic_tatweel',
    0x5e1: 'Arabic_feh',
    0xfb: 'ucircumflex',
    0x5e4: 'Arabic_lam',
    0x5e5: 'Arabic_meem',
    0x5e6: 'Arabic_noon',
    0x5e7: 'Arabic_ha',
    0x5e8: 'Arabic_waw',
    0x5e9: 'Arabic_alefmaksura',
    0x5ea: 'Arabic_yeh',
    0x5eb: 'Arabic_fathatan',
    0x5ec: 'Arabic_dammatan',
    0x5ef: 'Arabic_damma',
    0x1000587: 'Armenian_ligature_ew',
    0xfe6b: 'dead_belowbreve',
    0x10028b2: 'braille_dots_2568',
    0x100054d: 'Armenian_SE',
    0x1000589: 'Armenian_full_stop',
    0x1000653: 'Arabic_madda_above',
    0x1000655: 'Arabic_hamza_below',
    0x1000664: 'Arabic_4',
    0x1000660: 'Arabic_0',
    0x1000661: 'Arabic_1',
    0x1000662: 'Arabic_2',
    0x1000663: 'Arabic_3',
    0x1000665: 'Arabic_5',
    0x1000666: 'Arabic_6',
    0x1000667: 'Arabic_7',
    0x1000668: 'Arabic_8',
    0x100066a: 'Arabic_percent',
    0x1000670: 'Arabic_superscript_alef',
    0x1000669: 'Arabic_9',
    0x1000679: 'Arabic_tteh',
    0x100067e: 'Arabic_peh',
    0x1000686: 'Arabic_tcheh',
    0x1000688: 'Arabic_ddal',
    0x1000698: 'Arabic_jeh',
    0x10028b6: 'braille_dots_23568',
    0x6a1: 'Serbian_dje',
    0x6a2: 'Macedonia_gje',
    0x6a3: 'Cyrillic_io',
    0x10006a4: 'Arabic_veh',
    0x6a5: 'Macedonia_dse',
    0x6a6: 'Ukranian_i',
    0x6a7: 'Ukranian_yi',
    0x6a8: 'Cyrillic_je',
    0x6aa: 'Serbian_nje',
    0x6ab: 'Serbian_tshe',
    0x6ac: 'Macedonia_kje',
    0x6ad: 'Ukrainian_ghe_with_upturn',
    0x6ae: 'Byelorussian_shortu',
    0x6af: 'Cyrillic_dzhe',
    0x6b0: 'numerosign',
    0x6b1: 'Serbian_DJE',
    0x6b3: 'Cyrillic_IO',
    0x6b4: 'Ukranian_JE',
    0x6b5: 'Macedonia_DSE',
    0x6b6: 'Ukranian_I',
    0x6b7: 'Ukrainian_YI',
    0x6b8: 'Serbian_JE',
    0x6b9: 'Cyrillic_LJE',
    0x10006ba: 'Arabic_noon_ghunna',
    0x6bb: 'Serbian_TSHE',
    0x6bd: 'Ukrainian_GHE_WITH_UPTURN',
    0x6be: 'Byelorussian_SHORTU',
    0x6bf: 'Serbian_DZE',
    0x6c1: 'Cyrillic_a',
    0x6c4: 'Cyrillic_de',
    0x6c6: 'Cyrillic_ef',
    0x6c8: 'Cyrillic_ha',
    0x6c9: 'Cyrillic_i',
    0x6ca: 'Cyrillic_shorti',
    0x10006cc: 'Farsi_yeh',
    0x6cf: 'Cyrillic_o',
    0x6d0: 'Cyrillic_pe',
    0x6d1: 'Cyrillic_ya',
    0x10006d2: 'Arabic_yeh_baree',
    0x6d3: 'Cyrillic_es',
    0x10006d4: 'Arabic_fullstop',
    0x6d5: 'Cyrillic_u',
    0x6d6: 'Cyrillic_zhe',
    0x6d7: 'Cyrillic_ve',
    0x6d8: 'Cyrillic_softsign',
    0x6d9: 'Cyrillic_yeru',
    0x6da: 'Cyrillic_ze',
    0x6db: 'Cyrillic_sha',
    0x6dc: 'Cyrillic_e',
    0x6dd: 'Cyrillic_shcha',
    0x6df: 'Cyrillic_hardsign',
    0x6e0: 'Cyrillic_YU',
    0x6e1: 'Cyrillic_A',
    0x6e2: 'Cyrillic_BE',
    0x6e4: 'Cyrillic_DE',
    0x6e5: 'Cyrillic_IE',
    0x6e6: 'Cyrillic_EF',
    0x6e7: 'Cyrillic_GHE',
    0x6e8: 'Cyrillic_HA',
    0x6e9: 'Cyrillic_I',
    0x6ea: 'Cyrillic_SHORTI',
    0x6eb: 'Cyrillic_KA',
    0x6ec: 'Cyrillic_EL',
    0x6ed: 'Cyrillic_EM',
    0x6ef: 'Cyrillic_O',
    0x10006f0: 'Farsi_0',
    0x6f1: 'Cyrillic_YA',
    0x10006f2: 'Farsi_2',
    0x6f5: 'Cyrillic_U',
    0x10006f6: 'Farsi_6',
    0x6f7: 'Cyrillic_VE',
    0x6f8: 'Cyrillic_SOFTSIGN',
    0x6f9: 'Cyrillic_YERU',
    0x6fa: 'Cyrillic_ZE',
    0x6fb: 'Cyrillic_SHA',
    0x6fc: 'Cyrillic_E',
    0x6fe: 'Cyrillic_CHE',
    0x6ff: 'Cyrillic_HARDSIGN',
    0x8c2: 'infinity',
    0x100012d: 'ibreve',
    0xab5: 'fourfifths',
    0x8c5: 'nabla',
    0x1000691: 'Arabic_rreh',
    0xfeea: 'Pointer_Button2',
    0x10028bd: 'braille_dots_134568',
    0x7a1: 'Greek_ALPHAaccent',
    0x7a3: 'Greek_ETAaccent',
    0x7a7: 'Greek_OMICRONaccent',
    0x7a9: 'Greek_UPSILONdieresis',
    0x7ab: 'Greek_OMEGAaccent',
    0x7af: 'Greek_horizbar',
    0x7b1: 'Greek_alphaaccent',
    0x7b2: 'Greek_epsilonaccent',
    0x7b3: 'Greek_etaaccent',
    0x7b4: 'Greek_iotaaccent',
    0x7b5: 'Greek_iotadieresis',
    0x7b6: 'Greek_iotaaccentdieresis',
    0x7b7: 'Greek_omicronaccent',
    0x7b9: 'Greek_upsilondieresis',
    0x7ba: 'Greek_upsilonaccentdieresis',
    0x7bb: 'Greek_omegaaccent',
    0x7c1: 'Greek_ALPHA',
    0x7c2: 'Greek_BETA',
    0x7c5: 'Greek_EPSILON',
    0x7c6: 'Greek_ZETA',
    0x7c7: 'Greek_ETA',
    0x7c8: 'Greek_THETA',
    0x7ca: 'Greek_KAPPA',
    0x7cd: 'Greek_NU',
    0x7cf: 'Greek_OMICRON',
    0x7d0: 'Greek_PI',
    0x7d2: 'Greek_SIGMA',
    0x7d4: 'Greek_TAU',
    0x7d7: 'Greek_CHI',
    0x7d8: 'Greek_PSI',
    0x7e1: 'Greek_alpha',
    0x7e2: 'Greek_beta',
    0x7e3: 'Greek_gamma',
    0x7e4: 'Greek_delta',
    0x7e5: 'Greek_epsilon',
    0x7e6: 'Greek_zeta',
    0x7e7: 'Greek_eta',
    0x7e8: 'Greek_theta',
    0x7ea: 'Greek_kappa',
    0x7eb: 'Greek_lamda',
    0x7ec: 'Greek_mu',
    0x7ed: 'Greek_nu',
    0x7ee: 'Greek_xi',
    0x7ef: 'Greek_omicron',
    0x7f0: 'Greek_pi',
    0x7f2: 'Greek_sigma',
    0x7f4: 'Greek_tau',
    0x7f6: 'Greek_phi',
    0x6a9: 'Serbian_lje',
    0x7f8: 'Greek_psi',
    0x1002800: 'braille_blank',
    0x1002801: 'braille_dots_1',
    0x1002802: 'braille_dots_2',
    0x1002803: 'braille_dots_12',
    0x1002804: 'braille_dots_3',
    0x1002805: 'braille_dots_13',
    0x1002806: 'braille_dots_23',
    0x1002807: 'braille_dots_123',
    0x1002808: 'braille_dots_4',
    0x1002809: 'braille_dots_14',
    0x100280a: 'braille_dots_24',
    0x100280d: 'braille_dots_134',
    0x100280e: 'braille_dots_234',
    0x100280f: 'braille_dots_1234',
    0x1002810: 'braille_dots_5',
    0x1002811: 'braille_dots_15',
    0x1002812: 'braille_dots_25',
    0x1002813: 'braille_dots_125',
    0x1002814: 'braille_dots_35',
    0x1002815: 'braille_dots_135',
    0x1002816: 'braille_dots_235',
    0x1002817: 'braille_dots_1235',
    0x1002818: 'braille_dots_45',
    0x1002819: 'braille_dots_145',
    0x100281a: 'braille_dots_245',
    0x100281b: 'braille_dots_1245',
    0x100281c: 'braille_dots_345',
    0x100281d: 'braille_dots_1345',
    0x100281e: 'braille_dots_2345',
    0x100281f: 'braille_dots_12345',
    0x1002820: 'braille_dots_6',
    0x1002821: 'braille_dots_16',
    0x1002822: 'braille_dots_26',
    0xaed: 'diamond',
    0x1002824: 'braille_dots_36',
    0x1002825: 'braille_dots_136',
    0x1002826: 'braille_dots_236',
    0x1002827: 'braille_dots_1236',
    0x100282a: 'braille_dots_246',
    0x100282b: 'braille_dots_1246',
    0x100282c: 'braille_dots_346',
    0x100282d: 'braille_dots_1346',
    0x100282e: 'braille_dots_2346',
    0x100282f: 'braille_dots_12346',
    0x1002832: 'braille_dots_256',
    0x1002834: 'braille_dots_356',
    0x1002835: 'braille_dots_1356',
    0x1002837: 'braille_dots_12356',
    0x1002839: 'braille_dots_1456',
    0x100283a: 'braille_dots_2456',
    0x100283b: 'braille_dots_12456',
    0x100283c: 'braille_dots_3456',
    0x100283f: 'braille_dots_123456',
    0x1002842: 'braille_dots_27',
    0x1002843: 'braille_dots_127',
    0x1002845: 'braille_dots_137',
    0x1002846: 'braille_dots_237',
    0x1002847: 'braille_dots_1237',
    0x1002848: 'braille_dots_47',
    0x1002849: 'braille_dots_147',
    0x100284a: 'braille_dots_247',
    0x100284b: 'braille_dots_1247',
    0x100284c: 'braille_dots_347',
    0x100284d: 'braille_dots_1347',
    0x100284e: 'braille_dots_2347',
    0x100284f: 'braille_dots_12347',
    0x1002850: 'braille_dots_57',
    0x1002851: 'braille_dots_157',
    0x1002852: 'braille_dots_257',
    0x1002853: 'braille_dots_1257',
    0x1002854: 'braille_dots_357',
    0x1002855: 'braille_dots_1357',
    0x1002858: 'braille_dots_457',
    0x1002859: 'braille_dots_1457',
    0x100285a: 'braille_dots_2457',
    0x100285b: 'braille_dots_12457',
    0x100285c: 'braille_dots_3457',
    0x100285d: 'braille_dots_13457',
    0x100285e: 'braille_dots_23457',
    0x100285f: 'braille_dots_123457',
    0x1002860: 'braille_dots_67',
    0x1002861: 'braille_dots_167',
    0x1002862: 'braille_dots_267',
    0x1002863: 'braille_dots_1267',
    0x1002864: 'braille_dots_367',
    0x1002865: 'braille_dots_1367',
    0x1002866: 'braille_dots_2367',
    0x1002867: 'braille_dots_12367',
    0x1002868: 'braille_dots_467',
    0x1002869: 'braille_dots_1467',
    0x100286a: 'braille_dots_2467',
    0x100286b: 'braille_dots_12467',
    0x100286c: 'braille_dots_3467',
    0x100286d: 'braille_dots_13467',
    0x100286e: 'braille_dots_23467',
    0x100286f: 'braille_dots_123467',
    0x1002870: 'braille_dots_567',
    0x1002871: 'braille_dots_1567',
    0x1002872: 'braille_dots_2567',
    0x1002873: 'braille_dots_12567',
    0x1002874: 'braille_dots_3567',
    0x10006be: 'Arabic_heh_doachashmee',
    0x1002877: 'braille_dots_123567',
    0x1002878: 'braille_dots_4567',
    0x1002879: 'braille_dots_14567',
    0x100287a: 'braille_dots_24567',
    0x100287b: 'braille_dots_124567',
    0x100287c: 'braille_dots_34567',
    0x100287d: 'braille_dots_134567',
    0x100287e: 'braille_dots_234567',
    0x100287f: 'braille_dots_1234567',
    0x1002880: 'braille_dots_8',
    0x1002881: 'braille_dots_18',
    0x1002884: 'braille_dots_38',
    0x1002885: 'braille_dots_138',
    0x1002886: 'braille_dots_238',
    0x1002888: 'braille_dots_48',
    0x100288a: 'braille_dots_248',
    0x100288b: 'braille_dots_1248',
    0x100288c: 'braille_dots_348',
    0x100288d: 'braille_dots_1348',
    0x100288e: 'braille_dots_2348',
    0x100288f: 'braille_dots_12348',
    0x1002890: 'braille_dots_58',
    0x1002891: 'braille_dots_158',
    0x1002892: 'braille_dots_258',
    0x1002894: 'braille_dots_358',
    0x1002895: 'braille_dots_1358',
    0x1002896: 'braille_dots_2358',
    0x1002898: 'braille_dots_458',
    0x1002899: 'braille_dots_1458',
    0x100289a: 'braille_dots_2458',
    0x100289b: 'braille_dots_12458',
    0x100289c: 'braille_dots_3458',
    0x100289e: 'braille_dots_23458',
    0x100289f: 'braille_dots_123458',
    0x8a1: 'leftradical',
    0x8a2: 'topleftradical',
    0x8a3: 'horizconnector',
    0x8a4: 'topintegral',
    0x10028a5: 'braille_dots_1368',
    0x8a6: 'vertconnector',
    0x10028a7: 'braille_dots_12368',
    0x8a8: 'botleftsqbracket',
    0x8a9: 'toprightsqbracket',
    0x10028aa: 'braille_dots_2468',
    0x10028ab: 'braille_dots_12468',
    0x10028ac: 'braille_dots_3468',
    0x10028ad: 'braille_dots_13468',
    0x10028ae: 'braille_dots_23468',
    0x8af: 'leftmiddlecurlybrace',
    0x10028b1: 'braille_dots_1568',
    0x8b3: 'topvertsummationconnector',
    0x10028b5: 'braille_dots_13568',
    0x8b6: 'botrightsummation',
    0x10028b8: 'braille_dots_4568',
    0x10028b9: 'braille_dots_14568',
    0x10028ba: 'braille_dots_24568',
    0x10028bb: 'braille_dots_124568',
    0x10028bc: 'braille_dots_34568',
    0x8be: 'greaterthanequal',
    0x10028bf: 'braille_dots_1234568',
    0x8c0: 'therefore',
    0x10028c1: 'braille_dots_178',
    0x10028c2: 'braille_dots_278',
    0x6cb: 'Cyrillic_ka',
    0x10028c4: 'braille_dots_378',
    0x10028c5: 'braille_dots_1378',
    0x10028c6: 'braille_dots_2378',
    0x10028c7: 'braille_dots_12378',
    0x8c8: 'approximate',
    0x8c9: 'similarequal',
    0x10028ca: 'braille_dots_2478',
    0x10028cb: 'braille_dots_12478',
    0x10028cc: 'braille_dots_3478',
    0x10028cd: 'braille_dots_13478',
    0x10028ce: 'braille_dots_23478',
    0x10028d0: 'braille_dots_578',
    0x10028d1: 'braille_dots_1578',
    0x10028d2: 'braille_dots_2578',
    0x10028d3: 'braille_dots_12578',
    0x8d6: 'radical',
    0x10028d7: 'braille_dots_123578',
    0x10028d8: 'braille_dots_4578',
    0x10028d9: 'braille_dots_14578',
    0x8da: 'includedin',
    0x10028dc: 'braille_dots_34578',
    0x8dd: 'union',
    0x10028de: 'braille_dots_234578',
    0x8df: 'logicalor',
    0x10028e0: 'braille_dots_678',
    0x10028e1: 'braille_dots_1678',
    0x10028e2: 'braille_dots_2678',
    0x10028e3: 'braille_dots_12678',
    0x10028e4: 'braille_dots_3678',
    0x10028e5: 'braille_dots_13678',
    0x10028e6: 'braille_dots_23678',
    0x10028e7: 'braille_dots_123678',
    0x10028e8: 'braille_dots_4678',
    0x10028ea: 'braille_dots_24678',
    0x10028eb: 'braille_dots_124678',
    0x10028ec: 'braille_dots_34678',
    0x10028ed: 'braille_dots_134678',
    0x8ef: 'partialderivative',
    0x10028f0: 'braille_dots_5678',
    0x10028f1: 'braille_dots_15678',
    0x10028f4: 'braille_dots_35678',
    0x10028f5: 'braille_dots_135678',
    0x10028f6: 'braille_dots_235678',
    0x10028f7: 'braille_dots_1235678',
    0x10028f8: 'braille_dots_45678',
    0x10028f9: 'braille_dots_145678',
    0x10028fa: 'braille_dots_245678',
    0x8fb: 'leftarrow',
    0x8fc: 'uparrow',
    0x10028fe: 'braille_dots_2345678',
    0x6b2: 'Macedonia_GJE',
    0x4e: 'N',
    0x1002074: 'foursuperior',
    0x6de: 'Cyrillic_che',
    0x6e3: 'Cyrillic_TSE',
    0x100018f: 'SCHWA',
    0x10028b4: 'braille_dots_3568',
    0x51: 'Q',
    0xeee: 'Hangul_J_Hieuh',
    0x6ee: 'Cyrillic_EN',
    0x6f0: 'Cyrillic_PE',
    0x10006f3: 'Farsi_3',
    0x6f4: 'Cyrillic_TE',
    0x100019f: 'Obarred',
    0x10006f5: 'Farsi_5',
    0x6f6: 'Cyrillic_ZHE',
    0x1a1: 'Aogonek',
    0x10006f8: 'Farsi_8',
    0x1a3: 'Lstroke',
    0x10006f9: 'Farsi_9',
    0x9e0: 'soliddiamond',
    0x9e1: 'checkerboard',
    0x9e2: 'ht',
    0x9e3: 'ff',
    0x9e4: 'cr',
    0x9e8: 'nl',
    0x9e9: 'vt',
    0x9ea: 'lowrightcorner',
    0x9ec: 'upleftcorner',
    0x9ed: 'lowleftcorner',
    0x9ee: 'crossinglines',
    0x9ef: 'horizlinescan1',
    0x9f1: 'horizlinescan5',
    0x9f2: 'horizlinescan7',
    0x9f3: 'horizlinescan9',
    0x9f4: 'leftt',
    0x9f5: 'rightt',
    0x9f6: 'bott',
    0x9f7: 'topt',
    0x9f8: 'vertbar',
    0x6ba: 'Serbian_NJE',
    0x7cb: 'Greek_LAMBDA',
    0x8dc: 'intersection',
    0x10001af: 'Uhorn',
    0xab6: 'onesixth',
    0x7cc: 'Greek_MU',
    0x10001b5: 'Zstroke',
    0x7ce: 'Greek_XI',
    0x9f0: 'horizlinescan3',
    0x1c0: 'Racute',
    0xaa1: 'emspace',
    0xaa2: 'enspace',
    0xaa4: 'em4space',
    0xaa6: 'punctspace',
    0xaa7: 'thinspace',
    0xaa8: 'hairspace',
    0xaa9: 'emdash',
    0xaac: 'signifblank',
    0x10028b7: 'braille_dots_123568',
    0xaae: 'ellipsis',
    0xaaf: 'doubbaselinedot',
    0xab0: 'onethird',
    0xab1: 'twothirds',
    0xabb: 'figdash',
    0xabc: 'leftanglebracket',
    0xabd: 'decimalpoint',
    0xabe: 'rightanglebracket',
    0xabf: 'marker',
    0x7d1: 'Greek_RHO',
    0xac3: 'oneeighth',
    0xac4: 'threeeighths',
    0xac5: 'fiveeighths',
    0xac9: 'trademark',
    0xacb: 'trademarkincircle',
    0xacc: 'leftopentriangle',
    0xacd: 'rightopentriangle',
    0xacf: 'emopenrectangle',
    0xad0: 'leftsinglequotemark',
    0xad1: 'rightsinglequotemark',
    0xad4: 'prescription',
    0xad5: 'permille',
    0xad6: 'minutes',
    0xad7: 'seconds',
    0xadb: 'filledrectbullet',
    0xade: 'emfilledcircle',
    0xae0: 'enopencircbullet',
    0xae2: 'openrectbullet',
    0xae4: 'opentribulletdown',
    0xae5: 'openstar',
    0xae6: 'enfilledcircbullet',
    0xae8: 'filledtribulletup',
    0xae9: 'filledtribulletdown',
    0xaea: 'leftpointer',
    0xaeb: 'rightpointer',
    0xaec: 'club',
    0x10001d2: 'ocaron',
    0xaee: 'heart',
    0xaf0: 'maltesecross',
    0xaf1: 'dagger',
    0xaf2: 'doubledagger',
    0xaf3: 'checkmark',
    0xaf4: 'ballotcross',
    0xaf6: 'musicalflat',
    0xaf7: 'malesymbol',
    0x6c2: 'Cyrillic_be',
    0xaf9: 'telephone',
    0xafa: 'telephonerecorder',
    0xafb: 'phonographcopyright',
    0xafc: 'caret',
    0xafd: 'singlelowquotemark',
    0xafe: 'doublelowquotemark',
    0x1d5: 'Odoubleacute',
    0x6c3: 'Cyrillic_tse',
    0x1de: 'Tcedilla',
    0x6c5: 'Cyrillic_ie',
    0x1e6: 'cacute',
    0x10001e7: 'gcaron',
    0xba3: 'leftcaret',
    0xba6: 'rightcaret',
    0xba8: 'downcaret',
    0xba9: 'upcaret',
    0x10006af: 'Arabic_gaf',
    0xbc0: 'overbar',
    0xbc2: 'downtack',
    0xbc3: 'upshoe',
    0xbc4: 'downstile',
    0xbc6: 'underbar',
    0xbcc: 'quad',
    0xbce: 'uptack',
    0xbcf: 'circle',
    0xbd3: 'upstile',
    0xbd6: 'downshoe',
    0xadf: 'emfilledrect',
    0xbda: 'leftshoe',
    0xbdc: 'lefttack',
    0x1fb: 'udoubleacute',
    0x1000176: 'Ycircumflex',
    0x1ff: 'abovedot',
    0xbfc: 'righttack',
    0x1002205: 'emptyset',
    0x6cc: 'Cyrillic_el',
    0x1002208: 'elementof',
    0x1002209: 'notelementof',
    0x6cd: 'Cyrillic_em',
    0xad3: 'rightdoublequotemark',
    0x6ce: 'Cyrillic_en',
    0x100221a: 'squareroot',
    0x100221b: 'cuberoot',
    0x10004af: 'Cyrillic_u_straight',
    0x6c: 'l',
    0xfe07: 'ISO_Group_Lock',
    0x6d2: 'Cyrillic_er',
    0xce0: 'hebrew_aleph',
    0xce1: 'hebrew_bet',
    0xce2: 'hebrew_gimel',
    0xce3: 'hebrew_daleth',
    0xce4: 'hebrew_he',
    0xce5: 'hebrew_waw',
    0xce6: 'hebrew_zayin',
    0xce7: 'hebrew_chet',
    0xce8: 'hebrew_tet',
    0xce9: 'hebrew_yod',
    0xcea: 'hebrew_finalkaph',
    0xceb: 'hebrew_kaph',
    0xcec: 'hebrew_lamed',
    0xced: 'hebrew_finalmem',
    0xcee: 'hebrew_mem',
    0xcef: 'hebrew_finalnun',
    0xcf1: 'hebrew_samech',
    0xcf3: 'hebrew_finalpe',
    0xcf4: 'hebrew_pe',
    0xcf5: 'hebrew_finalzadi',
    0xcf6: 'hebrew_zadi',
    0xcf7: 'hebrew_kuf',
    0xcf8: 'hebrew_resh',
    0xcf9: 'hebrew_shin',
    0xcfa: 'hebrew_taf',
    0x3ec: 'eabovedot',
    0x100222d: 'tintegral',
    0xae3: 'opentribulletup',
    0x25: 'percent',
    0xfe0a: 'ISO_Prev_Group',
    0xcdf: 'hebrew_doublelowline',
    0x10028ef: 'braille_dots_1234678',
    0xda1: 'Thai_kokai',
    0xda2: 'Thai_khokhai',
    0xda3: 'Thai_khokhuat',
    0xda4: 'Thai_khokhwai',
    0xda5: 'Thai_khokhon',
    0xda6: 'Thai_khorakhang',
    0xda7: 'Thai_ngongu',
    0xda9: 'Thai_choching',
    0xdaa: 'Thai_chochang',
    0xdab: 'Thai_soso',
    0xdac: 'Thai_chochoe',
    0xdad: 'Thai_yoying',
    0xdae: 'Thai_dochada',
    0xdaf: 'Thai_topatak',
    0xdb0: 'Thai_thothan',
    0xdb1: 'Thai_thonangmontho',
    0xdb2: 'Thai_thophuthao',
    0xdb4: 'Thai_dodek',
    0xdb5: 'Thai_totao',
    0xdb6: 'Thai_thothung',
    0xdb7: 'Thai_thothahan',
    0xdb8: 'Thai_thothong',
    0xdb9: 'Thai_nonu',
    0xdba: 'Thai_bobaimai',
    0xdbc: 'Thai_phophung',
    0xdbd: 'Thai_fofa',
    0xdbe: 'Thai_phophan',
    0x75: 'u',
    0xdc2: 'Thai_yoyak',
    0xdc3: 'Thai_rorua',
    0xdc4: 'Thai_ru',
    0xdc5: 'Thai_loling',
    0xdc6: 'Thai_lu',
    0xdc9: 'Thai_sorusi',
    0xdca: 'Thai_sosua',
    0xdcc: 'Thai_lochula',
    0xdcd: 'Thai_oang',
    0xdce: 'Thai_honokhuk',
    0xdcf: 'Thai_paiyannoi',
    0xdd0: 'Thai_saraa',
    0xdd1: 'Thai_maihanakat',
    0xdd2: 'Thai_saraaa',
    0xdd3: 'Thai_saraam',
    0xdd4: 'Thai_sarai',
    0xdd5: 'Thai_saraii',
    0xdd6: 'Thai_saraue',
    0xdd8: 'Thai_sarau',
    0xdd9: 'Thai_sarauu',
    0xdda: 'Thai_phinthu',
    0xdde: 'Thai_maihanakat_maitho',
    0x7a5: 'Greek_IOTAdiaeresis',
    0xde1: 'Thai_saraae',
    0xde2: 'Thai_sarao',
    0xde3: 'Thai_saraaimaimuan',
    0xde4: 'Thai_saraaimaimalai',
    0xde5: 'Thai_lakkhangyao',
    0xde6: 'Thai_maiyamok',
    0xde7: 'Thai_maitaikhu',
    0xde8: 'Thai_maiek',
    0xde9: 'Thai_maitho',
    0xdea: 'Thai_maitri',
    0xdeb: 'Thai_maichattawa',
    0xdec: 'Thai_thanthakhat',
    0xded: 'Thai_nikhahit',
    0xdf0: 'Thai_leksun',
    0xdf1: 'Thai_leknung',
    0xdf2: 'Thai_leksong',
    0xdf3: 'Thai_leksam',
    0xdf4: 'Thai_leksi',
    0xdf5: 'Thai_lekha',
    0xdf6: 'Thai_lekhok',
    0xdf7: 'Thai_lekchet',
    0xdf8: 'Thai_lekpaet',
    0x5cb: 'Arabic_theh',
    0x10004bb: 'Cyrillic_shha',
    0xfd0b: '3270_PA2',
    0x7b8: 'Greek_upsilonaccent',
    0xfd11: '3270_KeyClick',
    0xfd18: '3270_Record',
    0x7c3: 'Greek_GAMMA',
    0xfd19: '3270_ChangeScreen',
    0x7c4: 'Greek_DELTA',
    0xea2: 'Hangul_SsangKiyeog',
    0xea3: 'Hangul_KiyeogSios',
    0xea5: 'Hangul_NieunJieuj',
    0xea6: 'Hangul_NieunHieuh',
    0xea7: 'Hangul_Dikeud',
    0xea8: 'Hangul_SsangDikeud',
    0xea9: 'Hangul_Rieul',
    0xeaa: 'Hangul_RieulKiyeog',
    0xeab: 'Hangul_RieulMieum',
    0xeac: 'Hangul_RieulPieub',
    0xead: 'Hangul_RieulSios',
    0xeae: 'Hangul_RieulTieut',
    0xeaf: 'Hangul_RieulPhieuf',
    0xeb0: 'Hangul_RieulHieuh',
    0xeb1: 'Hangul_Mieum',
    0x5d1: 'Arabic_ra',
    0xeb3: 'Hangul_SsangPieub',
    0xeb4: 'Hangul_PieubSios',
    0xeb5: 'Hangul_Sios',
    0xeb6: 'Hangul_SsangSios',
    0x7c9: 'Greek_IOTA',
    0xeb8: 'Hangul_Jieuj',
    0xeb9: 'Hangul_SsangJieuj',
    0xeba: 'Hangul_Cieuc',
    0xebb: 'Hangul_Khieuq',
    0xebc: 'Hangul_Tieut',
    0xebd: 'Hangul_Phieuf',
    0xebe: 'Hangul_Hieuh',
    0xebf: 'Hangul_A',
    0xec0: 'Hangul_AE',
    0xec1: 'Hangul_YA',
    0xec2: 'Hangul_YAE',
    0xec3: 'Hangul_EO',
    0xec4: 'Hangul_E',
    0xec5: 'Hangul_YEO',
    0xec6: 'Hangul_YE',
    0xec7: 'Hangul_O',
    0xec9: 'Hangul_WAE',
    0xeca: 'Hangul_OE',
    0xecb: 'Hangul_YO',
    0xecc: 'Hangul_U',
    0xecd: 'Hangul_WEO',
    0xece: 'Hangul_WE',
    0xecf: 'Hangul_WI',
    0xed0: 'Hangul_YU',
    0xed1: 'Hangul_EU',
    0xed2: 'Hangul_YI',
    0xed3: 'Hangul_I',
    0xed4: 'Hangul_J_Kiyeog',
    0xed5: 'Hangul_J_SsangKiyeog',
    0xed6: 'Hangul_J_KiyeogSios',
    0xed7: 'Hangul_J_Nieun',
    0xed8: 'Hangul_J_NieunJieuj',
    0xed9: 'Hangul_J_NieunHieuh',
    0xeda: 'Hangul_J_Dikeud',
    0xedc: 'Hangul_J_RieulKiyeog',
    0xedd: 'Hangul_J_RieulMieum',
    0xede: 'Hangul_J_RieulPieub',
    0xedf: 'Hangul_J_RieulSios',
    0xee0: 'Hangul_J_RieulTieut',
    0xee1: 'Hangul_J_RieulPhieuf',
    0xee2: 'Hangul_J_RieulHieuh',
    0xee3: 'Hangul_J_Mieum',
    0xee4: 'Hangul_J_Pieub',
    0xee5: 'Hangul_J_PieubSios',
    0xee6: 'Hangul_J_Sios',
    0xee7: 'Hangul_J_SsangSios',
    0xee8: 'Hangul_J_Ieung',
    0xee9: 'Hangul_J_Jieuj',
    0xeeb: 'Hangul_J_Khieuq',
    0xeec: 'Hangul_J_Tieut',
    0xeed: 'Hangul_J_Phieuf',
    0xeef: 'Hangul_RieulYeorinHieuh',
    0xef0: 'Hangul_SunkyeongeumMieum',
    0xef1: 'Hangul_SunkyeongeumPieub',
    0xef4: 'Hangul_SunkyeongeumPhieuf',
    0xef5: 'Hangul_YeorinHieuh',
    0xef6: 'Hangul_AraeA',
    0xef7: 'Hangul_AraeAE',
    0xef8: 'Hangul_J_PanSios',
    0xef9: 'Hangul_J_KkogjiDalrinIeung',
    0xefa: 'Hangul_J_YeorinHieuh',
    0x7d5: 'Greek_UPSILON',
    0x7d6: 'Greek_PHI',
    0x7d9: 'Greek_OMEGA',
    0x1002078: 'eightsuperior',
    0xaf8: 'femalesymbol',
    0x7e9: 'Greek_iota',
    0x2a9: 'Iabovedot',
    0x7f1: 'Greek_rho',
    0x7f3: 'Greek_finalsmallsigma',
    0x7f5: 'Greek_upsilon',
    0x7f7: 'Greek_chi',
    0x7f9: 'Greek_omega',
    0x4cb: 'kana_HI',
    0xfe22: 'ISO_Move_Line_Down',
    0x2b1: 'hstroke',
    0x100280b: 'braille_dots_124',
    0x100280c: 'braille_dots_34',
    0x2bc: 'jcircumflex',
    0xb4: 'acute',
    0x10006f1: 'Farsi_1',
    0xfe27: 'ISO_Set_Margin_Left',
    0x6f2: 'Cyrillic_ER',
    0x6f3: 'Cyrillic_ES',
    0x1000496: 'Cyrillic_ZHE_descender',
    0x10010d0: 'Georgian_an',
    0x10010d1: 'Georgian_ban',
    0x10010d2: 'Georgian_gan',
    0x10001a0: 'Ohorn',
    0x10010d4: 'Georgian_en',
    0x10010d5: 'Georgian_vin',
    0x10010d6: 'Georgian_zen',
    0x10010d7: 'Georgian_tan',
    0x10010d8: 'Georgian_in',
    0x10010d9: 'Georgian_kan',
    0x10010da: 'Georgian_las',
    0x10010db: 'Georgian_man',
    0x10010dc: 'Georgian_nar',
    0x10010dd: 'Georgian_on',
    0x10010de: 'Georgian_par',
    0x10010df: 'Georgian_zhar',
    0x10010e0: 'Georgian_rae',
    0x10010e1: 'Georgian_san',
    0x10010e2: 'Georgian_tar',
    0x10010e3: 'Georgian_un',
    0x10010e4: 'Georgian_phar',
    0x10010e5: 'Georgian_khar',
    0x10010e6: 'Georgian_ghan',
    0x10010e7: 'Georgian_qar',
    0x10010e8: 'Georgian_shin',
    0x10010e9: 'Georgian_chin',
    0x10010ea: 'Georgian_can',
    0x10010eb: 'Georgian_jil',
    0x10010ed: 'Georgian_char',
    0x10010ee: 'Georgian_xan',
    0x10010ef: 'Georgian_jhan',
    0x10010f0: 'Georgian_hae',
    0x10010f1: 'Georgian_he',
    0x10010f2: 'Georgian_hie',
    0x10010f4: 'Georgian_har',
    0x10010f5: 'Georgian_hoe',
    0x10010f6: 'Georgian_fi',
    0x1002829: 'braille_dots_146',
    0x2d8: 'Gcircumflex',
    0x1001ecd: 'obelowdot',
    0x10006f7: 'Farsi_7',
    0x1002833: 'braille_dots_1256',
    0x1002836: 'braille_dots_2356',
    0x1002838: 'braille_dots_456',
    0xff3f: 'Hangul_Special',
    0x10006a9: 'Arabic_keheh',
    0x100283d: 'braille_dots_13456',
    0x100283e: 'braille_dots_23456',
    0x1002840: 'braille_dots_7',
    0x1002841: 'braille_dots_17',
    0x10004d9: 'Cyrillic_schwa',
    0x2f5: 'gabovedot',
    0x6fd: 'Cyrillic_SHCHA',
    0xda8: 'Thai_chochan',
    0x2fe: 'scircumflex',
    0x1002857: 'braille_dots_12357',
    0x5f0: 'Arabic_kasra',
    0xdbb: 'Thai_popla',
    0x5f1: 'Arabic_shadda',
    0xdbf: 'Thai_fofan',
    0xdc0: 'Thai_phosamphao',
    0xdc1: 'Thai_moma',
    0x1002830: 'braille_dots_56',
    0x5f2: 'Arabic_sukun',
    0xdc7: 'Thai_wowaen',
    0xdc8: 'Thai_sosala',
    0x1002875: 'braille_dots_13567',
    0xdcb: 'Thai_hohip',
    0xa1: 'exclamdown',
    0xa2: 'cent',
    0xdd7: 'Thai_sarauee',
    0x1002882: 'braille_dots_28',
    0x1002883: 'braille_dots_128',
    0xa3: 'sterling',
    0x1002887: 'braille_dots_1238',
    0x1002889: 'braille_dots_148',
    0xddf: 'Thai_baht',
    0xde0: 'Thai_sarae',
    0x6bc: 'Macedonia_KJE',
    0x8a7: 'topleftsqbracket',
    0x1b6: 'sacute',
    0x1002893: 'braille_dots_1258',
    0x21: 'exclam',
    0x1002897: 'braille_dots_12358',
    0x100289d: 'braille_dots_13458',
    0x13bc: 'OE',
    0x13bd: 'oe',
    0x13be: 'Ydiaeresis',
    0x10028a0: 'braille_dots_68',
    0x10028a3: 'braille_dots_1268',
    0xdf9: 'Thai_lekkao',
    0x8a5: 'botintegral',
    0x10028a8: 'braille_dots_468',
    0x10028a9: 'braille_dots_1468',
    0x8aa: 'botrightsqbracket',
    0x8ab: 'topleftparens',
    0x8ac: 'botleftparens',
    0x8ad: 'toprightparens',
    0xab: 'guillemotleft',
    0x10028af: 'braille_dots_123468',
    0x10028b0: 'braille_dots_568',
    0x8b1: 'topleftsummation',
    0x10006f4: 'Farsi_4',
    0x8b2: 'botleftsummation',
    0x10028b3: 'braille_dots_12568',
    0x1001e0a: 'Dabovedot',
    0x8b5: 'toprightsummation',
    0xfe0b: 'ISO_Prev_Group_Lock',
    0x8b7: 'rightmiddlesummation',
    0x4b7: 'kana_KI',
    0x10020a5: 'MillSign',
    0x8bc: 'lessthanequal',
    0x8bd: 'notequal',
    0x10028be: 'braille_dots_234568',
    0x10028c0: 'braille_dots_78',
    0x8c1: 'variation',
    0x10028c3: 'braille_dots_1278',
    0x10020a7: 'PesetaSign',
    0x10028c8: 'braille_dots_478',
    0x10028c9: 'braille_dots_1478',
    0x8cd: 'ifonlyif',
    0xfe23: 'ISO_Partial_Line_Up',
    0x8ce: 'implies',
    0x10028a1: 'braille_dots_168',
    0x10028cf: 'braille_dots_123478',
    0xfe25: 'ISO_Partial_Space_Left',
    0x10028d4: 'braille_dots_3578',
    0x10028d5: 'braille_dots_13578',
    0x10028d6: 'braille_dots_23578',
    0x10004b0: 'Cyrillic_U_straight_bar',
    0x10028da: 'braille_dots_24578',
    0x8db: 'includes',
    0x10028dd: 'braille_dots_134578',
    0x8de: 'logicaland',
    0x10028df: 'braille_dots_1234578',
    0x1002823: 'braille_dots_126',
    0x10028e9: 'braille_dots_14678',
    0xb7: 'periodcentered',
    0x70: 'p',
    0x10028ee: 'braille_dots_234678',
    0x10028f2: 'braille_dots_25678',
    0x6c0: 'Cyrillic_yu',
    0x10028f3: 'braille_dots_125678',
    0x1002076: 'sixsuperior',
    0x8f6: 'function',
    0x3a2: 'kra',
    0x10028fb: 'braille_dots_1245678',
    0x10028fc: 'braille_dots_345678',
    0x8cf: 'identical',
    0x10028fd: 'braille_dots_1345678',
    0x8fe: 'downarrow',
    0x1002828: 'braille_dots_46',
    0x10028ff: 'braille_dots_12345678',
    0x3ab: 'Gcedilla',
    0xfe56: 'dead_abovedot',
    0x1001e57: 'pabovedot',
    0xfe60: 'dead_belowdot',
    0x10006c1: 'Arabic_heh_goal',
    0x10004b7: 'Cyrillic_che_descender',
    0x3bd: 'ENG',
    0x3c0: 'Amacron',
    0xace: 'emopencircle',
    0x10001d1: 'Ocaron',
    0x1d2: 'Ncaron',
    0xcf0: 'hebrew_nun',
    0x10028db: 'braille_dots_124578',
    0x3d2: 'Omacron',
    0x1001e80: 'Wgrave',
    0x1002831: 'braille_dots_156',
    0xfe81: 'dead_A',
    0xfe82: 'dead_e',
    0xfe83: 'dead_E',
    0x3d9: 'Uogonek',
    0xfe84: 'dead_i',
    0x1001e85: 'wdiaeresis',
    0x3de: 'Umacron',
    0x1001e8a: 'Xabovedot',
    0x1001e8b: 'xabovedot',
    0xfe61: 'dead_hook',
    0xea1: 'Hangul_Kiyeog',
    0x8ae: 'botrightparens',
    0x3ef: 'imacron',
    0x3f1: 'ncedilla',
    0xca: 'Ecircumflex',
    0x10028a6: 'braille_dots_2368',
    0xea4: 'Hangul_Nieun',
    0x1001ea5: 'acircumflexacute',
    0x3fd: 'utilde',
    0xcf2: 'hebrew_ayin',
    0x100057d: 'Armenian_se',
    0xeb7: 'Hangul_Ieung',
    0xcf: 'Idiaeresis',
    0xaa5: 'digitspace',
    0xfed4: 'Last_Virtual_Screen',
    0xfe6a: 'dead_belowtilde',
    0xec8: 'Hangul_WA',
    0xad2: 'leftdoublequotemark',
    0xfed0: 'First_Virtual_Screen',
    0x1001ed1: 'ocircumflexacute',
    0x1e5: 'lacute',
    0x1001ed2: 'Ocircumflexgrave',
    0x1001ed5: 'ocircumflexhook',
    0xef3: 'Hangul_KkogjiDalrinIeung',
    0x10001e6: 'Gcaron',
    0xedb: 'Hangul_J_Rieul',
    0x1002844: 'braille_dots_37',
    0xfee0: 'Pointer_Left',
    0x1001ee1: 'ohorntilde',
    0x1001ee2: 'Ohornbelowdot',
    0xfee3: 'Pointer_Down',
    0x1001ee5: 'ubelowdot',
    0x1001ee6: 'Uhook',
    0xfee7: 'Pointer_DownRight',
    0xfee8: 'Pointer_Button_Dflt',
    0x1001ee9: 'uhornacute',
    0xfeec: 'Pointer_Button4',
    0xfeed: 'Pointer_Button5',
    0xeb2: 'Hangul_Pieub',
    0x1001eee: 'Uhorntilde',
    0x1001eef: 'uhorntilde',
    0x1001ef0: 'Uhornbelowdot',
    0x1001ef1: 'uhornbelowdot',
    0x1001ef2: 'Ygrave',
    0xfef3: 'Pointer_DblClick5',
    0xfef5: 'Pointer_Drag1',
    0x1001ef6: 'Yhook',
    0x6c7: 'Cyrillic_ghe',
    0x1001ef7: 'yhook',
    0xfef8: 'Pointer_Drag4',
    0x1001ef9: 'ytilde',
    0xeff: 'Korean_Won',
    0x1001e02: 'Babovedot',
    0x1ef: 'dcaron',
    0x2bb: 'gbreve',
    0x7a2: 'Greek_EPSILONaccent',
    0x6a4: 'Ukranian_je',
    0xae: 'registered',
    0xffb2: 'KP_2',
    0x8b4: 'botvertsummationconnector',
    0xff2a: 'Zenkaku_Hankaku',
    0x1008ff2b: 'XF86WakeUp',
    0x1d1: 'Nacute',
    0xff2f: 'Eisu_Shift',
    0x1ac: 'Zacute',
    0x9df: 'blank',
    0xe9: 'eacute',
    0x1002856: 'braille_dots_2357',
    0x9e5: 'lf',
    0x7a4: 'Greek_IOTAaccent',
    0xdb3: 'Thai_nonen',
    0x9eb: 'uprightcorner',
    0xec: 'igrave',
    0x10004a2: 'Cyrillic_EN_descender',
    0x4a3: 'kana_closingbracket',
    0x4a5: 'kana_conjunctive',
    0xee: 'icircumflex',
    0x4ab: 'kana_o',
    0x4ae: 'kana_yo',
    0x4b0: 'prolongedsound',
    0x10004b1: 'Cyrillic_u_straight_bar',
    0x10004b2: 'Cyrillic_HA_descender',
    0x4b3: 'kana_U',
    0x10010ec: 'Georgian_cil',
    0x4b6: 'kana_KA',
    0x4b8: 'kana_KU',
    0x4b9: 'kana_KE',
    0x4ba: 'kana_KO',
    0x1000535: 'Armenian_YECH',
    0x4bf: 'kana_SO',
    0x4c2: 'kana_TSU',
    0x4c3: 'kana_TE',
    0x1000537: 'Armenian_E',
    0x1000538: 'Armenian_AT',
    0xf6: 'odiaeresis',
    0x4d2: 'kana_ME',
    0x4d4: 'kana_YA',
    0xfd01: '3270_Duplicate',
    0xfd02: '3270_FieldMark',
    0xfd03: '3270_Right2',
    0xfd04: '3270_Left2',
    0xfd05: '3270_BackTab',
    0xfd06: '3270_EraseEOF',
    0xfd07: '3270_EraseInput',
    0xfd08: '3270_Reset',
    0xfd09: '3270_Quit',
    0xfd0a: '3270_PA1',
    0x4d7: 'kana_RA',
    0xfd0c: '3270_PA3',
    0xfd0d: '3270_Test',
    0xfd0e: '3270_Attn',
    0xfd0f: '3270_CursorBlink',
    0xfd10: '3270_AltCursor',
    0x10004d8: 'Cyrillic_SCHWA',
    0xfd12: '3270_Jump',
    0xfd13: '3270_Ident',
    0xfd14: '3270_Rule',
    0xfd15: '3270_Copy',
    0xfd16: '3270_Play',
    0xfd17: '3270_Setup',
    0xfd1a: '3270_DeleteWord',
    0xfd1b: '3270_ExSelect',
    0xfd1c: '3270_CursorSelect',
    0xfd1d: '3270_PrintScreen',
    0xfd1e: '3270_Enter',
    0x4db: 'kana_RO',
    0xf9: 'ugrave',
    0x77: 'w',
    0xada: 'hexagram',
    0xff99: 'KP_Down',
    0x7a8: 'Greek_UPSILONaccent',
    0xeea: 'Hangul_J_Cieuc',
    0xfe01: 'ISO_Lock',
    0xfe02: 'ISO_Level2_Latch',
    0xfe03: 'ISO_Level3_Shift',
    0xfe04: 'ISO_Level3_Latch',
    0xfe05: 'ISO_Level3_Lock',
    0xfe06: 'ISO_Group_Latch',
    0xfe08: 'ISO_Next_Group',
    0xfe09: 'ISO_Next_Group_Lock',
    0x1000543: 'Armenian_TCHE',
    0x1001e0b: 'dabovedot',
    0xfe0c: 'ISO_First_Group',
    0xfe0d: 'ISO_First_Group_Lock',
    0xfe0e: 'ISO_Last_Group',
    0xfe0f: 'ISO_Last_Group_Lock',
    0x1000654: 'Arabic_hamza_above',
    0xfe11: 'ISO_Level5_Shift',
    0xfe12: 'ISO_Level5_Latch',
    0xfe13: 'ISO_Level5_Lock',
    0x1001e1e: 'Fabovedot',
    0x1001e1f: 'fabovedot',
    0xfe20: 'ISO_Left_Tab',
    0xfe21: 'ISO_Move_Line_Up',
    0xfe24: 'ISO_Partial_Line_Down',
    0xfe26: 'ISO_Partial_Space_Right',
    0xfe28: 'ISO_Set_Margin_Right',
    0xfe29: 'ISO_Release_Margin_Left',
    0xfe2a: 'ISO_Release_Margin_Right',
    0xfe2b: 'ISO_Release_Both_Margins',
    0xfe2c: 'ISO_Fast_Cursor_Left',
    0xfe2d: 'ISO_Fast_Cursor_Right',
    0xfe2e: 'ISO_Fast_Cursor_Up',
    0xfe2f: 'ISO_Fast_Cursor_Down',
    0xfe30: 'ISO_Continuous_Underline',
    0xfe31: 'ISO_Discontinuous_Underline',
    0xfe32: 'ISO_Emphasize',
    0xfe33: 'ISO_Center_Object',
    0xfe34: 'ISO_Enter',
    0x1001e36: 'Lbelowdot',
    0x1001e37: 'lbelowdot',
    0x1001e40: 'Mabovedot',
    0x1001e41: 'mabovedot',
    0xfe50: 'dead_grave',
    0xfe51: 'dead_acute',
    0xfe52: 'dead_circumflex',
    0xfe53: 'dead_tilde',
    0xfe54: 'dead_macron',
    0xfe55: 'dead_breve',
    0x1001e56: 'Pabovedot',
    0xfe57: 'dead_diaeresis',
    0xfe58: 'dead_abovering',
    0xfe59: 'dead_doubleacute',
    0xfe5a: 'dead_caron',
    0xfe5b: 'dead_cedilla',
    0xfe5c: 'dead_ogonek',
    0xfe5d: 'dead_iota',
    0xfe5e: 'dead_voiced_sound',
    0xfe5f: 'dead_semivoiced_sound',
    0x1001e60: 'Sabovedot',
    0x1001e61: 'sabovedot',
    0xfe62: 'dead_horn',
    0xfe63: 'dead_stroke',
    0xfe64: 'dead_abovecomma',
    0xfe65: 'dead_abovereversedcomma',
    0xfe66: 'dead_doublegrave',
    0xfe67: 'dead_belowring',
    0xfe68: 'dead_belowmacron',
    0xfe69: 'dead_belowcircumflex',
    0x1001e6a: 'Tabovedot',
    0x1001e6b: 'tabovedot',
    0xfe6c: 'dead_belowdiaeresis',
    0xfe6d: 'dead_invertedbreve',
    0xfe6e: 'dead_belowcomma',
    0xfe6f: 'dead_currency',
    0xfe70: 'AccessX_Enable',
    0xfe71: 'AccessX_Feedback_Enable',
    0xfe72: 'RepeatKeys_Enable',
    0xfe73: 'SlowKeys_Enable',
    0xfe74: 'BounceKeys_Enable',
    0xfe75: 'StickyKeys_Enable',
    0xfe76: 'MouseKeys_Enable',
    0xfe77: 'MouseKeys_Accel_Enable',
    0xfe78: 'Overlay1_Enable',
    0xfe79: 'Overlay2_Enable',
    0xfe7a: 'AudibleBell_Enable',
    0xfe80: 'dead_a',
    0x1001e81: 'wgrave',
    0x1001e82: 'Wacute',
    0x1001e83: 'wacute',
    0x1001e84: 'Wdiaeresis',
    0xfe85: 'dead_I',
    0xfe86: 'dead_o',
    0xfe87: 'dead_O',
    0xfe88: 'dead_u',
    0xfe89: 'dead_U',
    0xfe8a: 'dead_small_schwa',
    0xfe8b: 'dead_capital_schwa',
    0xfe8c: 'dead_greek',
    0xffc3: 'F6',
    0x1001ea0: 'Abelowdot',
    0x1001ea1: 'abelowdot',
    0x1001ea2: 'Ahook',
    0x1001ea3: 'ahook',
    0x1001ea4: 'Acircumflexacute',
    0x1001ea6: 'Acircumflexgrave',
    0x1001ea7: 'acircumflexgrave',
    0x1001ea8: 'Acircumflexhook',
    0x1001ea9: 'acircumflexhook',
    0x1001eaa: 'Acircumflextilde',
    0x1001eab: 'acircumflextilde',
    0x1001eac: 'Acircumflexbelowdot',
    0x1001ead: 'acircumflexbelowdot',
    0x1001eae: 'Abreveacute',
    0x1001eaf: 'abreveacute',
    0x1001eb0: 'Abrevegrave',
    0x1001eb1: 'abrevegrave',
    0x1001eb2: 'Abrevehook',
    0x1001eb3: 'abrevehook',
    0x1001eb4: 'Abrevetilde',
    0x1001eb5: 'abrevetilde',
    0x1001eb6: 'Abrevebelowdot',
    0x1001eb7: 'abrevebelowdot',
    0x1001eb8: 'Ebelowdot',
    0x1001eb9: 'ebelowdot',
    0x1001eba: 'Ehook',
    0x1001ebb: 'ehook',
    0x1001ebc: 'Etilde',
    0x1001ebd: 'etilde',
    0x1001ebe: 'Ecircumflexacute',
    0x1001ebf: 'ecircumflexacute',
    0x1001ec0: 'Ecircumflexgrave',
    0x1001ec1: 'ecircumflexgrave',
    0x1001ec2: 'Ecircumflexhook',
    0x1001ec3: 'ecircumflexhook',
    0x1001ec4: 'Ecircumflextilde',
    0x1001ec5: 'ecircumflextilde',
    0x1001ec6: 'Ecircumflexbelowdot',
    0x1001ec7: 'ecircumflexbelowdot',
    0x1001ec8: 'Ihook',
    0x1001ec9: 'ihook',
    0x1001eca: 'Ibelowdot',
    0x1001ecb: 'ibelowdot',
    0x1001ecc: 'Obelowdot',
    0x10004ae: 'Cyrillic_U_straight',
    0x1001ece: 'Ohook',
    0x1001ecf: 'ohook',
    0x1001ed0: 'Ocircumflexacute',
    0xfed1: 'Prev_Virtual_Screen',
    0xfed2: 'Next_Virtual_Screen',
    0x1001ed3: 'ocircumflexgrave',
    0x1001ed4: 'Ocircumflexhook',
    0xfed5: 'Terminate_Server',
    0x1001ed6: 'Ocircumflextilde',
    0x1001ed7: 'ocircumflextilde',
    0x1001ed8: 'Ocircumflexbelowdot',
    0x1001ed9: 'ocircumflexbelowdot',
    0x1001eda: 'Ohornacute',
    0x1001edb: 'ohornacute',
    0x1001edc: 'Ohorngrave',
    0x1001edd: 'ohorngrave',
    0x1001ede: 'Ohornhook',
    0x1001edf: 'ohornhook',
    0x1001ee0: 'Ohorntilde',
    0xfee1: 'Pointer_Right',
    0xfee2: 'Pointer_Up',
    0x1001ee3: 'ohornbelowdot',
    0x1001ee4: 'Ubelowdot',
    0xfee5: 'Pointer_UpRight',
    0xfee6: 'Pointer_DownLeft',
    0x1001ee7: 'uhook',
    0x1001ee8: 'Uhornacute',
    0xfee9: 'Pointer_Button1',
    0x1001eea: 'Uhorngrave',
    0xfeeb: 'Pointer_Button3',
    0x1001eec: 'Uhornhook',
    0x1001eed: 'uhornhook',
    0xfeee: 'Pointer_DblClick_Dflt',
    0xfeef: 'Pointer_DblClick1',
    0xfef0: 'Pointer_DblClick2',
    0xfef1: 'Pointer_DblClick3',
    0xfef2: 'Pointer_DblClick4',
    0x1001ef3: 'ygrave',
    0xfef4: 'Pointer_Drag_Dflt',
    0x1001ef5: 'ybelowdot',
    0xfef6: 'Pointer_Drag2',
    0xfef7: 'Pointer_Drag3',
    0x1001ef8: 'Ytilde',
    0xfef9: 'Pointer_EnableKeys',
    0xfefa: 'Pointer_Accelerate',
    0xfefb: 'Pointer_DfltBtnNext',
    0xfefc: 'Pointer_DfltBtnPrev',
    0xfefd: 'Pointer_Drag5',
    0xfea0: 'ch',
    0xfea1: 'Ch',
    0xfea2: 'CH',
    0xfea3: 'c_h',
    0xfea4: 'C_h',
    0xfea5: 'C_H',
    0xff08: 'BackSpace',
    0xff09: 'Tab',
    0xff0a: 'Linefeed',
    0xff0b: 'Clear',
    0xff0d: 'Return',
    0xff13: 'Pause',
    0xff14: 'Scroll_Lock',
    0xff15: 'Sys_Req',
    0xff1b: 'Escape',
    0x1002876: 'braille_dots_23567',
    0xff20: 'Multi_key',
    0xff21: 'Kanji',
    0xff22: 'Muhenkan',
    0xff23: 'Henkan',
    0xff24: 'Romaji',
    0xff25: 'Hiragana',
    0xff26: 'Katakana',
    0xff27: 'Hiragana_Katakana',
    0xff28: 'Zenkaku',
    0xff29: 'Hankaku',
    0x1008ff2a: 'XF86PowerOff',
    0xff2b: 'Touroku',
    0xff2c: 'Massyo',
    0xff2d: 'Kana_Lock',
    0xff2e: 'Kana_Shift',
    0x1008ff2f: 'XF86Sleep',
    0xff30: 'Eisu_toggle',
    0xff31: 'Hangul',
    0xff32: 'Hangul_Start',
    0xff33: 'Hangul_End',
    0xff34: 'Hangul_Hanja',
    0xff35: 'Hangul_Jamo',
    0xff36: 'Hangul_Romaja',
    0xff37: 'Hangul_Codeinput',
    0xff38: 'Hangul_Jeonja',
    0xff39: 'Hangul_Banja',
    0xff3a: 'Hangul_PreHanja',
    0xff3b: 'Hangul_PostHanja',
    0xff3c: 'Hangul_SingleCandidate',
    0xff3d: 'Hangul_MultipleCandidate',
    0xff3e: 'Hangul_PreviousCandidate',
    0x1000536: 'Armenian_ZA',
    0xff50: 'Home',
    0xff51: 'Left',
    0xff52: 'Up',
    0xff53: 'Right',
    0xff54: 'Down',
    0xff55: 'Prior',
    0xff56: 'Next',
    0xff57: 'End',
    0xff58: 'Begin',
    0xff60: 'Select',
    0xff61: 'Print',
    0xff62: 'Execute',
    0xff63: 'Insert',
    0xff65: 'Undo',
    0xff66: 'Redo',
    0xff67: 'Menu',
    0xff68: 'Find',
    0xff69: 'Cancel',
    0xff6a: 'Help',
    0xff6b: 'Break',
    0x100054f: 'Armenian_TYUN',
    0xaa3: 'em3space',
    0xff7e: 'Arabic_switch',
    0xff7f: 'Num_Lock',
    0xff80: 'KP_Space',
    0x1000540: 'Armenian_HO',
    0xffeb: 'Super_L',
    0x1000541: 'Armenian_DZA',
    0xff89: 'KP_Tab',
    0xff8d: 'KP_Enter',
    0x1000550: 'Armenian_RE',
    0xff91: 'KP_F1',
    0xff92: 'KP_F2',
    0xff93: 'KP_F3',
    0xff94: 'KP_F4',
    0xff95: 'KP_Home',
    0xff96: 'KP_Left',
    0xff97: 'KP_Up',
    0xff98: 'KP_Right',
    0x1000544: 'Armenian_MEN',
    0xff9a: 'KP_Prior',
    0xff9b: 'KP_Next',
    0xff9c: 'KP_End',
    0xff9d: 'KP_Begin',
    0xff9e: 'KP_Insert',
    0xff9f: 'KP_Delete',
    0x1000546: 'Armenian_NU',
    0xffaa: 'KP_Multiply',
    0xffab: 'KP_Add',
    0xffac: 'KP_Separator',
    0xffad: 'KP_Subtract',
    0xffae: 'KP_Decimal',
    0xffaf: 'KP_Divide',
    0xffb0: 'KP_0',
    0xffb1: 'KP_1',
    0xffb3: 'KP_3',
    0xffb4: 'KP_4',
    0xffb5: 'KP_5',
    0xffb6: 'KP_6',
    0xffb7: 'KP_7',
    0xffb8: 'KP_8',
    0xffb9: 'KP_9',
    0xffbd: 'KP_Equal',
    0xffbe: 'F1',
    0xffbf: 'F2',
    0xffc0: 'F3',
    0xffc1: 'F4',
    0xffc2: 'F5',
    0x100054b: 'Armenian_JE',
    0xffc4: 'F7',
    0xffc5: 'F8',
    0xffc6: 'F9',
    0xffc7: 'F10',
    0xffc8: 'F11',
    0xffc9: 'F12',
    0xffca: 'F13',
    0xffcb: 'F14',
    0xffcc: 'L5',
    0xffcd: 'F16',
    0xffce: 'F17',
    0xffcf: 'F18',
    0xffd0: 'F19',
    0xffd1: 'L10',
    0xffd2: 'R1',
    0xffd3: 'R2',
    0xffd4: 'R3',
    0xffd5: 'F24',
    0xffd6: 'R5',
    0xffd7: 'R6',
    0xffd8: 'R7',
    0xffd9: 'R8',
    0xffda: 'R9',
    0xffdb: 'R10',
    0xffdc: 'R11',
    0xffdd: 'R12',
    0xffde: 'R13',
    0xffdf: 'R14',
    0xffe0: 'R15',
    0xffe1: 'Shift_L',
    0xffe2: 'Shift_R',
    0xffe3: 'Control_L',
    0xffe4: 'Control_R',
    0xffe5: 'Caps_Lock',
    0xffe6: 'Shift_Lock',
    0xffe7: 'Meta_L',
    0xffe8: 'Meta_R',
    0xffe9: 'Alt_L',
    0xffea: 'Alt_R',
    0xffec: 'Super_R',
    0xffed: 'Hyper_L',
    0xffee: 'Hyper_R',
    0xfff1: 'braille_dot_1',
    0xfff2: 'braille_dot_2',
    0xfff3: 'braille_dot_3',
    0xfff4: 'braille_dot_4',
    0xfff5: 'braille_dot_5',
    0xfff6: 'braille_dot_6',
    0xfff7: 'braille_dot_7',
    0xfff8: 'braille_dot_8',
    0xfff9: 'braille_dot_9',
    0xfffa: 'braille_dot_10',
    0xaaa: 'endash',
    0x1000d82: 'Sinh_ng',
    0x1000d83: 'Sinh_h2',
    0x1000d85: 'Sinh_a',
    0x1000d86: 'Sinh_aa',
    0x1000d87: 'Sinh_ae',
    0x1000d88: 'Sinh_aee',
    0x1000d89: 'Sinh_i',
    0x1000d8a: 'Sinh_ii',
    0x1000d8b: 'Sinh_u',
    0x1000d8c: 'Sinh_uu',
    0x1000d8d: 'Sinh_ri',
    0x1000d8e: 'Sinh_rii',
    0x1000d8f: 'Sinh_lu',
    0x1000d90: 'Sinh_luu',
    0x1000d91: 'Sinh_e',
    0x1000d92: 'Sinh_ee',
    0x1000d93: 'Sinh_ai',
    0x1000d94: 'Sinh_o',
    0x1000d95: 'Sinh_oo',
    0x1000d96: 'Sinh_au',
    0x1000d9a: 'Sinh_ka',
    0x1000d9b: 'Sinh_kha',
    0x1000d9c: 'Sinh_ga',
    0x1000d9d: 'Sinh_gha',
    0x1000d9e: 'Sinh_ng2',
    0x1000d9f: 'Sinh_nga',
    0x1000da0: 'Sinh_ca',
    0x1000da1: 'Sinh_cha',
    0x1000da2: 'Sinh_ja',
    0x1000da3: 'Sinh_jha',
    0x1000da4: 'Sinh_nya',
    0x1000da5: 'Sinh_jnya',
    0x1000da6: 'Sinh_nja',
    0x1000da7: 'Sinh_tta',
    0x1000da8: 'Sinh_ttha',
    0x1000da9: 'Sinh_dda',
    0x1000daa: 'Sinh_ddha',
    0x1000dab: 'Sinh_nna',
    0x1000dac: 'Sinh_ndda',
    0x1000dad: 'Sinh_tha',
    0x1000dae: 'Sinh_thha',
    0x1000daf: 'Sinh_dha',
    0x1000db0: 'Sinh_dhha',
    0x1000db1: 'Sinh_na',
    0x1000db3: 'Sinh_ndha',
    0x1000db4: 'Sinh_pa',
    0x1000db5: 'Sinh_pha',
    0x1000db6: 'Sinh_ba',
    0x1000db7: 'Sinh_bha',
    0x1000db8: 'Sinh_ma',
    0x1000db9: 'Sinh_mba',
    0x1000dba: 'Sinh_ya',
    0x1000dbb: 'Sinh_ra',
    0x1000dbd: 'Sinh_la',
    0x1000dc0: 'Sinh_va',
    0x1000dc1: 'Sinh_sha',
    0x1000dc2: 'Sinh_ssha',
    0x1000dc3: 'Sinh_sa',
    0x1000dc4: 'Sinh_ha',
    0x1000dc5: 'Sinh_lla',
    0x1000dc6: 'Sinh_fa',
    0x1000dca: 'Sinh_al',
    0x1000dcf: 'Sinh_aa2',
    0x1000dd0: 'Sinh_ae2',
    0x1000dd1: 'Sinh_aee2',
    0x1000dd2: 'Sinh_i2',
    0x1000dd3: 'Sinh_ii2',
    0x1000dd4: 'Sinh_u2',
    0x1000dd6: 'Sinh_uu2',
    0x1000dd8: 'Sinh_ru2',
    0x1000dd9: 'Sinh_e2',
    0x1000dda: 'Sinh_ee2',
    0x1000ddb: 'Sinh_ai2',
    0x1000ddc: 'Sinh_o2',
    0x1000ddd: 'Sinh_oo2',
    0x1000dde: 'Sinh_au2',
    0x1000ddf: 'Sinh_lu2',
    0x1000df2: 'Sinh_ruu2',
    0x1000df3: 'Sinh_luu2',
    0x1000df4: 'Sinh_kunddaliya',
    0xffffff: 'VoidSymbol',
    }


KEYSYMDEF = {}
for code, name in KEYSYMS.iteritems():
    KEYSYMDEF[keysym.Keysym(code)] = namesym.Namesym(name)

# del KEYSYMS, code, name


class Keysymdef(object):
    r"""Keysymdef

    Keysymdef is a object.
    Responsibility:
    """
    pass




# For Emacs
# Local Variables:
# coding: utf-8
# End:
# keysymdef.py ends here

* Wed 15 Oct 2014 11:38:22 AM JST
    32: 'space',
    33: 'exclam',
    34: 'quotedbl',
    35: 'numbersign',
    36: 'dollar',
    37: 'percent',
    38: 'ampersand',
    39: 'apostrophe',
    40: 'parenleft',
    41: 'parenright',
    42: 'asterisk',
    43: 'plus',
    44: 'comma',
    45: 'minus',
    46: 'period',
    47: 'slash',
    48: '0',
    49: '1',
    50: '2',
    51: '3',
    52: '4',
    53: '5',
    54: '6',
    55: '7',
    56: '8',
    57: '9',
    58: 'colon',
    59: 'semicolon',
    60: 'less',
    61: 'equal',
    62: 'greater',
    63: 'question',
    64: 'at',
    65: 'A',
    66: 'B',
    67: 'C',
    68: 'D',
    69: 'E',
    70: 'F',
    71: 'G',
    72: 'H',
    73: 'I',
    74: 'J',
    75: 'K',
    76: 'L',
    77: 'M',
    78: 'N',
    79: 'O',
    80: 'P',
    81: 'Q',
    82: 'R',
    83: 'S',
    84: 'T',
    85: 'U',
    86: 'V',
    87: 'W',
    88: 'X',
    89: 'Y',
    90: 'Z',
    91: 'bracketleft',
    92: 'backslash',
    93: 'bracketright',
    94: 'asciicircum',
    95: 'underscore',
    96: 'quoteleft',
    97: 'a',
    98: 'b',
    99: 'c',
    100: 'd',
    101: 'e',
    102: 'f',
    103: 'g',
    104: 'h',
    105: 'i',
    106: 'j',
    107: 'k',
    108: 'l',
    109: 'm',
    110: 'n',
    111: 'o',
    112: 'p',
    113: 'q',
    114: 'r',
    115: 's',
    116: 't',
    117: 'u',
    118: 'v',
    119: 'w',
    120: 'x',
    121: 'y',
    122: 'z',
    123: 'braceleft',
    124: 'bar',
    125: 'braceright',
    126: 'asciitilde',
    160: 'nobreakspace',
    161: 'exclamdown',
    162: 'cent',
    163: 'sterling',
    164: 'currency',
    165: 'yen',
    166: 'brokenbar',
    167: 'section',
    168: 'diaeresis',
    169: 'copyright',
    170: 'ordfeminine',
    171: 'guillemotleft',
    172: 'notsign',
    173: 'hyphen',
    174: 'registered',
    175: 'macron',
    176: 'degree',
    177: 'plusminus',
    178: 'twosuperior',
    179: 'threesuperior',
    180: 'acute',
    181: 'mu',
    182: 'paragraph',
    183: 'periodcentered',
    184: 'cedilla',
    185: 'onesuperior',
    186: 'masculine',
    187: 'guillemotright',
    188: 'onequarter',
    189: 'onehalf',
    190: 'threequarters',
    191: 'questiondown',
    192: 'Agrave',
    193: 'Aacute',
    194: 'Acircumflex',
    195: 'Atilde',
    196: 'Adiaeresis',
    197: 'Aring',
    198: 'AE',
    199: 'Ccedilla',
    200: 'Egrave',
    201: 'Eacute',
    202: 'Ecircumflex',
    203: 'Ediaeresis',
    204: 'Igrave',
    205: 'Iacute',
    206: 'Icircumflex',
    207: 'Idiaeresis',
    208: 'Eth',
    209: 'Ntilde',
    210: 'Ograve',
    211: 'Oacute',
    212: 'Ocircumflex',
    213: 'Otilde',
    214: 'Odiaeresis',
    215: 'multiply',
    216: 'Oslash',
    217: 'Ugrave',
    218: 'Uacute',
    219: 'Ucircumflex',
    220: 'Udiaeresis',
    221: 'Yacute',
    222: 'Thorn',
    223: 'ssharp',
    224: 'agrave',
    225: 'aacute',
    226: 'acircumflex',
    227: 'atilde',
    228: 'adiaeresis',
    229: 'aring',
    230: 'ae',
    231: 'ccedilla',
    232: 'egrave',
    233: 'eacute',
    234: 'ecircumflex',
    235: 'ediaeresis',
    236: 'igrave',
    237: 'iacute',
    238: 'icircumflex',
    239: 'idiaeresis',
    240: 'eth',
    241: 'ntilde',
    242: 'ograve',
    243: 'oacute',
    244: 'ocircumflex',
    245: 'otilde',
    246: 'odiaeresis',
    247: 'division',
    248: 'ooblique',
    249: 'ugrave',
    250: 'uacute',
    251: 'ucircumflex',
    252: 'udiaeresis',
    253: 'yacute',
    254: 'thorn',
    255: 'ydiaeresis',
    417: 'Aogonek',
    418: 'breve',
    419: 'Lstroke',
    421: 'Lcaron',
    422: 'Sacute',
    425: 'Scaron',
    426: 'Scedilla',
    427: 'Tcaron',
    428: 'Zacute',
    430: 'Zcaron',
    431: 'Zabovedot',
    433: 'aogonek',
    434: 'ogonek',
    435: 'lstroke',
    437: 'lcaron',
    438: 'sacute',
    439: 'caron',
    441: 'scaron',
    442: 'scedilla',
    443: 'tcaron',
    444: 'zacute',
    445: 'doubleacute',
    446: 'zcaron',
    447: 'zabovedot',
    448: 'Racute',
    451: 'Abreve',
    453: 'Lacute',
    454: 'Cacute',
    456: 'Ccaron',
    458: 'Eogonek',
    460: 'Ecaron',
    463: 'Dcaron',
    464: 'Dstroke',
    465: 'Nacute',
    466: 'Ncaron',
    469: 'Odoubleacute',
    472: 'Rcaron',
    473: 'Uring',
    475: 'Udoubleacute',
    478: 'Tcedilla',
    480: 'racute',
    483: 'abreve',
    485: 'lacute',
    486: 'cacute',
    488: 'ccaron',
    490: 'eogonek',
    492: 'ecaron',
    495: 'dcaron',
    496: 'dstroke',
    497: 'nacute',
    498: 'ncaron',
    501: 'odoubleacute',
    504: 'rcaron',
    505: 'uring',
    507: 'udoubleacute',
    510: 'tcedilla',
    511: 'abovedot',
    673: 'Hstroke',
    678: 'Hcircumflex',
    681: 'Iabovedot',
    683: 'Gbreve',
    684: 'Jcircumflex',
    689: 'hstroke',
    694: 'hcircumflex',
    697: 'idotless',
    699: 'gbreve',
    700: 'jcircumflex',
    709: 'Cabovedot',
    710: 'Ccircumflex',
    725: 'Gabovedot',
    728: 'Gcircumflex',
    733: 'Ubreve',
    734: 'Scircumflex',
    741: 'cabovedot',
    742: 'ccircumflex',
    757: 'gabovedot',
    760: 'gcircumflex',
    765: 'ubreve',
    766: 'scircumflex',
    930: 'kra',
    931: 'Rcedilla',
    933: 'Itilde',
    934: 'Lcedilla',
    938: 'Emacron',
    939: 'Gcedilla',
    940: 'Tslash',
    947: 'rcedilla',
    949: 'itilde',
    950: 'lcedilla',
    954: 'emacron',
    955: 'gcedilla',
    956: 'tslash',
    957: 'ENG',
    959: 'eng',
    960: 'Amacron',
    967: 'Iogonek',
    972: 'Eabovedot',
    975: 'Imacron',
    977: 'Ncedilla',
    978: 'Omacron',
    979: 'Kcedilla',
    985: 'Uogonek',
    989: 'Utilde',
    990: 'Umacron',
    992: 'amacron',
    999: 'iogonek',
    1004: 'eabovedot',
    1007: 'imacron',
    1009: 'ncedilla',
    1010: 'omacron',
    1011: 'kcedilla',
    1017: 'uogonek',
    1021: 'utilde',
    1022: 'umacron',
    1150: 'overline',
    1185: 'kana_fullstop',
    1186: 'kana_openingbracket',
    1187: 'kana_closingbracket',
    1188: 'kana_comma',
    1189: 'kana_conjunctive',
    1190: 'kana_WO',
    1191: 'kana_a',
    1192: 'kana_i',
    1193: 'kana_u',
    1194: 'kana_e',
    1195: 'kana_o',
    1196: 'kana_ya',
    1197: 'kana_yu',
    1198: 'kana_yo',
    1199: 'kana_tsu',
    1200: 'prolongedsound',
    1201: 'kana_A',
    1202: 'kana_I',
    1203: 'kana_U',
    1204: 'kana_E',
    1205: 'kana_O',
    1206: 'kana_KA',
    1207: 'kana_KI',
    1208: 'kana_KU',
    1209: 'kana_KE',
    1210: 'kana_KO',
    1211: 'kana_SA',
    1212: 'kana_SHI',
    1213: 'kana_SU',
    1214: 'kana_SE',
    1215: 'kana_SO',
    1216: 'kana_TA',
    1217: 'kana_TI',
    1218: 'kana_TSU',
    1219: 'kana_TE',
    1220: 'kana_TO',
    1221: 'kana_NA',
    1222: 'kana_NI',
    1223: 'kana_NU',
    1224: 'kana_NE',
    1225: 'kana_NO',
    1226: 'kana_HA',
    1227: 'kana_HI',
    1228: 'kana_HU',
    1229: 'kana_HE',
    1230: 'kana_HO',
    1231: 'kana_MA',
    1232: 'kana_MI',
    1233: 'kana_MU',
    1234: 'kana_ME',
    1235: 'kana_MO',
    1236: 'kana_YA',
    1237: 'kana_YU',
    1238: 'kana_YO',
    1239: 'kana_RA',
    1240: 'kana_RI',
    1241: 'kana_RU',
    1242: 'kana_RE',
    1243: 'kana_RO',
    1244: 'kana_WA',
    1245: 'kana_N',
    1246: 'voicedsound',
    1247: 'semivoicedsound',
    1452: 'Arabic_comma',
    1467: 'Arabic_semicolon',
    1471: 'Arabic_question_mark',
    1473: 'Arabic_hamza',
    1474: 'Arabic_maddaonalef',
    1475: 'Arabic_hamzaonalef',
    1476: 'Arabic_hamzaonwaw',
    1477: 'Arabic_hamzaunderalef',
    1478: 'Arabic_hamzaonyeh',
    1479: 'Arabic_alef',
    1480: 'Arabic_beh',
    1481: 'Arabic_tehmarbuta',
    1482: 'Arabic_teh',
    1483: 'Arabic_theh',
    1484: 'Arabic_jeem',
    1485: 'Arabic_hah',
    1486: 'Arabic_khah',
    1487: 'Arabic_dal',
    1488: 'Arabic_thal',
    1489: 'Arabic_ra',
    1490: 'Arabic_zain',
    1491: 'Arabic_seen',
    1492: 'Arabic_sheen',
    1493: 'Arabic_sad',
    1494: 'Arabic_dad',
    1495: 'Arabic_tah',
    1496: 'Arabic_zah',
    1497: 'Arabic_ain',
    1498: 'Arabic_ghain',
    1504: 'Arabic_tatweel',
    1505: 'Arabic_feh',
    1506: 'Arabic_qaf',
    1507: 'Arabic_kaf',
    1508: 'Arabic_lam',
    1509: 'Arabic_meem',
    1510: 'Arabic_noon',
    1511: 'Arabic_ha',
    1512: 'Arabic_waw',
    1513: 'Arabic_alefmaksura',
    1514: 'Arabic_yeh',
    1515: 'Arabic_fathatan',
    1516: 'Arabic_dammatan',
    1517: 'Arabic_kasratan',
    1518: 'Arabic_fatha',
    1519: 'Arabic_damma',
    1520: 'Arabic_kasra',
    1521: 'Arabic_shadda',
    1522: 'Arabic_sukun',
    1697: 'Serbian_dje',
    1698: 'Macedonia_gje',
    1699: 'Cyrillic_io',
    1700: 'Ukranian_je',
    1701: 'Macedonia_dse',
    1702: 'Ukranian_i',
    1703: 'Ukranian_yi',
    1704: 'Cyrillic_je',
    1705: 'Serbian_lje',
    1706: 'Serbian_nje',
    1707: 'Serbian_tshe',
    1708: 'Macedonia_kje',
    1709: 'Ukrainian_ghe_with_upturn',
    1710: 'Byelorussian_shortu',
    1711: 'Cyrillic_dzhe',
    1712: 'numerosign',
    1713: 'Serbian_DJE',
    1714: 'Macedonia_GJE',
    1715: 'Cyrillic_IO',
    1716: 'Ukranian_JE',
    1717: 'Macedonia_DSE',
    1718: 'Ukranian_I',
    1719: 'Ukrainian_YI',
    1720: 'Serbian_JE',
    1721: 'Cyrillic_LJE',
    1722: 'Serbian_NJE',
    1723: 'Serbian_TSHE',
    1724: 'Macedonia_KJE',
    1725: 'Ukrainian_GHE_WITH_UPTURN',
    1726: 'Byelorussian_SHORTU',
    1727: 'Serbian_DZE',
    1728: 'Cyrillic_yu',
    1729: 'Cyrillic_a',
    1730: 'Cyrillic_be',
    1731: 'Cyrillic_tse',
    1732: 'Cyrillic_de',
    1733: 'Cyrillic_ie',
    1734: 'Cyrillic_ef',
    1735: 'Cyrillic_ghe',
    1736: 'Cyrillic_ha',
    1737: 'Cyrillic_i',
    1738: 'Cyrillic_shorti',
    1739: 'Cyrillic_ka',
    1740: 'Cyrillic_el',
    1741: 'Cyrillic_em',
    1742: 'Cyrillic_en',
    1743: 'Cyrillic_o',
    1744: 'Cyrillic_pe',
    1745: 'Cyrillic_ya',
    1746: 'Cyrillic_er',
    1747: 'Cyrillic_es',
    1748: 'Cyrillic_te',
    1749: 'Cyrillic_u',
    1750: 'Cyrillic_zhe',
    1751: 'Cyrillic_ve',
    1752: 'Cyrillic_softsign',
    1753: 'Cyrillic_yeru',
    1754: 'Cyrillic_ze',
    1755: 'Cyrillic_sha',
    1756: 'Cyrillic_e',
    1757: 'Cyrillic_shcha',
    1758: 'Cyrillic_che',
    1759: 'Cyrillic_hardsign',
    1760: 'Cyrillic_YU',
    1761: 'Cyrillic_A',
    1762: 'Cyrillic_BE',
    1763: 'Cyrillic_TSE',
    1764: 'Cyrillic_DE',
    1765: 'Cyrillic_IE',
    1766: 'Cyrillic_EF',
    1767: 'Cyrillic_GHE',
    1768: 'Cyrillic_HA',
    1769: 'Cyrillic_I',
    1770: 'Cyrillic_SHORTI',
    1771: 'Cyrillic_KA',
    1772: 'Cyrillic_EL',
    1773: 'Cyrillic_EM',
    1774: 'Cyrillic_EN',
    1775: 'Cyrillic_O',
    1776: 'Cyrillic_PE',
    1777: 'Cyrillic_YA',
    1778: 'Cyrillic_ER',
    1779: 'Cyrillic_ES',
    1780: 'Cyrillic_TE',
    1781: 'Cyrillic_U',
    1782: 'Cyrillic_ZHE',
    1783: 'Cyrillic_VE',
    1784: 'Cyrillic_SOFTSIGN',
    1785: 'Cyrillic_YERU',
    1786: 'Cyrillic_ZE',
    1787: 'Cyrillic_SHA',
    1788: 'Cyrillic_E',
    1789: 'Cyrillic_SHCHA',
    1790: 'Cyrillic_CHE',
    1791: 'Cyrillic_HARDSIGN',
    1953: 'Greek_ALPHAaccent',
    1954: 'Greek_EPSILONaccent',
    1955: 'Greek_ETAaccent',
    1956: 'Greek_IOTAaccent',
    1957: 'Greek_IOTAdiaeresis',
    1959: 'Greek_OMICRONaccent',
    1960: 'Greek_UPSILONaccent',
    1961: 'Greek_UPSILONdieresis',
    1963: 'Greek_OMEGAaccent',
    1966: 'Greek_accentdieresis',
    1967: 'Greek_horizbar',
    1969: 'Greek_alphaaccent',
    1970: 'Greek_epsilonaccent',
    1971: 'Greek_etaaccent',
    1972: 'Greek_iotaaccent',
    1973: 'Greek_iotadieresis',
    1974: 'Greek_iotaaccentdieresis',
    1975: 'Greek_omicronaccent',
    1976: 'Greek_upsilonaccent',
    1977: 'Greek_upsilondieresis',
    1978: 'Greek_upsilonaccentdieresis',
    1979: 'Greek_omegaaccent',
    1985: 'Greek_ALPHA',
    1986: 'Greek_BETA',
    1987: 'Greek_GAMMA',
    1988: 'Greek_DELTA',
    1989: 'Greek_EPSILON',
    1990: 'Greek_ZETA',
    1991: 'Greek_ETA',
    1992: 'Greek_THETA',
    1993: 'Greek_IOTA',
    1994: 'Greek_KAPPA',
    1995: 'Greek_LAMBDA',
    1996: 'Greek_MU',
    1997: 'Greek_NU',
    1998: 'Greek_XI',
    1999: 'Greek_OMICRON',
    2000: 'Greek_PI',
    2001: 'Greek_RHO',
    2002: 'Greek_SIGMA',
    2004: 'Greek_TAU',
    2005: 'Greek_UPSILON',
    2006: 'Greek_PHI',
    2007: 'Greek_CHI',
    2008: 'Greek_PSI',
    2009: 'Greek_OMEGA',
    2017: 'Greek_alpha',
    2018: 'Greek_beta',
    2019: 'Greek_gamma',
    2020: 'Greek_delta',
    2021: 'Greek_epsilon',
    2022: 'Greek_zeta',
    2023: 'Greek_eta',
    2024: 'Greek_theta',
    2025: 'Greek_iota',
    2026: 'Greek_kappa',
    2027: 'Greek_lamda',
    2028: 'Greek_mu',
    2029: 'Greek_nu',
    2030: 'Greek_xi',
    2031: 'Greek_omicron',
    2032: 'Greek_pi',
    2033: 'Greek_rho',
    2034: 'Greek_sigma',
    2035: 'Greek_finalsmallsigma',
    2036: 'Greek_tau',
    2037: 'Greek_upsilon',
    2038: 'Greek_phi',
    2039: 'Greek_chi',
    2040: 'Greek_psi',
    2041: 'Greek_omega',
    2209: 'leftradical',
    2210: 'topleftradical',
    2211: 'horizconnector',
    2212: 'topintegral',
    2213: 'botintegral',
    2214: 'vertconnector',
    2215: 'topleftsqbracket',
    2216: 'botleftsqbracket',
    2217: 'toprightsqbracket',
    2218: 'botrightsqbracket',
    2219: 'topleftparens',
    2220: 'botleftparens',
    2221: 'toprightparens',
    2222: 'botrightparens',
    2223: 'leftmiddlecurlybrace',
    2224: 'rightmiddlecurlybrace',
    2225: 'topleftsummation',
    2226: 'botleftsummation',
    2227: 'topvertsummationconnector',
    2228: 'botvertsummationconnector',
    2229: 'toprightsummation',
    2230: 'botrightsummation',
    2231: 'rightmiddlesummation',
    2236: 'lessthanequal',
    2237: 'notequal',
    2238: 'greaterthanequal',
    2239: 'integral',
    2240: 'therefore',
    2241: 'variation',
    2242: 'infinity',
    2245: 'nabla',
    2248: 'approximate',
    2249: 'similarequal',
    2253: 'ifonlyif',
    2254: 'implies',
    2255: 'identical',
    2262: 'radical',
    2266: 'includedin',
    2267: 'includes',
    2268: 'intersection',
    2269: 'union',
    2270: 'logicaland',
    2271: 'logicalor',
    2287: 'partialderivative',
    2294: 'function',
    2299: 'leftarrow',
    2300: 'uparrow',
    2301: 'rightarrow',
    2302: 'downarrow',
    2527: 'blank',
    2528: 'soliddiamond',
    2529: 'checkerboard',
    2530: 'ht',
    2531: 'ff',
    2532: 'cr',
    2533: 'lf',
    2536: 'nl',
    2537: 'vt',
    2538: 'lowrightcorner',
    2539: 'uprightcorner',
    2540: 'upleftcorner',
    2541: 'lowleftcorner',
    2542: 'crossinglines',
    2543: 'horizlinescan1',
    2544: 'horizlinescan3',
    2545: 'horizlinescan5',
    2546: 'horizlinescan7',
    2547: 'horizlinescan9',
    2548: 'leftt',
    2549: 'rightt',
    2550: 'bott',
    2551: 'topt',
    2552: 'vertbar',
    2721: 'emspace',
    2722: 'enspace',
    2723: 'em3space',
    2724: 'em4space',
    2725: 'digitspace',
    2726: 'punctspace',
    2727: 'thinspace',
    2728: 'hairspace',
    2729: 'emdash',
    2730: 'endash',
    2732: 'signifblank',
    2734: 'ellipsis',
    2735: 'doubbaselinedot',
    2736: 'onethird',
    2737: 'twothirds',
    2738: 'onefifth',
    2739: 'twofifths',
    2740: 'threefifths',
    2741: 'fourfifths',
    2742: 'onesixth',
    2743: 'fivesixths',
    2744: 'careof',
    2747: 'figdash',
    2748: 'leftanglebracket',
    2749: 'decimalpoint',
    2750: 'rightanglebracket',
    2751: 'marker',
    2755: 'oneeighth',
    2756: 'threeeighths',
    2757: 'fiveeighths',
    2758: 'seveneighths',
    2761: 'trademark',
    2762: 'signaturemark',
    2763: 'trademarkincircle',
    2764: 'leftopentriangle',
    2765: 'rightopentriangle',
    2766: 'emopencircle',
    2767: 'emopenrectangle',
    2768: 'leftsinglequotemark',
    2769: 'rightsinglequotemark',
    2770: 'leftdoublequotemark',
    2771: 'rightdoublequotemark',
    2772: 'prescription',
    2773: 'permille',
    2774: 'minutes',
    2775: 'seconds',
    2777: 'latincross',
    2778: 'hexagram',
    2779: 'filledrectbullet',
    2780: 'filledlefttribullet',
    2781: 'filledrighttribullet',
    2782: 'emfilledcircle',
    2783: 'emfilledrect',
    2784: 'enopencircbullet',
    2785: 'enopensquarebullet',
    2786: 'openrectbullet',
    2787: 'opentribulletup',
    2788: 'opentribulletdown',
    2789: 'openstar',
    2790: 'enfilledcircbullet',
    2791: 'enfilledsqbullet',
    2792: 'filledtribulletup',
    2793: 'filledtribulletdown',
    2794: 'leftpointer',
    2795: 'rightpointer',
    2796: 'club',
    2797: 'diamond',
    2798: 'heart',
    2800: 'maltesecross',
    2801: 'dagger',
    2802: 'doubledagger',
    2803: 'checkmark',
    2804: 'ballotcross',
    2805: 'musicalsharp',
    2806: 'musicalflat',
    2807: 'malesymbol',
    2808: 'femalesymbol',
    2809: 'telephone',
    2810: 'telephonerecorder',
    2811: 'phonographcopyright',
    2812: 'caret',
    2813: 'singlelowquotemark',
    2814: 'doublelowquotemark',
    2815: 'cursor',
    2979: 'leftcaret',
    2982: 'rightcaret',
    2984: 'downcaret',
    2985: 'upcaret',
    3008: 'overbar',
    3010: 'downtack',
    3011: 'upshoe',
    3012: 'downstile',
    3014: 'underbar',
    3018: 'jot',
    3020: 'quad',
    3022: 'uptack',
    3023: 'circle',
    3027: 'upstile',
    3030: 'downshoe',
    3032: 'rightshoe',
    3034: 'leftshoe',
    3036: 'lefttack',
    3068: 'righttack',
    3295: 'hebrew_doublelowline',
    3296: 'hebrew_aleph',
    3297: 'hebrew_bet',
    3298: 'hebrew_gimel',
    3299: 'hebrew_daleth',
    3300: 'hebrew_he',
    3301: 'hebrew_waw',
    3302: 'hebrew_zayin',
    3303: 'hebrew_chet',
    3304: 'hebrew_tet',
    3305: 'hebrew_yod',
    3306: 'hebrew_finalkaph',
    3307: 'hebrew_kaph',
    3308: 'hebrew_lamed',
    3309: 'hebrew_finalmem',
    3310: 'hebrew_mem',
    3311: 'hebrew_finalnun',
    3312: 'hebrew_nun',
    3313: 'hebrew_samech',
    3314: 'hebrew_ayin',
    3315: 'hebrew_finalpe',
    3316: 'hebrew_pe',
    3317: 'hebrew_finalzadi',
    3318: 'hebrew_zadi',
    3319: 'hebrew_kuf',
    3320: 'hebrew_resh',
    3321: 'hebrew_shin',
    3322: 'hebrew_taf',
    3489: 'Thai_kokai',
    3490: 'Thai_khokhai',
    3491: 'Thai_khokhuat',
    3492: 'Thai_khokhwai',
    3493: 'Thai_khokhon',
    3494: 'Thai_khorakhang',
    3495: 'Thai_ngongu',
    3496: 'Thai_chochan',
    3497: 'Thai_choching',
    3498: 'Thai_chochang',
    3499: 'Thai_soso',
    3500: 'Thai_chochoe',
    3501: 'Thai_yoying',
    3502: 'Thai_dochada',
    3503: 'Thai_topatak',
    3504: 'Thai_thothan',
    3505: 'Thai_thonangmontho',
    3506: 'Thai_thophuthao',
    3507: 'Thai_nonen',
    3508: 'Thai_dodek',
    3509: 'Thai_totao',
    3510: 'Thai_thothung',
    3511: 'Thai_thothahan',
    3512: 'Thai_thothong',
    3513: 'Thai_nonu',
    3514: 'Thai_bobaimai',
    3515: 'Thai_popla',
    3516: 'Thai_phophung',
    3517: 'Thai_fofa',
    3518: 'Thai_phophan',
    3519: 'Thai_fofan',
    3520: 'Thai_phosamphao',
    3521: 'Thai_moma',
    3522: 'Thai_yoyak',
    3523: 'Thai_rorua',
    3524: 'Thai_ru',
    3525: 'Thai_loling',
    3526: 'Thai_lu',
    3527: 'Thai_wowaen',
    3528: 'Thai_sosala',
    3529: 'Thai_sorusi',
    3530: 'Thai_sosua',
    3531: 'Thai_hohip',
    3532: 'Thai_lochula',
    3533: 'Thai_oang',
    3534: 'Thai_honokhuk',
    3535: 'Thai_paiyannoi',
    3536: 'Thai_saraa',
    3537: 'Thai_maihanakat',
    3538: 'Thai_saraaa',
    3539: 'Thai_saraam',
    3540: 'Thai_sarai',
    3541: 'Thai_saraii',
    3542: 'Thai_saraue',
    3543: 'Thai_sarauee',
    3544: 'Thai_sarau',
    3545: 'Thai_sarauu',
    3546: 'Thai_phinthu',
    3550: 'Thai_maihanakat_maitho',
    3551: 'Thai_baht',
    3552: 'Thai_sarae',
    3553: 'Thai_saraae',
    3554: 'Thai_sarao',
    3555: 'Thai_saraaimaimuan',
    3556: 'Thai_saraaimaimalai',
    3557: 'Thai_lakkhangyao',
    3558: 'Thai_maiyamok',
    3559: 'Thai_maitaikhu',
    3560: 'Thai_maiek',
    3561: 'Thai_maitho',
    3562: 'Thai_maitri',
    3563: 'Thai_maichattawa',
    3564: 'Thai_thanthakhat',
    3565: 'Thai_nikhahit',
    3568: 'Thai_leksun',
    3569: 'Thai_leknung',
    3570: 'Thai_leksong',
    3571: 'Thai_leksam',
    3572: 'Thai_leksi',
    3573: 'Thai_lekha',
    3574: 'Thai_lekhok',
    3575: 'Thai_lekchet',
    3576: 'Thai_lekpaet',
    3577: 'Thai_lekkao',
    3745: 'Hangul_Kiyeog',
    3746: 'Hangul_SsangKiyeog',
    3747: 'Hangul_KiyeogSios',
    3748: 'Hangul_Nieun',
    3749: 'Hangul_NieunJieuj',
    3750: 'Hangul_NieunHieuh',
    3751: 'Hangul_Dikeud',
    3752: 'Hangul_SsangDikeud',
    3753: 'Hangul_Rieul',
    3754: 'Hangul_RieulKiyeog',
    3755: 'Hangul_RieulMieum',
    3756: 'Hangul_RieulPieub',
    3757: 'Hangul_RieulSios',
    3758: 'Hangul_RieulTieut',
    3759: 'Hangul_RieulPhieuf',
    3760: 'Hangul_RieulHieuh',
    3761: 'Hangul_Mieum',
    3762: 'Hangul_Pieub',
    3763: 'Hangul_SsangPieub',
    3764: 'Hangul_PieubSios',
    3765: 'Hangul_Sios',
    3766: 'Hangul_SsangSios',
    3767: 'Hangul_Ieung',
    3768: 'Hangul_Jieuj',
    3769: 'Hangul_SsangJieuj',
    3770: 'Hangul_Cieuc',
    3771: 'Hangul_Khieuq',
    3772: 'Hangul_Tieut',
    3773: 'Hangul_Phieuf',
    3774: 'Hangul_Hieuh',
    3775: 'Hangul_A',
    3776: 'Hangul_AE',
    3777: 'Hangul_YA',
    3778: 'Hangul_YAE',
    3779: 'Hangul_EO',
    3780: 'Hangul_E',
    3781: 'Hangul_YEO',
    3782: 'Hangul_YE',
    3783: 'Hangul_O',
    3784: 'Hangul_WA',
    3785: 'Hangul_WAE',
    3786: 'Hangul_OE',
    3787: 'Hangul_YO',
    3788: 'Hangul_U',
    3789: 'Hangul_WEO',
    3790: 'Hangul_WE',
    3791: 'Hangul_WI',
    3792: 'Hangul_YU',
    3793: 'Hangul_EU',
    3794: 'Hangul_YI',
    3795: 'Hangul_I',
    3796: 'Hangul_J_Kiyeog',
    3797: 'Hangul_J_SsangKiyeog',
    3798: 'Hangul_J_KiyeogSios',
    3799: 'Hangul_J_Nieun',
    3800: 'Hangul_J_NieunJieuj',
    3801: 'Hangul_J_NieunHieuh',
    3802: 'Hangul_J_Dikeud',
    3803: 'Hangul_J_Rieul',
    3804: 'Hangul_J_RieulKiyeog',
    3805: 'Hangul_J_RieulMieum',
    3806: 'Hangul_J_RieulPieub',
    3807: 'Hangul_J_RieulSios',
    3808: 'Hangul_J_RieulTieut',
    3809: 'Hangul_J_RieulPhieuf',
    3810: 'Hangul_J_RieulHieuh',
    3811: 'Hangul_J_Mieum',
    3812: 'Hangul_J_Pieub',
    3813: 'Hangul_J_PieubSios',
    3814: 'Hangul_J_Sios',
    3815: 'Hangul_J_SsangSios',
    3816: 'Hangul_J_Ieung',
    3817: 'Hangul_J_Jieuj',
    3818: 'Hangul_J_Cieuc',
    3819: 'Hangul_J_Khieuq',
    3820: 'Hangul_J_Tieut',
    3821: 'Hangul_J_Phieuf',
    3822: 'Hangul_J_Hieuh',
    3823: 'Hangul_RieulYeorinHieuh',
    3824: 'Hangul_SunkyeongeumMieum',
    3825: 'Hangul_SunkyeongeumPieub',
    3826: 'Hangul_PanSios',
    3827: 'Hangul_KkogjiDalrinIeung',
    3828: 'Hangul_SunkyeongeumPhieuf',
    3829: 'Hangul_YeorinHieuh',
    3830: 'Hangul_AraeA',
    3831: 'Hangul_AraeAE',
    3832: 'Hangul_J_PanSios',
    3833: 'Hangul_J_KkogjiDalrinIeung',
    3834: 'Hangul_J_YeorinHieuh',
    3839: 'Korean_Won',
    5052: 'OE',
    5053: 'oe',
    5054: 'Ydiaeresis',
    8364: 'EuroSign',
    64769: '3270_Duplicate',
    64770: '3270_FieldMark',
    64771: '3270_Right2',
    64772: '3270_Left2',
    64773: '3270_BackTab',
    64774: '3270_EraseEOF',
    64775: '3270_EraseInput',
    64776: '3270_Reset',
    64777: '3270_Quit',
    64778: '3270_PA1',
    64779: '3270_PA2',
    64780: '3270_PA3',
    64781: '3270_Test',
    64782: '3270_Attn',
    64783: '3270_CursorBlink',
    64784: '3270_AltCursor',
    64785: '3270_KeyClick',
    64786: '3270_Jump',
    64787: '3270_Ident',
    64788: '3270_Rule',
    64789: '3270_Copy',
    64790: '3270_Play',
    64791: '3270_Setup',
    64792: '3270_Record',
    64793: '3270_ChangeScreen',
    64794: '3270_DeleteWord',
    64795: '3270_ExSelect',
    64796: '3270_CursorSelect',
    64797: '3270_PrintScreen',
    64798: '3270_Enter',
    65025: 'ISO_Lock',
    65026: 'ISO_Level2_Latch',
    65027: 'ISO_Level3_Shift',
    65028: 'ISO_Level3_Latch',
    65029: 'ISO_Level3_Lock',
    65030: 'ISO_Group_Latch',
    65031: 'ISO_Group_Lock',
    65032: 'ISO_Next_Group',
    65033: 'ISO_Next_Group_Lock',
    65034: 'ISO_Prev_Group',
    65035: 'ISO_Prev_Group_Lock',
    65036: 'ISO_First_Group',
    65037: 'ISO_First_Group_Lock',
    65038: 'ISO_Last_Group',
    65039: 'ISO_Last_Group_Lock',
    65041: 'ISO_Level5_Shift',
    65042: 'ISO_Level5_Latch',
    65043: 'ISO_Level5_Lock',
    65056: 'ISO_Left_Tab',
    65057: 'ISO_Move_Line_Up',
    65058: 'ISO_Move_Line_Down',
    65059: 'ISO_Partial_Line_Up',
    65060: 'ISO_Partial_Line_Down',
    65061: 'ISO_Partial_Space_Left',
    65062: 'ISO_Partial_Space_Right',
    65063: 'ISO_Set_Margin_Left',
    65064: 'ISO_Set_Margin_Right',
    65065: 'ISO_Release_Margin_Left',
    65066: 'ISO_Release_Margin_Right',
    65067: 'ISO_Release_Both_Margins',
    65068: 'ISO_Fast_Cursor_Left',
    65069: 'ISO_Fast_Cursor_Right',
    65070: 'ISO_Fast_Cursor_Up',
    65071: 'ISO_Fast_Cursor_Down',
    65072: 'ISO_Continuous_Underline',
    65073: 'ISO_Discontinuous_Underline',
    65074: 'ISO_Emphasize',
    65075: 'ISO_Center_Object',
    65076: 'ISO_Enter',
    65104: 'dead_grave',
    65105: 'dead_acute',
    65106: 'dead_circumflex',
    65107: 'dead_tilde',
    65108: 'dead_macron',
    65109: 'dead_breve',
    65110: 'dead_abovedot',
    65111: 'dead_diaeresis',
    65112: 'dead_abovering',
    65113: 'dead_doubleacute',
    65114: 'dead_caron',
    65115: 'dead_cedilla',
    65116: 'dead_ogonek',
    65117: 'dead_iota',
    65118: 'dead_voiced_sound',
    65119: 'dead_semivoiced_sound',
    65120: 'dead_belowdot',
    65121: 'dead_hook',
    65122: 'dead_horn',
    65123: 'dead_stroke',
    65124: 'dead_abovecomma',
    65125: 'dead_abovereversedcomma',
    65126: 'dead_doublegrave',
    65127: 'dead_belowring',
    65128: 'dead_belowmacron',
    65129: 'dead_belowcircumflex',
    65130: 'dead_belowtilde',
    65131: 'dead_belowbreve',
    65132: 'dead_belowdiaeresis',
    65133: 'dead_invertedbreve',
    65134: 'dead_belowcomma',
    65135: 'dead_currency',
    65136: 'AccessX_Enable',
    65137: 'AccessX_Feedback_Enable',
    65138: 'RepeatKeys_Enable',
    65139: 'SlowKeys_Enable',
    65140: 'BounceKeys_Enable',
    65141: 'StickyKeys_Enable',
    65142: 'MouseKeys_Enable',
    65143: 'MouseKeys_Accel_Enable',
    65144: 'Overlay1_Enable',
    65145: 'Overlay2_Enable',
    65146: 'AudibleBell_Enable',
    65152: 'dead_a',
    65153: 'dead_A',
    65154: 'dead_e',
    65155: 'dead_E',
    65156: 'dead_i',
    65157: 'dead_I',
    65158: 'dead_o',
    65159: 'dead_O',
    65160: 'dead_u',
    65161: 'dead_U',
    65162: 'dead_small_schwa',
    65163: 'dead_capital_schwa',
    65164: 'dead_greek',
    65184: 'ch',
    65185: 'Ch',
    65186: 'CH',
    65187: 'c_h',
    65188: 'C_h',
    65189: 'C_H',
    65232: 'First_Virtual_Screen',
    65233: 'Prev_Virtual_Screen',
    65234: 'Next_Virtual_Screen',
    65236: 'Last_Virtual_Screen',
    65237: 'Terminate_Server',
    65248: 'Pointer_Left',
    65249: 'Pointer_Right',
    65250: 'Pointer_Up',
    65251: 'Pointer_Down',
    65252: 'Pointer_UpLeft',
    65253: 'Pointer_UpRight',
    65254: 'Pointer_DownLeft',
    65255: 'Pointer_DownRight',
    65256: 'Pointer_Button_Dflt',
    65257: 'Pointer_Button1',
    65258: 'Pointer_Button2',
    65259: 'Pointer_Button3',
    65260: 'Pointer_Button4',
    65261: 'Pointer_Button5',
    65262: 'Pointer_DblClick_Dflt',
    65263: 'Pointer_DblClick1',
    65264: 'Pointer_DblClick2',
    65265: 'Pointer_DblClick3',
    65266: 'Pointer_DblClick4',
    65267: 'Pointer_DblClick5',
    65268: 'Pointer_Drag_Dflt',
    65269: 'Pointer_Drag1',
    65270: 'Pointer_Drag2',
    65271: 'Pointer_Drag3',
    65272: 'Pointer_Drag4',
    65273: 'Pointer_EnableKeys',
    65274: 'Pointer_Accelerate',
    65275: 'Pointer_DfltBtnNext',
    65276: 'Pointer_DfltBtnPrev',
    65277: 'Pointer_Drag5',
    65288: 'BackSpace',
    65289: 'Tab',
    65290: 'Linefeed',
    65291: 'Clear',
    65293: 'Return',
    65299: 'Pause',
    65300: 'Scroll_Lock',
    65301: 'Sys_Req',
    65307: 'Escape',
    65312: 'Multi_key',
    65313: 'Kanji',
    65314: 'Muhenkan',
    65315: 'Henkan',
    65316: 'Romaji',
    65317: 'Hiragana',
    65318: 'Katakana',
    65319: 'Hiragana_Katakana',
    65320: 'Zenkaku',
    65321: 'Hankaku',
    65322: 'Zenkaku_Hankaku',
    65323: 'Touroku',
    65324: 'Massyo',
    65325: 'Kana_Lock',
    65326: 'Kana_Shift',
    65327: 'Eisu_Shift',
    65328: 'Eisu_toggle',
    65329: 'Hangul',
    65330: 'Hangul_Start',
    65331: 'Hangul_End',
    65332: 'Hangul_Hanja',
    65333: 'Hangul_Jamo',
    65334: 'Hangul_Romaja',
    65335: 'Hangul_Codeinput',
    65336: 'Hangul_Jeonja',
    65337: 'Hangul_Banja',
    65338: 'Hangul_PreHanja',
    65339: 'Hangul_PostHanja',
    65340: 'Hangul_SingleCandidate',
    65341: 'Hangul_MultipleCandidate',
    65342: 'Hangul_PreviousCandidate',
    65343: 'Hangul_Special',
    65360: 'Home',
    65361: 'Left',
    65362: 'Up',
    65363: 'Right',
    65364: 'Down',
    65365: 'Prior',
    65366: 'Next',
    65367: 'End',
    65368: 'Begin',
    65376: 'Select',
    65377: 'Print',
    65378: 'Execute',
    65379: 'Insert',
    65381: 'Undo',
    65382: 'Redo',
    65383: 'Menu',
    65384: 'Find',
    65385: 'Cancel',
    65386: 'Help',
    65387: 'Break',
    65406: 'Arabic_switch',
    65407: 'Num_Lock',
    65408: 'KP_Space',
    65417: 'KP_Tab',
    65421: 'KP_Enter',
    65425: 'KP_F1',
    65426: 'KP_F2',
    65427: 'KP_F3',
    65428: 'KP_F4',
    65429: 'KP_Home',
    65430: 'KP_Left',
    65431: 'KP_Up',
    65432: 'KP_Right',
    65433: 'KP_Down',
    65434: 'KP_Prior',
    65435: 'KP_Next',
    65436: 'KP_End',
    65437: 'KP_Begin',
    65438: 'KP_Insert',
    65439: 'KP_Delete',
    65450: 'KP_Multiply',
    65451: 'KP_Add',
    65452: 'KP_Separator',
    65453: 'KP_Subtract',
    65454: 'KP_Decimal',
    65455: 'KP_Divide',
    65456: 'KP_0',
    65457: 'KP_1',
    65458: 'KP_2',
    65459: 'KP_3',
    65460: 'KP_4',
    65461: 'KP_5',
    65462: 'KP_6',
    65463: 'KP_7',
    65464: 'KP_8',
    65465: 'KP_9',
    65469: 'KP_Equal',
    65470: 'F1',
    65471: 'F2',
    65472: 'F3',
    65473: 'F4',
    65474: 'F5',
    65475: 'F6',
    65476: 'F7',
    65477: 'F8',
    65478: 'F9',
    65479: 'F10',
    65480: 'F11',
    65481: 'F12',
    65482: 'F13',
    65483: 'F14',
    65484: 'L5',
    65485: 'F16',
    65486: 'F17',
    65487: 'F18',
    65488: 'F19',
    65489: 'L10',
    65490: 'R1',
    65491: 'R2',
    65492: 'R3',
    65493: 'F24',
    65494: 'R5',
    65495: 'R6',
    65496: 'R7',
    65497: 'R8',
    65498: 'R9',
    65499: 'R10',
    65500: 'R11',
    65501: 'R12',
    65502: 'R13',
    65503: 'R14',
    65504: 'R15',
    65505: 'Shift_L',
    65506: 'Shift_R',
    65507: 'Control_L',
    65508: 'Control_R',
    65509: 'Caps_Lock',
    65510: 'Shift_Lock',
    65511: 'Meta_L',
    65512: 'Meta_R',
    65513: 'Alt_L',
    65514: 'Alt_R',
    65515: 'Super_L',
    65516: 'Super_R',
    65517: 'Hyper_L',
    65518: 'Hyper_R',
    65521: 'braille_dot_1',
    65522: 'braille_dot_2',
    65523: 'braille_dot_3',
    65524: 'braille_dot_4',
    65525: 'braille_dot_5',
    65526: 'braille_dot_6',
    65527: 'braille_dot_7',
    65528: 'braille_dot_8',
    65529: 'braille_dot_9',
    65530: 'braille_dot_10',
    65535: 'Delete',
    16777215: 'VoidSymbol',
    16777516: 'Ibreve',
    16777517: 'ibreve',
    16777588: 'Wcircumflex',
    16777589: 'wcircumflex',
    16777590: 'Ycircumflex',
    16777591: 'ycircumflex',
    16777615: 'SCHWA',
    16777631: 'Obarred',
    16777632: 'Ohorn',
    16777633: 'ohorn',
    16777647: 'Uhorn',
    16777648: 'uhorn',
    16777653: 'Zstroke',
    16777654: 'zstroke',
    16777655: 'EZH',
    16777681: 'Ocaron',
    16777682: 'ocaron',
    16777702: 'Gcaron',
    16777703: 'gcaron',
    16777817: 'schwa',
    16777845: 'obarred',
    16777874: 'ezh',
    16778386: 'Cyrillic_GHE_bar',
    16778387: 'Cyrillic_ghe_bar',
    16778390: 'Cyrillic_ZHE_descender',
    16778391: 'Cyrillic_zhe_descender',
    16778394: 'Cyrillic_KA_descender',
    16778395: 'Cyrillic_ka_descender',
    16778396: 'Cyrillic_KA_vertstroke',
    16778397: 'Cyrillic_ka_vertstroke',
    16778402: 'Cyrillic_EN_descender',
    16778403: 'Cyrillic_en_descender',
    16778414: 'Cyrillic_U_straight',
    16778415: 'Cyrillic_u_straight',
    16778416: 'Cyrillic_U_straight_bar',
    16778417: 'Cyrillic_u_straight_bar',
    16778418: 'Cyrillic_HA_descender',
    16778419: 'Cyrillic_ha_descender',
    16778422: 'Cyrillic_CHE_descender',
    16778423: 'Cyrillic_che_descender',
    16778424: 'Cyrillic_CHE_vertstroke',
    16778425: 'Cyrillic_che_vertstroke',
    16778426: 'Cyrillic_SHHA',
    16778427: 'Cyrillic_shha',
    16778456: 'Cyrillic_SCHWA',
    16778457: 'Cyrillic_schwa',
    16778466: 'Cyrillic_I_macron',
    16778467: 'Cyrillic_i_macron',
    16778472: 'Cyrillic_O_bar',
    16778473: 'Cyrillic_o_bar',
    16778478: 'Cyrillic_U_macron',
    16778479: 'Cyrillic_u_macron',
    16778545: 'Armenian_AYB',
    16778546: 'Armenian_BEN',
    16778547: 'Armenian_GIM',
    16778548: 'Armenian_DA',
    16778549: 'Armenian_YECH',
    16778550: 'Armenian_ZA',
    16778551: 'Armenian_E',
    16778552: 'Armenian_AT',
    16778553: 'Armenian_TO',
    16778554: 'Armenian_ZHE',
    16778555: 'Armenian_INI',
    16778556: 'Armenian_LYUN',
    16778557: 'Armenian_KHE',
    16778558: 'Armenian_TSA',
    16778559: 'Armenian_KEN',
    16778560: 'Armenian_HO',
    16778561: 'Armenian_DZA',
    16778562: 'Armenian_GHAT',
    16778563: 'Armenian_TCHE',
    16778564: 'Armenian_MEN',
    16778565: 'Armenian_HI',
    16778566: 'Armenian_NU',
    16778567: 'Armenian_SHA',
    16778568: 'Armenian_VO',
    16778569: 'Armenian_CHA',
    16778570: 'Armenian_PE',
    16778571: 'Armenian_JE',
    16778572: 'Armenian_RA',
    16778573: 'Armenian_SE',
    16778574: 'Armenian_VEV',
    16778575: 'Armenian_TYUN',
    16778576: 'Armenian_RE',
    16778577: 'Armenian_TSO',
    16778578: 'Armenian_VYUN',
    16778579: 'Armenian_PYUR',
    16778580: 'Armenian_KE',
    16778581: 'Armenian_O',
    16778582: 'Armenian_FE',
    16778586: 'Armenian_apostrophe',
    16778587: 'Armenian_accent',
    16778588: 'Armenian_amanak',
    16778589: 'Armenian_separation_mark',
    16778590: 'Armenian_question',
    16778593: 'Armenian_ayb',
    16778594: 'Armenian_ben',
    16778595: 'Armenian_gim',
    16778596: 'Armenian_da',
    16778597: 'Armenian_yech',
    16778598: 'Armenian_za',
    16778599: 'Armenian_e',
    16778600: 'Armenian_at',
    16778601: 'Armenian_to',
    16778602: 'Armenian_zhe',
    16778603: 'Armenian_ini',
    16778604: 'Armenian_lyun',
    16778605: 'Armenian_khe',
    16778606: 'Armenian_tsa',
    16778607: 'Armenian_ken',
    16778608: 'Armenian_ho',
    16778609: 'Armenian_dza',
    16778610: 'Armenian_ghat',
    16778611: 'Armenian_tche',
    16778612: 'Armenian_men',
    16778613: 'Armenian_hi',
    16778614: 'Armenian_nu',
    16778615: 'Armenian_sha',
    16778616: 'Armenian_vo',
    16778617: 'Armenian_cha',
    16778618: 'Armenian_pe',
    16778619: 'Armenian_je',
    16778620: 'Armenian_ra',
    16778621: 'Armenian_se',
    16778622: 'Armenian_vev',
    16778623: 'Armenian_tyun',
    16778624: 'Armenian_re',
    16778625: 'Armenian_tso',
    16778626: 'Armenian_vyun',
    16778627: 'Armenian_pyur',
    16778628: 'Armenian_ke',
    16778629: 'Armenian_o',
    16778630: 'Armenian_fe',
    16778631: 'Armenian_ligature_ew',
    16778633: 'Armenian_full_stop',
    16778634: 'Armenian_yentamna',
    16778835: 'Arabic_madda_above',
    16778836: 'Arabic_hamza_above',
    16778837: 'Arabic_hamza_below',
    16778848: 'Arabic_0',
    16778849: 'Arabic_1',
    16778850: 'Arabic_2',
    16778851: 'Arabic_3',
    16778852: 'Arabic_4',
    16778853: 'Arabic_5',
    16778854: 'Arabic_6',
    16778855: 'Arabic_7',
    16778856: 'Arabic_8',
    16778857: 'Arabic_9',
    16778858: 'Arabic_percent',
    16778864: 'Arabic_superscript_alef',
    16778873: 'Arabic_tteh',
    16778878: 'Arabic_peh',
    16778886: 'Arabic_tcheh',
    16778888: 'Arabic_ddal',
    16778897: 'Arabic_rreh',
    16778904: 'Arabic_jeh',
    16778916: 'Arabic_veh',
    16778921: 'Arabic_keheh',
    16778927: 'Arabic_gaf',
    16778938: 'Arabic_noon_ghunna',
    16778942: 'Arabic_heh_doachashmee',
    16778945: 'Arabic_heh_goal',
    16778956: 'Farsi_yeh',
    16778962: 'Arabic_yeh_baree',
    16778964: 'Arabic_fullstop',
    16778992: 'Farsi_0',
    16778993: 'Farsi_1',
    16778994: 'Farsi_2',
    16778995: 'Farsi_3',
    16778996: 'Farsi_4',
    16778997: 'Farsi_5',
    16778998: 'Farsi_6',
    16778999: 'Farsi_7',
    16779000: 'Farsi_8',
    16779001: 'Farsi_9',
    16780674: 'Sinh_ng',
    16780675: 'Sinh_h2',
    16780677: 'Sinh_a',
    16780678: 'Sinh_aa',
    16780679: 'Sinh_ae',
    16780680: 'Sinh_aee',
    16780681: 'Sinh_i',
    16780682: 'Sinh_ii',
    16780683: 'Sinh_u',
    16780684: 'Sinh_uu',
    16780685: 'Sinh_ri',
    16780686: 'Sinh_rii',
    16780687: 'Sinh_lu',
    16780688: 'Sinh_luu',
    16780689: 'Sinh_e',
    16780690: 'Sinh_ee',
    16780691: 'Sinh_ai',
    16780692: 'Sinh_o',
    16780693: 'Sinh_oo',
    16780694: 'Sinh_au',
    16780698: 'Sinh_ka',
    16780699: 'Sinh_kha',
    16780700: 'Sinh_ga',
    16780701: 'Sinh_gha',
    16780702: 'Sinh_ng2',
    16780703: 'Sinh_nga',
    16780704: 'Sinh_ca',
    16780705: 'Sinh_cha',
    16780706: 'Sinh_ja',
    16780707: 'Sinh_jha',
    16780708: 'Sinh_nya',
    16780709: 'Sinh_jnya',
    16780710: 'Sinh_nja',
    16780711: 'Sinh_tta',
    16780712: 'Sinh_ttha',
    16780713: 'Sinh_dda',
    16780714: 'Sinh_ddha',
    16780715: 'Sinh_nna',
    16780716: 'Sinh_ndda',
    16780717: 'Sinh_tha',
    16780718: 'Sinh_thha',
    16780719: 'Sinh_dha',
    16780720: 'Sinh_dhha',
    16780721: 'Sinh_na',
    16780723: 'Sinh_ndha',
    16780724: 'Sinh_pa',
    16780725: 'Sinh_pha',
    16780726: 'Sinh_ba',
    16780727: 'Sinh_bha',
    16780728: 'Sinh_ma',
    16780729: 'Sinh_mba',
    16780730: 'Sinh_ya',
    16780731: 'Sinh_ra',
    16780733: 'Sinh_la',
    16780736: 'Sinh_va',
    16780737: 'Sinh_sha',
    16780738: 'Sinh_ssha',
    16780739: 'Sinh_sa',
    16780740: 'Sinh_ha',
    16780741: 'Sinh_lla',
    16780742: 'Sinh_fa',
    16780746: 'Sinh_al',
    16780751: 'Sinh_aa2',
    16780752: 'Sinh_ae2',
    16780753: 'Sinh_aee2',
    16780754: 'Sinh_i2',
    16780755: 'Sinh_ii2',
    16780756: 'Sinh_u2',
    16780758: 'Sinh_uu2',
    16780760: 'Sinh_ru2',
    16780761: 'Sinh_e2',
    16780762: 'Sinh_ee2',
    16780763: 'Sinh_ai2',
    16780764: 'Sinh_o2',
    16780765: 'Sinh_oo2',
    16780766: 'Sinh_au2',
    16780767: 'Sinh_lu2',
    16780786: 'Sinh_ruu2',
    16780787: 'Sinh_luu2',
    16780788: 'Sinh_kunddaliya',
    16781520: 'Georgian_an',
    16781521: 'Georgian_ban',
    16781522: 'Georgian_gan',
    16781523: 'Georgian_don',
    16781524: 'Georgian_en',
    16781525: 'Georgian_vin',
    16781526: 'Georgian_zen',
    16781527: 'Georgian_tan',
    16781528: 'Georgian_in',
    16781529: 'Georgian_kan',
    16781530: 'Georgian_las',
    16781531: 'Georgian_man',
    16781532: 'Georgian_nar',
    16781533: 'Georgian_on',
    16781534: 'Georgian_par',
    16781535: 'Georgian_zhar',
    16781536: 'Georgian_rae',
    16781537: 'Georgian_san',
    16781538: 'Georgian_tar',
    16781539: 'Georgian_un',
    16781540: 'Georgian_phar',
    16781541: 'Georgian_khar',
    16781542: 'Georgian_ghan',
    16781543: 'Georgian_qar',
    16781544: 'Georgian_shin',
    16781545: 'Georgian_chin',
    16781546: 'Georgian_can',
    16781547: 'Georgian_jil',
    16781548: 'Georgian_cil',
    16781549: 'Georgian_char',
    16781550: 'Georgian_xan',
    16781551: 'Georgian_jhan',
    16781552: 'Georgian_hae',
    16781553: 'Georgian_he',
    16781554: 'Georgian_hie',
    16781555: 'Georgian_we',
    16781556: 'Georgian_har',
    16781557: 'Georgian_hoe',
    16781558: 'Georgian_fi',
    16784898: 'Babovedot',
    16784899: 'babovedot',
    16784906: 'Dabovedot',
    16784907: 'dabovedot',
    16784926: 'Fabovedot',
    16784927: 'fabovedot',
    16784950: 'Lbelowdot',
    16784951: 'lbelowdot',
    16784960: 'Mabovedot',
    16784961: 'mabovedot',
    16784982: 'Pabovedot',
    16784983: 'pabovedot',
    16784992: 'Sabovedot',
    16784993: 'sabovedot',
    16785002: 'Tabovedot',
    16785003: 'tabovedot',
    16785024: 'Wgrave',
    16785025: 'wgrave',
    16785026: 'Wacute',
    16785027: 'wacute',
    16785028: 'Wdiaeresis',
    16785029: 'wdiaeresis',
    16785034: 'Xabovedot',
    16785035: 'xabovedot',
    16785056: 'Abelowdot',
    16785057: 'abelowdot',
    16785058: 'Ahook',
    16785059: 'ahook',
    16785060: 'Acircumflexacute',
    16785061: 'acircumflexacute',
    16785062: 'Acircumflexgrave',
    16785063: 'acircumflexgrave',
    16785064: 'Acircumflexhook',
    16785065: 'acircumflexhook',
    16785066: 'Acircumflextilde',
    16785067: 'acircumflextilde',
    16785068: 'Acircumflexbelowdot',
    16785069: 'acircumflexbelowdot',
    16785070: 'Abreveacute',
    16785071: 'abreveacute',
    16785072: 'Abrevegrave',
    16785073: 'abrevegrave',
    16785074: 'Abrevehook',
    16785075: 'abrevehook',
    16785076: 'Abrevetilde',
    16785077: 'abrevetilde',
    16785078: 'Abrevebelowdot',
    16785079: 'abrevebelowdot',
    16785080: 'Ebelowdot',
    16785081: 'ebelowdot',
    16785082: 'Ehook',
    16785083: 'ehook',
    16785084: 'Etilde',
    16785085: 'etilde',
    16785086: 'Ecircumflexacute',
    16785087: 'ecircumflexacute',
    16785088: 'Ecircumflexgrave',
    16785089: 'ecircumflexgrave',
    16785090: 'Ecircumflexhook',
    16785091: 'ecircumflexhook',
    16785092: 'Ecircumflextilde',
    16785093: 'ecircumflextilde',
    16785094: 'Ecircumflexbelowdot',
    16785095: 'ecircumflexbelowdot',
    16785096: 'Ihook',
    16785097: 'ihook',
    16785098: 'Ibelowdot',
    16785099: 'ibelowdot',
    16785100: 'Obelowdot',
    16785101: 'obelowdot',
    16785102: 'Ohook',
    16785103: 'ohook',
    16785104: 'Ocircumflexacute',
    16785105: 'ocircumflexacute',
    16785106: 'Ocircumflexgrave',
    16785107: 'ocircumflexgrave',
    16785108: 'Ocircumflexhook',
    16785109: 'ocircumflexhook',
    16785110: 'Ocircumflextilde',
    16785111: 'ocircumflextilde',
    16785112: 'Ocircumflexbelowdot',
    16785113: 'ocircumflexbelowdot',
    16785114: 'Ohornacute',
    16785115: 'ohornacute',
    16785116: 'Ohorngrave',
    16785117: 'ohorngrave',
    16785118: 'Ohornhook',
    16785119: 'ohornhook',
    16785120: 'Ohorntilde',
    16785121: 'ohorntilde',
    16785122: 'Ohornbelowdot',
    16785123: 'ohornbelowdot',
    16785124: 'Ubelowdot',
    16785125: 'ubelowdot',
    16785126: 'Uhook',
    16785127: 'uhook',
    16785128: 'Uhornacute',
    16785129: 'uhornacute',
    16785130: 'Uhorngrave',
    16785131: 'uhorngrave',
    16785132: 'Uhornhook',
    16785133: 'uhornhook',
    16785134: 'Uhorntilde',
    16785135: 'uhorntilde',
    16785136: 'Uhornbelowdot',
    16785137: 'uhornbelowdot',
    16785138: 'Ygrave',
    16785139: 'ygrave',
    16785140: 'Ybelowdot',
    16785141: 'ybelowdot',
    16785142: 'Yhook',
    16785143: 'yhook',
    16785144: 'Ytilde',
    16785145: 'ytilde',
    16785520: 'zerosuperior',
    16785524: 'foursuperior',
    16785525: 'fivesuperior',
    16785526: 'sixsuperior',
    16785527: 'sevensuperior',
    16785528: 'eightsuperior',
    16785529: 'ninesuperior',
    16785536: 'zerosubscript',
    16785537: 'onesubscript',
    16785538: 'twosubscript',
    16785539: 'threesubscript',
    16785540: 'foursubscript',
    16785541: 'fivesubscript',
    16785542: 'sixsubscript',
    16785543: 'sevensubscript',
    16785544: 'eightsubscript',
    16785545: 'ninesubscript',
    16785568: 'EcuSign',
    16785569: 'ColonSign',
    16785570: 'CruzeiroSign',
    16785571: 'FFrancSign',
    16785572: 'LiraSign',
    16785573: 'MillSign',
    16785574: 'NairaSign',
    16785575: 'PesetaSign',
    16785576: 'RupeeSign',
    16785577: 'WonSign',
    16785578: 'NewSheqelSign',
    16785579: 'DongSign',
    16785922: 'partdifferential',
    16785925: 'emptyset',
    16785928: 'elementof',
    16785929: 'notelementof',
    16785931: 'containsas',
    16785946: 'squareroot',
    16785947: 'cuberoot',
    16785948: 'fourthroot',
    16785964: 'dintegral',
    16785965: 'tintegral',
    16785973: 'because',
    16785991: 'notapproxeq',
    16785992: 'approxeq',
    16786018: 'notidentical',
    16786019: 'stricteq',
    16787456: 'braille_blank',
    16787457: 'braille_dots_1',
    16787458: 'braille_dots_2',
    16787459: 'braille_dots_12',
    16787460: 'braille_dots_3',
    16787461: 'braille_dots_13',
    16787462: 'braille_dots_23',
    16787463: 'braille_dots_123',
    16787464: 'braille_dots_4',
    16787465: 'braille_dots_14',
    16787466: 'braille_dots_24',
    16787467: 'braille_dots_124',
    16787468: 'braille_dots_34',
    16787469: 'braille_dots_134',
    16787470: 'braille_dots_234',
    16787471: 'braille_dots_1234',
    16787472: 'braille_dots_5',
    16787473: 'braille_dots_15',
    16787474: 'braille_dots_25',
    16787475: 'braille_dots_125',
    16787476: 'braille_dots_35',
    16787477: 'braille_dots_135',
    16787478: 'braille_dots_235',
    16787479: 'braille_dots_1235',
    16787480: 'braille_dots_45',
    16787481: 'braille_dots_145',
    16787482: 'braille_dots_245',
    16787483: 'braille_dots_1245',
    16787484: 'braille_dots_345',
    16787485: 'braille_dots_1345',
    16787486: 'braille_dots_2345',
    16787487: 'braille_dots_12345',
    16787488: 'braille_dots_6',
    16787489: 'braille_dots_16',
    16787490: 'braille_dots_26',
    16787491: 'braille_dots_126',
    16787492: 'braille_dots_36',
    16787493: 'braille_dots_136',
    16787494: 'braille_dots_236',
    16787495: 'braille_dots_1236',
    16787496: 'braille_dots_46',
    16787497: 'braille_dots_146',
    16787498: 'braille_dots_246',
    16787499: 'braille_dots_1246',
    16787500: 'braille_dots_346',
    16787501: 'braille_dots_1346',
    16787502: 'braille_dots_2346',
    16787503: 'braille_dots_12346',
    16787504: 'braille_dots_56',
    16787505: 'braille_dots_156',
    16787506: 'braille_dots_256',
    16787507: 'braille_dots_1256',
    16787508: 'braille_dots_356',
    16787509: 'braille_dots_1356',
    16787510: 'braille_dots_2356',
    16787511: 'braille_dots_12356',
    16787512: 'braille_dots_456',
    16787513: 'braille_dots_1456',
    16787514: 'braille_dots_2456',
    16787515: 'braille_dots_12456',
    16787516: 'braille_dots_3456',
    16787517: 'braille_dots_13456',
    16787518: 'braille_dots_23456',
    16787519: 'braille_dots_123456',
    16787520: 'braille_dots_7',
    16787521: 'braille_dots_17',
    16787522: 'braille_dots_27',
    16787523: 'braille_dots_127',
    16787524: 'braille_dots_37',
    16787525: 'braille_dots_137',
    16787526: 'braille_dots_237',
    16787527: 'braille_dots_1237',
    16787528: 'braille_dots_47',
    16787529: 'braille_dots_147',
    16787530: 'braille_dots_247',
    16787531: 'braille_dots_1247',
    16787532: 'braille_dots_347',
    16787533: 'braille_dots_1347',
    16787534: 'braille_dots_2347',
    16787535: 'braille_dots_12347',
    16787536: 'braille_dots_57',
    16787537: 'braille_dots_157',
    16787538: 'braille_dots_257',
    16787539: 'braille_dots_1257',
    16787540: 'braille_dots_357',
    16787541: 'braille_dots_1357',
    16787542: 'braille_dots_2357',
    16787543: 'braille_dots_12357',
    16787544: 'braille_dots_457',
    16787545: 'braille_dots_1457',
    16787546: 'braille_dots_2457',
    16787547: 'braille_dots_12457',
    16787548: 'braille_dots_3457',
    16787549: 'braille_dots_13457',
    16787550: 'braille_dots_23457',
    16787551: 'braille_dots_123457',
    16787552: 'braille_dots_67',
    16787553: 'braille_dots_167',
    16787554: 'braille_dots_267',
    16787555: 'braille_dots_1267',
    16787556: 'braille_dots_367',
    16787557: 'braille_dots_1367',
    16787558: 'braille_dots_2367',
    16787559: 'braille_dots_12367',
    16787560: 'braille_dots_467',
    16787561: 'braille_dots_1467',
    16787562: 'braille_dots_2467',
    16787563: 'braille_dots_12467',
    16787564: 'braille_dots_3467',
    16787565: 'braille_dots_13467',
    16787566: 'braille_dots_23467',
    16787567: 'braille_dots_123467',
    16787568: 'braille_dots_567',
    16787569: 'braille_dots_1567',
    16787570: 'braille_dots_2567',
    16787571: 'braille_dots_12567',
    16787572: 'braille_dots_3567',
    16787573: 'braille_dots_13567',
    16787574: 'braille_dots_23567',
    16787575: 'braille_dots_123567',
    16787576: 'braille_dots_4567',
    16787577: 'braille_dots_14567',
    16787578: 'braille_dots_24567',
    16787579: 'braille_dots_124567',
    16787580: 'braille_dots_34567',
    16787581: 'braille_dots_134567',
    16787582: 'braille_dots_234567',
    16787583: 'braille_dots_1234567',
    16787584: 'braille_dots_8',
    16787585: 'braille_dots_18',
    16787586: 'braille_dots_28',
    16787587: 'braille_dots_128',
    16787588: 'braille_dots_38',
    16787589: 'braille_dots_138',
    16787590: 'braille_dots_238',
    16787591: 'braille_dots_1238',
    16787592: 'braille_dots_48',
    16787593: 'braille_dots_148',
    16787594: 'braille_dots_248',
    16787595: 'braille_dots_1248',
    16787596: 'braille_dots_348',
    16787597: 'braille_dots_1348',
    16787598: 'braille_dots_2348',
    16787599: 'braille_dots_12348',
    16787600: 'braille_dots_58',
    16787601: 'braille_dots_158',
    16787602: 'braille_dots_258',
    16787603: 'braille_dots_1258',
    16787604: 'braille_dots_358',
    16787605: 'braille_dots_1358',
    16787606: 'braille_dots_2358',
    16787607: 'braille_dots_12358',
    16787608: 'braille_dots_458',
    16787609: 'braille_dots_1458',
    16787610: 'braille_dots_2458',
    16787611: 'braille_dots_12458',
    16787612: 'braille_dots_3458',
    16787613: 'braille_dots_13458',
    16787614: 'braille_dots_23458',
    16787615: 'braille_dots_123458',
    16787616: 'braille_dots_68',
    16787617: 'braille_dots_168',
    16787618: 'braille_dots_268',
    16787619: 'braille_dots_1268',
    16787620: 'braille_dots_368',
    16787621: 'braille_dots_1368',
    16787622: 'braille_dots_2368',
    16787623: 'braille_dots_12368',
    16787624: 'braille_dots_468',
    16787625: 'braille_dots_1468',
    16787626: 'braille_dots_2468',
    16787627: 'braille_dots_12468',
    16787628: 'braille_dots_3468',
    16787629: 'braille_dots_13468',
    16787630: 'braille_dots_23468',
    16787631: 'braille_dots_123468',
    16787632: 'braille_dots_568',
    16787633: 'braille_dots_1568',
    16787634: 'braille_dots_2568',
    16787635: 'braille_dots_12568',
    16787636: 'braille_dots_3568',
    16787637: 'braille_dots_13568',
    16787638: 'braille_dots_23568',
    16787639: 'braille_dots_123568',
    16787640: 'braille_dots_4568',
    16787641: 'braille_dots_14568',
    16787642: 'braille_dots_24568',
    16787643: 'braille_dots_124568',
    16787644: 'braille_dots_34568',
    16787645: 'braille_dots_134568',
    16787646: 'braille_dots_234568',
    16787647: 'braille_dots_1234568',
    16787648: 'braille_dots_78',
    16787649: 'braille_dots_178',
    16787650: 'braille_dots_278',
    16787651: 'braille_dots_1278',
    16787652: 'braille_dots_378',
    16787653: 'braille_dots_1378',
    16787654: 'braille_dots_2378',
    16787655: 'braille_dots_12378',
    16787656: 'braille_dots_478',
    16787657: 'braille_dots_1478',
    16787658: 'braille_dots_2478',
    16787659: 'braille_dots_12478',
    16787660: 'braille_dots_3478',
    16787661: 'braille_dots_13478',
    16787662: 'braille_dots_23478',
    16787663: 'braille_dots_123478',
    16787664: 'braille_dots_578',
    16787665: 'braille_dots_1578',
    16787666: 'braille_dots_2578',
    16787667: 'braille_dots_12578',
    16787668: 'braille_dots_3578',
    16787669: 'braille_dots_13578',
    16787670: 'braille_dots_23578',
    16787671: 'braille_dots_123578',
    16787672: 'braille_dots_4578',
    16787673: 'braille_dots_14578',
    16787674: 'braille_dots_24578',
    16787675: 'braille_dots_124578',
    16787676: 'braille_dots_34578',
    16787677: 'braille_dots_134578',
    16787678: 'braille_dots_234578',
    16787679: 'braille_dots_1234578',
    16787680: 'braille_dots_678',
    16787681: 'braille_dots_1678',
    16787682: 'braille_dots_2678',
    16787683: 'braille_dots_12678',
    16787684: 'braille_dots_3678',
    16787685: 'braille_dots_13678',
    16787686: 'braille_dots_23678',
    16787687: 'braille_dots_123678',
    16787688: 'braille_dots_4678',
    16787689: 'braille_dots_14678',
    16787690: 'braille_dots_24678',
    16787691: 'braille_dots_124678',
    16787692: 'braille_dots_34678',
    16787693: 'braille_dots_134678',
    16787694: 'braille_dots_234678',
    16787695: 'braille_dots_1234678',
    16787696: 'braille_dots_5678',
    16787697: 'braille_dots_15678',
    16787698: 'braille_dots_25678',
    16787699: 'braille_dots_125678',
    16787700: 'braille_dots_35678',
    16787701: 'braille_dots_135678',
    16787702: 'braille_dots_235678',
    16787703: 'braille_dots_1235678',
    16787704: 'braille_dots_45678',
    16787705: 'braille_dots_145678',
    16787706: 'braille_dots_245678',
    16787707: 'braille_dots_1245678',
    16787708: 'braille_dots_345678',
    16787709: 'braille_dots_1345678',
    16787710: 'braille_dots_2345678',
    16787711: 'braille_dots_12345678',
    269025066: 'XF86PowerOff',
    269025067: 'XF86WakeUp',
    269025071: 'XF86Sleep',

* Wed 15 Oct 2014 11:46:28 AM JST
keysym.Keysym(code)
* Wed 15 Oct 2014 11:46:34 AM JST
namesym.Namesym(name)
* Wed 15 Oct 2014 11:48:50 AM JST
    'space': 0x20,
    'exclam': 0x21,
    'quotedbl': 0x22,
    'numbersign': 0x23,
    'dollar': 0x24,
    'percent': 0x25,
    'ampersand': 0x26,
    'apostrophe': 0x27,
    'parenleft': 0x28,
    'parenright': 0x29,
    'asterisk': 0x2a,
    'plus': 0x2b,
    'comma': 0x2c,
    'minus': 0x2d,
    'period': 0x2e,
    'slash': 0x2f,
    '0': 0x30,
    '1': 0x31,
    '2': 0x32,
    '3': 0x33,
    '4': 0x34,
    '5': 0x35,
    '6': 0x36,
    '7': 0x37,
    '8': 0x38,
    '9': 0x39,
    'colon': 0x3a,
    'semicolon': 0x3b,
    'less': 0x3c,
    'equal': 0x3d,
    'greater': 0x3e,
    'question': 0x3f,
    'at': 0x40,
    'A': 0x41,
    'B': 0x42,
    'C': 0x43,
    'D': 0x44,
    'E': 0x45,
    'F': 0x46,
    'G': 0x47,
    'H': 0x48,
    'I': 0x49,
    'J': 0x4a,
    'K': 0x4b,
    'L': 0x4c,
    'M': 0x4d,
    'N': 0x4e,
    'O': 0x4f,
    'P': 0x50,
    'Q': 0x51,
    'R': 0x52,
    'S': 0x53,
    'T': 0x54,
    'U': 0x55,
    'V': 0x56,
    'W': 0x57,
    'X': 0x58,
    'Y': 0x59,
    'Z': 0x5a,
    'bracketleft': 0x5b,
    'backslash': 0x5c,
    'bracketright': 0x5d,
    'asciicircum': 0x5e,
    'underscore': 0x5f,
    'quoteleft': 0x60,
    'a': 0x61,
    'b': 0x62,
    'c': 0x63,
    'd': 0x64,
    'e': 0x65,
    'f': 0x66,
    'g': 0x67,
    'h': 0x68,
    'i': 0x69,
    'j': 0x6a,
    'k': 0x6b,
    'l': 0x6c,
    'm': 0x6d,
    'n': 0x6e,
    'o': 0x6f,
    'p': 0x70,
    'q': 0x71,
    'r': 0x72,
    's': 0x73,
    't': 0x74,
    'u': 0x75,
    'v': 0x76,
    'w': 0x77,
    'x': 0x78,
    'y': 0x79,
    'z': 0x7a,
    'braceleft': 0x7b,
    'bar': 0x7c,
    'braceright': 0x7d,
    'asciitilde': 0x7e,
    'nobreakspace': 0xa0,
    'exclamdown': 0xa1,
    'cent': 0xa2,
    'sterling': 0xa3,
    'currency': 0xa4,
    'yen': 0xa5,
    'brokenbar': 0xa6,
    'section': 0xa7,
    'diaeresis': 0xa8,
    'copyright': 0xa9,
    'ordfeminine': 0xaa,
    'guillemotleft': 0xab,
    'notsign': 0xac,
    'hyphen': 0xad,
    'registered': 0xae,
    'macron': 0xaf,
    'degree': 0xb0,
    'plusminus': 0xb1,
    'twosuperior': 0xb2,
    'threesuperior': 0xb3,
    'acute': 0xb4,
    'mu': 0xb5,
    'paragraph': 0xb6,
    'periodcentered': 0xb7,
    'cedilla': 0xb8,
    'onesuperior': 0xb9,
    'masculine': 0xba,
    'guillemotright': 0xbb,
    'onequarter': 0xbc,
    'onehalf': 0xbd,
    'threequarters': 0xbe,
    'questiondown': 0xbf,
    'Agrave': 0xc0,
    'Aacute': 0xc1,
    'Acircumflex': 0xc2,
    'Atilde': 0xc3,
    'Adiaeresis': 0xc4,
    'Aring': 0xc5,
    'AE': 0xc6,
    'Ccedilla': 0xc7,
    'Egrave': 0xc8,
    'Eacute': 0xc9,
    'Ecircumflex': 0xca,
    'Ediaeresis': 0xcb,
    'Igrave': 0xcc,
    'Iacute': 0xcd,
    'Icircumflex': 0xce,
    'Idiaeresis': 0xcf,
    'Eth': 0xd0,
    'Ntilde': 0xd1,
    'Ograve': 0xd2,
    'Oacute': 0xd3,
    'Ocircumflex': 0xd4,
    'Otilde': 0xd5,
    'Odiaeresis': 0xd6,
    'multiply': 0xd7,
    'Oslash': 0xd8,
    'Ugrave': 0xd9,
    'Uacute': 0xda,
    'Ucircumflex': 0xdb,
    'Udiaeresis': 0xdc,
    'Yacute': 0xdd,
    'Thorn': 0xde,
    'ssharp': 0xdf,
    'agrave': 0xe0,
    'aacute': 0xe1,
    'acircumflex': 0xe2,
    'atilde': 0xe3,
    'adiaeresis': 0xe4,
    'aring': 0xe5,
    'ae': 0xe6,
    'ccedilla': 0xe7,
    'egrave': 0xe8,
    'eacute': 0xe9,
    'ecircumflex': 0xea,
    'ediaeresis': 0xeb,
    'igrave': 0xec,
    'iacute': 0xed,
    'icircumflex': 0xee,
    'idiaeresis': 0xef,
    'eth': 0xf0,
    'ntilde': 0xf1,
    'ograve': 0xf2,
    'oacute': 0xf3,
    'ocircumflex': 0xf4,
    'otilde': 0xf5,
    'odiaeresis': 0xf6,
    'division': 0xf7,
    'ooblique': 0xf8,
    'ugrave': 0xf9,
    'uacute': 0xfa,
    'ucircumflex': 0xfb,
    'udiaeresis': 0xfc,
    'yacute': 0xfd,
    'thorn': 0xfe,
    'ydiaeresis': 0xff,
    'Aogonek': 0x1a1,
    'breve': 0x1a2,
    'Lstroke': 0x1a3,
    'Lcaron': 0x1a5,
    'Sacute': 0x1a6,
    'Scaron': 0x1a9,
    'Scedilla': 0x1aa,
    'Tcaron': 0x1ab,
    'Zacute': 0x1ac,
    'Zcaron': 0x1ae,
    'Zabovedot': 0x1af,
    'aogonek': 0x1b1,
    'ogonek': 0x1b2,
    'lstroke': 0x1b3,
    'lcaron': 0x1b5,
    'sacute': 0x1b6,
    'caron': 0x1b7,
    'scaron': 0x1b9,
    'scedilla': 0x1ba,
    'tcaron': 0x1bb,
    'zacute': 0x1bc,
    'doubleacute': 0x1bd,
    'zcaron': 0x1be,
    'zabovedot': 0x1bf,
    'Racute': 0x1c0,
    'Abreve': 0x1c3,
    'Lacute': 0x1c5,
    'Cacute': 0x1c6,
    'Ccaron': 0x1c8,
    'Eogonek': 0x1ca,
    'Ecaron': 0x1cc,
    'Dcaron': 0x1cf,
    'Dstroke': 0x1d0,
    'Nacute': 0x1d1,
    'Ncaron': 0x1d2,
    'Odoubleacute': 0x1d5,
    'Rcaron': 0x1d8,
    'Uring': 0x1d9,
    'Udoubleacute': 0x1db,
    'Tcedilla': 0x1de,
    'racute': 0x1e0,
    'abreve': 0x1e3,
    'lacute': 0x1e5,
    'cacute': 0x1e6,
    'ccaron': 0x1e8,
    'eogonek': 0x1ea,
    'ecaron': 0x1ec,
    'dcaron': 0x1ef,
    'dstroke': 0x1f0,
    'nacute': 0x1f1,
    'ncaron': 0x1f2,
    'odoubleacute': 0x1f5,
    'rcaron': 0x1f8,
    'uring': 0x1f9,
    'udoubleacute': 0x1fb,
    'tcedilla': 0x1fe,
    'abovedot': 0x1ff,
    'Hstroke': 0x2a1,
    'Hcircumflex': 0x2a6,
    'Iabovedot': 0x2a9,
    'Gbreve': 0x2ab,
    'Jcircumflex': 0x2ac,
    'hstroke': 0x2b1,
    'hcircumflex': 0x2b6,
    'idotless': 0x2b9,
    'gbreve': 0x2bb,
    'jcircumflex': 0x2bc,
    'Cabovedot': 0x2c5,
    'Ccircumflex': 0x2c6,
    'Gabovedot': 0x2d5,
    'Gcircumflex': 0x2d8,
    'Ubreve': 0x2dd,
    'Scircumflex': 0x2de,
    'cabovedot': 0x2e5,
    'ccircumflex': 0x2e6,
    'gabovedot': 0x2f5,
    'gcircumflex': 0x2f8,
    'ubreve': 0x2fd,
    'scircumflex': 0x2fe,
    'kra': 0x3a2,
    'Rcedilla': 0x3a3,
    'Itilde': 0x3a5,
    'Lcedilla': 0x3a6,
    'Emacron': 0x3aa,
    'Gcedilla': 0x3ab,
    'Tslash': 0x3ac,
    'rcedilla': 0x3b3,
    'itilde': 0x3b5,
    'lcedilla': 0x3b6,
    'emacron': 0x3ba,
    'gcedilla': 0x3bb,
    'tslash': 0x3bc,
    'ENG': 0x3bd,
    'eng': 0x3bf,
    'Amacron': 0x3c0,
    'Iogonek': 0x3c7,
    'Eabovedot': 0x3cc,
    'Imacron': 0x3cf,
    'Ncedilla': 0x3d1,
    'Omacron': 0x3d2,
    'Kcedilla': 0x3d3,
    'Uogonek': 0x3d9,
    'Utilde': 0x3dd,
    'Umacron': 0x3de,
    'amacron': 0x3e0,
    'iogonek': 0x3e7,
    'eabovedot': 0x3ec,
    'imacron': 0x3ef,
    'ncedilla': 0x3f1,
    'omacron': 0x3f2,
    'kcedilla': 0x3f3,
    'uogonek': 0x3f9,
    'utilde': 0x3fd,
    'umacron': 0x3fe,
    'overline': 0x47e,
    'kana_fullstop': 0x4a1,
    'kana_openingbracket': 0x4a2,
    'kana_closingbracket': 0x4a3,
    'kana_comma': 0x4a4,
    'kana_conjunctive': 0x4a5,
    'kana_WO': 0x4a6,
    'kana_a': 0x4a7,
    'kana_i': 0x4a8,
    'kana_u': 0x4a9,
    'kana_e': 0x4aa,
    'kana_o': 0x4ab,
    'kana_ya': 0x4ac,
    'kana_yu': 0x4ad,
    'kana_yo': 0x4ae,
    'kana_tsu': 0x4af,
    'prolongedsound': 0x4b0,
    'kana_A': 0x4b1,
    'kana_I': 0x4b2,
    'kana_U': 0x4b3,
    'kana_E': 0x4b4,
    'kana_O': 0x4b5,
    'kana_KA': 0x4b6,
    'kana_KI': 0x4b7,
    'kana_KU': 0x4b8,
    'kana_KE': 0x4b9,
    'kana_KO': 0x4ba,
    'kana_SA': 0x4bb,
    'kana_SHI': 0x4bc,
    'kana_SU': 0x4bd,
    'kana_SE': 0x4be,
    'kana_SO': 0x4bf,
    'kana_TA': 0x4c0,
    'kana_TI': 0x4c1,
    'kana_TSU': 0x4c2,
    'kana_TE': 0x4c3,
    'kana_TO': 0x4c4,
    'kana_NA': 0x4c5,
    'kana_NI': 0x4c6,
    'kana_NU': 0x4c7,
    'kana_NE': 0x4c8,
    'kana_NO': 0x4c9,
    'kana_HA': 0x4ca,
    'kana_HI': 0x4cb,
    'kana_HU': 0x4cc,
    'kana_HE': 0x4cd,
    'kana_HO': 0x4ce,
    'kana_MA': 0x4cf,
    'kana_MI': 0x4d0,
    'kana_MU': 0x4d1,
    'kana_ME': 0x4d2,
    'kana_MO': 0x4d3,
    'kana_YA': 0x4d4,
    'kana_YU': 0x4d5,
    'kana_YO': 0x4d6,
    'kana_RA': 0x4d7,
    'kana_RI': 0x4d8,
    'kana_RU': 0x4d9,
    'kana_RE': 0x4da,
    'kana_RO': 0x4db,
    'kana_WA': 0x4dc,
    'kana_N': 0x4dd,
    'voicedsound': 0x4de,
    'semivoicedsound': 0x4df,
    'Arabic_comma': 0x5ac,
    'Arabic_semicolon': 0x5bb,
    'Arabic_question_mark': 0x5bf,
    'Arabic_hamza': 0x5c1,
    'Arabic_maddaonalef': 0x5c2,
    'Arabic_hamzaonalef': 0x5c3,
    'Arabic_hamzaonwaw': 0x5c4,
    'Arabic_hamzaunderalef': 0x5c5,
    'Arabic_hamzaonyeh': 0x5c6,
    'Arabic_alef': 0x5c7,
    'Arabic_beh': 0x5c8,
    'Arabic_tehmarbuta': 0x5c9,
    'Arabic_teh': 0x5ca,
    'Arabic_theh': 0x5cb,
    'Arabic_jeem': 0x5cc,
    'Arabic_hah': 0x5cd,
    'Arabic_khah': 0x5ce,
    'Arabic_dal': 0x5cf,
    'Arabic_thal': 0x5d0,
    'Arabic_ra': 0x5d1,
    'Arabic_zain': 0x5d2,
    'Arabic_seen': 0x5d3,
    'Arabic_sheen': 0x5d4,
    'Arabic_sad': 0x5d5,
    'Arabic_dad': 0x5d6,
    'Arabic_tah': 0x5d7,
    'Arabic_zah': 0x5d8,
    'Arabic_ain': 0x5d9,
    'Arabic_ghain': 0x5da,
    'Arabic_tatweel': 0x5e0,
    'Arabic_feh': 0x5e1,
    'Arabic_qaf': 0x5e2,
    'Arabic_kaf': 0x5e3,
    'Arabic_lam': 0x5e4,
    'Arabic_meem': 0x5e5,
    'Arabic_noon': 0x5e6,
    'Arabic_ha': 0x5e7,
    'Arabic_waw': 0x5e8,
    'Arabic_alefmaksura': 0x5e9,
    'Arabic_yeh': 0x5ea,
    'Arabic_fathatan': 0x5eb,
    'Arabic_dammatan': 0x5ec,
    'Arabic_kasratan': 0x5ed,
    'Arabic_fatha': 0x5ee,
    'Arabic_damma': 0x5ef,
    'Arabic_kasra': 0x5f0,
    'Arabic_shadda': 0x5f1,
    'Arabic_sukun': 0x5f2,
    'Serbian_dje': 0x6a1,
    'Macedonia_gje': 0x6a2,
    'Cyrillic_io': 0x6a3,
    'Ukranian_je': 0x6a4,
    'Macedonia_dse': 0x6a5,
    'Ukranian_i': 0x6a6,
    'Ukranian_yi': 0x6a7,
    'Cyrillic_je': 0x6a8,
    'Serbian_lje': 0x6a9,
    'Serbian_nje': 0x6aa,
    'Serbian_tshe': 0x6ab,
    'Macedonia_kje': 0x6ac,
    'Ukrainian_ghe_with_upturn': 0x6ad,
    'Byelorussian_shortu': 0x6ae,
    'Cyrillic_dzhe': 0x6af,
    'numerosign': 0x6b0,
    'Serbian_DJE': 0x6b1,
    'Macedonia_GJE': 0x6b2,
    'Cyrillic_IO': 0x6b3,
    'Ukranian_JE': 0x6b4,
    'Macedonia_DSE': 0x6b5,
    'Ukranian_I': 0x6b6,
    'Ukrainian_YI': 0x6b7,
    'Serbian_JE': 0x6b8,
    'Cyrillic_LJE': 0x6b9,
    'Serbian_NJE': 0x6ba,
    'Serbian_TSHE': 0x6bb,
    'Macedonia_KJE': 0x6bc,
    'Ukrainian_GHE_WITH_UPTURN': 0x6bd,
    'Byelorussian_SHORTU': 0x6be,
    'Serbian_DZE': 0x6bf,
    'Cyrillic_yu': 0x6c0,
    'Cyrillic_a': 0x6c1,
    'Cyrillic_be': 0x6c2,
    'Cyrillic_tse': 0x6c3,
    'Cyrillic_de': 0x6c4,
    'Cyrillic_ie': 0x6c5,
    'Cyrillic_ef': 0x6c6,
    'Cyrillic_ghe': 0x6c7,
    'Cyrillic_ha': 0x6c8,
    'Cyrillic_i': 0x6c9,
    'Cyrillic_shorti': 0x6ca,
    'Cyrillic_ka': 0x6cb,
    'Cyrillic_el': 0x6cc,
    'Cyrillic_em': 0x6cd,
    'Cyrillic_en': 0x6ce,
    'Cyrillic_o': 0x6cf,
    'Cyrillic_pe': 0x6d0,
    'Cyrillic_ya': 0x6d1,
    'Cyrillic_er': 0x6d2,
    'Cyrillic_es': 0x6d3,
    'Cyrillic_te': 0x6d4,
    'Cyrillic_u': 0x6d5,
    'Cyrillic_zhe': 0x6d6,
    'Cyrillic_ve': 0x6d7,
    'Cyrillic_softsign': 0x6d8,
    'Cyrillic_yeru': 0x6d9,
    'Cyrillic_ze': 0x6da,
    'Cyrillic_sha': 0x6db,
    'Cyrillic_e': 0x6dc,
    'Cyrillic_shcha': 0x6dd,
    'Cyrillic_che': 0x6de,
    'Cyrillic_hardsign': 0x6df,
    'Cyrillic_YU': 0x6e0,
    'Cyrillic_A': 0x6e1,
    'Cyrillic_BE': 0x6e2,
    'Cyrillic_TSE': 0x6e3,
    'Cyrillic_DE': 0x6e4,
    'Cyrillic_IE': 0x6e5,
    'Cyrillic_EF': 0x6e6,
    'Cyrillic_GHE': 0x6e7,
    'Cyrillic_HA': 0x6e8,
    'Cyrillic_I': 0x6e9,
    'Cyrillic_SHORTI': 0x6ea,
    'Cyrillic_KA': 0x6eb,
    'Cyrillic_EL': 0x6ec,
    'Cyrillic_EM': 0x6ed,
    'Cyrillic_EN': 0x6ee,
    'Cyrillic_O': 0x6ef,
    'Cyrillic_PE': 0x6f0,
    'Cyrillic_YA': 0x6f1,
    'Cyrillic_ER': 0x6f2,
    'Cyrillic_ES': 0x6f3,
    'Cyrillic_TE': 0x6f4,
    'Cyrillic_U': 0x6f5,
    'Cyrillic_ZHE': 0x6f6,
    'Cyrillic_VE': 0x6f7,
    'Cyrillic_SOFTSIGN': 0x6f8,
    'Cyrillic_YERU': 0x6f9,
    'Cyrillic_ZE': 0x6fa,
    'Cyrillic_SHA': 0x6fb,
    'Cyrillic_E': 0x6fc,
    'Cyrillic_SHCHA': 0x6fd,
    'Cyrillic_CHE': 0x6fe,
    'Cyrillic_HARDSIGN': 0x6ff,
    'Greek_ALPHAaccent': 0x7a1,
    'Greek_EPSILONaccent': 0x7a2,
    'Greek_ETAaccent': 0x7a3,
    'Greek_IOTAaccent': 0x7a4,
    'Greek_IOTAdiaeresis': 0x7a5,
    'Greek_OMICRONaccent': 0x7a7,
    'Greek_UPSILONaccent': 0x7a8,
    'Greek_UPSILONdieresis': 0x7a9,
    'Greek_OMEGAaccent': 0x7ab,
    'Greek_accentdieresis': 0x7ae,
    'Greek_horizbar': 0x7af,
    'Greek_alphaaccent': 0x7b1,
    'Greek_epsilonaccent': 0x7b2,
    'Greek_etaaccent': 0x7b3,
    'Greek_iotaaccent': 0x7b4,
    'Greek_iotadieresis': 0x7b5,
    'Greek_iotaaccentdieresis': 0x7b6,
    'Greek_omicronaccent': 0x7b7,
    'Greek_upsilonaccent': 0x7b8,
    'Greek_upsilondieresis': 0x7b9,
    'Greek_upsilonaccentdieresis': 0x7ba,
    'Greek_omegaaccent': 0x7bb,
    'Greek_ALPHA': 0x7c1,
    'Greek_BETA': 0x7c2,
    'Greek_GAMMA': 0x7c3,
    'Greek_DELTA': 0x7c4,
    'Greek_EPSILON': 0x7c5,
    'Greek_ZETA': 0x7c6,
    'Greek_ETA': 0x7c7,
    'Greek_THETA': 0x7c8,
    'Greek_IOTA': 0x7c9,
    'Greek_KAPPA': 0x7ca,
    'Greek_LAMBDA': 0x7cb,
    'Greek_MU': 0x7cc,
    'Greek_NU': 0x7cd,
    'Greek_XI': 0x7ce,
    'Greek_OMICRON': 0x7cf,
    'Greek_PI': 0x7d0,
    'Greek_RHO': 0x7d1,
    'Greek_SIGMA': 0x7d2,
    'Greek_TAU': 0x7d4,
    'Greek_UPSILON': 0x7d5,
    'Greek_PHI': 0x7d6,
    'Greek_CHI': 0x7d7,
    'Greek_PSI': 0x7d8,
    'Greek_OMEGA': 0x7d9,
    'Greek_alpha': 0x7e1,
    'Greek_beta': 0x7e2,
    'Greek_gamma': 0x7e3,
    'Greek_delta': 0x7e4,
    'Greek_epsilon': 0x7e5,
    'Greek_zeta': 0x7e6,
    'Greek_eta': 0x7e7,
    'Greek_theta': 0x7e8,
    'Greek_iota': 0x7e9,
    'Greek_kappa': 0x7ea,
    'Greek_lamda': 0x7eb,
    'Greek_mu': 0x7ec,
    'Greek_nu': 0x7ed,
    'Greek_xi': 0x7ee,
    'Greek_omicron': 0x7ef,
    'Greek_pi': 0x7f0,
    'Greek_rho': 0x7f1,
    'Greek_sigma': 0x7f2,
    'Greek_finalsmallsigma': 0x7f3,
    'Greek_tau': 0x7f4,
    'Greek_upsilon': 0x7f5,
    'Greek_phi': 0x7f6,
    'Greek_chi': 0x7f7,
    'Greek_psi': 0x7f8,
    'Greek_omega': 0x7f9,
    'leftradical': 0x8a1,
    'topleftradical': 0x8a2,
    'horizconnector': 0x8a3,
    'topintegral': 0x8a4,
    'botintegral': 0x8a5,
    'vertconnector': 0x8a6,
    'topleftsqbracket': 0x8a7,
    'botleftsqbracket': 0x8a8,
    'toprightsqbracket': 0x8a9,
    'botrightsqbracket': 0x8aa,
    'topleftparens': 0x8ab,
    'botleftparens': 0x8ac,
    'toprightparens': 0x8ad,
    'botrightparens': 0x8ae,
    'leftmiddlecurlybrace': 0x8af,
    'rightmiddlecurlybrace': 0x8b0,
    'topleftsummation': 0x8b1,
    'botleftsummation': 0x8b2,
    'topvertsummationconnector': 0x8b3,
    'botvertsummationconnector': 0x8b4,
    'toprightsummation': 0x8b5,
    'botrightsummation': 0x8b6,
    'rightmiddlesummation': 0x8b7,
    'lessthanequal': 0x8bc,
    'notequal': 0x8bd,
    'greaterthanequal': 0x8be,
    'integral': 0x8bf,
    'therefore': 0x8c0,
    'variation': 0x8c1,
    'infinity': 0x8c2,
    'nabla': 0x8c5,
    'approximate': 0x8c8,
    'similarequal': 0x8c9,
    'ifonlyif': 0x8cd,
    'implies': 0x8ce,
    'identical': 0x8cf,
    'radical': 0x8d6,
    'includedin': 0x8da,
    'includes': 0x8db,
    'intersection': 0x8dc,
    'union': 0x8dd,
    'logicaland': 0x8de,
    'logicalor': 0x8df,
    'partialderivative': 0x8ef,
    'function': 0x8f6,
    'leftarrow': 0x8fb,
    'uparrow': 0x8fc,
    'rightarrow': 0x8fd,
    'downarrow': 0x8fe,
    'blank': 0x9df,
    'soliddiamond': 0x9e0,
    'checkerboard': 0x9e1,
    'ht': 0x9e2,
    'ff': 0x9e3,
    'cr': 0x9e4,
    'lf': 0x9e5,
    'nl': 0x9e8,
    'vt': 0x9e9,
    'lowrightcorner': 0x9ea,
    'uprightcorner': 0x9eb,
    'upleftcorner': 0x9ec,
    'lowleftcorner': 0x9ed,
    'crossinglines': 0x9ee,
    'horizlinescan1': 0x9ef,
    'horizlinescan3': 0x9f0,
    'horizlinescan5': 0x9f1,
    'horizlinescan7': 0x9f2,
    'horizlinescan9': 0x9f3,
    'leftt': 0x9f4,
    'rightt': 0x9f5,
    'bott': 0x9f6,
    'topt': 0x9f7,
    'vertbar': 0x9f8,
    'emspace': 0xaa1,
    'enspace': 0xaa2,
    'em3space': 0xaa3,
    'em4space': 0xaa4,
    'digitspace': 0xaa5,
    'punctspace': 0xaa6,
    'thinspace': 0xaa7,
    'hairspace': 0xaa8,
    'emdash': 0xaa9,
    'endash': 0xaaa,
    'signifblank': 0xaac,
    'ellipsis': 0xaae,
    'doubbaselinedot': 0xaaf,
    'onethird': 0xab0,
    'twothirds': 0xab1,
    'onefifth': 0xab2,
    'twofifths': 0xab3,
    'threefifths': 0xab4,
    'fourfifths': 0xab5,
    'onesixth': 0xab6,
    'fivesixths': 0xab7,
    'careof': 0xab8,
    'figdash': 0xabb,
    'leftanglebracket': 0xabc,
    'decimalpoint': 0xabd,
    'rightanglebracket': 0xabe,
    'marker': 0xabf,
    'oneeighth': 0xac3,
    'threeeighths': 0xac4,
    'fiveeighths': 0xac5,
    'seveneighths': 0xac6,
    'trademark': 0xac9,
    'signaturemark': 0xaca,
    'trademarkincircle': 0xacb,
    'leftopentriangle': 0xacc,
    'rightopentriangle': 0xacd,
    'emopencircle': 0xace,
    'emopenrectangle': 0xacf,
    'leftsinglequotemark': 0xad0,
    'rightsinglequotemark': 0xad1,
    'leftdoublequotemark': 0xad2,
    'rightdoublequotemark': 0xad3,
    'prescription': 0xad4,
    'permille': 0xad5,
    'minutes': 0xad6,
    'seconds': 0xad7,
    'latincross': 0xad9,
    'hexagram': 0xada,
    'filledrectbullet': 0xadb,
    'filledlefttribullet': 0xadc,
    'filledrighttribullet': 0xadd,
    'emfilledcircle': 0xade,
    'emfilledrect': 0xadf,
    'enopencircbullet': 0xae0,
    'enopensquarebullet': 0xae1,
    'openrectbullet': 0xae2,
    'opentribulletup': 0xae3,
    'opentribulletdown': 0xae4,
    'openstar': 0xae5,
    'enfilledcircbullet': 0xae6,
    'enfilledsqbullet': 0xae7,
    'filledtribulletup': 0xae8,
    'filledtribulletdown': 0xae9,
    'leftpointer': 0xaea,
    'rightpointer': 0xaeb,
    'club': 0xaec,
    'diamond': 0xaed,
    'heart': 0xaee,
    'maltesecross': 0xaf0,
    'dagger': 0xaf1,
    'doubledagger': 0xaf2,
    'checkmark': 0xaf3,
    'ballotcross': 0xaf4,
    'musicalsharp': 0xaf5,
    'musicalflat': 0xaf6,
    'malesymbol': 0xaf7,
    'femalesymbol': 0xaf8,
    'telephone': 0xaf9,
    'telephonerecorder': 0xafa,
    'phonographcopyright': 0xafb,
    'caret': 0xafc,
    'singlelowquotemark': 0xafd,
    'doublelowquotemark': 0xafe,
    'cursor': 0xaff,
    'leftcaret': 0xba3,
    'rightcaret': 0xba6,
    'downcaret': 0xba8,
    'upcaret': 0xba9,
    'overbar': 0xbc0,
    'downtack': 0xbc2,
    'upshoe': 0xbc3,
    'downstile': 0xbc4,
    'underbar': 0xbc6,
    'jot': 0xbca,
    'quad': 0xbcc,
    'uptack': 0xbce,
    'circle': 0xbcf,
    'upstile': 0xbd3,
    'downshoe': 0xbd6,
    'rightshoe': 0xbd8,
    'leftshoe': 0xbda,
    'lefttack': 0xbdc,
    'righttack': 0xbfc,
    'hebrew_doublelowline': 0xcdf,
    'hebrew_aleph': 0xce0,
    'hebrew_bet': 0xce1,
    'hebrew_gimel': 0xce2,
    'hebrew_daleth': 0xce3,
    'hebrew_he': 0xce4,
    'hebrew_waw': 0xce5,
    'hebrew_zayin': 0xce6,
    'hebrew_chet': 0xce7,
    'hebrew_tet': 0xce8,
    'hebrew_yod': 0xce9,
    'hebrew_finalkaph': 0xcea,
    'hebrew_kaph': 0xceb,
    'hebrew_lamed': 0xcec,
    'hebrew_finalmem': 0xced,
    'hebrew_mem': 0xcee,
    'hebrew_finalnun': 0xcef,
    'hebrew_nun': 0xcf0,
    'hebrew_samech': 0xcf1,
    'hebrew_ayin': 0xcf2,
    'hebrew_finalpe': 0xcf3,
    'hebrew_pe': 0xcf4,
    'hebrew_finalzadi': 0xcf5,
    'hebrew_zadi': 0xcf6,
    'hebrew_kuf': 0xcf7,
    'hebrew_resh': 0xcf8,
    'hebrew_shin': 0xcf9,
    'hebrew_taf': 0xcfa,
    'Thai_kokai': 0xda1,
    'Thai_khokhai': 0xda2,
    'Thai_khokhuat': 0xda3,
    'Thai_khokhwai': 0xda4,
    'Thai_khokhon': 0xda5,
    'Thai_khorakhang': 0xda6,
    'Thai_ngongu': 0xda7,
    'Thai_chochan': 0xda8,
    'Thai_choching': 0xda9,
    'Thai_chochang': 0xdaa,
    'Thai_soso': 0xdab,
    'Thai_chochoe': 0xdac,
    'Thai_yoying': 0xdad,
    'Thai_dochada': 0xdae,
    'Thai_topatak': 0xdaf,
    'Thai_thothan': 0xdb0,
    'Thai_thonangmontho': 0xdb1,
    'Thai_thophuthao': 0xdb2,
    'Thai_nonen': 0xdb3,
    'Thai_dodek': 0xdb4,
    'Thai_totao': 0xdb5,
    'Thai_thothung': 0xdb6,
    'Thai_thothahan': 0xdb7,
    'Thai_thothong': 0xdb8,
    'Thai_nonu': 0xdb9,
    'Thai_bobaimai': 0xdba,
    'Thai_popla': 0xdbb,
    'Thai_phophung': 0xdbc,
    'Thai_fofa': 0xdbd,
    'Thai_phophan': 0xdbe,
    'Thai_fofan': 0xdbf,
    'Thai_phosamphao': 0xdc0,
    'Thai_moma': 0xdc1,
    'Thai_yoyak': 0xdc2,
    'Thai_rorua': 0xdc3,
    'Thai_ru': 0xdc4,
    'Thai_loling': 0xdc5,
    'Thai_lu': 0xdc6,
    'Thai_wowaen': 0xdc7,
    'Thai_sosala': 0xdc8,
    'Thai_sorusi': 0xdc9,
    'Thai_sosua': 0xdca,
    'Thai_hohip': 0xdcb,
    'Thai_lochula': 0xdcc,
    'Thai_oang': 0xdcd,
    'Thai_honokhuk': 0xdce,
    'Thai_paiyannoi': 0xdcf,
    'Thai_saraa': 0xdd0,
    'Thai_maihanakat': 0xdd1,
    'Thai_saraaa': 0xdd2,
    'Thai_saraam': 0xdd3,
    'Thai_sarai': 0xdd4,
    'Thai_saraii': 0xdd5,
    'Thai_saraue': 0xdd6,
    'Thai_sarauee': 0xdd7,
    'Thai_sarau': 0xdd8,
    'Thai_sarauu': 0xdd9,
    'Thai_phinthu': 0xdda,
    'Thai_maihanakat_maitho': 0xdde,
    'Thai_baht': 0xddf,
    'Thai_sarae': 0xde0,
    'Thai_saraae': 0xde1,
    'Thai_sarao': 0xde2,
    'Thai_saraaimaimuan': 0xde3,
    'Thai_saraaimaimalai': 0xde4,
    'Thai_lakkhangyao': 0xde5,
    'Thai_maiyamok': 0xde6,
    'Thai_maitaikhu': 0xde7,
    'Thai_maiek': 0xde8,
    'Thai_maitho': 0xde9,
    'Thai_maitri': 0xdea,
    'Thai_maichattawa': 0xdeb,
    'Thai_thanthakhat': 0xdec,
    'Thai_nikhahit': 0xded,
    'Thai_leksun': 0xdf0,
    'Thai_leknung': 0xdf1,
    'Thai_leksong': 0xdf2,
    'Thai_leksam': 0xdf3,
    'Thai_leksi': 0xdf4,
    'Thai_lekha': 0xdf5,
    'Thai_lekhok': 0xdf6,
    'Thai_lekchet': 0xdf7,
    'Thai_lekpaet': 0xdf8,
    'Thai_lekkao': 0xdf9,
    'Hangul_Kiyeog': 0xea1,
    'Hangul_SsangKiyeog': 0xea2,
    'Hangul_KiyeogSios': 0xea3,
    'Hangul_Nieun': 0xea4,
    'Hangul_NieunJieuj': 0xea5,
    'Hangul_NieunHieuh': 0xea6,
    'Hangul_Dikeud': 0xea7,
    'Hangul_SsangDikeud': 0xea8,
    'Hangul_Rieul': 0xea9,
    'Hangul_RieulKiyeog': 0xeaa,
    'Hangul_RieulMieum': 0xeab,
    'Hangul_RieulPieub': 0xeac,
    'Hangul_RieulSios': 0xead,
    'Hangul_RieulTieut': 0xeae,
    'Hangul_RieulPhieuf': 0xeaf,
    'Hangul_RieulHieuh': 0xeb0,
    'Hangul_Mieum': 0xeb1,
    'Hangul_Pieub': 0xeb2,
    'Hangul_SsangPieub': 0xeb3,
    'Hangul_PieubSios': 0xeb4,
    'Hangul_Sios': 0xeb5,
    'Hangul_SsangSios': 0xeb6,
    'Hangul_Ieung': 0xeb7,
    'Hangul_Jieuj': 0xeb8,
    'Hangul_SsangJieuj': 0xeb9,
    'Hangul_Cieuc': 0xeba,
    'Hangul_Khieuq': 0xebb,
    'Hangul_Tieut': 0xebc,
    'Hangul_Phieuf': 0xebd,
    'Hangul_Hieuh': 0xebe,
    'Hangul_A': 0xebf,
    'Hangul_AE': 0xec0,
    'Hangul_YA': 0xec1,
    'Hangul_YAE': 0xec2,
    'Hangul_EO': 0xec3,
    'Hangul_E': 0xec4,
    'Hangul_YEO': 0xec5,
    'Hangul_YE': 0xec6,
    'Hangul_O': 0xec7,
    'Hangul_WA': 0xec8,
    'Hangul_WAE': 0xec9,
    'Hangul_OE': 0xeca,
    'Hangul_YO': 0xecb,
    'Hangul_U': 0xecc,
    'Hangul_WEO': 0xecd,
    'Hangul_WE': 0xece,
    'Hangul_WI': 0xecf,
    'Hangul_YU': 0xed0,
    'Hangul_EU': 0xed1,
    'Hangul_YI': 0xed2,
    'Hangul_I': 0xed3,
    'Hangul_J_Kiyeog': 0xed4,
    'Hangul_J_SsangKiyeog': 0xed5,
    'Hangul_J_KiyeogSios': 0xed6,
    'Hangul_J_Nieun': 0xed7,
    'Hangul_J_NieunJieuj': 0xed8,
    'Hangul_J_NieunHieuh': 0xed9,
    'Hangul_J_Dikeud': 0xeda,
    'Hangul_J_Rieul': 0xedb,
    'Hangul_J_RieulKiyeog': 0xedc,
    'Hangul_J_RieulMieum': 0xedd,
    'Hangul_J_RieulPieub': 0xede,
    'Hangul_J_RieulSios': 0xedf,
    'Hangul_J_RieulTieut': 0xee0,
    'Hangul_J_RieulPhieuf': 0xee1,
    'Hangul_J_RieulHieuh': 0xee2,
    'Hangul_J_Mieum': 0xee3,
    'Hangul_J_Pieub': 0xee4,
    'Hangul_J_PieubSios': 0xee5,
    'Hangul_J_Sios': 0xee6,
    'Hangul_J_SsangSios': 0xee7,
    'Hangul_J_Ieung': 0xee8,
    'Hangul_J_Jieuj': 0xee9,
    'Hangul_J_Cieuc': 0xeea,
    'Hangul_J_Khieuq': 0xeeb,
    'Hangul_J_Tieut': 0xeec,
    'Hangul_J_Phieuf': 0xeed,
    'Hangul_J_Hieuh': 0xeee,
    'Hangul_RieulYeorinHieuh': 0xeef,
    'Hangul_SunkyeongeumMieum': 0xef0,
    'Hangul_SunkyeongeumPieub': 0xef1,
    'Hangul_PanSios': 0xef2,
    'Hangul_KkogjiDalrinIeung': 0xef3,
    'Hangul_SunkyeongeumPhieuf': 0xef4,
    'Hangul_YeorinHieuh': 0xef5,
    'Hangul_AraeA': 0xef6,
    'Hangul_AraeAE': 0xef7,
    'Hangul_J_PanSios': 0xef8,
    'Hangul_J_KkogjiDalrinIeung': 0xef9,
    'Hangul_J_YeorinHieuh': 0xefa,
    'Korean_Won': 0xeff,
    'OE': 0x13bc,
    'oe': 0x13bd,
    'Ydiaeresis': 0x13be,
    'EuroSign': 0x20ac,
    '3270_Duplicate': 0xfd01,
    '3270_FieldMark': 0xfd02,
    '3270_Right2': 0xfd03,
    '3270_Left2': 0xfd04,
    '3270_BackTab': 0xfd05,
    '3270_EraseEOF': 0xfd06,
    '3270_EraseInput': 0xfd07,
    '3270_Reset': 0xfd08,
    '3270_Quit': 0xfd09,
    '3270_PA1': 0xfd0a,
    '3270_PA2': 0xfd0b,
    '3270_PA3': 0xfd0c,
    '3270_Test': 0xfd0d,
    '3270_Attn': 0xfd0e,
    '3270_CursorBlink': 0xfd0f,
    '3270_AltCursor': 0xfd10,
    '3270_KeyClick': 0xfd11,
    '3270_Jump': 0xfd12,
    '3270_Ident': 0xfd13,
    '3270_Rule': 0xfd14,
    '3270_Copy': 0xfd15,
    '3270_Play': 0xfd16,
    '3270_Setup': 0xfd17,
    '3270_Record': 0xfd18,
    '3270_ChangeScreen': 0xfd19,
    '3270_DeleteWord': 0xfd1a,
    '3270_ExSelect': 0xfd1b,
    '3270_CursorSelect': 0xfd1c,
    '3270_PrintScreen': 0xfd1d,
    '3270_Enter': 0xfd1e,
    'ISO_Lock': 0xfe01,
    'ISO_Level2_Latch': 0xfe02,
    'ISO_Level3_Shift': 0xfe03,
    'ISO_Level3_Latch': 0xfe04,
    'ISO_Level3_Lock': 0xfe05,
    'ISO_Group_Latch': 0xfe06,
    'ISO_Group_Lock': 0xfe07,
    'ISO_Next_Group': 0xfe08,
    'ISO_Next_Group_Lock': 0xfe09,
    'ISO_Prev_Group': 0xfe0a,
    'ISO_Prev_Group_Lock': 0xfe0b,
    'ISO_First_Group': 0xfe0c,
    'ISO_First_Group_Lock': 0xfe0d,
    'ISO_Last_Group': 0xfe0e,
    'ISO_Last_Group_Lock': 0xfe0f,
    'ISO_Level5_Shift': 0xfe11,
    'ISO_Level5_Latch': 0xfe12,
    'ISO_Level5_Lock': 0xfe13,
    'ISO_Left_Tab': 0xfe20,
    'ISO_Move_Line_Up': 0xfe21,
    'ISO_Move_Line_Down': 0xfe22,
    'ISO_Partial_Line_Up': 0xfe23,
    'ISO_Partial_Line_Down': 0xfe24,
    'ISO_Partial_Space_Left': 0xfe25,
    'ISO_Partial_Space_Right': 0xfe26,
    'ISO_Set_Margin_Left': 0xfe27,
    'ISO_Set_Margin_Right': 0xfe28,
    'ISO_Release_Margin_Left': 0xfe29,
    'ISO_Release_Margin_Right': 0xfe2a,
    'ISO_Release_Both_Margins': 0xfe2b,
    'ISO_Fast_Cursor_Left': 0xfe2c,
    'ISO_Fast_Cursor_Right': 0xfe2d,
    'ISO_Fast_Cursor_Up': 0xfe2e,
    'ISO_Fast_Cursor_Down': 0xfe2f,
    'ISO_Continuous_Underline': 0xfe30,
    'ISO_Discontinuous_Underline': 0xfe31,
    'ISO_Emphasize': 0xfe32,
    'ISO_Center_Object': 0xfe33,
    'ISO_Enter': 0xfe34,
    'dead_grave': 0xfe50,
    'dead_acute': 0xfe51,
    'dead_circumflex': 0xfe52,
    'dead_tilde': 0xfe53,
    'dead_macron': 0xfe54,
    'dead_breve': 0xfe55,
    'dead_abovedot': 0xfe56,
    'dead_diaeresis': 0xfe57,
    'dead_abovering': 0xfe58,
    'dead_doubleacute': 0xfe59,
    'dead_caron': 0xfe5a,
    'dead_cedilla': 0xfe5b,
    'dead_ogonek': 0xfe5c,
    'dead_iota': 0xfe5d,
    'dead_voiced_sound': 0xfe5e,
    'dead_semivoiced_sound': 0xfe5f,
    'dead_belowdot': 0xfe60,
    'dead_hook': 0xfe61,
    'dead_horn': 0xfe62,
    'dead_stroke': 0xfe63,
    'dead_abovecomma': 0xfe64,
    'dead_abovereversedcomma': 0xfe65,
    'dead_doublegrave': 0xfe66,
    'dead_belowring': 0xfe67,
    'dead_belowmacron': 0xfe68,
    'dead_belowcircumflex': 0xfe69,
    'dead_belowtilde': 0xfe6a,
    'dead_belowbreve': 0xfe6b,
    'dead_belowdiaeresis': 0xfe6c,
    'dead_invertedbreve': 0xfe6d,
    'dead_belowcomma': 0xfe6e,
    'dead_currency': 0xfe6f,
    'AccessX_Enable': 0xfe70,
    'AccessX_Feedback_Enable': 0xfe71,
    'RepeatKeys_Enable': 0xfe72,
    'SlowKeys_Enable': 0xfe73,
    'BounceKeys_Enable': 0xfe74,
    'StickyKeys_Enable': 0xfe75,
    'MouseKeys_Enable': 0xfe76,
    'MouseKeys_Accel_Enable': 0xfe77,
    'Overlay1_Enable': 0xfe78,
    'Overlay2_Enable': 0xfe79,
    'AudibleBell_Enable': 0xfe7a,
    'dead_a': 0xfe80,
    'dead_A': 0xfe81,
    'dead_e': 0xfe82,
    'dead_E': 0xfe83,
    'dead_i': 0xfe84,
    'dead_I': 0xfe85,
    'dead_o': 0xfe86,
    'dead_O': 0xfe87,
    'dead_u': 0xfe88,
    'dead_U': 0xfe89,
    'dead_small_schwa': 0xfe8a,
    'dead_capital_schwa': 0xfe8b,
    'dead_greek': 0xfe8c,
    'ch': 0xfea0,
    'Ch': 0xfea1,
    'CH': 0xfea2,
    'c_h': 0xfea3,
    'C_h': 0xfea4,
    'C_H': 0xfea5,
    'First_Virtual_Screen': 0xfed0,
    'Prev_Virtual_Screen': 0xfed1,
    'Next_Virtual_Screen': 0xfed2,
    'Last_Virtual_Screen': 0xfed4,
    'Terminate_Server': 0xfed5,
    'Pointer_Left': 0xfee0,
    'Pointer_Right': 0xfee1,
    'Pointer_Up': 0xfee2,
    'Pointer_Down': 0xfee3,
    'Pointer_UpLeft': 0xfee4,
    'Pointer_UpRight': 0xfee5,
    'Pointer_DownLeft': 0xfee6,
    'Pointer_DownRight': 0xfee7,
    'Pointer_Button_Dflt': 0xfee8,
    'Pointer_Button1': 0xfee9,
    'Pointer_Button2': 0xfeea,
    'Pointer_Button3': 0xfeeb,
    'Pointer_Button4': 0xfeec,
    'Pointer_Button5': 0xfeed,
    'Pointer_DblClick_Dflt': 0xfeee,
    'Pointer_DblClick1': 0xfeef,
    'Pointer_DblClick2': 0xfef0,
    'Pointer_DblClick3': 0xfef1,
    'Pointer_DblClick4': 0xfef2,
    'Pointer_DblClick5': 0xfef3,
    'Pointer_Drag_Dflt': 0xfef4,
    'Pointer_Drag1': 0xfef5,
    'Pointer_Drag2': 0xfef6,
    'Pointer_Drag3': 0xfef7,
    'Pointer_Drag4': 0xfef8,
    'Pointer_EnableKeys': 0xfef9,
    'Pointer_Accelerate': 0xfefa,
    'Pointer_DfltBtnNext': 0xfefb,
    'Pointer_DfltBtnPrev': 0xfefc,
    'Pointer_Drag5': 0xfefd,
    'BackSpace': 0xff08,
    'Tab': 0xff09,
    'Linefeed': 0xff0a,
    'Clear': 0xff0b,
    'Return': 0xff0d,
    'Pause': 0xff13,
    'Scroll_Lock': 0xff14,
    'Sys_Req': 0xff15,
    'Escape': 0xff1b,
    'Multi_key': 0xff20,
    'Kanji': 0xff21,
    'Muhenkan': 0xff22,
    'Henkan': 0xff23,
    'Romaji': 0xff24,
    'Hiragana': 0xff25,
    'Katakana': 0xff26,
    'Hiragana_Katakana': 0xff27,
    'Zenkaku': 0xff28,
    'Hankaku': 0xff29,
    'Zenkaku_Hankaku': 0xff2a,
    'Touroku': 0xff2b,
    'Massyo': 0xff2c,
    'Kana_Lock': 0xff2d,
    'Kana_Shift': 0xff2e,
    'Eisu_Shift': 0xff2f,
    'Eisu_toggle': 0xff30,
    'Hangul': 0xff31,
    'Hangul_Start': 0xff32,
    'Hangul_End': 0xff33,
    'Hangul_Hanja': 0xff34,
    'Hangul_Jamo': 0xff35,
    'Hangul_Romaja': 0xff36,
    'Hangul_Codeinput': 0xff37,
    'Hangul_Jeonja': 0xff38,
    'Hangul_Banja': 0xff39,
    'Hangul_PreHanja': 0xff3a,
    'Hangul_PostHanja': 0xff3b,
    'Hangul_SingleCandidate': 0xff3c,
    'Hangul_MultipleCandidate': 0xff3d,
    'Hangul_PreviousCandidate': 0xff3e,
    'Hangul_Special': 0xff3f,
    'Home': 0xff50,
    'Left': 0xff51,
    'Up': 0xff52,
    'Right': 0xff53,
    'Down': 0xff54,
    'Prior': 0xff55,
    'Next': 0xff56,
    'End': 0xff57,
    'Begin': 0xff58,
    'Select': 0xff60,
    'Print': 0xff61,
    'Execute': 0xff62,
    'Insert': 0xff63,
    'Undo': 0xff65,
    'Redo': 0xff66,
    'Menu': 0xff67,
    'Find': 0xff68,
    'Cancel': 0xff69,
    'Help': 0xff6a,
    'Break': 0xff6b,
    'Arabic_switch': 0xff7e,
    'Num_Lock': 0xff7f,
    'KP_Space': 0xff80,
    'KP_Tab': 0xff89,
    'KP_Enter': 0xff8d,
    'KP_F1': 0xff91,
    'KP_F2': 0xff92,
    'KP_F3': 0xff93,
    'KP_F4': 0xff94,
    'KP_Home': 0xff95,
    'KP_Left': 0xff96,
    'KP_Up': 0xff97,
    'KP_Right': 0xff98,
    'KP_Down': 0xff99,
    'KP_Prior': 0xff9a,
    'KP_Next': 0xff9b,
    'KP_End': 0xff9c,
    'KP_Begin': 0xff9d,
    'KP_Insert': 0xff9e,
    'KP_Delete': 0xff9f,
    'KP_Multiply': 0xffaa,
    'KP_Add': 0xffab,
    'KP_Separator': 0xffac,
    'KP_Subtract': 0xffad,
    'KP_Decimal': 0xffae,
    'KP_Divide': 0xffaf,
    'KP_0': 0xffb0,
    'KP_1': 0xffb1,
    'KP_2': 0xffb2,
    'KP_3': 0xffb3,
    'KP_4': 0xffb4,
    'KP_5': 0xffb5,
    'KP_6': 0xffb6,
    'KP_7': 0xffb7,
    'KP_8': 0xffb8,
    'KP_9': 0xffb9,
    'KP_Equal': 0xffbd,
    'F1': 0xffbe,
    'F2': 0xffbf,
    'F3': 0xffc0,
    'F4': 0xffc1,
    'F5': 0xffc2,
    'F6': 0xffc3,
    'F7': 0xffc4,
    'F8': 0xffc5,
    'F9': 0xffc6,
    'F10': 0xffc7,
    'F11': 0xffc8,
    'F12': 0xffc9,
    'F13': 0xffca,
    'F14': 0xffcb,
    'L5': 0xffcc,
    'F16': 0xffcd,
    'F17': 0xffce,
    'F18': 0xffcf,
    'F19': 0xffd0,
    'L10': 0xffd1,
    'R1': 0xffd2,
    'R2': 0xffd3,
    'R3': 0xffd4,
    'F24': 0xffd5,
    'R5': 0xffd6,
    'R6': 0xffd7,
    'R7': 0xffd8,
    'R8': 0xffd9,
    'R9': 0xffda,
    'R10': 0xffdb,
    'R11': 0xffdc,
    'R12': 0xffdd,
    'R13': 0xffde,
    'R14': 0xffdf,
    'R15': 0xffe0,
    'Shift_L': 0xffe1,
    'Shift_R': 0xffe2,
    'Control_L': 0xffe3,
    'Control_R': 0xffe4,
    'Caps_Lock': 0xffe5,
    'Shift_Lock': 0xffe6,
    'Meta_L': 0xffe7,
    'Meta_R': 0xffe8,
    'Alt_L': 0xffe9,
    'Alt_R': 0xffea,
    'Super_L': 0xffeb,
    'Super_R': 0xffec,
    'Hyper_L': 0xffed,
    'Hyper_R': 0xffee,
    'braille_dot_1': 0xfff1,
    'braille_dot_2': 0xfff2,
    'braille_dot_3': 0xfff3,
    'braille_dot_4': 0xfff4,
    'braille_dot_5': 0xfff5,
    'braille_dot_6': 0xfff6,
    'braille_dot_7': 0xfff7,
    'braille_dot_8': 0xfff8,
    'braille_dot_9': 0xfff9,
    'braille_dot_10': 0xfffa,
    'Delete': 0xffff,
    'VoidSymbol': 0xffffff,
    'Ibreve': 0x100012c,
    'ibreve': 0x100012d,
    'Wcircumflex': 0x1000174,
    'wcircumflex': 0x1000175,
    'Ycircumflex': 0x1000176,
    'ycircumflex': 0x1000177,
    'SCHWA': 0x100018f,
    'Obarred': 0x100019f,
    'Ohorn': 0x10001a0,
    'ohorn': 0x10001a1,
    'Uhorn': 0x10001af,
    'uhorn': 0x10001b0,
    'Zstroke': 0x10001b5,
    'zstroke': 0x10001b6,
    'EZH': 0x10001b7,
    'Ocaron': 0x10001d1,
    'ocaron': 0x10001d2,
    'Gcaron': 0x10001e6,
    'gcaron': 0x10001e7,
    'schwa': 0x1000259,
    'obarred': 0x1000275,
    'ezh': 0x1000292,
    'Cyrillic_GHE_bar': 0x1000492,
    'Cyrillic_ghe_bar': 0x1000493,
    'Cyrillic_ZHE_descender': 0x1000496,
    'Cyrillic_zhe_descender': 0x1000497,
    'Cyrillic_KA_descender': 0x100049a,
    'Cyrillic_ka_descender': 0x100049b,
    'Cyrillic_KA_vertstroke': 0x100049c,
    'Cyrillic_ka_vertstroke': 0x100049d,
    'Cyrillic_EN_descender': 0x10004a2,
    'Cyrillic_en_descender': 0x10004a3,
    'Cyrillic_U_straight': 0x10004ae,
    'Cyrillic_u_straight': 0x10004af,
    'Cyrillic_U_straight_bar': 0x10004b0,
    'Cyrillic_u_straight_bar': 0x10004b1,
    'Cyrillic_HA_descender': 0x10004b2,
    'Cyrillic_ha_descender': 0x10004b3,
    'Cyrillic_CHE_descender': 0x10004b6,
    'Cyrillic_che_descender': 0x10004b7,
    'Cyrillic_CHE_vertstroke': 0x10004b8,
    'Cyrillic_che_vertstroke': 0x10004b9,
    'Cyrillic_SHHA': 0x10004ba,
    'Cyrillic_shha': 0x10004bb,
    'Cyrillic_SCHWA': 0x10004d8,
    'Cyrillic_schwa': 0x10004d9,
    'Cyrillic_I_macron': 0x10004e2,
    'Cyrillic_i_macron': 0x10004e3,
    'Cyrillic_O_bar': 0x10004e8,
    'Cyrillic_o_bar': 0x10004e9,
    'Cyrillic_U_macron': 0x10004ee,
    'Cyrillic_u_macron': 0x10004ef,
    'Armenian_AYB': 0x1000531,
    'Armenian_BEN': 0x1000532,
    'Armenian_GIM': 0x1000533,
    'Armenian_DA': 0x1000534,
    'Armenian_YECH': 0x1000535,
    'Armenian_ZA': 0x1000536,
    'Armenian_E': 0x1000537,
    'Armenian_AT': 0x1000538,
    'Armenian_TO': 0x1000539,
    'Armenian_ZHE': 0x100053a,
    'Armenian_INI': 0x100053b,
    'Armenian_LYUN': 0x100053c,
    'Armenian_KHE': 0x100053d,
    'Armenian_TSA': 0x100053e,
    'Armenian_KEN': 0x100053f,
    'Armenian_HO': 0x1000540,
    'Armenian_DZA': 0x1000541,
    'Armenian_GHAT': 0x1000542,
    'Armenian_TCHE': 0x1000543,
    'Armenian_MEN': 0x1000544,
    'Armenian_HI': 0x1000545,
    'Armenian_NU': 0x1000546,
    'Armenian_SHA': 0x1000547,
    'Armenian_VO': 0x1000548,
    'Armenian_CHA': 0x1000549,
    'Armenian_PE': 0x100054a,
    'Armenian_JE': 0x100054b,
    'Armenian_RA': 0x100054c,
    'Armenian_SE': 0x100054d,
    'Armenian_VEV': 0x100054e,
    'Armenian_TYUN': 0x100054f,
    'Armenian_RE': 0x1000550,
    'Armenian_TSO': 0x1000551,
    'Armenian_VYUN': 0x1000552,
    'Armenian_PYUR': 0x1000553,
    'Armenian_KE': 0x1000554,
    'Armenian_O': 0x1000555,
    'Armenian_FE': 0x1000556,
    'Armenian_apostrophe': 0x100055a,
    'Armenian_accent': 0x100055b,
    'Armenian_amanak': 0x100055c,
    'Armenian_separation_mark': 0x100055d,
    'Armenian_question': 0x100055e,
    'Armenian_ayb': 0x1000561,
    'Armenian_ben': 0x1000562,
    'Armenian_gim': 0x1000563,
    'Armenian_da': 0x1000564,
    'Armenian_yech': 0x1000565,
    'Armenian_za': 0x1000566,
    'Armenian_e': 0x1000567,
    'Armenian_at': 0x1000568,
    'Armenian_to': 0x1000569,
    'Armenian_zhe': 0x100056a,
    'Armenian_ini': 0x100056b,
    'Armenian_lyun': 0x100056c,
    'Armenian_khe': 0x100056d,
    'Armenian_tsa': 0x100056e,
    'Armenian_ken': 0x100056f,
    'Armenian_ho': 0x1000570,
    'Armenian_dza': 0x1000571,
    'Armenian_ghat': 0x1000572,
    'Armenian_tche': 0x1000573,
    'Armenian_men': 0x1000574,
    'Armenian_hi': 0x1000575,
    'Armenian_nu': 0x1000576,
    'Armenian_sha': 0x1000577,
    'Armenian_vo': 0x1000578,
    'Armenian_cha': 0x1000579,
    'Armenian_pe': 0x100057a,
    'Armenian_je': 0x100057b,
    'Armenian_ra': 0x100057c,
    'Armenian_se': 0x100057d,
    'Armenian_vev': 0x100057e,
    'Armenian_tyun': 0x100057f,
    'Armenian_re': 0x1000580,
    'Armenian_tso': 0x1000581,
    'Armenian_vyun': 0x1000582,
    'Armenian_pyur': 0x1000583,
    'Armenian_ke': 0x1000584,
    'Armenian_o': 0x1000585,
    'Armenian_fe': 0x1000586,
    'Armenian_ligature_ew': 0x1000587,
    'Armenian_full_stop': 0x1000589,
    'Armenian_yentamna': 0x100058a,
    'Arabic_madda_above': 0x1000653,
    'Arabic_hamza_above': 0x1000654,
    'Arabic_hamza_below': 0x1000655,
    'Arabic_0': 0x1000660,
    'Arabic_1': 0x1000661,
    'Arabic_2': 0x1000662,
    'Arabic_3': 0x1000663,
    'Arabic_4': 0x1000664,
    'Arabic_5': 0x1000665,
    'Arabic_6': 0x1000666,
    'Arabic_7': 0x1000667,
    'Arabic_8': 0x1000668,
    'Arabic_9': 0x1000669,
    'Arabic_percent': 0x100066a,
    'Arabic_superscript_alef': 0x1000670,
    'Arabic_tteh': 0x1000679,
    'Arabic_peh': 0x100067e,
    'Arabic_tcheh': 0x1000686,
    'Arabic_ddal': 0x1000688,
    'Arabic_rreh': 0x1000691,
    'Arabic_jeh': 0x1000698,
    'Arabic_veh': 0x10006a4,
    'Arabic_keheh': 0x10006a9,
    'Arabic_gaf': 0x10006af,
    'Arabic_noon_ghunna': 0x10006ba,
    'Arabic_heh_doachashmee': 0x10006be,
    'Arabic_heh_goal': 0x10006c1,
    'Farsi_yeh': 0x10006cc,
    'Arabic_yeh_baree': 0x10006d2,
    'Arabic_fullstop': 0x10006d4,
    'Farsi_0': 0x10006f0,
    'Farsi_1': 0x10006f1,
    'Farsi_2': 0x10006f2,
    'Farsi_3': 0x10006f3,
    'Farsi_4': 0x10006f4,
    'Farsi_5': 0x10006f5,
    'Farsi_6': 0x10006f6,
    'Farsi_7': 0x10006f7,
    'Farsi_8': 0x10006f8,
    'Farsi_9': 0x10006f9,
    'Sinh_ng': 0x1000d82,
    'Sinh_h2': 0x1000d83,
    'Sinh_a': 0x1000d85,
    'Sinh_aa': 0x1000d86,
    'Sinh_ae': 0x1000d87,
    'Sinh_aee': 0x1000d88,
    'Sinh_i': 0x1000d89,
    'Sinh_ii': 0x1000d8a,
    'Sinh_u': 0x1000d8b,
    'Sinh_uu': 0x1000d8c,
    'Sinh_ri': 0x1000d8d,
    'Sinh_rii': 0x1000d8e,
    'Sinh_lu': 0x1000d8f,
    'Sinh_luu': 0x1000d90,
    'Sinh_e': 0x1000d91,
    'Sinh_ee': 0x1000d92,
    'Sinh_ai': 0x1000d93,
    'Sinh_o': 0x1000d94,
    'Sinh_oo': 0x1000d95,
    'Sinh_au': 0x1000d96,
    'Sinh_ka': 0x1000d9a,
    'Sinh_kha': 0x1000d9b,
    'Sinh_ga': 0x1000d9c,
    'Sinh_gha': 0x1000d9d,
    'Sinh_ng2': 0x1000d9e,
    'Sinh_nga': 0x1000d9f,
    'Sinh_ca': 0x1000da0,
    'Sinh_cha': 0x1000da1,
    'Sinh_ja': 0x1000da2,
    'Sinh_jha': 0x1000da3,
    'Sinh_nya': 0x1000da4,
    'Sinh_jnya': 0x1000da5,
    'Sinh_nja': 0x1000da6,
    'Sinh_tta': 0x1000da7,
    'Sinh_ttha': 0x1000da8,
    'Sinh_dda': 0x1000da9,
    'Sinh_ddha': 0x1000daa,
    'Sinh_nna': 0x1000dab,
    'Sinh_ndda': 0x1000dac,
    'Sinh_tha': 0x1000dad,
    'Sinh_thha': 0x1000dae,
    'Sinh_dha': 0x1000daf,
    'Sinh_dhha': 0x1000db0,
    'Sinh_na': 0x1000db1,
    'Sinh_ndha': 0x1000db3,
    'Sinh_pa': 0x1000db4,
    'Sinh_pha': 0x1000db5,
    'Sinh_ba': 0x1000db6,
    'Sinh_bha': 0x1000db7,
    'Sinh_ma': 0x1000db8,
    'Sinh_mba': 0x1000db9,
    'Sinh_ya': 0x1000dba,
    'Sinh_ra': 0x1000dbb,
    'Sinh_la': 0x1000dbd,
    'Sinh_va': 0x1000dc0,
    'Sinh_sha': 0x1000dc1,
    'Sinh_ssha': 0x1000dc2,
    'Sinh_sa': 0x1000dc3,
    'Sinh_ha': 0x1000dc4,
    'Sinh_lla': 0x1000dc5,
    'Sinh_fa': 0x1000dc6,
    'Sinh_al': 0x1000dca,
    'Sinh_aa2': 0x1000dcf,
    'Sinh_ae2': 0x1000dd0,
    'Sinh_aee2': 0x1000dd1,
    'Sinh_i2': 0x1000dd2,
    'Sinh_ii2': 0x1000dd3,
    'Sinh_u2': 0x1000dd4,
    'Sinh_uu2': 0x1000dd6,
    'Sinh_ru2': 0x1000dd8,
    'Sinh_e2': 0x1000dd9,
    'Sinh_ee2': 0x1000dda,
    'Sinh_ai2': 0x1000ddb,
    'Sinh_o2': 0x1000ddc,
    'Sinh_oo2': 0x1000ddd,
    'Sinh_au2': 0x1000dde,
    'Sinh_lu2': 0x1000ddf,
    'Sinh_ruu2': 0x1000df2,
    'Sinh_luu2': 0x1000df3,
    'Sinh_kunddaliya': 0x1000df4,
    'Georgian_an': 0x10010d0,
    'Georgian_ban': 0x10010d1,
    'Georgian_gan': 0x10010d2,
    'Georgian_don': 0x10010d3,
    'Georgian_en': 0x10010d4,
    'Georgian_vin': 0x10010d5,
    'Georgian_zen': 0x10010d6,
    'Georgian_tan': 0x10010d7,
    'Georgian_in': 0x10010d8,
    'Georgian_kan': 0x10010d9,
    'Georgian_las': 0x10010da,
    'Georgian_man': 0x10010db,
    'Georgian_nar': 0x10010dc,
    'Georgian_on': 0x10010dd,
    'Georgian_par': 0x10010de,
    'Georgian_zhar': 0x10010df,
    'Georgian_rae': 0x10010e0,
    'Georgian_san': 0x10010e1,
    'Georgian_tar': 0x10010e2,
    'Georgian_un': 0x10010e3,
    'Georgian_phar': 0x10010e4,
    'Georgian_khar': 0x10010e5,
    'Georgian_ghan': 0x10010e6,
    'Georgian_qar': 0x10010e7,
    'Georgian_shin': 0x10010e8,
    'Georgian_chin': 0x10010e9,
    'Georgian_can': 0x10010ea,
    'Georgian_jil': 0x10010eb,
    'Georgian_cil': 0x10010ec,
    'Georgian_char': 0x10010ed,
    'Georgian_xan': 0x10010ee,
    'Georgian_jhan': 0x10010ef,
    'Georgian_hae': 0x10010f0,
    'Georgian_he': 0x10010f1,
    'Georgian_hie': 0x10010f2,
    'Georgian_we': 0x10010f3,
    'Georgian_har': 0x10010f4,
    'Georgian_hoe': 0x10010f5,
    'Georgian_fi': 0x10010f6,
    'Babovedot': 0x1001e02,
    'babovedot': 0x1001e03,
    'Dabovedot': 0x1001e0a,
    'dabovedot': 0x1001e0b,
    'Fabovedot': 0x1001e1e,
    'fabovedot': 0x1001e1f,
    'Lbelowdot': 0x1001e36,
    'lbelowdot': 0x1001e37,
    'Mabovedot': 0x1001e40,
    'mabovedot': 0x1001e41,
    'Pabovedot': 0x1001e56,
    'pabovedot': 0x1001e57,
    'Sabovedot': 0x1001e60,
    'sabovedot': 0x1001e61,
    'Tabovedot': 0x1001e6a,
    'tabovedot': 0x1001e6b,
    'Wgrave': 0x1001e80,
    'wgrave': 0x1001e81,
    'Wacute': 0x1001e82,
    'wacute': 0x1001e83,
    'Wdiaeresis': 0x1001e84,
    'wdiaeresis': 0x1001e85,
    'Xabovedot': 0x1001e8a,
    'xabovedot': 0x1001e8b,
    'Abelowdot': 0x1001ea0,
    'abelowdot': 0x1001ea1,
    'Ahook': 0x1001ea2,
    'ahook': 0x1001ea3,
    'Acircumflexacute': 0x1001ea4,
    'acircumflexacute': 0x1001ea5,
    'Acircumflexgrave': 0x1001ea6,
    'acircumflexgrave': 0x1001ea7,
    'Acircumflexhook': 0x1001ea8,
    'acircumflexhook': 0x1001ea9,
    'Acircumflextilde': 0x1001eaa,
    'acircumflextilde': 0x1001eab,
    'Acircumflexbelowdot': 0x1001eac,
    'acircumflexbelowdot': 0x1001ead,
    'Abreveacute': 0x1001eae,
    'abreveacute': 0x1001eaf,
    'Abrevegrave': 0x1001eb0,
    'abrevegrave': 0x1001eb1,
    'Abrevehook': 0x1001eb2,
    'abrevehook': 0x1001eb3,
    'Abrevetilde': 0x1001eb4,
    'abrevetilde': 0x1001eb5,
    'Abrevebelowdot': 0x1001eb6,
    'abrevebelowdot': 0x1001eb7,
    'Ebelowdot': 0x1001eb8,
    'ebelowdot': 0x1001eb9,
    'Ehook': 0x1001eba,
    'ehook': 0x1001ebb,
    'Etilde': 0x1001ebc,
    'etilde': 0x1001ebd,
    'Ecircumflexacute': 0x1001ebe,
    'ecircumflexacute': 0x1001ebf,
    'Ecircumflexgrave': 0x1001ec0,
    'ecircumflexgrave': 0x1001ec1,
    'Ecircumflexhook': 0x1001ec2,
    'ecircumflexhook': 0x1001ec3,
    'Ecircumflextilde': 0x1001ec4,
    'ecircumflextilde': 0x1001ec5,
    'Ecircumflexbelowdot': 0x1001ec6,
    'ecircumflexbelowdot': 0x1001ec7,
    'Ihook': 0x1001ec8,
    'ihook': 0x1001ec9,
    'Ibelowdot': 0x1001eca,
    'ibelowdot': 0x1001ecb,
    'Obelowdot': 0x1001ecc,
    'obelowdot': 0x1001ecd,
    'Ohook': 0x1001ece,
    'ohook': 0x1001ecf,
    'Ocircumflexacute': 0x1001ed0,
    'ocircumflexacute': 0x1001ed1,
    'Ocircumflexgrave': 0x1001ed2,
    'ocircumflexgrave': 0x1001ed3,
    'Ocircumflexhook': 0x1001ed4,
    'ocircumflexhook': 0x1001ed5,
    'Ocircumflextilde': 0x1001ed6,
    'ocircumflextilde': 0x1001ed7,
    'Ocircumflexbelowdot': 0x1001ed8,
    'ocircumflexbelowdot': 0x1001ed9,
    'Ohornacute': 0x1001eda,
    'ohornacute': 0x1001edb,
    'Ohorngrave': 0x1001edc,
    'ohorngrave': 0x1001edd,
    'Ohornhook': 0x1001ede,
    'ohornhook': 0x1001edf,
    'Ohorntilde': 0x1001ee0,
    'ohorntilde': 0x1001ee1,
    'Ohornbelowdot': 0x1001ee2,
    'ohornbelowdot': 0x1001ee3,
    'Ubelowdot': 0x1001ee4,
    'ubelowdot': 0x1001ee5,
    'Uhook': 0x1001ee6,
    'uhook': 0x1001ee7,
    'Uhornacute': 0x1001ee8,
    'uhornacute': 0x1001ee9,
    'Uhorngrave': 0x1001eea,
    'uhorngrave': 0x1001eeb,
    'Uhornhook': 0x1001eec,
    'uhornhook': 0x1001eed,
    'Uhorntilde': 0x1001eee,
    'uhorntilde': 0x1001eef,
    'Uhornbelowdot': 0x1001ef0,
    'uhornbelowdot': 0x1001ef1,
    'Ygrave': 0x1001ef2,
    'ygrave': 0x1001ef3,
    'Ybelowdot': 0x1001ef4,
    'ybelowdot': 0x1001ef5,
    'Yhook': 0x1001ef6,
    'yhook': 0x1001ef7,
    'Ytilde': 0x1001ef8,
    'ytilde': 0x1001ef9,
    'zerosuperior': 0x1002070,
    'foursuperior': 0x1002074,
    'fivesuperior': 0x1002075,
    'sixsuperior': 0x1002076,
    'sevensuperior': 0x1002077,
    'eightsuperior': 0x1002078,
    'ninesuperior': 0x1002079,
    'zerosubscript': 0x1002080,
    'onesubscript': 0x1002081,
    'twosubscript': 0x1002082,
    'threesubscript': 0x1002083,
    'foursubscript': 0x1002084,
    'fivesubscript': 0x1002085,
    'sixsubscript': 0x1002086,
    'sevensubscript': 0x1002087,
    'eightsubscript': 0x1002088,
    'ninesubscript': 0x1002089,
    'EcuSign': 0x10020a0,
    'ColonSign': 0x10020a1,
    'CruzeiroSign': 0x10020a2,
    'FFrancSign': 0x10020a3,
    'LiraSign': 0x10020a4,
    'MillSign': 0x10020a5,
    'NairaSign': 0x10020a6,
    'PesetaSign': 0x10020a7,
    'RupeeSign': 0x10020a8,
    'WonSign': 0x10020a9,
    'NewSheqelSign': 0x10020aa,
    'DongSign': 0x10020ab,
    'partdifferential': 0x1002202,
    'emptyset': 0x1002205,
    'elementof': 0x1002208,
    'notelementof': 0x1002209,
    'containsas': 0x100220b,
    'squareroot': 0x100221a,
    'cuberoot': 0x100221b,
    'fourthroot': 0x100221c,
    'dintegral': 0x100222c,
    'tintegral': 0x100222d,
    'because': 0x1002235,
    'notapproxeq': 0x1002247,
    'approxeq': 0x1002248,
    'notidentical': 0x1002262,
    'stricteq': 0x1002263,
    'braille_blank': 0x1002800,
    'braille_dots_1': 0x1002801,
    'braille_dots_2': 0x1002802,
    'braille_dots_12': 0x1002803,
    'braille_dots_3': 0x1002804,
    'braille_dots_13': 0x1002805,
    'braille_dots_23': 0x1002806,
    'braille_dots_123': 0x1002807,
    'braille_dots_4': 0x1002808,
    'braille_dots_14': 0x1002809,
    'braille_dots_24': 0x100280a,
    'braille_dots_124': 0x100280b,
    'braille_dots_34': 0x100280c,
    'braille_dots_134': 0x100280d,
    'braille_dots_234': 0x100280e,
    'braille_dots_1234': 0x100280f,
    'braille_dots_5': 0x1002810,
    'braille_dots_15': 0x1002811,
    'braille_dots_25': 0x1002812,
    'braille_dots_125': 0x1002813,
    'braille_dots_35': 0x1002814,
    'braille_dots_135': 0x1002815,
    'braille_dots_235': 0x1002816,
    'braille_dots_1235': 0x1002817,
    'braille_dots_45': 0x1002818,
    'braille_dots_145': 0x1002819,
    'braille_dots_245': 0x100281a,
    'braille_dots_1245': 0x100281b,
    'braille_dots_345': 0x100281c,
    'braille_dots_1345': 0x100281d,
    'braille_dots_2345': 0x100281e,
    'braille_dots_12345': 0x100281f,
    'braille_dots_6': 0x1002820,
    'braille_dots_16': 0x1002821,
    'braille_dots_26': 0x1002822,
    'braille_dots_126': 0x1002823,
    'braille_dots_36': 0x1002824,
    'braille_dots_136': 0x1002825,
    'braille_dots_236': 0x1002826,
    'braille_dots_1236': 0x1002827,
    'braille_dots_46': 0x1002828,
    'braille_dots_146': 0x1002829,
    'braille_dots_246': 0x100282a,
    'braille_dots_1246': 0x100282b,
    'braille_dots_346': 0x100282c,
    'braille_dots_1346': 0x100282d,
    'braille_dots_2346': 0x100282e,
    'braille_dots_12346': 0x100282f,
    'braille_dots_56': 0x1002830,
    'braille_dots_156': 0x1002831,
    'braille_dots_256': 0x1002832,
    'braille_dots_1256': 0x1002833,
    'braille_dots_356': 0x1002834,
    'braille_dots_1356': 0x1002835,
    'braille_dots_2356': 0x1002836,
    'braille_dots_12356': 0x1002837,
    'braille_dots_456': 0x1002838,
    'braille_dots_1456': 0x1002839,
    'braille_dots_2456': 0x100283a,
    'braille_dots_12456': 0x100283b,
    'braille_dots_3456': 0x100283c,
    'braille_dots_13456': 0x100283d,
    'braille_dots_23456': 0x100283e,
    'braille_dots_123456': 0x100283f,
    'braille_dots_7': 0x1002840,
    'braille_dots_17': 0x1002841,
    'braille_dots_27': 0x1002842,
    'braille_dots_127': 0x1002843,
    'braille_dots_37': 0x1002844,
    'braille_dots_137': 0x1002845,
    'braille_dots_237': 0x1002846,
    'braille_dots_1237': 0x1002847,
    'braille_dots_47': 0x1002848,
    'braille_dots_147': 0x1002849,
    'braille_dots_247': 0x100284a,
    'braille_dots_1247': 0x100284b,
    'braille_dots_347': 0x100284c,
    'braille_dots_1347': 0x100284d,
    'braille_dots_2347': 0x100284e,
    'braille_dots_12347': 0x100284f,
    'braille_dots_57': 0x1002850,
    'braille_dots_157': 0x1002851,
    'braille_dots_257': 0x1002852,
    'braille_dots_1257': 0x1002853,
    'braille_dots_357': 0x1002854,
    'braille_dots_1357': 0x1002855,
    'braille_dots_2357': 0x1002856,
    'braille_dots_12357': 0x1002857,
    'braille_dots_457': 0x1002858,
    'braille_dots_1457': 0x1002859,
    'braille_dots_2457': 0x100285a,
    'braille_dots_12457': 0x100285b,
    'braille_dots_3457': 0x100285c,
    'braille_dots_13457': 0x100285d,
    'braille_dots_23457': 0x100285e,
    'braille_dots_123457': 0x100285f,
    'braille_dots_67': 0x1002860,
    'braille_dots_167': 0x1002861,
    'braille_dots_267': 0x1002862,
    'braille_dots_1267': 0x1002863,
    'braille_dots_367': 0x1002864,
    'braille_dots_1367': 0x1002865,
    'braille_dots_2367': 0x1002866,
    'braille_dots_12367': 0x1002867,
    'braille_dots_467': 0x1002868,
    'braille_dots_1467': 0x1002869,
    'braille_dots_2467': 0x100286a,
    'braille_dots_12467': 0x100286b,
    'braille_dots_3467': 0x100286c,
    'braille_dots_13467': 0x100286d,
    'braille_dots_23467': 0x100286e,
    'braille_dots_123467': 0x100286f,
    'braille_dots_567': 0x1002870,
    'braille_dots_1567': 0x1002871,
    'braille_dots_2567': 0x1002872,
    'braille_dots_12567': 0x1002873,
    'braille_dots_3567': 0x1002874,
    'braille_dots_13567': 0x1002875,
    'braille_dots_23567': 0x1002876,
    'braille_dots_123567': 0x1002877,
    'braille_dots_4567': 0x1002878,
    'braille_dots_14567': 0x1002879,
    'braille_dots_24567': 0x100287a,
    'braille_dots_124567': 0x100287b,
    'braille_dots_34567': 0x100287c,
    'braille_dots_134567': 0x100287d,
    'braille_dots_234567': 0x100287e,
    'braille_dots_1234567': 0x100287f,
    'braille_dots_8': 0x1002880,
    'braille_dots_18': 0x1002881,
    'braille_dots_28': 0x1002882,
    'braille_dots_128': 0x1002883,
    'braille_dots_38': 0x1002884,
    'braille_dots_138': 0x1002885,
    'braille_dots_238': 0x1002886,
    'braille_dots_1238': 0x1002887,
    'braille_dots_48': 0x1002888,
    'braille_dots_148': 0x1002889,
    'braille_dots_248': 0x100288a,
    'braille_dots_1248': 0x100288b,
    'braille_dots_348': 0x100288c,
    'braille_dots_1348': 0x100288d,
    'braille_dots_2348': 0x100288e,
    'braille_dots_12348': 0x100288f,
    'braille_dots_58': 0x1002890,
    'braille_dots_158': 0x1002891,
    'braille_dots_258': 0x1002892,
    'braille_dots_1258': 0x1002893,
    'braille_dots_358': 0x1002894,
    'braille_dots_1358': 0x1002895,
    'braille_dots_2358': 0x1002896,
    'braille_dots_12358': 0x1002897,
    'braille_dots_458': 0x1002898,
    'braille_dots_1458': 0x1002899,
    'braille_dots_2458': 0x100289a,
    'braille_dots_12458': 0x100289b,
    'braille_dots_3458': 0x100289c,
    'braille_dots_13458': 0x100289d,
    'braille_dots_23458': 0x100289e,
    'braille_dots_123458': 0x100289f,
    'braille_dots_68': 0x10028a0,
    'braille_dots_168': 0x10028a1,
    'braille_dots_268': 0x10028a2,
    'braille_dots_1268': 0x10028a3,
    'braille_dots_368': 0x10028a4,
    'braille_dots_1368': 0x10028a5,
    'braille_dots_2368': 0x10028a6,
    'braille_dots_12368': 0x10028a7,
    'braille_dots_468': 0x10028a8,
    'braille_dots_1468': 0x10028a9,
    'braille_dots_2468': 0x10028aa,
    'braille_dots_12468': 0x10028ab,
    'braille_dots_3468': 0x10028ac,
    'braille_dots_13468': 0x10028ad,
    'braille_dots_23468': 0x10028ae,
    'braille_dots_123468': 0x10028af,
    'braille_dots_568': 0x10028b0,
    'braille_dots_1568': 0x10028b1,
    'braille_dots_2568': 0x10028b2,
    'braille_dots_12568': 0x10028b3,
    'braille_dots_3568': 0x10028b4,
    'braille_dots_13568': 0x10028b5,
    'braille_dots_23568': 0x10028b6,
    'braille_dots_123568': 0x10028b7,
    'braille_dots_4568': 0x10028b8,
    'braille_dots_14568': 0x10028b9,
    'braille_dots_24568': 0x10028ba,
    'braille_dots_124568': 0x10028bb,
    'braille_dots_34568': 0x10028bc,
    'braille_dots_134568': 0x10028bd,
    'braille_dots_234568': 0x10028be,
    'braille_dots_1234568': 0x10028bf,
    'braille_dots_78': 0x10028c0,
    'braille_dots_178': 0x10028c1,
    'braille_dots_278': 0x10028c2,
    'braille_dots_1278': 0x10028c3,
    'braille_dots_378': 0x10028c4,
    'braille_dots_1378': 0x10028c5,
    'braille_dots_2378': 0x10028c6,
    'braille_dots_12378': 0x10028c7,
    'braille_dots_478': 0x10028c8,
    'braille_dots_1478': 0x10028c9,
    'braille_dots_2478': 0x10028ca,
    'braille_dots_12478': 0x10028cb,
    'braille_dots_3478': 0x10028cc,
    'braille_dots_13478': 0x10028cd,
    'braille_dots_23478': 0x10028ce,
    'braille_dots_123478': 0x10028cf,
    'braille_dots_578': 0x10028d0,
    'braille_dots_1578': 0x10028d1,
    'braille_dots_2578': 0x10028d2,
    'braille_dots_12578': 0x10028d3,
    'braille_dots_3578': 0x10028d4,
    'braille_dots_13578': 0x10028d5,
    'braille_dots_23578': 0x10028d6,
    'braille_dots_123578': 0x10028d7,
    'braille_dots_4578': 0x10028d8,
    'braille_dots_14578': 0x10028d9,
    'braille_dots_24578': 0x10028da,
    'braille_dots_124578': 0x10028db,
    'braille_dots_34578': 0x10028dc,
    'braille_dots_134578': 0x10028dd,
    'braille_dots_234578': 0x10028de,
    'braille_dots_1234578': 0x10028df,
    'braille_dots_678': 0x10028e0,
    'braille_dots_1678': 0x10028e1,
    'braille_dots_2678': 0x10028e2,
    'braille_dots_12678': 0x10028e3,
    'braille_dots_3678': 0x10028e4,
    'braille_dots_13678': 0x10028e5,
    'braille_dots_23678': 0x10028e6,
    'braille_dots_123678': 0x10028e7,
    'braille_dots_4678': 0x10028e8,
    'braille_dots_14678': 0x10028e9,
    'braille_dots_24678': 0x10028ea,
    'braille_dots_124678': 0x10028eb,
    'braille_dots_34678': 0x10028ec,
    'braille_dots_134678': 0x10028ed,
    'braille_dots_234678': 0x10028ee,
    'braille_dots_1234678': 0x10028ef,
    'braille_dots_5678': 0x10028f0,
    'braille_dots_15678': 0x10028f1,
    'braille_dots_25678': 0x10028f2,
    'braille_dots_125678': 0x10028f3,
    'braille_dots_35678': 0x10028f4,
    'braille_dots_135678': 0x10028f5,
    'braille_dots_235678': 0x10028f6,
    'braille_dots_1235678': 0x10028f7,
    'braille_dots_45678': 0x10028f8,
    'braille_dots_145678': 0x10028f9,
    'braille_dots_245678': 0x10028fa,
    'braille_dots_1245678': 0x10028fb,
    'braille_dots_345678': 0x10028fc,
    'braille_dots_1345678': 0x10028fd,
    'braille_dots_2345678': 0x10028fe,
    'braille_dots_12345678': 0x10028ff,
    'XF86PowerOff': 0x1008ff2a,
    'XF86WakeUp': 0x1008ff2b,
    'XF86Sleep': 0x1008ff2f,

* Wed 15 Oct 2014 11:49:33 AM JST
0x1f1
* Wed 15 Oct 2014 11:50:00 AM JST
code, 
* Wed 15 Oct 2014 11:50:33 AM JST
0xff08
* Wed 15 Oct 2014 11:51:02 AM JST
0xff09
* Wed 15 Oct 2014 11:53:54 AM JST
pass
* Wed 15 Oct 2014 11:54:36 AM JST
self
* Wed 15 Oct 2014 11:55:03 AM JST
self
* Wed 15 Oct 2014 11:55:10 AM JST
self.
* Wed 15 Oct 2014 11:55:59 AM JST
namesym
* Wed 15 Oct 2014 11:58:43 AM JST
NoSymbol
* Wed 15 Oct 2014 11:58:50 AM JST
NoSymbol
* Wed 15 Oct 2014 12:06:23 PM JST
self
* Wed 15 Oct 2014 12:06:46 PM JST
self
* Wed 15 Oct 2014 12:08:24 PM JST
key
* Wed 15 Oct 2014 12:08:28 PM JST
key
* Wed 15 Oct 2014 12:08:36 PM JST
val
* Wed 15 Oct 2014 12:11:56 PM JST
iter
* Wed 15 Oct 2014 12:15:08 PM JST
Keysymdef
* Wed 15 Oct 2014 12:19:38 PM JST
DictUtil()
* Wed 15 Oct 2014 12:19:46 PM JST
DictUtil
* Wed 15 Oct 2014 12:23:57 PM JST
from . 
* Wed 15 Oct 2014 12:24:07 PM JST
from . 
* Wed 15 Oct 2014 12:24:09 PM JST
from . 
* Wed 15 Oct 2014 12:28:42 PM JST
namesym.Namesym(nm)
* Wed 15 Oct 2014 12:28:48 PM JST
keysym.Keysym(code)
* Wed 15 Oct 2014 12:29:01 PM JST
from sendkey2.key import keysymdef
k=keysymdef.Keysymdef()
k.name_to_sym('d')

* Wed 15 Oct 2014 12:29:09 PM JST
from sendkey2.key import keysymdef
k=keysymdef.Keysymdef()
k.name_to_sym('d')

* Wed 15 Oct 2014 12:29:49 PM JST
KEYSYMDEF
* Wed 15 Oct 2014 12:30:25 PM JST
from sendkey2.key import keysymdef
k=keysymdef.Keysymdef()

* Wed 15 Oct 2014 12:30:28 PM JST
k.name_to_sym('d')
* Wed 15 Oct 2014 12:33:11 PM JST
TypeError: an integer is required
* Wed 15 Oct 2014 12:35:45 PM JST
Sequence
* Wed 15 Oct 2014 12:35:51 PM JST

* Wed 15 Oct 2014 12:35:51 PM JST

* Wed 15 Oct 2014 12:35:51 PM JST
from collections import Sequence

* Wed 15 Oct 2014 12:36:09 PM JST
None # should raise NotImplementedError()
* Wed 15 Oct 2014 12:36:36 PM JST
None # should raise NotImplementedError()
* Wed 15 Oct 2014 12:37:01 PM JST
from sendkey2.key import keysymdef
k=keysymdef.Keysymdef()
k.name_to_sym('d')

* Wed 15 Oct 2014 12:39:41 PM JST

* Wed 15 Oct 2014 12:39:41 PM JST

* Wed 15 Oct 2014 12:39:41 PM JST
    # KEYSYMDEF[namesym.Namesym(nm)] = keysym.Keysym(code)

* Wed 15 Oct 2014 12:41:12 PM JST
from pprint import pformat
* Wed 15 Oct 2014 12:44:10 PM JST

* Wed 15 Oct 2014 12:44:10 PM JST

* Wed 15 Oct 2014 12:44:10 PM JST
# del _KEYSYMS, code, nm

* Wed 15 Oct 2014 12:44:56 PM JST
from sendkey2.key import keysymdef
k=keysymdef.Keysymdef()
k.name_to_sym('d')

* Wed 15 Oct 2014 01:00:30 PM JST
DEFAULT
* Wed 15 Oct 2014 01:01:36 PM JST

* Wed 15 Oct 2014 01:01:36 PM JST

* Wed 15 Oct 2014 01:01:36 PM JST
    __slots__ = ()

* Wed 15 Oct 2014 01:04:38 PM JST
object
* Wed 15 Oct 2014 01:04:54 PM JST
from sendkey2.key import keysymdef
* Wed 15 Oct 2014 01:05:32 PM JST
basestring
* Wed 15 Oct 2014 01:07:09 PM JST
str(name)
* Wed 15 Oct 2014 01:07:13 PM JST

* Wed 15 Oct 2014 01:07:13 PM JST

* Wed 15 Oct 2014 01:07:13 PM JST
        nm = 

* Wed 15 Oct 2014 01:07:26 PM JST
isins
* Wed 15 Oct 2014 01:09:37 PM JST
name
* Wed 15 Oct 2014 01:22:26 PM JST
[namesym.Namesym(key)] = keysym.Keysym(val)
* Wed 15 Oct 2014 01:22:56 PM JST
namesym.Namesym(key)
* Wed 15 Oct 2014 01:23:00 PM JST
key
* Wed 15 Oct 2014 01:23:07 PM JST
keysym.Keysym(val)
* Wed 15 Oct 2014 01:23:10 PM JST
val
* Wed 15 Oct 2014 01:23:13 PM JST

* Wed 15 Oct 2014 01:23:14 PM JST

* Wed 15 Oct 2014 01:23:14 PM JST
        self[] = keysym.Keysym(val)        

* Wed 15 Oct 2014 01:23:18 PM JST
            
* Wed 15 Oct 2014 01:23:52 PM JST
from sendkey2.key import keysymdef
* Wed 15 Oct 2014 02:39:42 PM JST
Keysymd
* Wed 15 Oct 2014 02:39:50 PM JST
SymTo
* Wed 15 Oct 2014 02:41:56 PM JST
self
* Wed 15 Oct 2014 02:41:59 PM JST
self
* Wed 15 Oct 2014 02:42:02 PM JST
self
* Wed 15 Oct 2014 02:42:17 PM JST
self
* Wed 15 Oct 2014 02:42:20 PM JST
self
* Wed 15 Oct 2014 02:42:24 PM JST
self
* Wed 15 Oct 2014 02:42:45 PM JST
from sendkey2.key import keysymdef
* Wed 15 Oct 2014 02:49:04 PM JST

* Wed 15 Oct 2014 02:49:04 PM JST

* Wed 15 Oct 2014 02:49:05 PM JST
    @classmethod

* Wed 15 Oct 2014 02:49:06 PM JST

* Wed 15 Oct 2014 02:49:06 PM JST

* Wed 15 Oct 2014 02:49:06 PM JST
    @classmethod

* Wed 15 Oct 2014 02:49:15 PM JST
cls
* Wed 15 Oct 2014 02:49:18 PM JST
cls
* Wed 15 Oct 2014 02:49:21 PM JST
cls
* Wed 15 Oct 2014 02:49:25 PM JST
cls
* Wed 15 Oct 2014 02:49:30 PM JST
cls
* Wed 15 Oct 2014 02:49:33 PM JST
cls
* Wed 15 Oct 2014 02:53:22 PM JST
self
* Wed 15 Oct 2014 02:59:57 PM JST
self
* Wed 15 Oct 2014 03:00:32 PM JST
self
* Wed 15 Oct 2014 03:01:46 PM JST
_missing
* Wed 15 Oct 2014 03:01:46 PM JST
self._missing
* Wed 15 Oct 2014 03:02:01 PM JST
    def __getitem__(self, key):
        return self._map.get(key, self._missing)


* Wed 15 Oct 2014 03:02:54 PM JST
    def __delitem__(self, key):
        del self._map[key]


* Wed 15 Oct 2014 03:03:02 PM JST
    def clear(self, ):
        r"""SUMMARY

        clear()

        @Return:

        @Error:
        """
        self._map.clear()


* Wed 15 Oct 2014 03:04:39 PM JST
    def items(self, ):
        r"""SUMMARY

        items()

        @Return:

        @Error:
        """
        return self._map.items()

    def iteritems(self, ):
        r"""SUMMARY

        iteritems()

        @Return:

        @Error:
        """
        return self._map.iteritems()


* Wed 15 Oct 2014 03:05:26 PM JST
    def setdefault(self, name, sym):
        r"""SUMMARY

        setdefault(name, sym)

        @Arguments:
        - `name`:
        - `sym`:

        @Return:

        @Error:
        """
        return self._map.setdefault(name, sym)

* Wed 15 Oct 2014 03:05:30 PM JST
name
* Wed 15 Oct 2014 03:05:32 PM JST
sym
* Wed 15 Oct 2014 03:05:37 PM JST
name, 
* Wed 15 Oct 2014 03:05:43 PM JST
    def __contains__(self, name):
        return name in self._map

    def __len__(self):
        return len(self._map)

* Wed 15 Oct 2014 03:05:47 PM JST

* Wed 15 Oct 2014 03:05:47 PM JST

* Wed 15 Oct 2014 03:05:47 PM JST
del _KEYSYMS, code, nm

* Wed 15 Oct 2014 03:11:23 PM JST
def
* Wed 15 Oct 2014 03:13:09 PM JST
self
* Wed 15 Oct 2014 03:13:12 PM JST
self
* Wed 15 Oct 2014 03:13:33 PM JST
self
* Wed 15 Oct 2014 03:19:04 PM JST
self
* Wed 15 Oct 2014 03:19:27 PM JST
keys
* Wed 15 Oct 2014 03:20:23 PM JST
self
* Wed 15 Oct 2014 03:20:26 PM JST
self
* Wed 15 Oct 2014 03:20:59 PM JST
self
* Wed 15 Oct 2014 03:21:42 PM JST
_symton
* Wed 15 Oct 2014 03:21:59 PM JST
self
* Wed 15 Oct 2014 03:22:17 PM JST
self
* Wed 15 Oct 2014 03:22:53 PM JST
self
* Wed 15 Oct 2014 03:24:08 PM JST
self
* Wed 15 Oct 2014 03:24:47 PM JST

* Wed 15 Oct 2014 03:24:49 PM JST
_name
* Wed 15 Oct 2014 03:24:59 PM JST
name, 
* Wed 15 Oct 2014 03:26:08 PM JST
from sendkey2.key import keysymdef
* Wed 15 Oct 2014 03:27:31 PM JST
rturn 
* Wed 15 Oct 2014 03:29:33 PM JST
None # should raise NotImplementedError()
* Wed 15 Oct 2014 03:30:33 PM JST
None # should raise NotImplementedError()
* Wed 15 Oct 2014 03:30:49 PM JST
None # should raise NotImplementedError()
* Wed 15 Oct 2014 03:31:09 PM JST
None # should raise NotImplementedError()
* Wed 15 Oct 2014 03:31:17 PM JST
None # should raise NotImplementedError()
* Wed 15 Oct 2014 03:31:24 PM JST
None # should raise NotImplementedError()
* Wed 15 Oct 2014 03:31:32 PM JST
None # should raise NotImplementedError()
* Wed 15 Oct 2014 03:33:54 PM JST
from sendkey2.key import keysymdef
* Wed 15 Oct 2014 03:35:20 PM JST
self
* Wed 15 Oct 2014 03:35:25 PM JST
cls
* Wed 15 Oct 2014 03:36:01 PM JST
None # should raise NotImplementedError()
* Wed 15 Oct 2014 03:36:35 PM JST
None # should raise NotImplementedError()
* Wed 15 Oct 2014 03:37:20 PM JST
from sendkey2.key import keysymdef
* Wed 15 Oct 2014 03:37:25 PM JST
k=keysymdef.Keysymdef()
* Wed 15 Oct 2014 03:39:31 PM JST
self.
* Wed 15 Oct 2014 03:47:50 PM JST
16785520
* Wed 15 Oct 2014 03:48:21 PM JST
0x01000100 <= keysym <= 0x0110ffff
* Wed 15 Oct 2014 03:48:27 PM JST
16785520
* Wed 15 Oct 2014 03:48:42 PM JST
0x01000000
* Wed 15 Oct 2014 03:48:48 PM JST
16785520
* Wed 15 Oct 2014 03:48:54 PM JST
8304
* Wed 15 Oct 2014 03:50:13 PM JST

* Wed 15 Oct 2014 03:50:13 PM JST

* Wed 15 Oct 2014 03:50:13 PM JST
        return None # should raise NotImplementedError()

* Wed 15 Oct 2014 03:50:25 PM JST
0x00ffffff
* Wed 15 Oct 2014 03:50:42 PM JST
(0x0020 <= keysym <= 0x007e or 0x00a0 <= keysym <= 0x00ff)
* Wed 15 Oct 2014 03:50:46 PM JST
keysym
* Wed 15 Oct 2014 03:50:48 PM JST
keysym
* Wed 15 Oct 2014 03:51:35 PM JST
(0x01000100 <= keysym <= 0x0110ffff)
* Wed 15 Oct 2014 03:51:39 PM JST
keysym
* Wed 15 Oct 2014 03:51:52 PM JST
0x01000000
* Wed 15 Oct 2014 03:52:46 PM JST
# special keysyms
* Wed 15 Oct 2014 03:52:52 PM JST
# latin-1 keysyms
* Wed 15 Oct 2014 03:52:56 PM JST
# unicode keysyms
* Wed 15 Oct 2014 03:53:05 PM JST
# legacy
* Wed 15 Oct 2014 03:53:08 PM JST
 keysyms
* Wed 15 Oct 2014 03:53:09 PM JST
 keysyms
* Wed 15 Oct 2014 03:53:12 PM JST
 keysyms
* Wed 15 Oct 2014 03:55:56 PM JST
legacy_keysyms = {
    0x01A1: 0x0104,
    0x01A2: 0x02D8,
    0x01A3: 0x0141,
    0x01A5: 0x013D,
    0x01A6: 0x015A,
    0x01A9: 0x0160,
    0x01AA: 0x015E,
    0x01AB: 0x0164,
    0x01AC: 0x0179,
    0x01AE: 0x017D,
    0x01AF: 0x017B,
    0x01B1: 0x0105,
    0x01B2: 0x02DB,
    0x01B3: 0x0142,
    0x01B5: 0x013E,
    0x01B6: 0x015B,
    0x01B7: 0x02C7,
    0x01B9: 0x0161,
    0x01BA: 0x015F,
    0x01BB: 0x0165,
    0x01BC: 0x017A,
    0x01BD: 0x02DD,
    0x01BE: 0x017E,
    0x01BF: 0x017C,
    0x01C0: 0x0154,
    0x01C3: 0x0102,
    0x01C5: 0x0139,
    0x01C6: 0x0106,
    0x01C8: 0x010C,
    0x01CA: 0x0118,
    0x01CC: 0x011A,
    0x01CF: 0x010E,
    0x01D0: 0x0110,
    0x01D1: 0x0143,
    0x01D2: 0x0147,
    0x01D5: 0x0150,
    0x01D8: 0x0158,
    0x01D9: 0x016E,
    0x01DB: 0x0170,
    0x01DE: 0x0162,
    0x01E0: 0x0155,
    0x01E3: 0x0103,
    0x01E5: 0x013A,
    0x01E6: 0x0107,
    0x01E8: 0x010D,
    0x01EA: 0x0119,
    0x01EC: 0x011B,
    0x01EF: 0x010F,
    0x01F0: 0x0111,
    0x01F1: 0x0144,
    0x01F2: 0x0148,
    0x01F5: 0x0151,
    0x01F8: 0x0159,
    0x01F9: 0x016F,
    0x01FB: 0x0171,
    0x01FE: 0x0163,
    0x01FF: 0x02D9,
    0x02A1: 0x0126,
    0x02A6: 0x0124,
    0x02A9: 0x0130,
    0x02AB: 0x011E,
    0x02AC: 0x0134,
    0x02B1: 0x0127,
    0x02B6: 0x0125,
    0x02B9: 0x0131,
    0x02BB: 0x011F,
    0x02BC: 0x0135,
    0x02C5: 0x010A,
    0x02C6: 0x0108,
    0x02D5: 0x0120,
    0x02D8: 0x011C,
    0x02DD: 0x016C,
    0x02DE: 0x015C,
    0x02E5: 0x010B,
    0x02E6: 0x0109,
    0x02F5: 0x0121,
    0x02F8: 0x011D,
    0x02FD: 0x016D,
    0x02FE: 0x015D,
    0x03A2: 0x0138,
    0x03A3: 0x0156,
    0x03A5: 0x0128,
    0x03A6: 0x013B,
    0x03AA: 0x0112,
    0x03AB: 0x0122,
    0x03AC: 0x0166,
    0x03B3: 0x0157,
    0x03B5: 0x0129,
    0x03B6: 0x013C,
    0x03BA: 0x0113,
    0x03BB: 0x0123,
    0x03BC: 0x0167,
    0x03BD: 0x014A,
    0x03BF: 0x014B,
    0x03C0: 0x0100,
    0x03C7: 0x012E,
    0x03CC: 0x0116,
    0x03CF: 0x012A,
    0x03D1: 0x0145,
    0x03D2: 0x014C,
    0x03D3: 0x0136,
    0x03D9: 0x0172,
    0x03DD: 0x0168,
    0x03DE: 0x016A,
    0x03E0: 0x0101,
    0x03E7: 0x012F,
    0x03EC: 0x0117,
    0x03EF: 0x012B,
    0x03F1: 0x0146,
    0x03F2: 0x014D,
    0x03F3: 0x0137,
    0x03F9: 0x0173,
    0x03FD: 0x0169,
    0x03FE: 0x016B,
    0x047E: 0x203E,
    0x04A1: 0x3002,
    0x04A2: 0x300C,
    0x04A3: 0x300D,
    0x04A4: 0x3001,
    0x04A5: 0x30FB,
    0x04A6: 0x30F2,
    0x04A7: 0x30A1,
    0x04A8: 0x30A3,
    0x04A9: 0x30A5,
    0x04AA: 0x30A7,
    0x04AB: 0x30A9,
    0x04AC: 0x30E3,
    0x04AD: 0x30E5,
    0x04AE: 0x30E7,
    0x04AF: 0x30C3,
    0x04B0: 0x30FC,
    0x04B1: 0x30A2,
    0x04B2: 0x30A4,
    0x04B3: 0x30A6,
    0x04B4: 0x30A8,
    0x04B5: 0x30AA,
    0x04B6: 0x30AB,
    0x04B7: 0x30AD,
    0x04B8: 0x30AF,
    0x04B9: 0x30B1,
    0x04BA: 0x30B3,
    0x04BB: 0x30B5,
    0x04BC: 0x30B7,
    0x04BD: 0x30B9,
    0x04BE: 0x30BB,
    0x04BF: 0x30BD,
    0x04C0: 0x30BF,
    0x04C1: 0x30C1,
    0x04C2: 0x30C4,
    0x04C3: 0x30C6,
    0x04C4: 0x30C8,
    0x04C5: 0x30CA,
    0x04C6: 0x30CB,
    0x04C7: 0x30CC,
    0x04C8: 0x30CD,
    0x04C9: 0x30CE,
    0x04CA: 0x30CF,
    0x04CB: 0x30D2,
    0x04CC: 0x30D5,
    0x04CD: 0x30D8,
    0x04CE: 0x30DB,
    0x04CF: 0x30DE,
    0x04D0: 0x30DF,
    0x04D1: 0x30E0,
    0x04D2: 0x30E1,
    0x04D3: 0x30E2,
    0x04D4: 0x30E4,
    0x04D5: 0x30E6,
    0x04D6: 0x30E8,
    0x04D7: 0x30E9,
    0x04D8: 0x30EA,
    0x04D9: 0x30EB,
    0x04DA: 0x30EC,
    0x04DB: 0x30ED,
    0x04DC: 0x30EF,
    0x04DD: 0x30F3,
    0x04DE: 0x309B,
    0x04DF: 0x309C,
    0x05AC: 0x060C,
    0x05BB: 0x061B,
    0x05BF: 0x061F,
    0x05C1: 0x0621,
    0x05C2: 0x0622,
    0x05C3: 0x0623,
    0x05C4: 0x0624,
    0x05C5: 0x0625,
    0x05C6: 0x0626,
    0x05C7: 0x0627,
    0x05C8: 0x0628,
    0x05C9: 0x0629,
    0x05CA: 0x062A,
    0x05CB: 0x062B,
    0x05CC: 0x062C,
    0x05CD: 0x062D,
    0x05CE: 0x062E,
    0x05CF: 0x062F,
    0x05D0: 0x0630,
    0x05D1: 0x0631,
    0x05D2: 0x0632,
    0x05D3: 0x0633,
    0x05D4: 0x0634,
    0x05D5: 0x0635,
    0x05D6: 0x0636,
    0x05D7: 0x0637,
    0x05D8: 0x0638,
    0x05D9: 0x0639,
    0x05DA: 0x063A,
    0x05E0: 0x0640,
    0x05E1: 0x0641,
    0x05E2: 0x0642,
    0x05E3: 0x0643,
    0x05E4: 0x0644,
    0x05E5: 0x0645,
    0x05E6: 0x0646,
    0x05E7: 0x0647,
    0x05E8: 0x0648,
    0x05E9: 0x0649,
    0x05EA: 0x064A,
    0x05EB: 0x064B,
    0x05EC: 0x064C,
    0x05ED: 0x064D,
    0x05EE: 0x064E,
    0x05EF: 0x064F,
    0x05F0: 0x0650,
    0x05F1: 0x0651,
    0x05F2: 0x0652,
    0x06A1: 0x0452,
    0x06A2: 0x0453,
    0x06A3: 0x0451,
    0x06A4: 0x0454,
    0x06A5: 0x0455,
    0x06A6: 0x0456,
    0x06A7: 0x0457,
    0x06A8: 0x0458,
    0x06A9: 0x0459,
    0x06AA: 0x045A,
    0x06AB: 0x045B,
    0x06AC: 0x045C,
    0x06AD: 0x0491,
    0x06AE: 0x045E,
    0x06AF: 0x045F,
    0x06B0: 0x2116,
    0x06B1: 0x0402,
    0x06B2: 0x0403,
    0x06B3: 0x0401,
    0x06B4: 0x0404,
    0x06B5: 0x0405,
    0x06B6: 0x0406,
    0x06B7: 0x0407,
    0x06B8: 0x0408,
    0x06B9: 0x0409,
    0x06BA: 0x040A,
    0x06BB: 0x040B,
    0x06BC: 0x040C,
    0x06BD: 0x0490,
    0x06BE: 0x040E,
    0x06BF: 0x040F,
    0x06C0: 0x044E,
    0x06C1: 0x0430,
    0x06C2: 0x0431,
    0x06C3: 0x0446,
    0x06C4: 0x0434,
    0x06C5: 0x0435,
    0x06C6: 0x0444,
    0x06C7: 0x0433,
    0x06C8: 0x0445,
    0x06C9: 0x0438,
    0x06CA: 0x0439,
    0x06CB: 0x043A,
    0x06CC: 0x043B,
    0x06CD: 0x043C,
    0x06CE: 0x043D,
    0x06CF: 0x043E,
    0x06D0: 0x043F,
    0x06D1: 0x044F,
    0x06D2: 0x0440,
    0x06D3: 0x0441,
    0x06D4: 0x0442,
    0x06D5: 0x0443,
    0x06D6: 0x0436,
    0x06D7: 0x0432,
    0x06D8: 0x044C,
    0x06D9: 0x044B,
    0x06DA: 0x0437,
    0x06DB: 0x0448,
    0x06DC: 0x044D,
    0x06DD: 0x0449,
    0x06DE: 0x0447,
    0x06DF: 0x044A,
    0x06E0: 0x042E,
    0x06E1: 0x0410,
    0x06E2: 0x0411,
    0x06E3: 0x0426,
    0x06E4: 0x0414,
    0x06E5: 0x0415,
    0x06E6: 0x0424,
    0x06E7: 0x0413,
    0x06E8: 0x0425,
    0x06E9: 0x0418,
    0x06EA: 0x0419,
    0x06EB: 0x041A,
    0x06EC: 0x041B,
    0x06ED: 0x041C,
    0x06EE: 0x041D,
    0x06EF: 0x041E,
    0x06F0: 0x041F,
    0x06F1: 0x042F,
    0x06F2: 0x0420,
    0x06F3: 0x0421,
    0x06F4: 0x0422,
    0x06F5: 0x0423,
    0x06F6: 0x0416,
    0x06F7: 0x0412,
    0x06F8: 0x042C,
    0x06F9: 0x042B,
    0x06FA: 0x0417,
    0x06FB: 0x0428,
    0x06FC: 0x042D,
    0x06FD: 0x0429,
    0x06FE: 0x0427,
    0x06FF: 0x042A,
    0x07A1: 0x0386,
    0x07A2: 0x0388,
    0x07A3: 0x0389,
    0x07A4: 0x038A,
    0x07A5: 0x03AA,
    0x07A7: 0x038C,
    0x07A8: 0x038E,
    0x07A9: 0x03AB,
    0x07AB: 0x038F,
    0x07AE: 0x0385,
    0x07AF: 0x2015,
    0x07B1: 0x03AC,
    0x07B2: 0x03AD,
    0x07B3: 0x03AE,
    0x07B4: 0x03AF,
    0x07B5: 0x03CA,
    0x07B6: 0x0390,
    0x07B7: 0x03CC,
    0x07B8: 0x03CD,
    0x07B9: 0x03CB,
    0x07BA: 0x03B0,
    0x07BB: 0x03CE,
    0x07C1: 0x0391,
    0x07C2: 0x0392,
    0x07C3: 0x0393,
    0x07C4: 0x0394,
    0x07C5: 0x0395,
    0x07C6: 0x0396,
    0x07C7: 0x0397,
    0x07C8: 0x0398,
    0x07C9: 0x0399,
    0x07CA: 0x039A,
    0x07CB: 0x039B,
    0x07CC: 0x039C,
    0x07CD: 0x039D,
    0x07CE: 0x039E,
    0x07CF: 0x039F,
    0x07D0: 0x03A0,
    0x07D1: 0x03A1,
    0x07D2: 0x03A3,
    0x07D4: 0x03A4,
    0x07D5: 0x03A5,
    0x07D6: 0x03A6,
    0x07D7: 0x03A7,
    0x07D8: 0x03A8,
    0x07D9: 0x03A9,
    0x07E1: 0x03B1,
    0x07E2: 0x03B2,
    0x07E3: 0x03B3,
    0x07E4: 0x03B4,
    0x07E5: 0x03B5,
    0x07E6: 0x03B6,
    0x07E7: 0x03B7,
    0x07E8: 0x03B8,
    0x07E9: 0x03B9,
    0x07EA: 0x03BA,
    0x07EB: 0x03BB,
    0x07EC: 0x03BC,
    0x07ED: 0x03BD,
    0x07EE: 0x03BE,
    0x07EF: 0x03BF,
    0x07F0: 0x03C0,
    0x07F1: 0x03C1,
    0x07F2: 0x03C3,
    0x07F3: 0x03C2,
    0x07F4: 0x03C4,
    0x07F5: 0x03C5,
    0x07F6: 0x03C6,
    0x07F7: 0x03C7,
    0x07F8: 0x03C8,
    0x07F9: 0x03C9,
    0x08A1: 0x23B7,
    0x08A4: 0x2320,
    0x08A5: 0x2321,
    0x08A7: 0x23A1,
    0x08A8: 0x23A3,
    0x08A9: 0x23A4,
    0x08AA: 0x23A6,
    0x08AB: 0x239B,
    0x08AC: 0x239D,
    0x08AD: 0x239E,
    0x08AE: 0x23A0,
    0x08AF: 0x23A8,
    0x08B0: 0x23AC,
    0x08BC: 0x2264,
    0x08BD: 0x2260,
    0x08BE: 0x2265,
    0x08BF: 0x222B,
    0x08C0: 0x2234,
    0x08C1: 0x221D,
    0x08C2: 0x221E,
    0x08C5: 0x2207,
    0x08C8: 0x223C,
    0x08C9: 0x2243,
    0x08CD: 0x21D4,
    0x08CE: 0x21D2,
    0x08CF: 0x2261,
    0x08D6: 0x221A,
    0x08DA: 0x2282,
    0x08DB: 0x2283,
    0x08DC: 0x2229,
    0x08DD: 0x222A,
    0x08DE: 0x2227,
    0x08DF: 0x2228,
    0x08EF: 0x2202,
    0x08F6: 0x0192,
    0x08FB: 0x2190,
    0x08FC: 0x2191,
    0x08FD: 0x2192,
    0x08FE: 0x2193,
    0x09E0: 0x25C6,
    0x09E1: 0x2592,
    0x09E2: 0x2409,
    0x09E3: 0x240C,
    0x09E4: 0x240D,
    0x09E5: 0x240A,
    0x09E8: 0x2424,
    0x09E9: 0x240B,
    0x09EA: 0x2518,
    0x09EB: 0x2510,
    0x09EC: 0x250C,
    0x09ED: 0x2514,
    0x09EE: 0x253C,
    0x09EF: 0x23BA,
    0x09F0: 0x23BB,
    0x09F1: 0x2500,
    0x09F2: 0x23BC,
    0x09F3: 0x23BD,
    0x09F4: 0x251C,
    0x09F5: 0x2524,
    0x09F6: 0x2534,
    0x09F7: 0x252C,
    0x09F8: 0x2502,
    0x0AA1: 0x2003,
    0x0AA2: 0x2002,
    0x0AA3: 0x2004,
    0x0AA4: 0x2005,
    0x0AA5: 0x2007,
    0x0AA6: 0x2008,
    0x0AA7: 0x2009,
    0x0AA8: 0x200A,
    0x0AA9: 0x2014,
    0x0AAA: 0x2013,
    0x0AAE: 0x2026,
    0x0AAF: 0x2025,
    0x0AB0: 0x2153,
    0x0AB1: 0x2154,
    0x0AB2: 0x2155,
    0x0AB3: 0x2156,
    0x0AB4: 0x2157,
    0x0AB5: 0x2158,
    0x0AB6: 0x2159,
    0x0AB7: 0x215A,
    0x0AB8: 0x2105,
    0x0ABB: 0x2012,
    0x0AC3: 0x215B,
    0x0AC4: 0x215C,
    0x0AC5: 0x215D,
    0x0AC6: 0x215E,
    0x0AC9: 0x2122,
    0x0AD0: 0x2018,
    0x0AD1: 0x2019,
    0x0AD2: 0x201C,
    0x0AD3: 0x201D,
    0x0AD4: 0x211E,
    0x0AD6: 0x2032,
    0x0AD7: 0x2033,
    0x0AD9: 0x271D,
    0x0AEC: 0x2663,
    0x0AED: 0x2666,
    0x0AEE: 0x2665,
    0x0AF0: 0x2720,
    0x0AF1: 0x2020,
    0x0AF2: 0x2021,
    0x0AF3: 0x2713,
    0x0AF4: 0x2717,
    0x0AF5: 0x266F,
    0x0AF6: 0x266D,
    0x0AF7: 0x2642,
    0x0AF8: 0x2640,
    0x0AF9: 0x260E,
    0x0AFA: 0x2315,
    0x0AFB: 0x2117,
    0x0AFC: 0x2038,
    0x0AFD: 0x201A,
    0x0AFE: 0x201E,
    0x0BC2: 0x22A5,
    0x0BC4: 0x230A,
    0x0BCA: 0x2218,
    0x0BCC: 0x2395,
    0x0BCE: 0x22A4,
    0x0BCF: 0x25CB,
    0x0BD3: 0x2308,
    0x0BDC: 0x22A2,
    0x0BFC: 0x22A3,
    0x0CDF: 0x2017,
    0x0CE0: 0x05D0,
    0x0CE1: 0x05D1,
    0x0CE2: 0x05D2,
    0x0CE3: 0x05D3,
    0x0CE4: 0x05D4,
    0x0CE5: 0x05D5,
    0x0CE6: 0x05D6,
    0x0CE7: 0x05D7,
    0x0CE8: 0x05D8,
    0x0CE9: 0x05D9,
    0x0CEA: 0x05DA,
    0x0CEB: 0x05DB,
    0x0CEC: 0x05DC,
    0x0CED: 0x05DD,
    0x0CEE: 0x05DE,
    0x0CEF: 0x05DF,
    0x0CF0: 0x05E0,
    0x0CF1: 0x05E1,
    0x0CF2: 0x05E2,
    0x0CF3: 0x05E3,
    0x0CF4: 0x05E4,
    0x0CF5: 0x05E5,
    0x0CF6: 0x05E6,
    0x0CF7: 0x05E7,
    0x0CF8: 0x05E8,
    0x0CF9: 0x05E9,
    0x0CFA: 0x05EA,
    0x0DA1: 0x0E01,
    0x0DA2: 0x0E02,
    0x0DA3: 0x0E03,
    0x0DA4: 0x0E04,
    0x0DA5: 0x0E05,
    0x0DA6: 0x0E06,
    0x0DA7: 0x0E07,
    0x0DA8: 0x0E08,
    0x0DA9: 0x0E09,
    0x0DAA: 0x0E0A,
    0x0DAB: 0x0E0B,
    0x0DAC: 0x0E0C,
    0x0DAD: 0x0E0D,
    0x0DAE: 0x0E0E,
    0x0DAF: 0x0E0F,
    0x0DB0: 0x0E10,
    0x0DB1: 0x0E11,
    0x0DB2: 0x0E12,
    0x0DB3: 0x0E13,
    0x0DB4: 0x0E14,
    0x0DB5: 0x0E15,
    0x0DB6: 0x0E16,
    0x0DB7: 0x0E17,
    0x0DB8: 0x0E18,
    0x0DB9: 0x0E19,
    0x0DBA: 0x0E1A,
    0x0DBB: 0x0E1B,
    0x0DBC: 0x0E1C,
    0x0DBD: 0x0E1D,
    0x0DBE: 0x0E1E,
    0x0DBF: 0x0E1F,
    0x0DC0: 0x0E20,
    0x0DC1: 0x0E21,
    0x0DC2: 0x0E22,
    0x0DC3: 0x0E23,
    0x0DC4: 0x0E24,
    0x0DC5: 0x0E25,
    0x0DC6: 0x0E26,
    0x0DC7: 0x0E27,
    0x0DC8: 0x0E28,
    0x0DC9: 0x0E29,
    0x0DCA: 0x0E2A,
    0x0DCB: 0x0E2B,
    0x0DCC: 0x0E2C,
    0x0DCD: 0x0E2D,
    0x0DCE: 0x0E2E,
    0x0DCF: 0x0E2F,
    0x0DD0: 0x0E30,
    0x0DD1: 0x0E31,
    0x0DD2: 0x0E32,
    0x0DD3: 0x0E33,
    0x0DD4: 0x0E34,
    0x0DD5: 0x0E35,
    0x0DD6: 0x0E36,
    0x0DD7: 0x0E37,
    0x0DD8: 0x0E38,
    0x0DD9: 0x0E39,
    0x0DDA: 0x0E3A,
    0x0DDF: 0x0E3F,
    0x0DE0: 0x0E40,
    0x0DE1: 0x0E41,
    0x0DE2: 0x0E42,
    0x0DE3: 0x0E43,
    0x0DE4: 0x0E44,
    0x0DE5: 0x0E45,
    0x0DE6: 0x0E46,
    0x0DE7: 0x0E47,
    0x0DE8: 0x0E48,
    0x0DE9: 0x0E49,
    0x0DEA: 0x0E4A,
    0x0DEB: 0x0E4B,
    0x0DEC: 0x0E4C,
    0x0DED: 0x0E4D,
    0x0DF0: 0x0E50,
    0x0DF1: 0x0E51,
    0x0DF2: 0x0E52,
    0x0DF3: 0x0E53,
    0x0DF4: 0x0E54,
    0x0DF5: 0x0E55,
    0x0DF6: 0x0E56,
    0x0DF7: 0x0E57,
    0x0DF8: 0x0E58,
    0x0DF9: 0x0E59,
    0x13BC: 0x0152,
    0x13BD: 0x0153,
    0x13BE: 0x0178,
    0x20AC: 0x20AC,
}

* Wed 15 Oct 2014 03:56:44 PM JST
in {}
* Wed 15 Oct 2014 03:57:07 PM JST
self
* Wed 15 Oct 2014 03:58:42 PM JST
ConvertError
* Wed 15 Oct 2014 03:59:30 PM JST
pas
* Wed 15 Oct 2014 04:00:13 PM JST
    def __repr__(self):
        return '{}'.format(self._obj)

* Wed 15 Oct 2014 04:02:30 PM JST
for sym in 
* Wed 15 Oct 2014 04:03:54 PM JST
self._obj
* Wed 15 Oct 2014 04:04:26 PM JST
self - 0x01000000
* Wed 15 Oct 2014 04:05:54 PM JST

* Wed 15 Oct 2014 04:05:54 PM JST

* Wed 15 Oct 2014 04:05:54 PM JST
        # raise ConvertError(self)

* Wed 15 Oct 2014 04:06:50 PM JST
0x01000000
* Wed 15 Oct 2014 04:06:57 PM JST

* Wed 15 Oct 2014 04:06:57 PM JST

* Wed 15 Oct 2014 04:06:57 PM JST
        try:

* Wed 15 Oct 2014 04:08:35 PM JST
self.
* Wed 15 Oct 2014 04:10:14 PM JST
sen
* Wed 15 Oct 2014 04:10:14 PM JST
import sen
* Wed 15 Oct 2014 04:11:01 PM JST
for sym in keysymdef.Keysymdef.listsyms():
   ....:     try:
   ....:         print(sym.to_char())
   ....:     except ConvertError:
   ....:         pass
* Wed 15 Oct 2014 04:11:07 PM JST
....:
* Wed 15 Oct 2014 04:11:09 PM JST
....:
* Wed 15 Oct 2014 04:11:10 PM JST
....:
* Wed 15 Oct 2014 04:11:10 PM JST
....:
* Wed 15 Oct 2014 04:11:17 PM JST
for sym in keysymdef.Keysymdef.listsyms():
     try:
         print(sym.to_char())
     except ConvertError:
         pass

* Wed 15 Oct 2014 04:11:30 PM JST
for sym in keysymdef.Keysymdef.listsyms():
     try:
         print(sym.to_char())
     except ConvertError as _e:
         print(_e)

* Wed 15 Oct 2014 04:13:28 PM JST
isdigit()
* Wed 15 Oct 2014 04:14:53 PM JST
0x4a7
* Wed 15 Oct 2014 04:15:42 PM JST
0x4a8
* Wed 15 Oct 2014 04:16:30 PM JST
0x4a7
* Wed 15 Oct 2014 04:16:41 PM JST
0x4b1
* Wed 15 Oct 2014 04:18:17 PM JST
0x01000000
* Wed 15 Oct 2014 04:21:45 PM JST
self in (0, 0x00ffffff)
* Wed 15 Oct 2014 04:21:59 PM JST
(0x0020 <= self <= 0x007e or 0x00a0 <= self <= 0x00ff)
* Wed 15 Oct 2014 04:22:21 PM JST
(0x01000100 <= self <= 0x0110ffff)
* Wed 15 Oct 2014 04:22:39 PM JST
self in keysymdef.LEGACY
* Wed 15 Oct 2014 04:23:22 PM JST

* Wed 15 Oct 2014 04:23:22 PM JST

* Wed 15 Oct 2014 04:23:23 PM JST
            print('DEBUG-1-keysym.py')

* Wed 15 Oct 2014 04:23:23 PM JST

* Wed 15 Oct 2014 04:23:23 PM JST

* Wed 15 Oct 2014 04:23:23 PM JST
            # TODO: (Atami) [2014/10/15]

* Wed 15 Oct 2014 04:23:25 PM JST

* Wed 15 Oct 2014 04:23:25 PM JST

* Wed 15 Oct 2014 04:23:26 PM JST
            print('DEBUG-2-keysym.py')

* Wed 15 Oct 2014 04:23:26 PM JST

* Wed 15 Oct 2014 04:23:26 PM JST

* Wed 15 Oct 2014 04:23:26 PM JST
            print('DEBUG-3-keysym.py')

* Wed 15 Oct 2014 04:23:46 PM JST

* Wed 15 Oct 2014 04:23:46 PM JST

* Wed 15 Oct 2014 04:23:46 PM JST
        # legacy

* Wed 15 Oct 2014 04:23:47 PM JST

* Wed 15 Oct 2014 04:23:47 PM JST

* Wed 15 Oct 2014 04:23:47 PM JST
        # unicode

* Wed 15 Oct 2014 04:23:49 PM JST

* Wed 15 Oct 2014 04:23:49 PM JST

* Wed 15 Oct 2014 04:23:49 PM JST
        # latin-1

* Wed 15 Oct 2014 04:23:50 PM JST

* Wed 15 Oct 2014 04:23:50 PM JST

* Wed 15 Oct 2014 04:23:50 PM JST
        # special

* Wed 15 Oct 2014 04:25:00 PM JST
print 
* Wed 15 Oct 2014 04:25:54 PM JST
ァ
* Wed 15 Oct 2014 04:28:01 PM JST
'ァ'
* Wed 15 Oct 2014 04:28:14 PM JST
unicode(
* Wed 15 Oct 2014 04:36:13 PM JST

* Wed 15 Oct 2014 04:36:13 PM JST

* Wed 15 Oct 2014 04:36:13 PM JST
unicode

* Wed 15 Oct 2014 04:36:43 PM JST
NoSymbol
* Wed 15 Oct 2014 04:37:58 PM JST
None # should raise NotImplementedError()
* Wed 15 Oct 2014 04:39:35 PM JST
namesym.Namesym('Home').to_sym()
* Wed 15 Oct 2014 04:40:30 PM JST
None # should raise NotImplementedError()
* Wed 15 Oct 2014 04:40:33 PM JST
None # should raise NotImplementedError()
* Wed 15 Oct 2014 04:41:34 PM JST
namesym.Namesym('F1').to_sym()
* Wed 15 Oct 2014 04:42:01 PM JST
sym
* Wed 15 Oct 2014 04:44:30 PM JST
0xffbe
* Wed 15 Oct 2014 04:45:38 PM JST
#define XK_F1                            0xffbe
#define XK_F2                            0xffbf
#define XK_F3                            0xffc0
#define XK_F4                            0xffc1
#define XK_F5                            0xffc2
#define XK_F6                            0xffc3
#define XK_F7                            0xffc4
#define XK_F8                            0xffc5
#define XK_F9                            0xffc6
#define XK_F10                           0xffc7
#define XK_F11                           0xffc8
#define XK_L1                            0xffc8
#define XK_F12                           0xffc9
#define XK_L2                            0xffc9
#define XK_F13                           0xffca
#define XK_L3                            0xffca
#define XK_F14                           0xffcb
#define XK_L4                            0xffcb
#define XK_F15                           0xffcc
#define XK_L5                            0xffcc
#define XK_F16                           0xffcd
#define XK_L6                            0xffcd
#define XK_F17                           0xffce
#define XK_L7                            0xffce
#define XK_F18                           0xffcf
#define XK_L8                            0xffcf
#define XK_F19                           0xffd0
#define XK_L9                            0xffd0
#define XK_F20                           0xffd1
#define XK_L10                           0xffd1
#define XK_F21                           0xffd2
#define XK_R1                            0xffd2
#define XK_F22                           0xffd3
#define XK_R2                            0xffd3
#define XK_F23                           0xffd4
#define XK_R3                            0xffd4
#define XK_F24                           0xffd5
#define XK_R4                            0xffd5
#define XK_F25                           0xffd6
#define XK_R5                            0xffd6
#define XK_F26                           0xffd7
#define XK_R6                            0xffd7
#define XK_F27                           0xffd8
#define XK_R7                            0xffd8
#define XK_F28                           0xffd9
#define XK_R8                            0xffd9
#define XK_F29                           0xffda
#define XK_R9                            0xffda
#define XK_F30                           0xffdb
#define XK_R10                           0xffdb
#define XK_F31                           0xffdc
#define XK_R11                           0xffdc
#define XK_F32                           0xffdd
#define XK_R12                           0xffdd
#define XK_F33                           0xffde
#define XK_R13                           0xffde
#define XK_F34                           0xffdf
#define XK_R14                           0xffdf
#define XK_F35                           0xffe0
#define XK_R15                           0xffe0

* Wed 15 Oct 2014 04:46:09 PM JST
#define 
* Wed 15 Oct 2014 04:46:09 PM JST
#define 
* Wed 15 Oct 2014 04:46:09 PM JST
#define 
* Wed 15 Oct 2014 04:46:09 PM JST
#define 
* Wed 15 Oct 2014 04:46:09 PM JST
#define 
* Wed 15 Oct 2014 04:46:09 PM JST
#define 
* Wed 15 Oct 2014 04:46:09 PM JST
#define 
* Wed 15 Oct 2014 04:46:09 PM JST
#define 
* Wed 15 Oct 2014 04:46:09 PM JST
#define 
* Wed 15 Oct 2014 04:46:09 PM JST
#define 
* Wed 15 Oct 2014 04:46:10 PM JST
#define 
* Wed 15 Oct 2014 04:46:10 PM JST
#define 
* Wed 15 Oct 2014 04:46:10 PM JST
#define 
* Wed 15 Oct 2014 04:46:10 PM JST
#define 
* Wed 15 Oct 2014 04:46:10 PM JST
#define 
* Wed 15 Oct 2014 04:46:10 PM JST
#define 
* Wed 15 Oct 2014 04:46:10 PM JST
#define 
* Wed 15 Oct 2014 04:46:10 PM JST
#define 
* Wed 15 Oct 2014 04:46:10 PM JST
#define 
* Wed 15 Oct 2014 04:46:10 PM JST
#define 
* Wed 15 Oct 2014 04:46:10 PM JST
#define 
* Wed 15 Oct 2014 04:46:11 PM JST
#define 
* Wed 15 Oct 2014 04:46:11 PM JST
#define 
* Wed 15 Oct 2014 04:46:11 PM JST
#define 
* Wed 15 Oct 2014 04:46:11 PM JST
#define 
* Wed 15 Oct 2014 04:46:11 PM JST
#define 
* Wed 15 Oct 2014 04:46:11 PM JST
#define 
* Wed 15 Oct 2014 04:46:11 PM JST
#define 
* Wed 15 Oct 2014 04:46:11 PM JST
#define 
* Wed 15 Oct 2014 04:46:11 PM JST
#define 
* Wed 15 Oct 2014 04:46:11 PM JST
#define 
* Wed 15 Oct 2014 04:46:11 PM JST
#define 
* Wed 15 Oct 2014 04:46:11 PM JST
#define 
* Wed 15 Oct 2014 04:46:11 PM JST
#define 
* Wed 15 Oct 2014 04:46:11 PM JST
#define 
* Wed 15 Oct 2014 04:46:12 PM JST
#define 
* Wed 15 Oct 2014 04:46:12 PM JST
#define 
* Wed 15 Oct 2014 04:46:12 PM JST
#define 
* Wed 15 Oct 2014 04:46:12 PM JST
#define 
* Wed 15 Oct 2014 04:46:12 PM JST
#define 
* Wed 15 Oct 2014 04:46:12 PM JST
#define 
* Wed 15 Oct 2014 04:46:12 PM JST
#define 
* Wed 15 Oct 2014 04:46:12 PM JST
#define 
* Wed 15 Oct 2014 04:46:12 PM JST
#define 
* Wed 15 Oct 2014 04:46:12 PM JST
#define 
* Wed 15 Oct 2014 04:46:12 PM JST
#define 
* Wed 15 Oct 2014 04:46:12 PM JST
#define 
* Wed 15 Oct 2014 04:46:12 PM JST
#define 
* Wed 15 Oct 2014 04:46:12 PM JST
#define 
* Wed 15 Oct 2014 04:46:12 PM JST
#define 
* Wed 15 Oct 2014 04:46:13 PM JST
#define 
* Wed 15 Oct 2014 04:46:13 PM JST
#define 
* Wed 15 Oct 2014 04:46:13 PM JST
#define 
* Wed 15 Oct 2014 04:46:13 PM JST
#define 
* Wed 15 Oct 2014 04:46:13 PM JST
#define 
* Wed 15 Oct 2014 04:46:13 PM JST
#define 
* Wed 15 Oct 2014 04:46:13 PM JST
#define 
* Wed 15 Oct 2014 04:46:13 PM JST
#define 
* Wed 15 Oct 2014 04:46:13 PM JST
#define 
* Wed 15 Oct 2014 04:46:13 PM JST
#define 
* Wed 15 Oct 2014 04:46:20 PM JST
XK_
* Wed 15 Oct 2014 04:46:20 PM JST
XK_
* Wed 15 Oct 2014 04:46:20 PM JST
XK_
* Wed 15 Oct 2014 04:46:20 PM JST
XK_
* Wed 15 Oct 2014 04:46:20 PM JST
XK_
* Wed 15 Oct 2014 04:46:20 PM JST
XK_
* Wed 15 Oct 2014 04:46:20 PM JST
XK_
* Wed 15 Oct 2014 04:46:20 PM JST
XK_
* Wed 15 Oct 2014 04:46:20 PM JST
XK_
* Wed 15 Oct 2014 04:46:20 PM JST
XK_
* Wed 15 Oct 2014 04:46:21 PM JST
XK_
* Wed 15 Oct 2014 04:46:21 PM JST
XK_
* Wed 15 Oct 2014 04:46:21 PM JST
XK_
* Wed 15 Oct 2014 04:46:21 PM JST
XK_
* Wed 15 Oct 2014 04:46:21 PM JST
XK_
* Wed 15 Oct 2014 04:46:21 PM JST
XK_
* Wed 15 Oct 2014 04:46:21 PM JST
XK_
* Wed 15 Oct 2014 04:46:21 PM JST
XK_
* Wed 15 Oct 2014 04:46:21 PM JST
XK_
* Wed 15 Oct 2014 04:46:21 PM JST
XK_
* Wed 15 Oct 2014 04:46:21 PM JST
XK_
* Wed 15 Oct 2014 04:46:21 PM JST
XK_
* Wed 15 Oct 2014 04:46:21 PM JST
XK_
* Wed 15 Oct 2014 04:46:21 PM JST
XK_
* Wed 15 Oct 2014 04:46:22 PM JST
XK_
* Wed 15 Oct 2014 04:46:22 PM JST
XK_
* Wed 15 Oct 2014 04:46:22 PM JST
XK_
* Wed 15 Oct 2014 04:46:22 PM JST
XK_
* Wed 15 Oct 2014 04:46:22 PM JST
XK_
* Wed 15 Oct 2014 04:46:22 PM JST
XK_
* Wed 15 Oct 2014 04:46:22 PM JST
XK_
* Wed 15 Oct 2014 04:46:22 PM JST
XK_
* Wed 15 Oct 2014 04:46:22 PM JST
XK_
* Wed 15 Oct 2014 04:46:22 PM JST
XK_
* Wed 15 Oct 2014 04:46:22 PM JST
XK_
* Wed 15 Oct 2014 04:46:22 PM JST
XK_
* Wed 15 Oct 2014 04:46:22 PM JST
XK_
* Wed 15 Oct 2014 04:46:22 PM JST
XK_
* Wed 15 Oct 2014 04:46:22 PM JST
XK_
* Wed 15 Oct 2014 04:46:23 PM JST
XK_
* Wed 15 Oct 2014 04:46:23 PM JST
XK_
* Wed 15 Oct 2014 04:46:23 PM JST
XK_
* Wed 15 Oct 2014 04:46:23 PM JST
XK_
* Wed 15 Oct 2014 04:46:23 PM JST
XK_
* Wed 15 Oct 2014 04:46:23 PM JST
XK_
* Wed 15 Oct 2014 04:46:23 PM JST
XK_
* Wed 15 Oct 2014 04:46:24 PM JST
XK_
* Wed 15 Oct 2014 04:46:24 PM JST
XK_
* Wed 15 Oct 2014 04:46:24 PM JST
XK_
* Wed 15 Oct 2014 04:46:24 PM JST
XK_
* Wed 15 Oct 2014 04:46:24 PM JST
XK_
* Wed 15 Oct 2014 04:46:24 PM JST
XK_
* Wed 15 Oct 2014 04:46:24 PM JST
XK_
* Wed 15 Oct 2014 04:46:24 PM JST
XK_
* Wed 15 Oct 2014 04:46:24 PM JST
XK_
* Wed 15 Oct 2014 04:46:24 PM JST
XK_
* Wed 15 Oct 2014 04:46:24 PM JST
XK_
* Wed 15 Oct 2014 04:46:24 PM JST
XK_
* Wed 15 Oct 2014 04:46:24 PM JST
XK_
* Wed 15 Oct 2014 04:46:24 PM JST
XK_
* Wed 15 Oct 2014 04:46:44 PM JST
'F1': 0xffbe,
'F2': 0xffbf,
'F3': 0xffc0,
'F4': 0xffc1,
'F5': 0xffc2,
'F6': 0xffc3,
'F7': 0xffc4,
'F8': 0xffc5,
'F9': 0xffc6,
'F10': 0xffc7,
'F11': 0xffc8,
'L1': 0xffc8,
'F12': 0xffc9,
'L2': 0xffc9,
'F13': 0xffca,
'L3': 0xffca,
'F14': 0xffcb,
'L4': 0xffcb,
'F15': 0xffcc,
'L5': 0xffcc,
'F16': 0xffcd,
'L6': 0xffcd,
'F17': 0xffce,
'L7': 0xffce,
'F18': 0xffcf,
'L8': 0xffcf,
'F19': 0xffd0,
'L9': 0xffd0,
'F20': 0xffd1,
'L10': 0xffd1,
'F21': 0xffd2,
'R1': 0xffd2,
'F22': 0xffd3,
'R2': 0xffd3,
'F23': 0xffd4,
'R3': 0xffd4,
'F24': 0xffd5,
'R4': 0xffd5,
'F25': 0xffd6,
'R5': 0xffd6,
'F26': 0xffd7,
'R6': 0xffd7,
'F27': 0xffd8,
'R7': 0xffd8,
'F28': 0xffd9,
'R8': 0xffd9,
'F29': 0xffda,
'R9': 0xffda,
'F30': 0xffdb,
'R10': 0xffdb,
'F31': 0xffdc,
'R11': 0xffdc,
'F32': 0xffdd,
'R12': 0xffdd,
'F33': 0xffde,
'R13': 0xffde,
'F34': 0xffdf,
'R14': 0xffdf,
'F35': 0xffe0,
'R15': 0xffe0,
* Wed 15 Oct 2014 05:06:17 PM JST
None # should raise NotImplementedError()
* Wed 15 Oct 2014 05:06:25 PM JST
namesym.Namesym('F1').to_sym()
* Wed 15 Oct 2014 05:06:45 PM JST
namesym.Namesym('KP_Space').to_sym()
* Wed 15 Oct 2014 05:07:18 PM JST
None # should raise NotImplementedError()
* Wed 15 Oct 2014 05:07:55 PM JST
0x11000000
* Wed 15 Oct 2014 05:08:08 PM JST
0x1100FFFF)
* Wed 15 Oct 2014 05:08:20 PM JST
None # should raise NotImplementedError()
* Wed 15 Oct 2014 05:08:52 PM JST
None # should raise NotImplementedError()
* Wed 15 Oct 2014 05:12:17 PM JST
and
* Wed 15 Oct 2014 05:12:51 PM JST
                
* Wed 15 Oct 2014 05:12:53 PM JST
             
* Wed 15 Oct 2014 05:12:57 PM JST
             
* Wed 15 Oct 2014 05:13:28 PM JST
                
* Wed 15 Oct 2014 05:14:14 PM JST
None # should raise NotImplementedError()
* Wed 15 Oct 2014 05:15:27 PM JST
            
* Wed 15 Oct 2014 05:20:16 PM JST
'Shift_R'
* Wed 15 Oct 2014 05:22:36 PM JST
namesym.Namesym('Shift_R')
* Wed 15 Oct 2014 05:23:09 PM JST
namesym.Namesym('Shift_l')
* Wed 15 Oct 2014 05:23:47 PM JST
bool(
* Wed 15 Oct 2014 05:28:06 PM JST

* Wed 15 Oct 2014 05:28:06 PM JST

* Wed 15 Oct 2014 05:28:06 PM JST
        pass

* Wed 15 Oct 2014 05:28:14 PM JST
other
* Wed 15 Oct 2014 05:28:38 PM JST
self
* Wed 15 Oct 2014 05:28:48 PM JST

* Wed 15 Oct 2014 05:28:48 PM JST

* Wed 15 Oct 2014 05:28:48 PM JST
        pass

* Wed 15 Oct 2014 05:28:50 PM JST
other
* Wed 15 Oct 2014 05:28:59 PM JST

* Wed 15 Oct 2014 05:28:59 PM JST

* Wed 15 Oct 2014 05:28:59 PM JST
        pass

* Wed 15 Oct 2014 05:29:06 PM JST
other
* Wed 15 Oct 2014 05:29:11 PM JST

* Wed 15 Oct 2014 05:29:11 PM JST

* Wed 15 Oct 2014 05:29:11 PM JST
        pass

* Wed 15 Oct 2014 05:29:26 PM JST
other
* Wed 15 Oct 2014 05:35:04 PM JST
    def __lt__(self, other):
        return self.to_sym() < int(other)

    def __le__(self, other):
        return self.to_sym() <= int(other)

    def __gt__(self, other):
        return self.to_sym() > int(other)

    def __ge__(self, other):
        return self.to_sym() >= int(other)

* Wed 15 Oct 2014 05:36:36 PM JST
return self < int(other)
* Wed 15 Oct 2014 05:36:39 PM JST
int(
* Wed 15 Oct 2014 05:36:53 PM JST
int(other)
* Wed 15 Oct 2014 05:37:33 PM JST
namesym.Namesym('Shift_L').to_sym()
* Wed 15 Oct 2014 05:38:05 PM JST
self
* Wed 15 Oct 2014 05:38:10 PM JST
self
* Wed 15 Oct 2014 05:38:28 PM JST
        if isinstance(other, (basestring, )):
            return int(self) < namesym.Namesym(other).to_sym()
        return int(self) < int(other)

* Wed 15 Oct 2014 05:38:43 PM JST
        if isinstance(other, (basestring, )):
            return int(self) <= namesym.Namesym(other).to_sym()
        return int(self) <= int(other)

* Wed 15 Oct 2014 05:38:49 PM JST

* Wed 15 Oct 2014 05:38:49 PM JST

* Wed 15 Oct 2014 05:38:50 PM JST
        return self > int(other)

* Wed 15 Oct 2014 05:38:52 PM JST
        if isinstance(other, (basestring, )):
            return int(self) > namesym.Namesym(other).to_sym()
        return int(self) > int(other)

* Wed 15 Oct 2014 05:39:16 PM JST
.to_sym()
* Wed 15 Oct 2014 05:39:19 PM JST
.to_sym()
* Wed 15 Oct 2014 05:39:22 PM JST
.to_sym()
* Wed 15 Oct 2014 05:39:26 PM JST
namesym.Namesym(other)
* Wed 15 Oct 2014 05:39:31 PM JST
int(namesym.Namesym(other))
* Wed 15 Oct 2014 05:40:00 PM JST
        if isinstance(other, (basestring, )):
            return int(self) < int(namesym.Namesym(other))
        return int(self) < int(other)

* Wed 15 Oct 2014 05:41:01 PM JST
                
* Wed 15 Oct 2014 05:41:12 PM JST
             
* Wed 15 Oct 2014 05:42:12 PM JST
                
* Wed 15 Oct 2014 05:50:07 PM JST

* Wed 15 Oct 2014 05:50:07 PM JST

* Wed 15 Oct 2014 05:50:07 PM JST
from MODULE import 

* Wed 15 Oct 2014 05:50:30 PM JST

* Wed 15 Oct 2014 05:50:31 PM JST
keysymdef
* Wed 15 Oct 2014 05:50:36 PM JST

* Wed 15 Oct 2014 05:50:39 PM JST
key
* Wed 15 Oct 2014 06:20:15 PM JST
from
* Wed 15 Oct 2014 06:20:16 PM JST
namesym
* Wed 15 Oct 2014 06:20:26 PM JST

* Wed 15 Oct 2014 06:20:28 PM JST
keysymdef
* Wed 15 Oct 2014 06:20:31 PM JST
Keysymdef
* Wed 15 Oct 2014 06:20:35 PM JST

* Wed 15 Oct 2014 06:20:37 PM JST
Keysym
* Wed 15 Oct 2014 06:20:41 PM JST
keysym
* Wed 15 Oct 2014 06:20:49 PM JST
Keysymdef
* Wed 15 Oct 2014 06:21:00 PM JST
Keysym
* Wed 15 Oct 2014 06:21:07 PM JST
Namesym
* Wed 15 Oct 2014 06:22:02 PM JST
from sendkey2.key import *
* Wed 15 Oct 2014 06:22:18 PM JST
Keysymdef
* Wed 15 Oct 2014 06:30:31 PM JST
    def __lt__(self, other):
        return self.to_sym() < int(other)

    def __le__(self, other):
        return self.to_sym() <= int(other)

    def __gt__(self, other):
        return self.to_sym() > int(other)

    def __ge__(self, other):
        return self.to_sym() >= int(other)

* Wed 15 Oct 2014 06:31:59 PM JST
self
* Wed 15 Oct 2014 06:32:06 PM JST
        if isinstance(other, (basestring, )):
            return int(self) < keysymdef.Keysymdef.name_to_sym(other)
        return int(self) < int(other)

* Wed 15 Oct 2014 06:32:16 PM JST
        if isinstance(other, (basestring, )):
            return int(self) <= keysymdef.Keysymdef.name_to_sym(other)
        return int(self) <= int(other)

* Wed 15 Oct 2014 06:32:29 PM JST
        if isinstance(other, (basestring, )):
            return int(self) > keysymdef.Keysymdef.name_to_sym(other)
        return int(self) > int(other)

* Wed 15 Oct 2014 06:32:56 PM JST
        if isinstance(other, (basestring, )):
            return int(self) < keysymdef.Keysymdef.name_to_sym(other)
        return int(self) < int(other)

* Wed 15 Oct 2014 06:34:16 PM JST
from sendkey2.key import *
* Wed 15 Oct 2014 06:34:53 PM JST
Namesym(
* Wed 15 Oct 2014 06:34:53 PM JST
namesym.Namesym(
* Wed 15 Oct 2014 06:34:55 PM JST
).to_sym()
* Wed 15 Oct 2014 06:35:00 PM JST
to_sym())
* Wed 15 Oct 2014 06:35:12 PM JST
).to_sym()
* Wed 15 Oct 2014 06:35:22 PM JST
                 
* Wed 15 Oct 2014 06:35:29 PM JST
to_sym()
* Wed 15 Oct 2014 06:35:30 PM JST
Mode_switch').to_sym()
* Wed 15 Oct 2014 06:35:36 PM JST
Namesym(
* Wed 15 Oct 2014 06:35:36 PM JST
namesym.Namesym(
* Wed 15 Oct 2014 06:35:54 PM JST
namesym.Namesym(
* Wed 15 Oct 2014 06:36:13 PM JST
).to_sym()
* Wed 15 Oct 2014 06:36:42 PM JST
                
* Wed 15 Oct 2014 06:36:45 PM JST
                
* Wed 15 Oct 2014 06:37:12 PM JST
                
* Wed 15 Oct 2014 06:37:16 PM JST
                
* Wed 15 Oct 2014 06:39:00 PM JST
                 
* Wed 15 Oct 2014 06:41:30 PM JST
keysymdef.Keysymdef.name_to_sym(other)
* Wed 15 Oct 2014 06:42:09 PM JST
            sym = keysymdef.Keysymdef.name_to_sym(other)
            if sym == 0:
                return False

* Wed 15 Oct 2014 06:42:50 PM JST
            sym = keysymdef.Keysymdef.name_to_sym(other)
            if sym == 0:
                return False

* Wed 15 Oct 2014 06:42:55 PM JST
keysymdef.Keysymdef.name_to_sym(other)
* Wed 15 Oct 2014 06:51:04 PM JST

* Wed 15 Oct 2014 06:51:04 PM JST

* Wed 15 Oct 2014 06:51:04 PM JST
    # Attributes:

* Wed 15 Oct 2014 06:51:37 PM JST
int
* Wed 15 Oct 2014 06:51:47 PM JST
Keysym(100)
* Thu 16 Oct 2014 12:40:27 AM JST
from unicode import unicode

class Charsym(unicode):
    """Class Charsym
    """
    # Attributes:
    
    # Operations
    def to_sym(self):
        """function to_sym
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __repr__(self):
        """function __repr__
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __int__(self):
        """function __int__
        
        returns int
        """
        return None # should raise NotImplementedError()
    
    def __long__(self):
        """function __long__
        
        returns long
        """
        return None # should raise NotImplementedError()
    
    def __hex__(self):
        """function __hex__
        
        returns hex
        """
        return None # should raise NotImplementedError()
    
    def __eq__(self, other):
        """function __eq__
        
        other: 
        
        returns bool
        """
        return None # should raise NotImplementedError()
    
    def __ne__(self, other):
        """function __ne__
        
        other: 
        
        returns bool
        """
        return None # should raise NotImplementedError()
    
    def __lt__(self, other):
        """function __lt__
        
        other: 
        
        returns bool
        """
        return None # should raise NotImplementedError()
    
    def __le__(self, other):
        """function __le__
        
        other: 
        
        returns bool
        """
        return None # should raise NotImplementedError()
    
    def __gt__(self, other):
        """function __gt__
        
        other: 
        
        returns bool
        """
        return None # should raise NotImplementedError()
    
    def __ge__(self, other):
        """function __ge__
        
        other: 
        
        returns bool
        """
        return None # should raise NotImplementedError()
    


* Thu 16 Oct 2014 12:40:43 AM JST

* Thu 16 Oct 2014 12:40:43 AM JST

* Thu 16 Oct 2014 12:40:43 AM JST
from unicode import unicode

* Thu 16 Oct 2014 12:43:24 AM JST
None # should raise NotImplementedError()
* Thu 16 Oct 2014 12:48:26 AM JST
'{}'.format(
* Thu 16 Oct 2014 12:48:38 AM JST
type(
* Thu 16 Oct 2014 12:56:01 AM JST
unicode
* Thu 16 Oct 2014 01:00:34 AM JST

* Thu 16 Oct 2014 01:00:34 AM JST

* Thu 16 Oct 2014 01:00:34 AM JST
        self._char = char

* Thu 16 Oct 2014 01:02:51 AM JST
charsym.Charsym(
* Thu 16 Oct 2014 01:08:01 AM JST

* Thu 16 Oct 2014 01:08:01 AM JST

* Thu 16 Oct 2014 01:08:02 AM JST
            print('DEBUG-1-charsym.py')

* Thu 16 Oct 2014 01:13:42 AM JST
unicode.__init__(self, char, 'utf-8')
* Thu 16 Oct 2014 01:19:19 AM JST
0x4a7
* Thu 16 Oct 2014 01:19:33 AM JST
0x30A1
* Thu 16 Oct 2014 01:20:34 AM JST
charsym.Charsym
* Thu 16 Oct 2014 01:20:51 AM JST
charsym.Charsym
* Thu 16 Oct 2014 01:29:39 AM JST
other
* Thu 16 Oct 2014 01:42:58 AM JST
'Shift_L'
* Thu 16 Oct 2014 01:45:20 AM JST
'Alt_L'
* Thu 16 Oct 2014 01:45:42 AM JST
0xffe9,
* Thu 16 Oct 2014 01:45:45 AM JST
0xffe9
* Thu 16 Oct 2014 01:46:31 AM JST
raise ConvertError(self)
* Thu 16 Oct 2014 01:54:56 AM JST
LEGACY = {
    0x01A1: 0x0104,
    0x01A2: 0x02D8,
    0x01A3: 0x0141,
    0x01A5: 0x013D,
    0x01A6: 0x015A,
    0x01A9: 0x0160,
    0x01AA: 0x015E,
    0x01AB: 0x0164,
    0x01AC: 0x0179,
    0x01AE: 0x017D,
    0x01AF: 0x017B,
    0x01B1: 0x0105,
    0x01B2: 0x02DB,
    0x01B3: 0x0142,
    0x01B5: 0x013E,
    0x01B6: 0x015B,
    0x01B7: 0x02C7,
    0x01B9: 0x0161,
    0x01BA: 0x015F,
    0x01BB: 0x0165,
    0x01BC: 0x017A,
    0x01BD: 0x02DD,
    0x01BE: 0x017E,
    0x01BF: 0x017C,
    0x01C0: 0x0154,
    0x01C3: 0x0102,
    0x01C5: 0x0139,
    0x01C6: 0x0106,
    0x01C8: 0x010C,
    0x01CA: 0x0118,
    0x01CC: 0x011A,
    0x01CF: 0x010E,
    0x01D0: 0x0110,
    0x01D1: 0x0143,
    0x01D2: 0x0147,
    0x01D5: 0x0150,
    0x01D8: 0x0158,
    0x01D9: 0x016E,
    0x01DB: 0x0170,
    0x01DE: 0x0162,
    0x01E0: 0x0155,
    0x01E3: 0x0103,
    0x01E5: 0x013A,
    0x01E6: 0x0107,
    0x01E8: 0x010D,
    0x01EA: 0x0119,
    0x01EC: 0x011B,
    0x01EF: 0x010F,
    0x01F0: 0x0111,
    0x01F1: 0x0144,
    0x01F2: 0x0148,
    0x01F5: 0x0151,
    0x01F8: 0x0159,
    0x01F9: 0x016F,
    0x01FB: 0x0171,
    0x01FE: 0x0163,
    0x01FF: 0x02D9,
    0x02A1: 0x0126,
    0x02A6: 0x0124,
    0x02A9: 0x0130,
    0x02AB: 0x011E,
    0x02AC: 0x0134,
    0x02B1: 0x0127,
    0x02B6: 0x0125,
    0x02B9: 0x0131,
    0x02BB: 0x011F,
    0x02BC: 0x0135,
    0x02C5: 0x010A,
    0x02C6: 0x0108,
    0x02D5: 0x0120,
    0x02D8: 0x011C,
    0x02DD: 0x016C,
    0x02DE: 0x015C,
    0x02E5: 0x010B,
    0x02E6: 0x0109,
    0x02F5: 0x0121,
    0x02F8: 0x011D,
    0x02FD: 0x016D,
    0x02FE: 0x015D,
    0x03A2: 0x0138,
    0x03A3: 0x0156,
    0x03A5: 0x0128,
    0x03A6: 0x013B,
    0x03AA: 0x0112,
    0x03AB: 0x0122,
    0x03AC: 0x0166,
    0x03B3: 0x0157,
    0x03B5: 0x0129,
    0x03B6: 0x013C,
    0x03BA: 0x0113,
    0x03BB: 0x0123,
    0x03BC: 0x0167,
    0x03BD: 0x014A,
    0x03BF: 0x014B,
    0x03C0: 0x0100,
    0x03C7: 0x012E,
    0x03CC: 0x0116,
    0x03CF: 0x012A,
    0x03D1: 0x0145,
    0x03D2: 0x014C,
    0x03D3: 0x0136,
    0x03D9: 0x0172,
    0x03DD: 0x0168,
    0x03DE: 0x016A,
    0x03E0: 0x0101,
    0x03E7: 0x012F,
    0x03EC: 0x0117,
    0x03EF: 0x012B,
    0x03F1: 0x0146,
    0x03F2: 0x014D,
    0x03F3: 0x0137,
    0x03F9: 0x0173,
    0x03FD: 0x0169,
    0x03FE: 0x016B,
    0x047E: 0x203E,
    0x04A1: 0x3002,
    0x04A2: 0x300C,
    0x04A3: 0x300D,
    0x04A4: 0x3001,
    0x04A5: 0x30FB,
    0x04A6: 0x30F2,
    0x04A7: 0x30A1,
    0x04A8: 0x30A3,
    0x04A9: 0x30A5,
    0x04AA: 0x30A7,
    0x04AB: 0x30A9,
    0x04AC: 0x30E3,
    0x04AD: 0x30E5,
    0x04AE: 0x30E7,
    0x04AF: 0x30C3,
    0x04B0: 0x30FC,
    0x04B1: 0x30A2,
    0x04B2: 0x30A4,
    0x04B3: 0x30A6,
    0x04B4: 0x30A8,
    0x04B5: 0x30AA,
    0x04B6: 0x30AB,
    0x04B7: 0x30AD,
    0x04B8: 0x30AF,
    0x04B9: 0x30B1,
    0x04BA: 0x30B3,
    0x04BB: 0x30B5,
    0x04BC: 0x30B7,
    0x04BD: 0x30B9,
    0x04BE: 0x30BB,
    0x04BF: 0x30BD,
    0x04C0: 0x30BF,
    0x04C1: 0x30C1,
    0x04C2: 0x30C4,
    0x04C3: 0x30C6,
    0x04C4: 0x30C8,
    0x04C5: 0x30CA,
    0x04C6: 0x30CB,
    0x04C7: 0x30CC,
    0x04C8: 0x30CD,
    0x04C9: 0x30CE,
    0x04CA: 0x30CF,
    0x04CB: 0x30D2,
    0x04CC: 0x30D5,
    0x04CD: 0x30D8,
    0x04CE: 0x30DB,
    0x04CF: 0x30DE,
    0x04D0: 0x30DF,
    0x04D1: 0x30E0,
    0x04D2: 0x30E1,
    0x04D3: 0x30E2,
    0x04D4: 0x30E4,
    0x04D5: 0x30E6,
    0x04D6: 0x30E8,
    0x04D7: 0x30E9,
    0x04D8: 0x30EA,
    0x04D9: 0x30EB,
    0x04DA: 0x30EC,
    0x04DB: 0x30ED,
    0x04DC: 0x30EF,
    0x04DD: 0x30F3,
    0x04DE: 0x309B,
    0x04DF: 0x309C,
    0x05AC: 0x060C,
    0x05BB: 0x061B,
    0x05BF: 0x061F,
    0x05C1: 0x0621,
    0x05C2: 0x0622,
    0x05C3: 0x0623,
    0x05C4: 0x0624,
    0x05C5: 0x0625,
    0x05C6: 0x0626,
    0x05C7: 0x0627,
    0x05C8: 0x0628,
    0x05C9: 0x0629,
    0x05CA: 0x062A,
    0x05CB: 0x062B,
    0x05CC: 0x062C,
    0x05CD: 0x062D,
    0x05CE: 0x062E,
    0x05CF: 0x062F,
    0x05D0: 0x0630,
    0x05D1: 0x0631,
    0x05D2: 0x0632,
    0x05D3: 0x0633,
    0x05D4: 0x0634,
    0x05D5: 0x0635,
    0x05D6: 0x0636,
    0x05D7: 0x0637,
    0x05D8: 0x0638,
    0x05D9: 0x0639,
    0x05DA: 0x063A,
    0x05E0: 0x0640,
    0x05E1: 0x0641,
    0x05E2: 0x0642,
    0x05E3: 0x0643,
    0x05E4: 0x0644,
    0x05E5: 0x0645,
    0x05E6: 0x0646,
    0x05E7: 0x0647,
    0x05E8: 0x0648,
    0x05E9: 0x0649,
    0x05EA: 0x064A,
    0x05EB: 0x064B,
    0x05EC: 0x064C,
    0x05ED: 0x064D,
    0x05EE: 0x064E,
    0x05EF: 0x064F,
    0x05F0: 0x0650,
    0x05F1: 0x0651,
    0x05F2: 0x0652,
    0x06A1: 0x0452,
    0x06A2: 0x0453,
    0x06A3: 0x0451,
    0x06A4: 0x0454,
    0x06A5: 0x0455,
    0x06A6: 0x0456,
    0x06A7: 0x0457,
    0x06A8: 0x0458,
    0x06A9: 0x0459,
    0x06AA: 0x045A,
    0x06AB: 0x045B,
    0x06AC: 0x045C,
    0x06AD: 0x0491,
    0x06AE: 0x045E,
    0x06AF: 0x045F,
    0x06B0: 0x2116,
    0x06B1: 0x0402,
    0x06B2: 0x0403,
    0x06B3: 0x0401,
    0x06B4: 0x0404,
    0x06B5: 0x0405,
    0x06B6: 0x0406,
    0x06B7: 0x0407,
    0x06B8: 0x0408,
    0x06B9: 0x0409,
    0x06BA: 0x040A,
    0x06BB: 0x040B,
    0x06BC: 0x040C,
    0x06BD: 0x0490,
    0x06BE: 0x040E,
    0x06BF: 0x040F,
    0x06C0: 0x044E,
    0x06C1: 0x0430,
    0x06C2: 0x0431,
    0x06C3: 0x0446,
    0x06C4: 0x0434,
    0x06C5: 0x0435,
    0x06C6: 0x0444,
    0x06C7: 0x0433,
    0x06C8: 0x0445,
    0x06C9: 0x0438,
    0x06CA: 0x0439,
    0x06CB: 0x043A,
    0x06CC: 0x043B,
    0x06CD: 0x043C,
    0x06CE: 0x043D,
    0x06CF: 0x043E,
    0x06D0: 0x043F,
    0x06D1: 0x044F,
    0x06D2: 0x0440,
    0x06D3: 0x0441,
    0x06D4: 0x0442,
    0x06D5: 0x0443,
    0x06D6: 0x0436,
    0x06D7: 0x0432,
    0x06D8: 0x044C,
    0x06D9: 0x044B,
    0x06DA: 0x0437,
    0x06DB: 0x0448,
    0x06DC: 0x044D,
    0x06DD: 0x0449,
    0x06DE: 0x0447,
    0x06DF: 0x044A,
    0x06E0: 0x042E,
    0x06E1: 0x0410,
    0x06E2: 0x0411,
    0x06E3: 0x0426,
    0x06E4: 0x0414,
    0x06E5: 0x0415,
    0x06E6: 0x0424,
    0x06E7: 0x0413,
    0x06E8: 0x0425,
    0x06E9: 0x0418,
    0x06EA: 0x0419,
    0x06EB: 0x041A,
    0x06EC: 0x041B,
    0x06ED: 0x041C,
    0x06EE: 0x041D,
    0x06EF: 0x041E,
    0x06F0: 0x041F,
    0x06F1: 0x042F,
    0x06F2: 0x0420,
    0x06F3: 0x0421,
    0x06F4: 0x0422,
    0x06F5: 0x0423,
    0x06F6: 0x0416,
    0x06F7: 0x0412,
    0x06F8: 0x042C,
    0x06F9: 0x042B,
    0x06FA: 0x0417,
    0x06FB: 0x0428,
    0x06FC: 0x042D,
    0x06FD: 0x0429,
    0x06FE: 0x0427,
    0x06FF: 0x042A,
    0x07A1: 0x0386,
    0x07A2: 0x0388,
    0x07A3: 0x0389,
    0x07A4: 0x038A,
    0x07A5: 0x03AA,
    0x07A7: 0x038C,
    0x07A8: 0x038E,
    0x07A9: 0x03AB,
    0x07AB: 0x038F,
    0x07AE: 0x0385,
    0x07AF: 0x2015,
    0x07B1: 0x03AC,
    0x07B2: 0x03AD,
    0x07B3: 0x03AE,
    0x07B4: 0x03AF,
    0x07B5: 0x03CA,
    0x07B6: 0x0390,
    0x07B7: 0x03CC,
    0x07B8: 0x03CD,
    0x07B9: 0x03CB,
    0x07BA: 0x03B0,
    0x07BB: 0x03CE,
    0x07C1: 0x0391,
    0x07C2: 0x0392,
    0x07C3: 0x0393,
    0x07C4: 0x0394,
    0x07C5: 0x0395,
    0x07C6: 0x0396,
    0x07C7: 0x0397,
    0x07C8: 0x0398,
    0x07C9: 0x0399,
    0x07CA: 0x039A,
    0x07CB: 0x039B,
    0x07CC: 0x039C,
    0x07CD: 0x039D,
    0x07CE: 0x039E,
    0x07CF: 0x039F,
    0x07D0: 0x03A0,
    0x07D1: 0x03A1,
    0x07D2: 0x03A3,
    0x07D4: 0x03A4,
    0x07D5: 0x03A5,
    0x07D6: 0x03A6,
    0x07D7: 0x03A7,
    0x07D8: 0x03A8,
    0x07D9: 0x03A9,
    0x07E1: 0x03B1,
    0x07E2: 0x03B2,
    0x07E3: 0x03B3,
    0x07E4: 0x03B4,
    0x07E5: 0x03B5,
    0x07E6: 0x03B6,
    0x07E7: 0x03B7,
    0x07E8: 0x03B8,
    0x07E9: 0x03B9,
    0x07EA: 0x03BA,
    0x07EB: 0x03BB,
    0x07EC: 0x03BC,
    0x07ED: 0x03BD,
    0x07EE: 0x03BE,
    0x07EF: 0x03BF,
    0x07F0: 0x03C0,
    0x07F1: 0x03C1,
    0x07F2: 0x03C3,
    0x07F3: 0x03C2,
    0x07F4: 0x03C4,
    0x07F5: 0x03C5,
    0x07F6: 0x03C6,
    0x07F7: 0x03C7,
    0x07F8: 0x03C8,
    0x07F9: 0x03C9,
    0x08A1: 0x23B7,
    0x08A4: 0x2320,
    0x08A5: 0x2321,
    0x08A7: 0x23A1,
    0x08A8: 0x23A3,
    0x08A9: 0x23A4,
    0x08AA: 0x23A6,
    0x08AB: 0x239B,
    0x08AC: 0x239D,
    0x08AD: 0x239E,
    0x08AE: 0x23A0,
    0x08AF: 0x23A8,
    0x08B0: 0x23AC,
    0x08BC: 0x2264,
    0x08BD: 0x2260,
    0x08BE: 0x2265,
    0x08BF: 0x222B,
    0x08C0: 0x2234,
    0x08C1: 0x221D,
    0x08C2: 0x221E,
    0x08C5: 0x2207,
    0x08C8: 0x223C,
    0x08C9: 0x2243,
    0x08CD: 0x21D4,
    0x08CE: 0x21D2,
    0x08CF: 0x2261,
    0x08D6: 0x221A,
    0x08DA: 0x2282,
    0x08DB: 0x2283,
    0x08DC: 0x2229,
    0x08DD: 0x222A,
    0x08DE: 0x2227,
    0x08DF: 0x2228,
    0x08EF: 0x2202,
    0x08F6: 0x0192,
    0x08FB: 0x2190,
    0x08FC: 0x2191,
    0x08FD: 0x2192,
    0x08FE: 0x2193,
    0x09E0: 0x25C6,
    0x09E1: 0x2592,
    0x09E2: 0x2409,
    0x09E3: 0x240C,
    0x09E4: 0x240D,
    0x09E5: 0x240A,
    0x09E8: 0x2424,
    0x09E9: 0x240B,
    0x09EA: 0x2518,
    0x09EB: 0x2510,
    0x09EC: 0x250C,
    0x09ED: 0x2514,
    0x09EE: 0x253C,
    0x09EF: 0x23BA,
    0x09F0: 0x23BB,
    0x09F1: 0x2500,
    0x09F2: 0x23BC,
    0x09F3: 0x23BD,
    0x09F4: 0x251C,
    0x09F5: 0x2524,
    0x09F6: 0x2534,
    0x09F7: 0x252C,
    0x09F8: 0x2502,
    0x0AA1: 0x2003,
    0x0AA2: 0x2002,
    0x0AA3: 0x2004,
    0x0AA4: 0x2005,
    0x0AA5: 0x2007,
    0x0AA6: 0x2008,
    0x0AA7: 0x2009,
    0x0AA8: 0x200A,
    0x0AA9: 0x2014,
    0x0AAA: 0x2013,
    0x0AAE: 0x2026,
    0x0AAF: 0x2025,
    0x0AB0: 0x2153,
    0x0AB1: 0x2154,
    0x0AB2: 0x2155,
    0x0AB3: 0x2156,
    0x0AB4: 0x2157,
    0x0AB5: 0x2158,
    0x0AB6: 0x2159,
    0x0AB7: 0x215A,
    0x0AB8: 0x2105,
    0x0ABB: 0x2012,
    0x0AC3: 0x215B,
    0x0AC4: 0x215C,
    0x0AC5: 0x215D,
    0x0AC6: 0x215E,
    0x0AC9: 0x2122,
    0x0AD0: 0x2018,
    0x0AD1: 0x2019,
    0x0AD2: 0x201C,
    0x0AD3: 0x201D,
    0x0AD4: 0x211E,
    0x0AD6: 0x2032,
    0x0AD7: 0x2033,
    0x0AD9: 0x271D,
    0x0AEC: 0x2663,
    0x0AED: 0x2666,
    0x0AEE: 0x2665,
    0x0AF0: 0x2720,
    0x0AF1: 0x2020,
    0x0AF2: 0x2021,
    0x0AF3: 0x2713,
    0x0AF4: 0x2717,
    0x0AF5: 0x266F,
    0x0AF6: 0x266D,
    0x0AF7: 0x2642,
    0x0AF8: 0x2640,
    0x0AF9: 0x260E,
    0x0AFA: 0x2315,
    0x0AFB: 0x2117,
    0x0AFC: 0x2038,
    0x0AFD: 0x201A,
    0x0AFE: 0x201E,
    0x0BC2: 0x22A5,
    0x0BC4: 0x230A,
    0x0BCA: 0x2218,
    0x0BCC: 0x2395,
    0x0BCE: 0x22A4,
    0x0BCF: 0x25CB,
    0x0BD3: 0x2308,
    0x0BDC: 0x22A2,
    0x0BFC: 0x22A3,
    0x0CDF: 0x2017,
    0x0CE0: 0x05D0,
    0x0CE1: 0x05D1,
    0x0CE2: 0x05D2,
    0x0CE3: 0x05D3,
    0x0CE4: 0x05D4,
    0x0CE5: 0x05D5,
    0x0CE6: 0x05D6,
    0x0CE7: 0x05D7,
    0x0CE8: 0x05D8,
    0x0CE9: 0x05D9,
    0x0CEA: 0x05DA,
    0x0CEB: 0x05DB,
    0x0CEC: 0x05DC,
    0x0CED: 0x05DD,
    0x0CEE: 0x05DE,
    0x0CEF: 0x05DF,
    0x0CF0: 0x05E0,
    0x0CF1: 0x05E1,
    0x0CF2: 0x05E2,
    0x0CF3: 0x05E3,
    0x0CF4: 0x05E4,
    0x0CF5: 0x05E5,
    0x0CF6: 0x05E6,
    0x0CF7: 0x05E7,
    0x0CF8: 0x05E8,
    0x0CF9: 0x05E9,
    0x0CFA: 0x05EA,
    0x0DA1: 0x0E01,
    0x0DA2: 0x0E02,
    0x0DA3: 0x0E03,
    0x0DA4: 0x0E04,
    0x0DA5: 0x0E05,
    0x0DA6: 0x0E06,
    0x0DA7: 0x0E07,
    0x0DA8: 0x0E08,
    0x0DA9: 0x0E09,
    0x0DAA: 0x0E0A,
    0x0DAB: 0x0E0B,
    0x0DAC: 0x0E0C,
    0x0DAD: 0x0E0D,
    0x0DAE: 0x0E0E,
    0x0DAF: 0x0E0F,
    0x0DB0: 0x0E10,
    0x0DB1: 0x0E11,
    0x0DB2: 0x0E12,
    0x0DB3: 0x0E13,
    0x0DB4: 0x0E14,
    0x0DB5: 0x0E15,
    0x0DB6: 0x0E16,
    0x0DB7: 0x0E17,
    0x0DB8: 0x0E18,
    0x0DB9: 0x0E19,
    0x0DBA: 0x0E1A,
    0x0DBB: 0x0E1B,
    0x0DBC: 0x0E1C,
    0x0DBD: 0x0E1D,
    0x0DBE: 0x0E1E,
    0x0DBF: 0x0E1F,
    0x0DC0: 0x0E20,
    0x0DC1: 0x0E21,
    0x0DC2: 0x0E22,
    0x0DC3: 0x0E23,
    0x0DC4: 0x0E24,
    0x0DC5: 0x0E25,
    0x0DC6: 0x0E26,
    0x0DC7: 0x0E27,
    0x0DC8: 0x0E28,
    0x0DC9: 0x0E29,
    0x0DCA: 0x0E2A,
    0x0DCB: 0x0E2B,
    0x0DCC: 0x0E2C,
    0x0DCD: 0x0E2D,
    0x0DCE: 0x0E2E,
    0x0DCF: 0x0E2F,
    0x0DD0: 0x0E30,
    0x0DD1: 0x0E31,
    0x0DD2: 0x0E32,
    0x0DD3: 0x0E33,
    0x0DD4: 0x0E34,
    0x0DD5: 0x0E35,
    0x0DD6: 0x0E36,
    0x0DD7: 0x0E37,
    0x0DD8: 0x0E38,
    0x0DD9: 0x0E39,
    0x0DDA: 0x0E3A,
    0x0DDF: 0x0E3F,
    0x0DE0: 0x0E40,
    0x0DE1: 0x0E41,
    0x0DE2: 0x0E42,
    0x0DE3: 0x0E43,
    0x0DE4: 0x0E44,
    0x0DE5: 0x0E45,
    0x0DE6: 0x0E46,
    0x0DE7: 0x0E47,
    0x0DE8: 0x0E48,
    0x0DE9: 0x0E49,
    0x0DEA: 0x0E4A,
    0x0DEB: 0x0E4B,
    0x0DEC: 0x0E4C,
    0x0DED: 0x0E4D,
    0x0DF0: 0x0E50,
    0x0DF1: 0x0E51,
    0x0DF2: 0x0E52,
    0x0DF3: 0x0E53,
    0x0DF4: 0x0E54,
    0x0DF5: 0x0E55,
    0x0DF6: 0x0E56,
    0x0DF7: 0x0E57,
    0x0DF8: 0x0E58,
    0x0DF9: 0x0E59,
    0x13BC: 0x0152,
    0x13BD: 0x0153,
    0x13BE: 0x0178,
    0x20AC: 0x20AC,
    }

* Thu 16 Oct 2014 02:01:12 AM JST

* Thu 16 Oct 2014 02:01:12 AM JST

* Thu 16 Oct 2014 02:01:12 AM JST
        _CHARTOSYM[char] = sym

* Thu 16 Oct 2014 02:01:22 AM JST
pass
* Thu 16 Oct 2014 02:03:50 AM JST
CharToSym
* Thu 16 Oct 2014 02:05:24 AM JST
from sendkey2.key import *
* Thu 16 Oct 2014 02:12:25 AM JST
'ア'
* Thu 16 Oct 2014 02:13:00 AM JST
Charsym
* Thu 16 Oct 2014 02:13:20 AM JST

* Thu 16 Oct 2014 02:13:29 AM JST
namesym
* Thu 16 Oct 2014 02:13:33 AM JST
Namesym
* Thu 16 Oct 2014 02:13:40 AM JST
Charsym
* Thu 16 Oct 2014 02:14:07 AM JST
from sendkey2.key import *
* Thu 16 Oct 2014 02:14:29 AM JST
ア
* Thu 16 Oct 2014 02:19:31 AM JST
super(Charsym, self).__eq__(other)
* Thu 16 Oct 2014 02:20:12 AM JST
from sendkey2.key import *
* Thu 16 Oct 2014 02:20:33 AM JST
u'ア')
* Thu 16 Oct 2014 02:20:58 AM JST
u'ア' 
* Thu 16 Oct 2014 02:22:12 AM JST
0x04a7
* Thu 16 Oct 2014 02:22:41 AM JST
0x01000000
* Thu 16 Oct 2014 02:29:00 AM JST
0x30A2
* Thu 16 Oct 2014 03:26:53 AM JST
CharToSym._map.get(u'あ')
* Thu 16 Oct 2014 03:27:45 AM JST
CharToSym._map.get(u'ア')
* Thu 16 Oct 2014 03:31:02 AM JST
None # should raise NotImplementedError()
* Thu 16 Oct 2014 03:32:16 AM JST
self
* Thu 16 Oct 2014 03:35:08 AM JST
keysym.Keysym(NoSymbol)
* Thu 16 Oct 2014 03:35:40 AM JST
get
* Thu 16 Oct 2014 03:35:40 AM JST
_map.get
* Thu 16 Oct 2014 03:36:11 AM JST
from sendkey2.key import *
* Thu 16 Oct 2014 03:51:07 AM JST
self
* Thu 16 Oct 2014 03:52:03 AM JST
unicode(
* Thu 16 Oct 2014 03:55:07 AM JST
from sendkey2.key import *
* Thu 16 Oct 2014 03:56:06 AM JST
None # should raise NotImplementedError()
* Thu 16 Oct 2014 03:56:09 AM JST
None # should raise NotImplementedError()
* Thu 16 Oct 2014 03:56:25 AM JST
self.to_sym()
* Thu 16 Oct 2014 03:57:01 AM JST
None # should raise NotImplementedError()
* Thu 16 Oct 2014 03:57:33 AM JST
None # should raise NotImplementedError()
* Thu 16 Oct 2014 04:17:00 AM JST
from sendkey2.key import *
* Thu 16 Oct 2014 04:47:13 AM JST
len(char)
* Thu 16 Oct 2014 07:27:05 AM JST
self.to_sym() > other
* Thu 16 Oct 2014 07:27:16 AM JST
self.to_sym() >= other
* Thu 16 Oct 2014 07:27:28 AM JST
self.to_sym() < other
* Thu 16 Oct 2014 07:34:12 AM JST
self
* Thu 16 Oct 2014 07:34:30 AM JST
_
* Thu 16 Oct 2014 07:34:30 AM JST
self._
* Fri 17 Oct 2014 12:26:43 AM JST
    def __repr__(self):
        return '{0.__class__.__name__}({1})'.format(self, _pformat(self._map))

* Fri 17 Oct 2014 12:38:08 AM JST
_CHARTOSYM = {}
for s in Keysymdef.itersyms():
    try:
        c = s.to_char()
    except err.ConvertError:
        continue
    _CHARTOSYM[c] = s



* Fri 17 Oct 2014 12:38:15 AM JST

* Fri 17 Oct 2014 12:38:15 AM JST

* Fri 17 Oct 2014 12:38:15 AM JST
_CHARTOSYM = {}

* Fri 17 Oct 2014 12:38:52 AM JST
_CHARTOSYM, 
* Fri 17 Oct 2014 12:47:17 AM JST
self
* Fri 17 Oct 2014 12:47:47 AM JST
self
* Fri 17 Oct 2014 12:48:13 AM JST
self
* Fri 17 Oct 2014 12:48:35 AM JST
self
* Fri 17 Oct 2014 12:48:42 AM JST
iter
* Fri 17 Oct 2014 12:49:05 AM JST
self
* Fri 17 Oct 2014 12:49:25 AM JST
self
* Fri 17 Oct 2014 12:49:48 AM JST
self
* Fri 17 Oct 2014 12:51:01 AM JST
self
* Fri 17 Oct 2014 02:22:11 AM JST
print
* Fri 17 Oct 2014 02:22:12 AM JST
return print
* Sun 19 Oct 2014 04:31:17 AM JST
from Code import Code

class KeyCode(Code):
    """Class KeyCode
    """
    # Attributes:
    
    # Operations
    def press(self, window = None, state = 0, time = 0, child = 0, rootx = 0, rooty = 0, eventx = 0, eventy = 0, samescreen = 1, propagate = 0, display = None):
        """function press
        
        window: 
        state: 
        time: 
        child: 
        rootx: 
        rooty: 
        eventx: 
        eventy: 
        samescreen: 
        propagate: 
        display: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def release(self, window = None, state = 0, time = 0, child = 0, rootx = 0, rooty = 0, eventx = 0, evnety = 0, samescreen = 1, propagate = 0, display = None):
        """function release
        
        window: 
        state: 
        time: 
        child: 
        rootx: 
        rooty: 
        eventx: 
        evnety: 
        samescreen: 
        propagate: 
        display: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def grab(self, window, mod, display = None):
        """function grab
        
        window: int
        mod: int
        display: str
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def ungrab(self, window, mod, display = None):
        """function ungrab
        
        window: 
        mod: 
        display: str
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def to_keysym(self, mod, display = None):
        """function to_keysym
        
        mod: 
        display: str
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Sun 19 Oct 2014 04:31:55 AM JST
class ButtonCode(Code):
    """Class ButtonCode
    """
    # Attributes:
    
    # Operations
    def press(self, window = None, state = 0, time = 0, child = 0, rootx = 0, rooty = 0, eventx = 0, eventy = 0, samescreen = 1, propagate = 0, display = None):
        """function press
        
        window: 
        state: 
        time: 
        child: 
        rootx: 
        rooty: 
        eventx: 
        eventy: 
        samescreen: 
        propagate: 
        display: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def release(self, window = None, state = 0, time = 0, child = 0, rootx = 0, rooty = 0, eventx = 0, evnety = 0, samescreen = 1, propagate = 0, display = None):
        """function release
        
        window: 
        state: 
        time: 
        child: 
        rootx: 
        rooty: 
        eventx: 
        evnety: 
        samescreen: 
        propagate: 
        display: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def grabpress(self, window, mod, owner_events = False, confine_to = 0, cursor = 0, pointer_mode = None, keyboard_mode = None, display = None):
        """function grabpress
        
        window: 
        mod: 
        owner_events: 
        confine_to: 
        cursor: 
        pointer_mode: 
        keyboard_mode: 
        display: str
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def grabrelease(self, window, mod, owner_events = False, confine_to = 0, cursor = 0, pointer_mode = None, keyboard_mode = None, display = None):
        """function grabrelease
        
        window: 
        mod: 
        owner_events: 
        confine_to: 
        cursor: 
        pointer_mode: 
        keyboard_mode: 
        display: str
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def ungrab(self, window, mod, display = None):
        """function ungrab
        
        window: 
        mod: 
        display: str
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def motionnotify(self):
        """function motionnotify
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Sun 19 Oct 2014 04:32:02 AM JST

* Sun 19 Oct 2014 04:32:02 AM JST

* Sun 19 Oct 2014 04:32:02 AM JST
from Code import Code

* Sun 19 Oct 2014 04:34:26 AM JST
flycheck-error-message-buffer
* Sun 19 Oct 2014 04:36:17 AM JST
flycheck-display-errors-function
* Sun 19 Oct 2014 04:39:32 AM JST
disabled display errors to window
* Sun 19 Oct 2014 04:39:38 AM JST

* Sun 19 Oct 2014 04:39:38 AM JST

* Sun 19 Oct 2014 04:39:38 AM JST
;;

* Sun 19 Oct 2014 04:44:03 AM JST
max-mini-window-height
* Sun 19 Oct 2014 04:44:28 AM JST
resize-mini-windows'
* Sun 19 Oct 2014 04:45:11 AM JST
resize-mini-windows
* Sun 19 Oct 2014 04:45:25 AM JST
resize-mini-windows
* Sun 19 Oct 2014 04:46:38 AM JST
resize-mini-windows
* Sun 19 Oct 2014 04:48:17 AM JST

* Sun 19 Oct 2014 04:48:17 AM JST

* Sun 19 Oct 2014 04:48:17 AM JST
;; 

* Sun 19 Oct 2014 04:48:47 AM JST
flycheck-display-errors-function #'flycheck-display-error-messages
* Sun 19 Oct 2014 04:50:53 AM JST
max-mini-window-height
* Sun 19 Oct 2014 04:54:27 AM JST
(defun flycheck-display-error-messages (errors)
  "Display the messages of ERRORS.

Concatenate all non-nil messages of ERRORS separated by empty
lines, and display them with `display-message-or-buffer', which
shows the messages either in the echo area or in a separate
buffer, depending on the number of lines.

In the latter case, show messages in
`flycheck-error-message-buffer'."
  (-when-let (messages (-keep #'flycheck-error-message errors))
    (when (flycheck-may-use-echo-area-p)
      (display-message-or-buffer (s-join "\n\n" messages)
                                 flycheck-error-message-buffer))))
* Sun 19 Oct 2014 04:55:15 AM JST
(require 's)
* Sun 19 Oct 2014 04:56:00 AM JST
flycheck-display-error-messages2
* Sun 19 Oct 2014 04:56:38 AM JST

* Sun 19 Oct 2014 04:56:38 AM JST

* Sun 19 Oct 2014 04:56:38 AM JST
(require 's)

* Sun 19 Oct 2014 04:58:40 AM JST
flycheck
* Sun 19 Oct 2014 04:58:41 AM JST
flycheck-display-errors-function
* Sun 19 Oct 2014 05:00:10 AM JST
noerr
* Sun 19 Oct 2014 05:00:10 AM JST
flycheck" 'noerr
* Sun 19 Oct 2014 05:02:25 AM JST
flycheck-display-errors-function
* Sun 19 Oct 2014 05:05:33 AM JST
flycheck
* Sun 19 Oct 2014 05:05:41 AM JST
flycheck-display-error-messages
* Sun 19 Oct 2014 05:20:28 AM JST
pass
* Sun 19 Oct 2014 05:28:54 AM JST
None
* Sun 19 Oct 2014 05:28:54 AM JST
display=None
* Sun 19 Oct 2014 05:29:04 AM JST
              
* Sun 19 Oct 2014 05:31:15 AM JST
None
* Sun 19 Oct 2014 05:31:17 AM JST
None
* Sun 19 Oct 2014 06:00:24 AM JST
display
* Sun 19 Oct 2014 06:01:15 AM JST
display
* Sun 19 Oct 2014 06:01:19 AM JST
display
* Sun 19 Oct 2014 06:01:23 AM JST
False
* Sun 19 Oct 2014 06:03:00 AM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 06:03:49 AM JST
False
* Sun 19 Oct 2014 06:03:49 AM JST
Propagate.False
* Sun 19 Oct 2014 06:04:03 AM JST
tim
* Sun 19 Oct 2014 06:04:27 AM JST
rooty, 
* Sun 19 Oct 2014 06:04:28 AM JST
rootx,
* Sun 19 Oct 2014 06:08:28 AM JST
propagate
* Sun 19 Oct 2014 06:08:42 AM JST
sequence_number
* Sun 19 Oct 2014 06:08:51 AM JST
time,
* Sun 19 Oct 2014 06:09:03 AM JST
state, 
* Sun 19 Oct 2014 06:09:11 AM JST
              
* Sun 19 Oct 2014 06:10:51 AM JST
conn, propagate, window, sequence_number, time, child,
              rootx, rooty, eventx, eventy, state, samescreen
* Sun 19 Oct 2014 06:11:06 AM JST
        return conn.core.SendEvent.KeyPress(
            propagate, window, self, sequence_number, time, self,
            child, rootx, rooty, eventx, eventy, state, samescreen)

* Sun 19 Oct 2014 06:12:49 AM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 06:12:53 AM JST
key, 
* Sun 19 Oct 2014 06:13:57 AM JST
pointer_mode, 
* Sun 19 Oct 2014 06:14:05 AM JST
keyboard_mode
* Sun 19 Oct 2014 06:14:07 AM JST
pointer_mode,
* Sun 19 Oct 2014 06:14:41 AM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 06:16:18 AM JST
pass
* Sun 19 Oct 2014 03:57:16 PM JST
conn, 
* Sun 19 Oct 2014 04:03:58 PM JST
conn = xcb2.connect(display=display)
* Sun 19 Oct 2014 04:04:05 PM JST
conn, 
* Sun 19 Oct 2014 04:04:15 PM JST
                
* Sun 19 Oct 2014 04:04:38 PM JST
conn, 
* Sun 19 Oct 2014 04:05:03 PM JST
conn, 
* Sun 19 Oct 2014 04:05:11 PM JST
None
* Sun 19 Oct 2014 04:05:23 PM JST
conn = xcb2.connect(display=display)
* Sun 19 Oct 2014 04:06:10 PM JST
conn, 
* Sun 19 Oct 2014 04:21:33 PM JST

* Sun 19 Oct 2014 04:21:33 PM JST

* Sun 19 Oct 2014 04:21:33 PM JST
from int import int

* Sun 19 Oct 2014 04:21:36 PM JST

class Modifier(int):
    """Class Modifier
    """
    # Attributes:

    # Operations

* Sun 19 Oct 2014 04:24:19 PM JST

* Sun 19 Oct 2014 04:24:19 PM JST

* Sun 19 Oct 2014 04:24:20 PM JST
from Modifier import Modifier

* Sun 19 Oct 2014 04:24:22 PM JST
class Piece:
    """Class Piece
    """
    # Attributes:
    code = None  # () 
    modifier = None  # () 
    
    # Operations
    def setcode(self, code):
        """function setcode
        
        code: int
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def getcode(self):
        """function getcode
        
        returns Keycode
        """
        return None # should raise NotImplementedError()
    
    def setmodifier(self, mod):
        """function setmodifier
        
        mod: int
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def getmodifier(self):
        """function getmodifier
        
        returns Modifier
        """
        return None # should raise NotImplementedError()
    
    def __repr__(self):
        """function __repr__
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __str__(self):
        """function __str__
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __eq__(self):
        """function __eq__
        
        returns bool
        """
        return None # should raise NotImplementedError()
    
    def __ne__(self):
        """function __ne__
        
        returns bool
        """
        return None # should raise NotImplementedError()
    
    def __lt__(self, other):
        """function __lt__
        
        other: 
        
        returns bool
        """
        return None # should raise NotImplementedError()
    
    def __le__(self, other):
        """function __le__
        
        other: 
        
        returns bool
        """
        return None # should raise NotImplementedError()
    
    def __gt__(self, other):
        """function __gt__
        
        other: 
        
        returns bool
        """
        return None # should raise NotImplementedError()
    
    def __ge__(self, other):
        """function __ge__
        
        other: 
        
        returns bool
        """
        return None # should raise NotImplementedError()
    
    def __hash__(self):
        """function __hash__
        
        returns int
        """
        return None # should raise NotImplementedError()
    
    def __add__(self, other):
        """function __add__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __iadd__(self, other):
        """function __iadd__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __sub__(self, other):
        """function __sub__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __isub__(self, other):
        """function __isub__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __mul__(self, other):
        """function __mul__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __imul__(self, other):
        """function __imul__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __div__(self, other):
        """function __div__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __idiv__(self, other):
        """function __idiv__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __mod__(self, other):
        """function __mod__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __imod__(self, other):
        """function __imod__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __int__(self):
        """function __int__
        
        returns int
        """
        return None # should raise NotImplementedError()
    
    def __long__(self):
        """function __long__
        
        returns long
        """
        return None # should raise NotImplementedError()
    
    def __hex__(self):
        """function __hex__
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __or__(self, other):
        """function __or__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __ior__(self, other):
        """function __ior__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __xor__(self, other):
        """function __xor__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __ixor__(self, other):
        """function __ixor__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __and__(self, other):
        """function __and__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __iand__(self, other):
        """function __iand__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __lshift__(self, other):
        """function __lshift__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __ilshift__(self, other):
        """function __ilshift__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __rshift__(self, other):
        """function __rshift__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __irshift__(self, other):
        """function __irshift__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Sun 19 Oct 2014 04:24:43 PM JST
class Key(Piece):
    """Class Key
    """
    # Attributes:
    
    # Operations
    def press(self, window = None, time = 0, child = 0, rootx = 0, rooty = 0, eventx = 0, eventy = 0, samescreen = 0, propagate = 0, display = None):
        """function press
        
        window: 
        time: int
        child: int
        rootx: int
        rooty: int
        eventx: int
        eventy: int
        samescreen: int
        propagate: int
        display: str
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def release(self, window = None, child = 0, rootx = 0, rooty = 0, eventx = 0, eventy = 0, samescreen = 1, propagate = 0, display = None):
        """function release
        
        window: int
        child: int
        rootx: int
        rooty: int
        eventx: int
        eventy: int
        samescreen: int
        propagate: int
        display: str
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def to_keysym(self, display = None):
        """function to_keysym
        
        display: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def grab(self):
        """function grab
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def ungrab(self):
        """function ungrab
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def to_keysym(self):
        """function to_keysym
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Sun 19 Oct 2014 04:25:03 PM JST
class Button(Piece):
    """Class Button
    """
    # Attributes:
    
    # Operations
    def grabpress(self):
        """function grabpress
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def grabrelease(self):
        """function grabrelease
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def ungrab(self):
        """function ungrab
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Sun 19 Oct 2014 04:27:06 PM JST
                
* Sun 19 Oct 2014 04:29:53 PM JST
            
* Sun 19 Oct 2014 04:30:45 PM JST
sequence_number
* Sun 19 Oct 2014 04:31:03 PM JST
propagate,
* Sun 19 Oct 2014 04:32:01 PM JST

* Sun 19 Oct 2014 04:32:01 PM JST

* Sun 19 Oct 2014 04:32:01 PM JST
        return None # should raise NotImplementedError()

* Sun 19 Oct 2014 04:32:43 PM JST
self, propagate, window, sequence_number, time, child, rootx,
              rooty, eventx, eventy, samescreen, display=None
* Sun 19 Oct 2014 04:32:54 PM JST
        conn = xcb2.connect(display=display)
        return conn.core.SendEvent.KeyPress(
            propagate, window, self.code, sequence_number, time, self.code,
            child, rootx, rooty, eventx, eventy, self.modifier, samescreen)

* Sun 19 Oct 2014 04:33:21 PM JST
owner_events, window, modifiers, display=None
* Sun 19 Oct 2014 04:33:31 PM JST
        conn = xcb2.connect(display=display)
        return conn.core.GrabKey.async(owner_events, window, modifiers, self)

* Sun 19 Oct 2014 04:33:40 PM JST
modifiers, 
* Sun 19 Oct 2014 04:34:09 PM JST
window, modifiers, display=None
* Sun 19 Oct 2014 04:34:26 PM JST
modifiers, 
* Sun 19 Oct 2014 04:34:34 PM JST
        conn = xcb2.connect(display=display)
        return conn.core.UngrabKey(self, window, modifiers)

* Sun 19 Oct 2014 04:34:39 PM JST
modifiers
* Sun 19 Oct 2014 04:35:53 PM JST
propagate, window, sequence_number, time, child, rootx,
              rooty, eventx, eventy, state, samescreen, display=None
* Sun 19 Oct 2014 04:36:02 PM JST
state,
* Sun 19 Oct 2014 04:36:31 PM JST
        
* Sun 19 Oct 2014 04:36:34 PM JST
            
* Sun 19 Oct 2014 04:36:43 PM JST
        return self.code.press(
            propagate, window, sequence_number, time, child, rootx, rooty,
            eventx, eventy, self.modifier, samescreen, display)

* Sun 19 Oct 2014 04:36:48 PM JST
press
* Sun 19 Oct 2014 04:36:57 PM JST
    def to_keysym(self, display=None):
        """function to_keysym

        display:

        returns
        """
        return None # should raise NotImplementedError()


* Sun 19 Oct 2014 04:37:34 PM JST
owner_events, window, modifiers, display=None
* Sun 19 Oct 2014 04:38:19 PM JST
window, modifiers, display=None
* Sun 19 Oct 2014 04:38:25 PM JST
None
* Sun 19 Oct 2014 04:38:27 PM JST

* Sun 19 Oct 2014 04:38:28 PM JST

* Sun 19 Oct 2014 04:38:28 PM JST
        conn = xcb2.connect(display=display)

* Sun 19 Oct 2014 04:38:28 PM JST
        conn = xcb2.connect(display=display)

* Sun 19 Oct 2014 04:38:28 PM JST
        conn = xcb2.connect(display=display)
        return conn.core.UngrabKey(self.code, window, self.modifier)

* Sun 19 Oct 2014 04:39:05 PM JST

* Sun 19 Oct 2014 04:39:05 PM JST

* Sun 19 Oct 2014 04:39:05 PM JST
    code = None  # ()

* Sun 19 Oct 2014 04:39:06 PM JST
    code = None  # ()

* Sun 19 Oct 2014 04:39:06 PM JST
    code = None  # ()
    modifier = None  # ()

* Sun 19 Oct 2014 04:39:58 PM JST
code
* Sun 19 Oct 2014 05:14:34 PM JST
from sendkey2.key 
* Sun 19 Oct 2014 05:15:49 PM JST
import 
* Sun 19 Oct 2014 05:15:54 PM JST
import
* Sun 19 Oct 2014 05:17:17 PM JST
sendkey2.key.
* Sun 19 Oct 2014 05:18:23 PM JST
sendkey2.key.
* Sun 19 Oct 2014 10:25:41 PM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 10:25:53 PM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 10:26:43 PM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 10:35:53 PM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 10:35:54 PM JST
return None # should raise NotImplementedError()
* Sun 19 Oct 2014 10:36:54 PM JST
self._modifier |= other
* Sun 19 Oct 2014 10:37:00 PM JST

* Sun 19 Oct 2014 10:37:00 PM JST

* Sun 19 Oct 2014 10:37:00 PM JST
        return None # should raise NotImplementedError()

* Sun 19 Oct 2014 10:40:11 PM JST
self._modifier | other
* Sun 19 Oct 2014 10:41:01 PM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 10:42:29 PM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 10:43:16 PM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 10:44:08 PM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 10:44:27 PM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 10:44:38 PM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 10:44:46 PM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 10:45:02 PM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 10:45:12 PM JST
_modi
* Sun 19 Oct 2014 10:45:27 PM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 10:45:50 PM JST
.__class__(self._code, self._modifier >> other)
* Sun 19 Oct 2014 10:46:06 PM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 10:46:46 PM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 10:51:23 PM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 10:53:02 PM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 10:53:12 PM JST
other == 
* Sun 19 Oct 2014 10:53:12 PM JST
not other == 
* Sun 19 Oct 2014 11:01:21 PM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 11:01:39 PM JST
self._code
* Sun 19 Oct 2014 11:01:59 PM JST
self._modifier
* Sun 19 Oct 2014 11:02:04 PM JST
self._code
* Sun 19 Oct 2014 11:02:12 PM JST
int(self._code) * 1000 + int(self._modifier)
* Sun 19 Oct 2014 11:13:27 PM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 11:13:37 PM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 11:14:08 PM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 11:14:31 PM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 11:16:26 PM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 11:21:21 PM JST
get
* Sun 19 Oct 2014 11:21:22 PM JST
other.get
* Sun 19 Oct 2014 11:21:28 PM JST
other)
* Sun 19 Oct 2014 11:21:28 PM JST
int(other)
* Sun 19 Oct 2014 11:23:26 PM JST
                
* Sun 19 Oct 2014 11:24:41 PM JST
None # should raise NotImplementedError()
* Sun 19 Oct 2014 11:25:58 PM JST
lsef.
* Sun 19 Oct 2014 11:26:26 PM JST
        if isinstance(other, self.__class__):
            return self.__class__(self._code + other.getcode(),
                                  self._modifier | other.getmodifier())
        return self.__class__(self._code + other, self._modifier)

* Sun 19 Oct 2014 11:28:36 PM JST
        if isinstance(other, self.__class__):
            self._code += other.getcode()
            self._modifier |= other.getmodifier()
        else:
            self._code += other
        return self

* Sun 19 Oct 2014 11:29:24 PM JST
        if isinstance(other, self.__class__):
            return self.__class__(self._code - other.getcode(),
                                  self._modifier ^ other.getmodifier())
        return self.__class__(self._code - other, self._modifier)

* Sun 19 Oct 2014 11:30:28 PM JST
        if isinstance(other, self.__class__):
            self._code -= other.getcode()
            self._modifier ^= other.getmodifier()
        else:
            self._code -= other
        return self

* Sun 19 Oct 2014 11:30:47 PM JST
        if isinstance(other, self.__class__):
            return self.__class__(self._code * other.getcode(),
                                  self._modifier | other.getmodifier())
        return self.__class__(self._code * other, self._modifier)

* Sun 19 Oct 2014 11:31:16 PM JST
        if isinstance(other, self.__class__):
            self._code *= other.getcode()
            self._modifier |= other.getmodifier()
        else:
            self._code *= other
        return self

* Sun 19 Oct 2014 11:31:40 PM JST
        if isinstance(other, self.__class__):
            return self.__class__(self._code / other.getcode(),
                                  self._modifier | other.getmodifier())
        return self.__class__(self._code / other, self._modifier)

* Sun 19 Oct 2014 11:31:57 PM JST
        if isinstance(other, self.__class__):
            self._code /= other.getcode()
            self._modifier |= other.getmodifier()
        else:
            self._code /= other
        return self

* Sun 19 Oct 2014 11:50:10 PM JST

* Sun 19 Oct 2014 11:50:10 PM JST

* Sun 19 Oct 2014 11:50:10 PM JST
        super(Piece, self).__and__()

* Sun 19 Oct 2014 11:50:36 PM JST
_modifier 
* Sun 19 Oct 2014 11:50:37 PM JST
self._modifier 
* Sun 19 Oct 2014 11:51:00 PM JST

* Sun 19 Oct 2014 11:51:00 PM JST

* Sun 19 Oct 2014 11:51:00 PM JST
        super(Piece, self).__iand__()

* Sun 19 Oct 2014 11:55:16 PM JST
import
* Wed 22 Oct 2014 02:09:43 AM JST
class KeysymToKeycode:
    """Class KeysymToKeycode
    """
    # Attributes:
    __dict = None  # () 
    __display = None  # () 
    
    # Operations
    def get(self, sym):
        """function get
        
        sym: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def set(self, sym, code):
        """function set
        
        sym: 
        code: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def listsyms(self):
        """function listsyms
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def listcodes(self):
        """function listcodes
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def itersyms(self):
        """function itersyms
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def itercodes(self):
        """function itercodes
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def listsymcode(self):
        """function listsymcode
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def itersymcode(self):
        """function itersymcode
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def clear(self):
        """function clear
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def update(self, dict):
        """function update
        
        dict: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def copy(self):
        """function copy
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __contains__(self, sym):
        """function __contains__
        
        sym: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __delitem__(self, sym):
        """function __delitem__
        
        sym: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __eq__(self, other):
        """function __eq__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __ge__(self, other):
        """function __ge__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __getitem__(self, sym):
        """function __getitem__
        
        sym: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __gt__(self, other):
        """function __gt__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __iter__(self):
        """function __iter__
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __le__(self, other):
        """function __le__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __len__(self):
        """function __len__
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __lt__(self, other):
        """function __lt__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __ne__(self, other):
        """function __ne__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __repr__(self):
        """function __repr__
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __setitem__(self, sym, code):
        """function __setitem__
        
        sym: 
        code: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def fromcodetosym(self):
        """function fromcodetosym
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Wed 22 Oct 2014 02:10:32 AM JST
class KeycodeToKeysym:
    """Class KeycodeToKeysym
    """
    # Attributes:
    __dict = None  # (dict) 
    
    # Operations
    def get(self, display, code, index):
        """function get
        
        display: 
        code: 
        index: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def set(self, code, syms):
        """function set
        
        code: 
        syms: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def listcodes(self):
        """function listcodes
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def listsyms(self):
        """function listsyms
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def itercodes(self):
        """function itercodes
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def itersyms(self):
        """function itersyms
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def listcodesym(self):
        """function listcodesym
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def itercodesym(self):
        """function itercodesym
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def clear(self):
        """function clear
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def update(self, dict):
        """function update
        
        dict: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def copy(self):
        """function copy
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __contains__(self, code):
        """function __contains__
        
        code: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __delitem__(self, code):
        """function __delitem__
        
        code: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __eq__(self, other):
        """function __eq__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __ne__(self, other):
        """function __ne__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __ge__(self, other):
        """function __ge__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __getitem__(self, code):
        """function __getitem__
        
        code: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __gt__(self, other):
        """function __gt__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __iter__(self):
        """function __iter__
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __le__(self, other):
        """function __le__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __len__(self):
        """function __len__
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __lt__(self, other):
        """function __lt__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __repr__(self):
        """function __repr__
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __setitem__(self, code, sym):
        """function __setitem__
        
        code: 
        sym: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def fromsyms(self, symlist, len):
        """function fromsyms
        
        symlist: 
        len: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Wed 22 Oct 2014 02:10:52 AM JST
self
* Wed 22 Oct 2014 02:11:47 AM JST
class KeyboardMapping:
    """Class KeyboardMapping
    """
    # Attributes:
    __codemap = None  # (KeysymToKeycode) 
    __symmap = None  # (KeycodeToKeysym) 
    
    # Operations
    def sym_to_code(self, sym):
        """function sym_to_code
        
        sym: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def code_to_sym(self, code, index):
        """function code_to_sym
        
        code: 
        index: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def get_codemap(self):
        """function get_codemap
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def get_symmap(self):
        """function get_symmap
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def get_display(self):
        """function get_display
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Wed 22 Oct 2014 02:12:25 AM JST
class DisplaysKeyboardMapping:
    """Class DisplaysKeyboardMapping
    """
    # Attributes:
    __maps = None  # () 
    
    # Operations
    def sym_to_code(self, display, sym):
        """function sym_to_code
        
        display: 
        sym: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def code_to_sym(self, display, code):
        """function code_to_sym
        
        display: 
        code: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def get_keyboardmapping(self, display):
        """function get_keyboardmapping
        
        display: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def update(self, display):
        """function update
        
        display: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def clear(self):
        """function clear
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __delitem__(self, display):
        """function __delitem__
        
        display: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def delete(self, display):
        """function delete
        
        display: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __contains__(self, display):
        """function __contains__
        
        display: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def listdisplays(self):
        """function listdisplays
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def iterdisplays(self):
        """function iterdisplays
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def listkeyboardmapping(self):
        """function listkeyboardmapping
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def iterkeyboardmapping(self):
        """function iterkeyboardmapping
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def listitems(self):
        """function listitems
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def iteritems(self):
        """function iteritems
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __iter__(self):
        """function __iter__
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __create_keyboardmapping(self, display):
        """function create_keyboardmapping
        
        display: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Wed 22 Oct 2014 02:15:40 AM JST

* Wed 22 Oct 2014 02:15:40 AM JST

* Wed 22 Oct 2014 02:15:40 AM JST
        self._dict = dic

* Wed 22 Oct 2014 02:15:45 AM JST
update
* Wed 22 Oct 2014 02:15:50 AM JST
self.update
* Wed 22 Oct 2014 02:16:57 AM JST
pass
* Wed 22 Oct 2014 02:17:22 AM JST

* Wed 22 Oct 2014 02:17:22 AM JST

* Wed 22 Oct 2014 02:17:22 AM JST
    __dict = None  # ()

* Wed 22 Oct 2014 02:18:06 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 02:19:14 AM JST
return None # should raise NotImplementedError()
* Wed 22 Oct 2014 02:20:06 AM JST
key
* Wed 22 Oct 2014 02:22:35 AM JST
_dict
* Wed 22 Oct 2014 02:22:45 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 02:22:56 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 02:23:05 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 02:23:17 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 02:23:41 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 02:23:53 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 02:24:03 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 02:29:59 AM JST
return None # should raise NotImplementedError()
* Wed 22 Oct 2014 02:30:46 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 02:40:24 AM JST
symmap
* Wed 22 Oct 2014 02:40:25 AM JST
codemap, symmap
* Wed 22 Oct 2014 02:46:44 AM JST
    def get_codemap(self):
        """function get_codemap

        returns
        """
        return None # should raise NotImplementedError()

    def get_symmap(self):
        """function get_symmap

        returns
        """
        return None # should raise NotImplementedError()


* Wed 22 Oct 2014 02:47:47 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 02:47:52 AM JST
_symmap
* Wed 22 Oct 2014 02:47:57 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 02:48:16 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 02:50:01 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 02:50:08 AM JST
_codemap.
* Wed 22 Oct 2014 02:53:16 AM JST
return self._codemap.get(sym)
* Wed 22 Oct 2014 02:55:35 AM JST
    def __create_keyboardmapping(self, display):
        """function create_keyboardmapping

        display:

        returns
        """
        return None # should raise NotImplementedError()

* Wed 22 Oct 2014 03:05:13 AM JST
syms
* Wed 22 Oct 2014 03:05:14 AM JST
cls
* Wed 22 Oct 2014 03:05:18 AM JST
self
* Wed 22 Oct 2014 03:08:13 AM JST
first_keycode
* Wed 22 Oct 2014 03:08:45 AM JST
        codes = zip(*[iter(reply.keysyms)] * reply.keysyms_per_keycode)
        self._keymap_codes[minkeycode:lastcode] = codes

* Wed 22 Oct 2014 03:09:20 AM JST
reply.
* Wed 22 Oct 2014 03:09:22 AM JST
key
* Wed 22 Oct 2014 03:09:25 AM JST
keysyms_
* Wed 22 Oct 2014 03:09:25 AM JST
reply.keysyms_
* Wed 22 Oct 2014 03:14:18 AM JST
__init__
* Wed 22 Oct 2014 03:14:19 AM JST
dict
* Wed 22 Oct 2014 03:14:26 AM JST
None
* Wed 22 Oct 2014 03:14:27 AM JST
display=None
* Wed 22 Oct 2014 03:16:09 AM JST
self.connection.get_setup()
* Wed 22 Oct 2014 03:16:22 AM JST
connection
* Wed 22 Oct 2014 03:16:24 AM JST
self.
* Wed 22 Oct 2014 03:17:15 AM JST
minkeycode, maxkeycode = setup.min_keycode, setup.max_keycode
* Wed 22 Oct 2014 03:17:16 AM JST
        minkeycode, maxkeycode = setup.min_keycode, setup.max_keycode
        lastcode = maxkeycode + minkeycode

* Wed 22 Oct 2014 03:17:20 AM JST
        reply = self.connection.core.GetKeyboardMapping(
            minkeycode, maxkeycode - minkeycode + 1).reply()

* Wed 22 Oct 2014 03:17:26 AM JST
self.
* Wed 22 Oct 2014 03:17:44 AM JST
reply = 
* Wed 22 Oct 2014 03:18:24 AM JST
return 
* Wed 22 Oct 2014 03:19:19 AM JST
display
* Wed 22 Oct 2014 03:20:38 AM JST
_mincode
* Wed 22 Oct 2014 03:21:18 AM JST
conn = xcb2.connect(display=self._display)
* Wed 22 Oct 2014 03:22:10 AM JST
conn = xcb2.connect(display=self._display)
* Wed 22 Oct 2014 03:22:15 AM JST
None
* Wed 22 Oct 2014 03:22:15 AM JST
display=None
* Wed 22 Oct 2014 03:22:23 AM JST
display = display or ':0.0'
* Wed 22 Oct 2014 03:23:44 AM JST
            
* Wed 22 Oct 2014 03:23:58 AM JST
self.getmaxcode()
* Wed 22 Oct 2014 03:24:06 AM JST
getmincode()
* Wed 22 Oct 2014 03:24:07 AM JST
self.getmincode()
* Wed 22 Oct 2014 03:24:20 AM JST
            
* Wed 22 Oct 2014 03:24:44 AM JST
args
* Wed 22 Oct 2014 03:26:52 AM JST
setup.min_keycode, setup.max_keycode
* Wed 22 Oct 2014 03:27:32 AM JST
mapping
* Wed 22 Oct 2014 03:27:59 AM JST
        codes = zip(*[iter(reply.keysyms)] * reply.keysyms_per_keycode)

* Wed 22 Oct 2014 03:28:15 AM JST
codes
* Wed 22 Oct 2014 03:36:18 AM JST
setup = self.connection.get_setup()
* Wed 22 Oct 2014 03:36:22 AM JST
connection
* Wed 22 Oct 2014 03:36:22 AM JST
self.connection
* Wed 22 Oct 2014 03:36:25 AM JST
minkeycode, maxkeycode = setup.min_keycode, setup.max_keycode
* Wed 22 Oct 2014 03:36:27 AM JST
lastcode = maxkeycode + minkeycode
* Wed 22 Oct 2014 03:36:34 AM JST
connection.core.GetKeyboardMapping(
            minkeycode, maxkeycode - minkeycode + 1).reply()
* Wed 22 Oct 2014 03:36:39 AM JST
connection
* Wed 22 Oct 2014 03:36:49 AM JST
codes = zip(*[iter(reply.keysyms)] * reply.keysyms_per_keycode)
* Wed 22 Oct 2014 03:38:45 AM JST
from t1.listutil.limitlist import ListFill
* Wed 22 Oct 2014 03:38:57 AM JST
ListFill(fill=(), length=256)
* Wed 22 Oct 2014 03:45:18 AM JST
import 
* Wed 22 Oct 2014 03:46:52 AM JST
from sendkey2.key.keyboardmapping import SymMap
* Wed 22 Oct 2014 03:48:03 AM JST
        setup = self.connection.get_setup()
        minkeycode, maxkeycode = setup.min_keycode, setup.max_keycode
        lastcode = maxkeycode + minkeycode
        reply = self.connection.core.GetKeyboardMapping(
            minkeycode, maxkeycode - minkeycode + 1).reply()
        codes = zip(*[iter(reply.keysyms)] * reply.keysyms_per_keycode)
        self._keymap_codes[minkeycode:lastcode] = codes
        return codes

* Wed 22 Oct 2014 03:48:19 AM JST
          
* Wed 22 Oct 2014 03:48:22 AM JST

* Wed 22 Oct 2014 03:48:22 AM JST

* Wed 22 Oct 2014 03:48:23 AM JST
return codes

* Wed 22 Oct 2014 03:48:43 AM JST
setup = c.get_setup()
minkeycode, maxkeycode = setup.min_keycode, setup.max_keycode
lastcode = maxkeycode + minkeycode
reply = c.core.GetKeyboardMapping(minkeycode, maxkeycode - minkeycode + 1).reply()
codes = zip(*[iter(reply.keysyms)] * reply.keysyms_per_keycode)

* Wed 22 Oct 2014 03:49:08 AM JST
[minkeycode:lastcode] = codes
* Wed 22 Oct 2014 03:49:30 AM JST
from t1.listutil.limitlist import ListFill
* Wed 22 Oct 2014 03:49:44 AM JST
self._keymap_codes = ListFill(fill=(), length=256)
* Wed 22 Oct 2014 03:49:46 AM JST
ListFill(fill=(), length=256)
* Wed 22 Oct 2014 03:52:33 AM JST
        for code, syms in enumerate(symslist, start=setup.min_keycode):
            self[xcode.KeyCode(code)] = syms

* Wed 22 Oct 2014 03:52:40 AM JST
setup.
* Wed 22 Oct 2014 03:54:03 AM JST
        codes = self.keys()
        codes.sort()
        return codes[0]

* Wed 22 Oct 2014 03:54:30 AM JST
        codes = self.keys()
        codes.sort()

* Wed 22 Oct 2014 03:54:53 AM JST
self._getsortedcodes()
* Wed 22 Oct 2014 03:58:24 AM JST
ListUtil(reply.keysyms)
* Wed 22 Oct 2014 03:59:30 AM JST
codes.chunks(symlen)
* Wed 22 Oct 2014 03:59:32 AM JST
symlen
* Wed 22 Oct 2014 03:59:39 AM JST
reply.keysyms_per_keycode
* Wed 22 Oct 2014 03:59:43 AM JST
codes
* Wed 22 Oct 2014 03:59:52 AM JST

* Wed 22 Oct 2014 03:59:52 AM JST

* Wed 22 Oct 2014 03:59:52 AM JST
        symslist = zip(*[iter(reply.keysyms)] * reply.keysyms_per_keycode)

* Wed 22 Oct 2014 04:01:20 AM JST
.reply()
* Wed 22 Oct 2014 04:01:30 AM JST
gkm
* Wed 22 Oct 2014 04:01:34 AM JST

* Wed 22 Oct 2014 04:01:34 AM JST

* Wed 22 Oct 2014 04:01:34 AM JST
        reply = gkm().reply()

* Wed 22 Oct 2014 04:02:39 AM JST
from sendkey2.key.keyboardmapping import SymMap
* Wed 22 Oct 2014 05:30:05 AM JST
class SymbolsMap:
    """Class SymbolsMap
    """
    # Attributes:
    __dict = None  # () 
    __display = None  # () 
    
    # Operations
    def getsyms(self, code):
        """function getsyms
        
        code: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def getsym(self, code, index):
        """function getsym
        
        code: 
        index: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def loadsyms(self, syms, mincode):
        """function loadsyms
        
        syms: list
        mincode: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def listsyms(self):
        """function listsyms
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def listcodes(self):
        """function listcodes
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def itersyms(self):
        """function itersyms
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def itercodes(self):
        """function itercodes
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def listsymcode(self):
        """function listsymcode
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def itersymcode(self):
        """function itersymcode
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def clear(self):
        """function clear
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def update(self, dict, **kwargs):
        """function update
        
        dict: 
        **kwargs: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def copy(self):
        """function copy
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __contains__(self, code):
        """function __contains__
        
        code: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __getitem__(self, code):
        """function __getitem__
        
        code: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __setitem__(self, code, syms):
        """function __setitem__
        
        code: 
        syms: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __delitem__(self, code):
        """function __delitem__
        
        code: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __eq__(self, other):
        """function __eq__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __ne__(self, other):
        """function __ne__
        
        other: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __len__(self):
        """function __len__
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __repr__(self):
        """function __repr__
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def fromdisplay(self, display = None):
        """function fromdisplay
        
        display: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Wed 22 Oct 2014 05:31:29 AM JST
None,
* Wed 22 Oct 2014 05:31:29 AM JST
display=None,
* Wed 22 Oct 2014 05:32:59 AM JST

* Wed 22 Oct 2014 05:32:59 AM JST

* Wed 22 Oct 2014 05:32:59 AM JST
        self._dic = dic

* Wed 22 Oct 2014 05:33:11 AM JST

* Wed 22 Oct 2014 05:33:11 AM JST

* Wed 22 Oct 2014 05:33:11 AM JST
        self._kwargs = kwargs

* Wed 22 Oct 2014 05:34:46 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 05:37:51 AM JST
 # should raise NotImplementedError()
* Wed 22 Oct 2014 05:40:21 AM JST
None
* Wed 22 Oct 2014 05:41:08 AM JST
        for code, syms in enumerate(symslist, start=mincode):
            self[xcode.KeyCode(code)] = syms

* Wed 22 Oct 2014 05:41:34 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 05:41:50 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 05:42:02 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 05:42:12 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 05:42:31 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 05:42:44 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 05:42:54 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 05:46:38 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 05:47:07 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 05:48:04 AM JST
__class__
* Wed 22 Oct 2014 05:48:04 AM JST
self.__class__
* Wed 22 Oct 2014 05:48:13 AM JST
KeyCode
* Wed 22 Oct 2014 05:48:14 AM JST
xcode.KeyCode
* Wed 22 Oct 2014 05:50:27 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 05:51:33 AM JST
            raise TypeError(
                'TODO: {}({})'.format('SymbolsMap.__contains__', code))

* Wed 22 Oct 2014 05:52:36 AM JST
            raise TypeError(
                'TODO: {}({})'.format('SymbolsMap.__setitem__', code))

* Wed 22 Oct 2014 05:53:39 AM JST
return None # should raise NotImplementedError()
* Wed 22 Oct 2014 05:54:42 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 05:56:18 AM JST
    def __repr__(self):
        return '{0.__class__.__name__}({1})'.format(self, _pformat(self._map))

* Wed 22 Oct 2014 05:56:48 AM JST
from pprint import pformat as _pformat
* Wed 22 Oct 2014 05:58:14 AM JST
        conn = xcb2.connect(display=self._display)
        setup = conn.get_setup()
        reply = GetKeyboardMapping(
            conn, setup.min_keycode, setup.max_keycode)().reply()
        symslist = ListUtil(reply.keysyms)
        symslist.chunks(reply.keysyms_per_keycode)
        self._setsymslist(symslist, setup.min_keycode)

* Wed 22 Oct 2014 05:58:18 AM JST

* Wed 22 Oct 2014 05:58:18 AM JST

* Wed 22 Oct 2014 05:58:18 AM JST
        return None # should raise NotImplementedError()

* Wed 22 Oct 2014 05:58:25 AM JST
_
* Wed 22 Oct 2014 05:58:26 AM JST
self._
* Wed 22 Oct 2014 05:59:06 AM JST
self
* Wed 22 Oct 2014 05:59:32 AM JST
_set
* Wed 22 Oct 2014 05:59:33 AM JST
self._set
* Wed 22 Oct 2014 06:00:39 AM JST
from sendkey2.key.keyboardmapping import SymMap
* Wed 22 Oct 2014 06:01:47 AM JST
display or ':0.0'
* Wed 22 Oct 2014 06:26:10 AM JST
keysym_to_keycodes
* Wed 22 Oct 2014 06:36:47 AM JST
class CodesMap:
    """Class CodesMap
    """
    # Attributes:
    __dict = None  # (dict) 
    __display = None  # () 
    
    # Operations
    def getdisplay(self):
        """function getdisplay
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def getcodes(self, sym):
        """function getcodes
        
        sym: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def getcode(self, sym, index):
        """function getcode
        
        sym: 
        index: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def listcodes(self):
        """function listcodes
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def listsyms(self):
        """function listsyms
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def itercodes(self):
        """function itercodes
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def itersyms(self):
        """function itersyms
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def items(self):
        """function items
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def iteritems(self):
        """function iteritems
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def clear(self):
        """function clear
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def update(self, dict):
        """function update
        
        dict: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def copy(self):
        """function copy
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __contains__(self, sym):
        """function __contains__
        
        sym: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __delitem__(self, sym):
        """function __delitem__
        
        sym: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __setitem__(self, sym, codes):
        """function __setitem__
        
        sym: 
        codes: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __len__(self):
        """function __len__
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def fromdisplay(self, display = None):
        """function fromdisplay
        
        display: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def fromsymbolsmap(self, map):
        """function fromsymbolsmap
        
        map: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Wed 22 Oct 2014 06:37:46 AM JST
self
* Wed 22 Oct 2014 06:37:49 AM JST
self
* Wed 22 Oct 2014 06:38:17 AM JST
    def __init__(self, display, dic=None):
        r"""

        @Arguments:
        - `dic`:
        - `kwargs`:
        """
        self._display = display
        self._dic = {}
        if dic is not None:
            self.update(dic)


* Wed 22 Oct 2014 06:38:35 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:38:45 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:40:33 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:42:15 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:42:35 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:42:56 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:43:05 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:43:17 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:43:24 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:43:33 AM JST
return None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:44:13 AM JST
__class__
* Wed 22 Oct 2014 06:44:13 AM JST
self.__class__
* Wed 22 Oct 2014 06:44:56 AM JST

* Wed 22 Oct 2014 06:44:56 AM JST

* Wed 22 Oct 2014 06:44:56 AM JST
        return None # should raise NotImplementedError()

* Wed 22 Oct 2014 06:45:05 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:45:37 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:45:53 AM JST
return None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:46:16 AM JST
return None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:47:05 AM JST
'{}({})'.format('SymbolsMap.__setitem__', code)
* Wed 22 Oct 2014 06:47:09 AM JST
SymbolsMap
* Wed 22 Oct 2014 06:47:20 AM JST
code
* Wed 22 Oct 2014 06:47:47 AM JST
raise TypeError('{}({})'.format('CodesMap.__setitem__', sym))
* Wed 22 Oct 2014 06:48:12 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:48:25 AM JST
    def __repr__(self):
        return '{0.__class__.__name__}(\n{1})'.format(self, _pformat(self._dic))

* Wed 22 Oct 2014 06:50:06 AM JST
        return None # should raise NotImplementedError()

* Wed 22 Oct 2014 07:21:50 AM JST
for
* Wed 22 Oct 2014 07:25:16 AM JST
0
* Wed 22 Oct 2014 07:25:16 AM JST
sym == 0
* Wed 22 Oct 2014 07:28:17 AM JST

* Wed 22 Oct 2014 07:28:17 AM JST

* Wed 22 Oct 2014 07:28:17 AM JST
                    continue

* Wed 22 Oct 2014 07:28:49 AM JST
self
* Wed 22 Oct 2014 07:32:25 AM JST
from sendkey2.key.keyboardmapping import *
* Wed 22 Oct 2014 07:33:04 AM JST
fromdisplay
* Wed 22 Oct 2014 07:34:43 AM JST
from sendkey2.key.keyboardmapping import *
s=SymbolsMap.fromdisplay()
c=CodesMap.fromsymbolsmap(s)

* Wed 22 Oct 2014 07:36:43 AM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 07:37:05 AM JST
SymbolsMap.fromdisplay(display=display)
* Wed 22 Oct 2014 07:37:08 AM JST

* Wed 22 Oct 2014 07:37:08 AM JST

* Wed 22 Oct 2014 07:37:09 AM JST
        symsmap = 

* Wed 22 Oct 2014 07:37:28 AM JST
from sendkey2.key.keyboardmapping import *
s=SymbolsMap.fromdisplay()
c=CodesMap.fromsymbolsmap(s)

* Wed 22 Oct 2014 07:37:55 AM JST
from sendkey2.key.keyboardmapping import *
* Wed 22 Oct 2014 08:04:22 AM JST
        if not isinstance(other, self.__class__):
            return False
        if self._code == other.getcode():
            return self._modifier > other.getmodifier()
        return self._code > other.getcode()

* Wed 22 Oct 2014 08:09:35 AM JST
if 
* Wed 22 Oct 2014 08:11:37 AM JST

* Wed 22 Oct 2014 08:11:38 AM JST

* Wed 22 Oct 2014 08:11:38 AM JST
        return 0

* Wed 22 Oct 2014 08:12:21 AM JST
_code
* Wed 22 Oct 2014 08:12:21 AM JST
self._code
* Wed 22 Oct 2014 08:29:05 AM JST
class Piece(object):
    """Class Piece
    """
    # Attributes:
    def __init__(self, code, mod=0):
        r"""

        @Arguments:
        - `code`:
        - `modifier`:
        """
        self._code = xcode.KeyCode(int(code))
        self._modifier = modifier.Modifier(int(mod))

    # Operations
    def getcode(self):
        """function getcode

        returns Keycode
        """
        return self._code

    def getmodifier(self):
        """function getmodifier

        returns Modifier
        """
        return self._modifier

    def __repr__(self):
        """function __repr__

        returns
        """
        return '{0.__class__.__name__}(code={1}, modifier={2})'.format(
            self, int(self._code), int(self._modifier))

    def __str__(self):
        """function __str__

        returns
        """
        return None # should raise NotImplementedError()

    def __eq__(self, other):
        """function __eq__

        returns bool
        """
        if not isinstance(other, self.__class__):
            return False
        return (self._code == other.getcode()
                and self._modifier == other.getmodifier())

    def __ne__(self, other):
        """function __ne__

        returns bool
        """
        return not self == other

    def __lt__(self, other):
        """function __lt__

        other:

        returns bool
        """
        return self._code > other

    def __le__(self, other):
        """function __le__

        other:

        returns bool
        """
        return self._code >= other

    def __gt__(self, other):
        """function __gt__

        other:

        returns bool
        """
        return self._code < other

    def __ge__(self, other):
        """function __ge__

        other:

        returns bool
        """
        return self._code <= other

    def __hash__(self):
        """function __hash__

        returns int
        """
        return hash(int(self._code) * 1000 + int(self._modifier))

    def __add__(self, other):
        """function __add__

        other:

        returns
        """
        if isinstance(other, self.__class__):
            return self.__class__(self._code + other.getcode(),
                                  self._modifier | other.getmodifier())
        return self.__class__(self._code + other, self._modifier)

    def __iadd__(self, other):
        """function __iadd__

        other:

        returns
        """
        if isinstance(other, self.__class__):
            self._code += other.getcode()
            self._modifier |= other.getmodifier()
        else:
            self._code += other
        return self

    def __sub__(self, other):
        """function __sub__

        other:

        returns
        """
        if isinstance(other, self.__class__):
            return self.__class__(self._code - other.getcode(),
                                  self._modifier ^ other.getmodifier())
        return self.__class__(self._code - other, self._modifier)

    def __isub__(self, other):
        """function __isub__

        other:

        returns
        """
        if isinstance(other, self.__class__):
            self._code -= other.getcode()
            self._modifier ^= other.getmodifier()
        else:
            self._code -= other
        return self

    def __mul__(self, other):
        """function __mul__

        other:

        returns
        """
        if isinstance(other, self.__class__):
            return self.__class__(self._code * other.getcode(),
                                  self._modifier | other.getmodifier())
        return self.__class__(self._code * other, self._modifier)

    def __imul__(self, other):
        """function __imul__

        other:

        returns
        """
        if isinstance(other, self.__class__):
            self._code *= other.getcode()
            self._modifier |= other.getmodifier()
        else:
            self._code *= other
        return self

    def __div__(self, other):
        """function __div__

        other:

        returns
        """
        if isinstance(other, self.__class__):
            return self.__class__(self._code / other.getcode(),
                                  self._modifier | other.getmodifier())
        return self.__class__(self._code / other, self._modifier)

    def __idiv__(self, other):
        """function __idiv__

        other:

        returns
        """
        if isinstance(other, self.__class__):
            self._code /= other.getcode()
            self._modifier |= other.getmodifier()
        else:
            self._code /= other
        return self

    def __mod__(self, other):
        """function __mod__

        other:

        returns
        """
        if isinstance(other, self.__class__):
            return self.__class__(self._code % other.getcode(),
                                  self._modifier | other.getmodifier())
        return self.__class__(self._code % other, self._modifier)

    def __imod__(self, other):
        """function __imod__

        other:

        returns
        """
        if isinstance(other, self.__class__):
            self._code %= other.getcode()
            self._modifier |= other.getmodifier()
        else:
            self._code %= other
        return self

    def __int__(self):
        """function __int__

        returns int
        """
        return int(self._code)

    def __long__(self):
        """function __long__

        returns long
        """
        return long(self._code)

    def __hex__(self):
        """function __hex__

        returns
        """
        return hex(self._code)

    def __or__(self, other):
        """function __or__

        other:

        returns
        """
        return self.__class__(self._code, self._modifier | other)

    def __ior__(self, other):
        """function __ior__

        other:

        returns
        """
        self._modifier |= other
        return self

    def __and__(self, other):
        return self.__class__(self._code, self._modifier & other)

    def __iand__(self, other):
        self._modifier &= other
        return self

    def __xor__(self, other):
        """function __xor__

        other:

        returns
        """
        return self.__class__(self._code, self._modifier ^ other)

    def __ixor__(self, other):
        """function __ixor__

        other:

        returns
        """
        self._modifier ^= other
        return self

    def __lshift__(self, other):
        """function __lshift__

        other:

        returns
        """
        return self.__class__(self._code, self._modifier << other)

    def __ilshift__(self, other):
        """function __ilshift__

        other:

        returns
        """
        self._modifier <<= other
        return self

    def __rshift__(self, other):
        """function __rshift__

        other:

        returns
        """
        return self.__class__(self._code, self._modifier >> other)

    def __irshift__(self, other):
        """function __irshift__

        other:

        returns
        """
        self._modifier >>= other
        return self

* Wed 22 Oct 2014 08:40:11 AM JST
piece.Key(code, index)
* Wed 22 Oct 2014 08:46:09 AM JST
from sendkey2.key.keyboardmapping import *
* Wed 22 Oct 2014 08:46:48 AM JST
self, 
* Wed 22 Oct 2014 08:52:51 AM JST
index, 
* Wed 22 Oct 2014 08:59:31 AM JST
codes.append(piece.Key(code, index))
* Wed 22 Oct 2014 08:59:51 AM JST
codes.sort(key=getmodifier)
* Wed 22 Oct 2014 09:01:00 AM JST
from sendkey2.key.keyboardmapping import *
* Wed 22 Oct 2014 09:01:15 AM JST
from sendkey2.key.keyboardmapping import *
c=CodesMap.fromdisplay()

* Wed 22 Oct 2014 09:09:10 AM JST
    @classmethod
    def fromsymbolsmap(cls, map_):
        """function fromsymbolsmap

        map:

        returns
        """
        if not isinstance(map_, SymbolsMap):
            # TODO: (Atami) [2014/10/22]
            raise StandardError()
        def getmodifier(key):
            return key.getmodifier()

        codemap = cls(map_.getdisplay())
        for code, syms in map_.iteritems():
            index = -1
            for sym in syms:
                index += 1
                if 0 == sym:
                    continue
                codes = codemap.getcodes(sym, [])
                codes.append(piece.Key(code, index))
                if 1 >= len(codes):
                    codemap[sym] = codes
                    continue
                codes.sort(key=getmodifier)
        return codemap

* Wed 22 Oct 2014 09:09:54 AM JST
            index = -1
            for sym in syms:
                index += 1
                if 0 == sym:
                    continue
                codes = codemap.getcodes(sym, [])
                codes.append(piece.Key(code, index))
                if 1 >= len(codes):
                    codemap[sym] = codes
                    continue
                codes.sort(key=getmodifier)

* Wed 22 Oct 2014 09:10:20 AM JST
codemap
* Wed 22 Oct 2014 09:10:29 AM JST
codemap
* Wed 22 Oct 2014 09:10:32 AM JST
codes
* Wed 22 Oct 2014 09:11:00 AM JST
        def getmodifier(key):
            return key.getmodifier()


* Wed 22 Oct 2014 09:11:19 AM JST
self
* Wed 22 Oct 2014 09:12:37 AM JST
from sendkey2.key.keyboardmapping import *
c=CodesMap.fromdisplay()

* Wed 22 Oct 2014 09:22:04 AM JST
syms
* Wed 22 Oct 2014 09:22:31 AM JST

* Wed 22 Oct 2014 09:22:32 AM JST

* Wed 22 Oct 2014 09:22:32 AM JST
        index = -1

* Wed 22 Oct 2014 09:22:32 AM JST

* Wed 22 Oct 2014 09:22:32 AM JST

* Wed 22 Oct 2014 09:22:32 AM JST
            index += 1

* Wed 22 Oct 2014 09:24:56 AM JST
def
* Wed 22 Oct 2014 09:25:30 AM JST
codes = self.getcodes(sym, [])
* Wed 22 Oct 2014 09:25:42 AM JST
codes.append(piece.Key(code, index))
* Wed 22 Oct 2014 09:30:33 AM JST
        def getmodifier(key):
            return key.getmodifier()


* Wed 22 Oct 2014 09:32:15 AM JST
from sendkey2.key.keyboardmapping import *
c=CodesMap.fromdisplay()

* Wed 22 Oct 2014 09:35:28 AM JST
    def appendkey(self, sym, key):
        r"""SUMMARY

        appendkey(sym, key)

        @Arguments:
        - `sym`:
        - `key`:

        @Return:

        @Error:
        """
        def getmodifier(key):
            return key.getmodifier()

        if not sym in self:
            self[sym] = []
        codes = self.getcodes(sym)
        codes.append(key)
        if 1 < len(codes):
            codes.sort(key=getmodifier)

    def setsyms(self, code, syms):
        r"""SUMMARY

        setsyms(code, syms)

        @Arguments:
        - `code`:
        - `syms`:

        @Return:

        @Error:
        """
        for index, sym in enumerate(syms, start=0):
            if 0 == sym:
                continue
            self.appendkey(sym, piece.Key(code, index))

    @classmethod
    def fromsymbolsmap(cls, map_):
        """function fromsymbolsmap

        map:

        returns
        """
        if not isinstance(map_, SymbolsMap):
            # TODO: (Atami) [2014/10/22]
            raise StandardError()

        codemap = cls(map_.getdisplay())
        for code, syms in map_.iteritems():
            codemap.setsyms(code, syms)
        return codemap


* Wed 22 Oct 2014 09:36:55 AM JST
conn = xcb2.connect(display=disp)
* Wed 22 Oct 2014 09:37:06 AM JST
        setup = conn.get_setup()
        reply = GetKeyboardMapping(
            conn, setup.min_keycode, setup.max_keycode)().reply()

* Wed 22 Oct 2014 09:40:05 AM JST
class WrapGetKeyboardMappingReply(WrapReplyAbstract):
    r"""WrapGetKeyboardMappingReply

    WrapGetKeyboardMappingReply is a WrapReplyAbstract.
    Responsibility:
    """
    @property
    def keysyms(self, ):
        r"""SUMMARY

        keysyms()

        @Return:

        @Error:
        """
        from sendkey2.key.keysym import Keysym
        return [Keysym(sym) for sym in self._raw.keysyms]

    @property
    def keysyms_per_keycode(self, ):
        r"""SUMMARY

        keysyms_per_keycode()

        @Return:

        @Error:
        """
        return self._raw.keysyms_per_keycode

* Wed 22 Oct 2014 09:42:16 AM JST
    def check(self, ):
        r"""SUMMARY

        check()

        @Return:
        """
        return self._cookie.check()

    def reply(self, ):
        r"""SUMMARY

        reply()

        @Return:
        """
        return wreply.WrapQueryTreeReply(
            self._connection, self._cookie.reply())

* Wed 22 Oct 2014 09:42:31 AM JST
WrapQueryTreeReply
* Wed 22 Oct 2014 09:44:31 AM JST
from xcb2.xproto.wcookie import WrapGetGeometryCookie
* Wed 22 Oct 2014 09:44:36 AM JST
WrapGetGeometryCookie
* Wed 22 Oct 2014 09:44:48 AM JST
WrapGetKeyboardMappingCookie
* Wed 22 Oct 2014 09:45:14 AM JST
            
* Wed 22 Oct 2014 09:45:48 AM JST
from sendkey2.key.keyboardmapping import *
c=CodesMap.fromdisplay()
c
import xcb2
conn = xcb2.connect()
        setup = conn.get_setup()
        reply = GetKeyboardMapping(
            conn, setup.min_keycode, setup.max_keycode)().reply()

* Wed 22 Oct 2014 09:46:02 AM JST
import xcb2
conn = xcb2.connect()
setup = conn.get_setup()

* Wed 22 Oct 2014 09:46:11 AM JST
reply = GetKeyboardMapping(conn, setup.min_keycode, setup.max_keycode)().reply()
* Wed 22 Oct 2014 09:46:28 AM JST
from sendkey2.key.keyboardmapping import *
* Wed 22 Oct 2014 09:46:33 AM JST
reply = GetKeyboardMapping(conn, setup.min_keycode, setup.max_keycode)().reply()
* Wed 22 Oct 2014 09:47:10 AM JST
c=CodesMap.fromdisplay()
* Wed 22 Oct 2014 09:51:27 AM JST

    @classmethod
    def fromdisplay(cls, display=None):
        """function fromdisplay

        display:

        returns
        """
        return cls.fromsymbolsmap(SymbolsMap.fromdisplay(display=display))

* Wed 22 Oct 2014 09:58:49 AM JST
symmap, codemap
* Wed 22 Oct 2014 09:58:57 AM JST
symmap
* Wed 22 Oct 2014 09:59:19 AM JST
codemap
* Wed 22 Oct 2014 10:01:43 AM JST
return self._codemap.getcodes(sym)
* Wed 22 Oct 2014 10:02:15 AM JST
self.sym_to_codes(sym)
* Wed 22 Oct 2014 10:03:39 AM JST
    def code_to_syms(self, code):
        r"""SUMMARY

        code_to_syms(code)

        @Arguments:
        - `code`:

        @Return:

        @Error:
        """
        return self._symmap.get(code)

* Wed 22 Oct 2014 10:06:04 AM JST
default
* Wed 22 Oct 2014 05:24:04 PM JST
SymbolsMap.fromdisplay(display=display)
* Wed 22 Oct 2014 05:25:02 PM JST
CodesMap.fromsymbolsmap(self._symmap)
* Wed 22 Oct 2014 05:25:14 PM JST
_
* Wed 22 Oct 2014 05:25:14 PM JST
self._
* Wed 22 Oct 2014 06:39:35 PM JST
class KeyboardMappingHolder:
    """Class KeyboardMappingHolder
    """
    # Attributes:
    __maps = None  # () 
    
    # Operations
    def get_keyboardmapping(self, display):
        """function get_keyboardmapping
        
        display: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def update(self, display):
        """function update
        
        display: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def clear(self):
        """function clear
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def delete(self, display):
        """function delete
        
        display: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def listdisplays(self):
        """function listdisplays
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def iterdisplays(self):
        """function iterdisplays
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def listkeyboardmapping(self):
        """function listkeyboardmapping
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def iterkeyboardmapping(self):
        """function iterkeyboardmapping
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def items(self):
        """function items
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def iteritems(self):
        """function iteritems
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __delitem__(self, display):
        """function __delitem__
        
        display: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __contains__(self, display):
        """function __contains__
        
        display: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __getitem__(self, display):
        """function __getitem__
        
        display: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __setitem__(self, display, keyboardmapping):
        """function __setitem__
        
        display: 
        keyboardmapping: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def __create_keyboardmapping(self, display):
        """function create_keyboardmapping
        
        display: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Wed 22 Oct 2014 06:41:13 PM JST
return None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:42:44 PM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:43:04 PM JST
return None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:43:13 PM JST
return None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:43:49 PM JST
return None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:43:59 PM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:44:10 PM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:44:17 PM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:44:26 PM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:44:38 PM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:44:45 PM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:44:46 PM JST
_
* Wed 22 Oct 2014 06:44:47 PM JST
slf._
* Wed 22 Oct 2014 06:44:55 PM JST
return None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:45:05 PM JST
delete
* Wed 22 Oct 2014 06:45:26 PM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:45:35 PM JST
None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:45:44 PM JST
return None # should raise NotImplementedError()
* Wed 22 Oct 2014 06:46:04 PM JST
keyboard
* Wed 22 Oct 2014 06:46:07 PM JST
keyboard
* Wed 22 Oct 2014 06:46:41 PM JST
_maps
* Wed 22 Oct 2014 06:48:27 PM JST
STRING
* Wed 22 Oct 2014 06:50:15 PM JST
import
* Thu 23 Oct 2014 01:36:01 AM JST
~/.pylib/sendkey2/key/
* Thu 23 Oct 2014 01:37:27 AM JST
KeycodeToKeysym
* Thu 23 Oct 2014 01:38:00 AM JST
KeycodeToKeysym
* Thu 23 Oct 2014 03:22:20 AM JST
class Converter:
    """Class Converter
    """
    # Attributes:
    __convert = None  # () 
    
    # Operations
    def get(self):
        """function get
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def set(self, convert):
        """function set
        
        convert: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def convert(self):
        """function convert
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Thu 23 Oct 2014 03:22:57 AM JST
None # should raise NotImplementedError()
* Thu 23 Oct 2014 03:23:06 AM JST
return None # should raise NotImplementedError()
* Thu 23 Oct 2014 03:23:15 AM JST
None # should raise NotImplementedError()
* Thu 23 Oct 2014 03:24:00 AM JST
_conver
* Thu 23 Oct 2014 03:24:00 AM JST
self._conver
* Thu 23 Oct 2014 03:24:22 AM JST
convert
* Thu 23 Oct 2014 03:25:13 AM JST
class Convert:
    """Abstract class Convert
    """
    # Attributes:
    
    # Operations
    def convert(self):
        """function convert
        
        returns 
        """
        raise NotImplementedError()
    


* Thu 23 Oct 2014 03:25:39 AM JST
ABC
* Thu 23 Oct 2014 03:27:47 AM JST
class KeyConvert(Convert):
    """Class KeyConvert
    """
    # Attributes:
    __keyconverter = None  # () 
    
    # Operations
    def getconverter(self):
        """function getconverter
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Thu 23 Oct 2014 03:28:35 AM JST
convert.
* Thu 23 Oct 2014 03:29:16 AM JST

* Thu 23 Oct 2014 03:29:16 AM JST

* Thu 23 Oct 2014 03:29:16 AM JST
import convert

* Thu 23 Oct 2014 03:32:26 AM JST
class KeyConverter:
    """Class KeyConverter
    """
    # Attributes:
    
    # Operations
    def sym_to_key(self, display, sym):
        """function sym_to_key
        
        display: 
        sym: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def sym_to_code(self, display, sym):
        """function sym_to_code
        
        display: 
        sym: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def code_to_sym(self, display, code):
        """function code_to_sym
        
        display: 
        code: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def sym_to_name(self, sym):
        """function sym_to_name
        
        sym: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def name_to_sym(self, name):
        """function name_to_sym
        
        name: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def sym_to_char(self, sym):
        """function sym_to_char
        
        sym: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def char_to_sym(self, char):
        """function char_to_sym
        
        char: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Thu 23 Oct 2014 03:37:21 AM JST
None # should raise NotImplementedError()
* Thu 23 Oct 2014 03:41:31 AM JST
keysymdef.Keysymdef.sym_to_name(self)
* Thu 23 Oct 2014 03:41:36 AM JST
self
* Thu 23 Oct 2014 03:57:16 AM JST
KeyboardMappingHolder
* Thu 23 Oct 2014 03:57:41 AM JST
self
* Thu 23 Oct 2014 03:58:04 AM JST
None # should raise NotImplementedError()
* Thu 23 Oct 2014 03:58:55 AM JST
None # should raise NotImplementedError()
* Thu 23 Oct 2014 03:59:39 AM JST
import
* Fri 24 Oct 2014 05:04:58 AM JST
http://www.tokyo-np.co.jp/
* Fri 24 Oct 2014 03:06:27 PM JST
http://www.cs.mcgill.ca/~hv/classes/CS400/01.hchen/src/parser/
* Fri 24 Oct 2014 10:41:59 PM JST
Factor
* Fri 24 Oct 2014 10:59:52 PM JST
braceleft
* Sat 25 Oct 2014 04:13:43 PM JST
from collections import OrderedDict
* Sat 25 Oct 2014 04:14:42 PM JST
OrderedDict
* Sat 25 Oct 2014 04:14:45 PM JST
dict
* Sat 25 Oct 2014 04:25:07 PM JST
\\
* Sat 25 Oct 2014 04:25:09 PM JST
'\\'
* Sat 25 Oct 2014 04:25:27 PM JST
'{backslash}'
* Sat 25 Oct 2014 04:26:47 PM JST
'\\{'
* Sat 25 Oct 2014 04:29:44 PM JST
hash(
* Sat 25 Oct 2014 04:36:24 PM JST
key
* Sat 25 Oct 2014 04:39:49 PM JST
key
* Sat 25 Oct 2014 04:41:14 PM JST
regexp = re.compile(key)
* Sat 25 Oct 2014 04:41:19 PM JST
        for arg in (key, val):
            if not isinstance(arg, str):
                # TODO: (Atami) [2014/10/25]
                raise TypeError()

* Sat 25 Oct 2014 04:41:31 PM JST

* Sat 25 Oct 2014 04:41:31 PM JST

* Sat 25 Oct 2014 04:41:31 PM JST
        for arg in (key, val):

* Sat 25 Oct 2014 04:41:38 PM JST
arg
* Sat 25 Oct 2014 04:42:53 PM JST
re.compile(key)
* Sat 25 Oct 2014 04:52:19 PM JST

* Sat 25 Oct 2014 04:52:20 PM JST

* Sat 25 Oct 2014 04:52:20 PM JST
from or import 

* Sat 25 Oct 2014 04:53:03 PM JST
import
* Sat 25 Oct 2014 04:53:56 PM JST
OrderedReplace
* Sat 25 Oct 2014 04:54:46 PM JST
OrderedReplace
* Sat 25 Oct 2014 05:00:50 PM JST
OrderedDict
* Sat 25 Oct 2014 05:01:04 PM JST
list(
* Sat 25 Oct 2014 05:03:46 PM JST
[(rxp.pattern, repl) for rxp, repl in self._dict.iteritems()]
* Sat 25 Oct 2014 05:03:57 PM JST

* Sat 25 Oct 2014 05:03:57 PM JST

* Sat 25 Oct 2014 05:03:57 PM JST
        dic = dict(self._dict)

* Sat 25 Oct 2014 05:04:00 PM JST
dict(
* Sat 25 Oct 2014 05:04:02 PM JST
_dict))
* Sat 25 Oct 2014 05:04:03 PM JST
self._dict))
* Sat 25 Oct 2014 05:04:09 PM JST
            
* Sat 25 Oct 2014 05:05:18 PM JST
world
* Sat 25 Oct 2014 05:05:27 PM JST
google
* Sat 25 Oct 2014 05:06:03 PM JST
[(rxp.pattern, repl) for rxp, repl in self._dict.iteritems()]
* Sat 25 Oct 2014 05:06:50 PM JST
args
* Sat 25 Oct 2014 05:07:06 PM JST

* Sat 25 Oct 2014 05:07:06 PM JST

* Sat 25 Oct 2014 05:07:06 PM JST
from pprint import pformat as _pformat

* Sat 25 Oct 2014 05:17:55 PM JST
from sendkeys.linereplacer import LineReplacer, REPLACE_MAP
* Sat 25 Oct 2014 05:18:53 PM JST
'{+'
* Sat 25 Oct 2014 05:21:37 PM JST
MutableMapping.update
* Sat 25 Oct 2014 05:21:39 PM JST
update = MutableMapping.update
* Sat 25 Oct 2014 05:22:00 PM JST
update = 
* Sat 25 Oct 2014 05:22:01 PM JST
update
* Sat 25 Oct 2014 05:22:07 PM JST
update = MutableMapping.update
* Sat 25 Oct 2014 05:23:02 PM JST
*args, **kwargs
* Sat 25 Oct 2014 05:27:13 PM JST

* Sat 25 Oct 2014 05:27:13 PM JST

* Sat 25 Oct 2014 05:27:13 PM JST
    update = MutableMapping.update

* Sat 25 Oct 2014 05:27:31 PM JST
        if dict_ is None:
            pass
        elif isinstance(dict_, self.__class__):
            super(TwoWayDict, self).update(dict_)
        elif isinstance(dict_, dict):
            for key, value in dict_.iteritems():
                self[key] = value
        else:
            # if (('key', 1), ('key2', 2)), and so on
            self.update(dict(dict_)) # recursive call
        if len(kwargs):
            self.update(kwargs) # recursive call


* Sat 25 Oct 2014 05:27:36 PM JST

* Sat 25 Oct 2014 05:27:37 PM JST

* Sat 25 Oct 2014 05:27:37 PM JST
        self._dict.update(dict_, **kwargs)

* Sat 25 Oct 2014 05:28:34 PM JST
None
* Sat 25 Oct 2014 05:28:34 PM JST
dict_=None
* Sat 25 Oct 2014 05:28:43 PM JST
dict_
* Sat 25 Oct 2014 05:32:48 PM JST
args
* Sat 25 Oct 2014 05:33:55 PM JST
            for key, value in dict_.iteritems():
                self[key] = value

* Sat 25 Oct 2014 05:35:10 PM JST
args
* Sat 25 Oct 2014 05:35:26 PM JST
args
* Sat 25 Oct 2014 05:35:34 PM JST
args
* Sat 25 Oct 2014 05:36:01 PM JST

* Sat 25 Oct 2014 05:36:01 PM JST

* Sat 25 Oct 2014 05:36:01 PM JST
from collections import MutableMapping, Mapping

* Sat 25 Oct 2014 05:36:05 PM JST
_OrderedDict
* Sat 25 Oct 2014 05:37:32 PM JST
_OrderedDict()
* Sat 25 Oct 2014 05:38:03 PM JST
from collections import OrderedDict
* Sat 25 Oct 2014 05:38:13 PM JST
from sendkeys.linereplacer import LineReplacer, REPLACE_MAP
* Sat 25 Oct 2014 05:38:27 PM JST
REPLACE_MAP
* Sat 25 Oct 2014 05:38:39 PM JST
o=OrderedReplace(
* Sat 25 Oct 2014 05:38:49 PM JST
list(REPLACE_MAP)
* Sat 25 Oct 2014 05:39:05 PM JST
[('{+'  , '{plus'          ),
                           ('\\+' , '{plus}'         ),
                           ('{!'  , '{exclam'        ),
                           ('\\!' , '{exclam}'       ),
                           ('{#'  , '{numbersign'    ),
                           ('\\#' , '{numbersign}'   ),
                           ('{^'  , '{asciicircum'   ),
                           ('\\^' , '{asciicircum}'  ),
                           ('{_'  , '{underscore'    ),
                           ('\\_' , '{underscore}'   ),
                           ('{}}' , '{bracketright}' ),
                           ('{} ' , '{bracketright ' ),
                           ('{{}' , '{bracketleft}'  ),
                           ('{{ ' , '{bracketleft '  ),
                           # ('{{'  , '{bracketleft}'  ),
                           ('\\{' , '{bracketleft}'  ),
                           ('\\}' , '{bracketright}' ),
                           ('\"'  , '{quotedbl}'     ),
                           ('$'   , '{dollar}'       ),
                           ('%'   , '{percent}'      ),
                           ('&'   , '{ampersand}'    ),
                           ("'"   , '{apostrophe}'   ),
                           ('`'   , '{quoteleft}'    ),
                           ('('   , '{parenleft}'    ),
                           (')'   , '{parenright}'   ),
                           ('~'   , '{asciitilde}'   ),
                           ('|'   , '{bar}'          ),
                           ('='   , '{equal}'        ),
                           ('*'   , '{asterisk}'     ),
                           ('>'   , '{less}'         ),
                           ('<'   , '{greater}'      ),
                           ('?'   , '{question}'     ),
                           ('-'   , '{minus}'        ),
                           (','   , '{comma}'        ),
                           ('.'   , '{period}'       ),
                           ('/'   , '{slash}'        ),
                           ('@'   , '{at}'           ),
                           (':'   , '{colon}'        ),
                           (';'   , '{semicolon}'    ),
                           ('['   , '{braceleft}'    ),
                           (']'   , '{braceright}'   ),
                           ('\\'  , '{backslash}'    ),
                           ]
* Sat 25 Oct 2014 05:39:15 PM JST
REPLACE_MA
* Sat 25 Oct 2014 05:40:28 PM JST
[('{+'  , '{plus'          ),
                           ('\\+' , '{plus}'         ),
                           ('{!'  , '{exclam'        ),
                           ('\\!' , '{exclam}'       ),
                           ('{#'  , '{numbersign'    ),
                           ('\\#' , '{numbersign}'   ),
                           ('{^'  , '{asciicircum'   ),
                           ('\\^' , '{asciicircum}'  ),
                           ('{_'  , '{underscore'    ),
                           ('\\_' , '{underscore}'   ),
                           ('{}}' , '{bracketright}' ),
                           ('{} ' , '{bracketright ' ),
                           ('{{}' , '{bracketleft}'  ),
                           ('{{ ' , '{bracketleft '  ),
                           # ('{{'  , '{bracketleft}'  ),
                           ('\\{' , '{bracketleft}'  ),
                           ('\\}' , '{bracketright}' ),
                           ('\"'  , '{quotedbl}'     ),
                           ('$'   , '{dollar}'       ),
                           ('%'   , '{percent}'      ),
                           ('&'   , '{ampersand}'    ),
                           ("'"   , '{apostrophe}'   ),
                           ('`'   , '{quoteleft}'    ),
                           ('('   , '{parenleft}'    ),
                           (')'   , '{parenright}'   ),
                           ('~'   , '{asciitilde}'   ),
                           ('|'   , '{bar}'          ),
                           ('='   , '{equal}'        ),
                           ('*'   , '{asterisk}'     ),
                           ('>'   , '{less}'         ),
                           ('<'   , '{greater}'      ),
                           ('?'   , '{question}'     ),
                           ('-'   , '{minus}'        ),
                           (','   , '{comma}'        ),
                           ('.'   , '{period}'       ),
                           ('/'   , '{slash}'        ),
                           ('@'   , '{at}'           ),
                           (':'   , '{colon}'        ),
                           (';'   , '{semicolon}'    ),
                           ('['   , '{braceleft}'    ),
                           (']'   , '{braceright}'   ),
                           ('\\'  , '{backslash}'    ),
                           ]
* Sat 25 Oct 2014 05:40:47 PM JST
'{^'
* Sat 25 Oct 2014 05:40:54 PM JST
'{+'
* Sat 25 Oct 2014 05:42:36 PM JST
(')', '{parenright}')
* Sat 25 Oct 2014 05:46:07 PM JST
\{\+
\\\+
\{\!
\\\!
\{\#
\\\#
\{\^
\\\^
\{\_
\\\_
\{\}\}
\{\}\ 
\{\{\}
\{\{\ 
\\\{
\\\}
\"
\$
\%
\&
\'
\`
\~
\|
\=
\*
\>
\<
\?
\-
\,
\.
\/
\@
\:
\;
\[
\]
\\

* Sat 25 Oct 2014 05:46:37 PM JST
('{+'  , '{plus'          ),
                           ('\\+' , '{plus}'         ),
                           ('{!'  , '{exclam'        ),
                           ('\\!' , '{exclam}'       ),
                           ('{#'  , '{numbersign'    ),
                           ('\\#' , '{numbersign}'   ),
                           ('{^'  , '{asciicircum'   ),
                           ('\\^' , '{asciicircum}'  ),
                           ('{_'  , '{underscore'    ),
                           ('\\_' , '{underscore}'   ),
                           ('{}}' , '{bracketright}' ),
                           ('{} ' , '{bracketright ' ),
                           ('{{}' , '{bracketleft}'  ),
                           ('{{ ' , '{bracketleft '  ),
                           # ('{{'  , '{bracketleft}'  ),
                           ('\\{' , '{bracketleft}'  ),
                           ('\\}' , '{bracketright}' ),
                           ('\"'  , '{quotedbl}'     ),
                           ('$'   , '{dollar}'       ),
                           ('%'   , '{percent}'      ),
                           ('&'   , '{ampersand}'    ),
                           ("'"   , '{apostrophe}'   ),
                           ('`'   , '{quoteleft}'    ),
                           ('('   , '{parenleft}'    ),
                           (')'   , '{parenright}'   ),
                           ('~'   , '{asciitilde}'   ),
                           ('|'   , '{bar}'          ),
                           ('='   , '{equal}'        ),
                           ('*'   , '{asterisk}'     ),
                           ('>'   , '{less}'         ),
                           ('<'   , '{greater}'      ),
                           ('?'   , '{question}'     ),
                           ('-'   , '{minus}'        ),
                           (','   , '{comma}'        ),
                           ('.'   , '{period}'       ),
                           ('/'   , '{slash}'        ),
                           ('@'   , '{at}'           ),
                           (':'   , '{colon}'        ),
                           (';'   , '{semicolon}'    ),
                           ('['   , '{braceleft}'    ),
                           (']'   , '{braceright}'   ),
                           ('\\'  , '{backslash}'    ),
                           ]
* Sat 25 Oct 2014 05:47:13 PM JST
\{\+
* Sat 25 Oct 2014 05:47:20 PM JST
\{\+
\\\+
* Sat 25 Oct 2014 05:47:22 PM JST
\\\+
* Sat 25 Oct 2014 05:47:31 PM JST
\{\!
* Sat 25 Oct 2014 05:47:44 PM JST
\\\!
* Sat 25 Oct 2014 05:47:53 PM JST
\{\#
* Sat 25 Oct 2014 05:47:58 PM JST
\\\#
* Sat 25 Oct 2014 05:48:02 PM JST
\{\^
* Sat 25 Oct 2014 05:48:22 PM JST
\\\^
* Sat 25 Oct 2014 05:48:26 PM JST
\{\_
* Sat 25 Oct 2014 05:48:31 PM JST
\\\_
* Sat 25 Oct 2014 05:48:36 PM JST
\{\}\}
* Sat 25 Oct 2014 05:48:40 PM JST
\{\}\ 
* Sat 25 Oct 2014 05:48:50 PM JST
\{\{\}
* Sat 25 Oct 2014 05:48:55 PM JST
\{\{\ 
* Sat 25 Oct 2014 05:49:02 PM JST
\\\{
* Sat 25 Oct 2014 05:49:07 PM JST
\\\}
* Sat 25 Oct 2014 05:49:12 PM JST
\"
* Sat 25 Oct 2014 05:49:31 PM JST
\$
* Sat 25 Oct 2014 05:50:15 PM JST
REP = [(r'\{\+'  , '{plus'          ),
       (r'\\\+' , '{plus}'         ),
       (r'\{\!'  , '{exclam'        ),
       (r'\\\!' , '{exclam}'       ),
       (r'\{\#'  , '{numbersign'    ),
       (r'\\\#' , '{numbersign}'   ),
       (r'\{\^'  , '{asciicircum'   ),
       (r'\\\^' , '{asciicircum}'  ),
       (r'\{\_'  , '{underscore'    ),
       (r'\\\_' , '{underscore}'   ),
       (r'\{\}\}' , '{bracketright}' ),
       (r'\{\}\ ' , '{bracketright ' ),
       (r'\{\{\}' , '{bracketleft}'  ),
       (r'\{\{\ ' , '{bracketleft '  ),
       # ('{{'  , '{bracketleft}'  ),
       (r'\\\{' , '{bracketleft}'  ),
       (r'\\\}' , '{bracketright}' ),
       (r'\"'  , '{quotedbl}'     ),
       (r'\$'   , '{dollar}'       ),
       (r'\%'   , '{percent}'      ),
       (r'\&'   , '{ampersand}'    ),
       (r"\'"   , '{apostrophe}'   ),
       (r'\`'   , '{quoteleft}'    ),
       (r'\('   , '{parenleft}'    ),
       (r'\)'   , '{parenright}'   ),
       (r'\~'   , '{asciitilde}'   ),
       (r'\|'   , '{bar}'          ),
       (r'\='   , '{equal}'        ),
       (r'\*'   , '{asterisk}'     ),
       (r'\>'   , '{less}'         ),
       (r'\<'   , '{greater}'      ),
       (r'\?'   , '{question}'     ),
       (r'\-'   , '{minus}'        ),
       (r'\,'   , '{comma}'        ),
       (r'\.'   , '{period}'       ),
       (r'\/'   , '{slash}'        ),
       (r'\@'   , '{at}'           ),
       (r'\:'   , '{colon}'        ),
       (r'\;'   , '{semicolon}'    ),
       (r'\['   , '{braceleft}'    ),
       (r'\]'   , '{braceright}'   ),
       (r'\\'  , '{backslash}'    ),
       ]
* Sat 25 Oct 2014 05:51:31 PM JST
'{!}\\+'
* Sat 25 Oct 2014 05:51:48 PM JST
'hello(world'
* Sat 25 Oct 2014 05:52:00 PM JST
'&_|=*'
* Sat 25 Oct 2014 05:53:41 PM JST
'{underscore}'
* Sat 25 Oct 2014 05:54:16 PM JST
REP = [(r'\{\+'  , '{plus'          ),
       (r'\\\+' , '{plus}'         ),
       (r'\{\!'  , '{exclam'        ),
       (r'\\\!' , '{exclam}'       ),
       (r'\{\#'  , '{numbersign'    ),
       (r'\\\#' , '{numbersign}'   ),
       (r'\{\^'  , '{asciicircum'   ),
       (r'\\\^' , '{asciicircum}'  ),
       (r'\{\_'  , '{underscore'    ),
       (r'\_' , '{underscore}'   ),
       (r'\{\}\}' , '{bracketright}' ),
       (r'\{\}\ ' , '{bracketright ' ),
       (r'\{\{\}' , '{bracketleft}'  ),
       (r'\{\{\ ' , '{bracketleft '  ),
       # ('{{'  , '{bracketleft}'  ),
       (r'\\\{' , '{bracketleft}'  ),
       (r'\\\}' , '{bracketright}' ),
       (r'\"'  , '{quotedbl}'     ),
       (r'\$'   , '{dollar}'       ),
       (r'\%'   , '{percent}'      ),
       (r'\&'   , '{ampersand}'    ),
       (r"\'"   , '{apostrophe}'   ),
       (r'\`'   , '{quoteleft}'    ),
       (r'\('   , '{parenleft}'    ),
       (r'\)'   , '{parenright}'   ),
       (r'\~'   , '{asciitilde}'   ),
       (r'\|'   , '{bar}'          ),
       (r'\='   , '{equal}'        ),
       (r'\*'   , '{asterisk}'     ),
       (r'\>'   , '{less}'         ),
       (r'\<'   , '{greater}'      ),
       (r'\?'   , '{question}'     ),
       (r'\-'   , '{minus}'        ),
       (r'\,'   , '{comma}'        ),
       (r'\.'   , '{period}'       ),
       (r'\/'   , '{slash}'        ),
       (r'\@'   , '{at}'           ),
       (r'\:'   , '{colon}'        ),
       (r'\;'   , '{semicolon}'    ),
       (r'\['   , '{braceleft}'    ),
       (r'\]'   , '{braceright}'   ),
       (r'\\'  , '{backslash}'    ),
       ]

* Sat 25 Oct 2014 05:55:54 PM JST
       (r'\\\+' , '{plus}'         ),
* Sat 25 Oct 2014 06:00:15 PM JST
'{}}'
* Sat 25 Oct 2014 07:51:05 PM JST
shifted
* Sat 25 Oct 2014 07:57:31 PM JST
OrderedDict
* Sat 25 Oct 2014 08:04:49 PM JST
class AutoNumber(Enum):
...     def __new__(cls):
...         value = len(cls.__members__) + 1
...         obj = object.__new__(cls)
...         obj._value_ = value
...         return obj
* Sat 25 Oct 2014 08:05:01 PM JST
...     
* Sat 25 Oct 2014 08:05:02 PM JST
...     
* Sat 25 Oct 2014 08:05:02 PM JST
...     
* Sat 25 Oct 2014 08:05:02 PM JST
...     
* Sat 25 Oct 2014 08:05:02 PM JST
...     
* Sat 25 Oct 2014 08:06:24 PM JST
import
* Sat 25 Oct 2014 08:09:03 PM JST
from enum import Enum, unique


class AutoNumber(Enum):
    def __new__(cls):
        value = len(cls.__members__) + 1
        obj = object.__new__(cls)
        obj._value_ = value
        return obj

* Sat 25 Oct 2014 08:09:06 PM JST
unique
* Sat 25 Oct 2014 08:09:06 PM JST
Enum, unique
* Sat 25 Oct 2014 08:09:14 PM JST
AutoNumber
* Sat 25 Oct 2014 08:09:19 PM JST
AutoNumber
* Sat 25 Oct 2014 08:09:43 PM JST
AutoNumber
* Sat 25 Oct 2014 08:10:19 PM JST
AutoNumber
* Sat 25 Oct 2014 08:10:40 PM JST

* Sat 25 Oct 2014 08:10:40 PM JST

* Sat 25 Oct 2014 08:10:40 PM JST
from enum import Enum, unique

* Sat 25 Oct 2014 08:12:29 PM JST
>>> class OrderedEnum(Enum):
...     def __ge__(self, other):
...         if self.__class__ is other.__class__:
...             return self.value >= other.value
...         return NotImplemented
...     def __gt__(self, other):
...         if self.__class__ is other.__class__:
...             return self.value > other.value
...         return NotImplemented
...     def __le__(self, other):
...         if self.__class__ is other.__class__:
...             return self.value <= other.value
...         return NotImplemented
...     def __lt__(self, other):
...         if self.__class__ is other.__class__:
...             return self.value < other.value
...         return NotImplemented

* Sat 25 Oct 2014 08:13:00 PM JST
... 
* Sat 25 Oct 2014 08:13:00 PM JST
... 
* Sat 25 Oct 2014 08:13:00 PM JST
... 
* Sat 25 Oct 2014 08:13:00 PM JST
... 
* Sat 25 Oct 2014 08:13:00 PM JST
... 
* Sat 25 Oct 2014 08:13:00 PM JST
... 
* Sat 25 Oct 2014 08:13:00 PM JST
... 
* Sat 25 Oct 2014 08:13:00 PM JST
... 
* Sat 25 Oct 2014 08:13:00 PM JST
... 
* Sat 25 Oct 2014 08:13:00 PM JST
... 
* Sat 25 Oct 2014 08:13:00 PM JST
... 
* Sat 25 Oct 2014 08:13:01 PM JST
... 
* Sat 25 Oct 2014 08:13:01 PM JST
... 
* Sat 25 Oct 2014 08:13:01 PM JST
... 
* Sat 25 Oct 2014 08:13:01 PM JST
... 
* Sat 25 Oct 2014 08:13:01 PM JST
... 
* Sat 25 Oct 2014 08:13:01 PM JST
>>> 
* Sat 25 Oct 2014 08:13:27 PM JST
https://docs.python.org/3/library/enum.html#orderedenum
* Sat 25 Oct 2014 08:13:34 PM JST
https://docs.python.org/3/library/enum.html#orderedenum
* Sat 25 Oct 2014 08:13:44 PM JST
from "https://docs.python.org/3/library/enum.html#orderedenum"
* Sat 25 Oct 2014 08:14:27 PM JST
from
* Sat 25 Oct 2014 08:14:28 PM JST
autonumber
* Sat 25 Oct 2014 08:14:43 PM JST
>>> class DuplicateFreeEnum(Enum):
...     def __init__(self, *args):
...         cls = self.__class__
...         if any(self.value == e.value for e in cls):
...             a = self.name
...             e = cls(self.value).name
...             raise ValueError(
...                 "aliases not allowed in DuplicateFreeEnum:  %r --> %r"
...                 % (a, e))

* Sat 25 Oct 2014 08:15:06 PM JST
... 
* Sat 25 Oct 2014 08:15:06 PM JST
... 
* Sat 25 Oct 2014 08:15:07 PM JST
... 
* Sat 25 Oct 2014 08:15:07 PM JST
... 
* Sat 25 Oct 2014 08:15:07 PM JST
... 
* Sat 25 Oct 2014 08:15:07 PM JST
... 
* Sat 25 Oct 2014 08:15:07 PM JST
... 
* Sat 25 Oct 2014 08:15:07 PM JST
... 
* Sat 25 Oct 2014 08:15:07 PM JST
>>> 
* Sat 25 Oct 2014 08:15:20 PM JST

* Sat 25 Oct 2014 08:15:21 PM JST
OrderedEnum
* Sat 25 Oct 2014 08:17:39 PM JST
orderedenum
* Sat 25 Oct 2014 08:18:06 PM JST
Enum
* Sat 25 Oct 2014 08:18:13 PM JST
AutoNumber
* Sat 25 Oct 2014 08:18:15 PM JST
OrderedEnum
* Sat 25 Oct 2014 08:18:22 PM JST
DuplicateFreeEnum
* Sat 25 Oct 2014 08:18:57 PM JST
from "https://docs.python.org/3/library/enum.html#orderedenum"
* Sat 25 Oct 2014 09:49:43 PM JST

* Sat 25 Oct 2014 09:49:43 PM JST

* Sat 25 Oct 2014 09:49:43 PM JST
@unique

* Sat 25 Oct 2014 09:49:45 PM JST
Enum
* Sat 25 Oct 2014 09:50:04 PM JST
9
* Sat 25 Oct 2014 09:50:05 PM JST
8
* Sat 25 Oct 2014 09:50:05 PM JST
7
* Sat 25 Oct 2014 09:50:05 PM JST
6
* Sat 25 Oct 2014 09:50:05 PM JST
5
* Sat 25 Oct 2014 09:50:05 PM JST
4
* Sat 25 Oct 2014 09:56:54 PM JST

* Sat 25 Oct 2014 09:56:54 PM JST

* Sat 25 Oct 2014 09:56:54 PM JST
    upperchar = ()

* Sun 26 Oct 2014 08:39:36 AM JST
sendkey2
* Sun 26 Oct 2014 08:45:52 AM JST
import 
* Sun 26 Oct 2014 08:45:56 AM JST
from 
* Sun 26 Oct 2014 08:46:00 AM JST
xcb2.xobj.key.keysym.Keysym
* Sun 26 Oct 2014 08:46:43 AM JST
xcb
* Sun 26 Oct 2014 08:46:44 AM JST
import xcb
* Sun 26 Oct 2014 08:50:15 AM JST
from xcb2.xobj.key.keysym import Keysym
* Sun 26 Oct 2014 08:50:55 AM JST
Keysym
* Sun 26 Oct 2014 08:55:06 AM JST
text
* Sun 26 Oct 2014 08:55:15 AM JST
replace
* Sun 26 Oct 2014 08:55:39 AM JST
text
* Sun 26 Oct 2014 09:07:53 AM JST
self.
* Sun 26 Oct 2014 09:09:13 AM JST
token
* Sun 26 Oct 2014 09:11:35 AM JST
and 
* Sun 26 Oct 2014 09:18:20 AM JST
from sendkey2 import scanner
* Sun 26 Oct 2014 09:18:31 AM JST
scanner.Scanner('helloworld}yahoo')._line
* Sun 26 Oct 2014 09:18:39 AM JST
from sendkey2 import scanner
scanner.Scanner('helloworld}yahoo')._line

* Sun 26 Oct 2014 09:19:00 AM JST
scanner.Scanner('helloworld}yahoo')._line
* Sun 26 Oct 2014 09:25:41 AM JST
self._line[self._index]
* Sun 26 Oct 2014 09:31:09 AM JST
from sendkey2 import scanner

* Sun 26 Oct 2014 09:31:11 AM JST
scanner.Scanner('helloworld}yahoo')._line
* Sun 26 Oct 2014 09:32:07 AM JST
pass
* Sun 26 Oct 2014 09:32:52 AM JST
self._line[self._index]
* Sun 26 Oct 2014 09:36:06 AM JST
'helloworld{{{}yahoo'
* Sun 26 Oct 2014 09:37:16 AM JST
'hello{{{}world'
* Sun 26 Oct 2014 09:37:41 AM JST
'helloworld}yahoo'
* Sun 26 Oct 2014 09:38:06 AM JST
'helloworld\}yahoo'
* Sun 26 Oct 2014 09:38:29 AM JST
'helloworld{bracketright}yahoo'
* Sun 26 Oct 2014 09:38:38 AM JST
'helloworld{bracketright}yahoo'
* Sun 26 Oct 2014 09:38:54 AM JST
'helloworld}yahoo'
* Sun 26 Oct 2014 09:41:46 AM JST
self._line[self._index]
* Sun 26 Oct 2014 09:41:58 AM JST
'}'
* Sun 26 Oct 2014 09:50:44 AM JST
self._line[self._index]
* Sun 26 Oct 2014 09:51:04 AM JST
_inde
* Sun 26 Oct 2014 09:51:05 AM JST
self._inde
* Sun 26 Oct 2014 10:01:45 AM JST

* Sun 26 Oct 2014 10:01:45 AM JST

* Sun 26 Oct 2014 10:01:45 AM JST
        index = self._index

* Sun 26 Oct 2014 10:01:48 AM JST

* Sun 26 Oct 2014 10:01:48 AM JST

* Sun 26 Oct 2014 10:01:48 AM JST
                index += 1

* Sun 26 Oct 2014 10:01:58 AM JST
_index + 
* Sun 26 Oct 2014 10:01:58 AM JST
self._index + 
* Sun 26 Oct 2014 10:02:44 AM JST
self._line[self._index] == '}'
* Sun 26 Oct 2014 10:02:53 AM JST
_
* Sun 26 Oct 2014 10:02:53 AM JST
self._
* Sun 26 Oct 2014 10:02:54 AM JST
self._incurly = False
* Sun 26 Oct 2014 10:03:48 AM JST
None
* Sun 26 Oct 2014 10:04:31 AM JST
self._line[self._index]
* Sun 26 Oct 2014 10:14:39 AM JST
self._line[self._index]
* Sun 26 Oct 2014 02:04:30 PM JST
_
* Sun 26 Oct 2014 02:04:30 PM JST
self._
* Sun 26 Oct 2014 02:06:01 PM JST
_
* Sun 26 Oct 2014 02:06:01 PM JST
self._
* Sun 26 Oct 2014 02:07:26 PM JST

* Sun 26 Oct 2014 02:07:26 PM JST

* Sun 26 Oct 2014 02:07:26 PM JST
                self._cur

* Sun 26 Oct 2014 02:50:53 PM JST
            while self._line[self._index] in string.whitespace:
                self._index += 1

* Sun 26 Oct 2014 02:51:10 PM JST

* Sun 26 Oct 2014 02:51:10 PM JST

* Sun 26 Oct 2014 02:51:10 PM JST
            # skip whitespace

* Sun 26 Oct 2014 05:04:42 PM JST
from xcb2.xobj import key
* Sun 26 Oct 2014 05:05:31 PM JST
sendkey2
* Sun 26 Oct 2014 05:05:31 PM JST
sendkey2
* Sun 26 Oct 2014 05:05:31 PM JST
sendkey2
* Sun 26 Oct 2014 05:05:31 PM JST
sendkey2
* Sun 26 Oct 2014 05:05:31 PM JST
sendkey2
* Sun 26 Oct 2014 05:05:31 PM JST
sendkey2
* Sun 26 Oct 2014 05:05:31 PM JST
sendkey2
* Sun 26 Oct 2014 05:06:37 PM JST

* Sun 26 Oct 2014 05:06:38 PM JST
namesym
* Sun 26 Oct 2014 05:06:44 PM JST

* Sun 26 Oct 2014 05:06:45 PM JST
Charsym
* Sun 26 Oct 2014 05:06:48 PM JST
charsym
* Sun 26 Oct 2014 05:08:24 PM JST
value
* Sun 26 Oct 2014 05:09:41 PM JST
sen
* Sun 26 Oct 2014 05:09:42 PM JST
form sen
* Sun 26 Oct 2014 05:12:43 PM JST
setalt()
* Sun 26 Oct 2014 05:13:12 PM JST
          
* Sun 26 Oct 2014 05:14:10 PM JST
value
* Sun 26 Oct 2014 05:16:45 PM JST
self._value = MODMAP[value]
* Sun 26 Oct 2014 05:17:03 PM JST
self._line[self._index]
* Sun 26 Oct 2014 05:21:59 PM JST
            value = ''
            while self._line[self._index] not in ('}', ' '):
                value += self._line[self._index]

* Sun 26 Oct 2014 05:24:24 PM JST
            if self._line[self._index] == '}':
                self._incurly = False
                self._curlysleft = None

* Sun 26 Oct 2014 11:39:03 PM JST
'LButton', 'LClick', 'RButton', 'RClick', 'MButton',
                       'MClick', 'WheelDown', 'WheelUp'
* Sun 26 Oct 2014 11:39:19 PM JST
                         
* Mon 27 Oct 2014 10:14:03 PM JST
self._token = TokenType.modifier
* Mon 27 Oct 2014 10:14:24 PM JST
MODMAP[self._line[self._index]
* Mon 27 Oct 2014 10:14:28 PM JST
MODMAP[self._line[self._index]]
* Mon 27 Oct 2014 10:15:12 PM JST
self._token = TokenType.button
* Mon 27 Oct 2014 10:15:17 PM JST
self._value = value
* Mon 27 Oct 2014 10:15:20 PM JST
value
* Mon 27 Oct 2014 10:15:26 PM JST
self._curlysleft = value
* Mon 27 Oct 2014 10:15:31 PM JST
value
* Mon 27 Oct 2014 10:15:57 PM JST

* Mon 27 Oct 2014 10:15:57 PM JST

* Mon 27 Oct 2014 10:15:57 PM JST
        self._curlysleft = button

* Mon 27 Oct 2014 10:16:04 PM JST
button
* Mon 27 Oct 2014 10:16:32 PM JST
self._token = TokenType.behave
* Mon 27 Oct 2014 10:17:08 PM JST
value
* Mon 27 Oct 2014 10:17:31 PM JST
                self._token = TokenType.repeat
                self._value = int(value)

* Mon 27 Oct 2014 10:17:39 PM JST
value
* Mon 27 Oct 2014 10:17:44 PM JST
int(
* Mon 27 Oct 2014 10:18:41 PM JST
            self._token = TokenType.char
            self._value = self._line[self._index]

* Mon 27 Oct 2014 10:19:03 PM JST
self._line[self._index]
* Mon 27 Oct 2014 10:19:05 PM JST

* Mon 27 Oct 2014 10:19:05 PM JST

* Mon 27 Oct 2014 10:19:05 PM JST
            self._token = TokenType.char

* Mon 27 Oct 2014 10:19:05 PM JST
            self._token = TokenType.char

* Mon 27 Oct 2014 10:19:06 PM JST
            self._token = TokenType.char
            self._value = self._line[self._index]

* Mon 27 Oct 2014 10:20:26 PM JST
BEHAVE
* Mon 27 Oct 2014 10:21:47 PM JST
self._curlysleft is not None
* Mon 27 Oct 2014 10:22:22 PM JST
self._setrepeat(int(value))
* Mon 27 Oct 2014 10:55:20 PM JST
slef = None
* Mon 27 Oct 2014 10:57:43 PM JST
slef = None
* Mon 27 Oct 2014 10:59:10 PM JST

* Mon 27 Oct 2014 10:59:10 PM JST

* Mon 27 Oct 2014 10:59:10 PM JST
    slef.hello = None

* Mon 27 Oct 2014 10:59:15 PM JST
slef
* Mon 27 Oct 2014 10:59:17 PM JST
hello
* Mon 27 Oct 2014 10:59:46 PM JST
"\\_<slef\\_>"
* Mon 27 Oct 2014 11:00:14 PM JST

* Mon 27 Oct 2014 11:00:14 PM JST

* Mon 27 Oct 2014 11:00:14 PM JST
        self.slef = None

* Mon 27 Oct 2014 11:09:34 PM JST
        # SyntaxError
        elif self._line[self._index] == '}' and not self.isincurly():
            # TODO: (Atami) [2014/10/26]
            raise SyntaxError()

* Mon 27 Oct 2014 11:17:48 PM JST
        self._value = None
        # Modifier
        if self._line[self._index] in MODMAP:
            self._setmodifier(MODMAP[self._line[self._index]])
        # Curly brace {}
        elif self._line[self._index] == '{' or self.isincurly():
            self._incurly = True
            self._skip_whitespace()
            value = self._parse_curly()
            # button
            if value.lower() in ('lbutton', 'lclick', 'rbutton', 'rclick',
                                 'mbutton', 'mclick', 'wheeldown', 'wheelup'):
                self._setbutton(value)
                self._curlysleft = value
            # behave
            elif value.lower() in BEHAVE:
                if self._curlysleft is None:
                    # TODO: (Atami) [2014/10/26]
                    raise SyntaxError()
                self._setbehave(BEHAVE[value.lower()])
            # repeat
            elif value.isdigit():
                # keycode
                if self._curlysleft is None:
                    pass
                # curly brace right as repeat
                else:
                    self._setrepeat(int(value))
            # unicode
            elif value.startswith('uni') and self._curlysleft is None:
                pass
        # SyntaxError
        elif self._line[self._index] == '}' and not self.isincurly():
            # TODO: (Atami) [2014/10/26]
            raise SyntaxError()
        # Char
        else:
            self._setchar(self._line[self._index])
        self._index += 1

* Mon 27 Oct 2014 11:38:43 PM JST
REPLACES = [(r'\{\+'   , '{plus'          ),
            (r'\\\+'   , '{plus}'         ),
            (r'\{\!'   , '{exclam'        ),
            (r'\\\!'   , '{exclam}'       ),
            (r'\{\#'   , '{numbersign'    ),
            (r'\\\#'   , '{numbersign}'   ),
            (r'\{\^'   , '{asciicircum'   ),
            (r'\\\^'   , '{asciicircum}'  ),
            (r'\{\_'   , '{underscore'    ),
            (r'\_'     , '{underscore}'   ),
            (r'\{\}\}' , '{bracketright}' ),
            (r'\{\}\ ' , '{bracketright ' ),
            (r'\{\{\}' , '{bracketleft}'  ),
            (r'\{\{\ ' , '{bracketleft '  ),
            # ('{{'    , '{bracketleft}'  ),
            (r'\\\{'   , '{bracketleft}'  ),
            (r'\\\}'   , '{bracketright}' ),
            (r'\"'     , '{quotedbl}'     ),
            (r'\$'     , '{dollar}'       ),
            (r'\%'     , '{percent}'      ),
            (r'\&'     , '{ampersand}'    ),
            (r"\'"     , '{apostrophe}'   ),
            (r'\`'     , '{quoteleft}'    ),
            (r'\('     , '{parenleft}'    ),
            (r'\)'     , '{parenright}'   ),
            (r'\~'     , '{asciitilde}'   ),
            (r'\|'     , '{bar}'          ),
            (r'\='     , '{equal}'        ),
            (r'\*'     , '{asterisk}'     ),
            (r'\>'     , '{less}'         ),
            (r'\<'     , '{greater}'      ),
            (r'\?'     , '{question}'     ),
            (r'\-'     , '{minus}'        ),
            (r'\,'     , '{comma}'        ),
            (r'\.'     , '{period}'       ),
            (r'\/'     , '{slash}'        ),
            (r'\@'     , '{at}'           ),
            (r'\:'     , '{colon}'        ),
            (r'\;'     , '{semicolon}'    ),
            (r'\['     , '{braceleft}'    ),
            (r'\]'     , '{braceright}'   ),
            (r'\\'     , '{backslash}'    ),
            ]

* Mon 27 Oct 2014 11:39:01 PM JST
replaces.
* Mon 27 Oct 2014 11:39:05 PM JST

* Mon 27 Oct 2014 11:39:05 PM JST

* Mon 27 Oct 2014 11:39:06 PM JST
import replaces

* Tue 28 Oct 2014 12:48:20 AM JST
string.
* Tue 28 Oct 2014 12:51:33 AM JST

* Tue 28 Oct 2014 12:51:33 AM JST

* Tue 28 Oct 2014 12:51:34 AM JST
        super(StringPointer, self).__add__()

* Tue 28 Oct 2014 12:52:29 AM JST

* Tue 28 Oct 2014 12:52:29 AM JST

* Tue 28 Oct 2014 12:52:29 AM JST
        return 

* Tue 28 Oct 2014 12:52:55 AM JST
calss
* Tue 28 Oct 2014 12:55:44 AM JST
other
* Tue 28 Oct 2014 12:55:54 AM JST

* Tue 28 Oct 2014 12:55:54 AM JST

* Tue 28 Oct 2014 12:55:54 AM JST
        super(StringPointer, self).__sub__()

* Tue 28 Oct 2014 12:56:18 AM JST
return 
* Tue 28 Oct 2014 01:03:47 AM JST
(concat "\n" (make-string (current-column) 32))
* Tue 28 Oct 2014 01:04:08 AM JST
(concat "\n" (make-string (current-column) 32))
* Tue 28 Oct 2014 01:06:08 AM JST
    
* Tue 28 Oct 2014 01:09:03 AM JST
         
* Tue 28 Oct 2014 01:09:19 AM JST
         
* Tue 28 Oct 2014 01:09:21 AM JST
                               
* Tue 28 Oct 2014 01:10:16 AM JST
${5:`(concat "\n" (make-string (current-column) 32) "return")`} $0
* Tue 28 Oct 2014 01:10:41 AM JST
           
* Tue 28 Oct 2014 01:11:23 AM JST
${5:`(concat "\n" (make-string (current-column) 32) "return")`} $0
* Tue 28 Oct 2014 01:19:36 AM JST
                                  
* Tue 28 Oct 2014 01:44:17 AM JST
return
* Tue 28 Oct 2014 01:49:33 AM JST
return 
* Tue 28 Oct 2014 01:50:51 AM JST

* Tue 28 Oct 2014 01:50:51 AM JST

* Tue 28 Oct 2014 01:50:51 AM JST
        return 

* Tue 28 Oct 2014 01:53:39 AM JST
return 
* Tue 28 Oct 2014 01:54:23 AM JST
self.
* Tue 28 Oct 2014 01:54:23 AM JST
return self.
* Tue 28 Oct 2014 01:54:32 AM JST
return 
* Tue 28 Oct 2014 01:55:18 AM JST
return 
* Tue 28 Oct 2014 01:55:29 AM JST
self.
* Tue 28 Oct 2014 01:55:30 AM JST
return self.
* Tue 28 Oct 2014 01:56:29 AM JST
self
* Tue 28 Oct 2014 01:58:56 AM JST
_indexreturn 
* Tue 28 Oct 2014 02:02:43 AM JST
self
* Tue 28 Oct 2014 02:03:47 AM JST
self._string[self._index]
* Tue 28 Oct 2014 02:26:13 AM JST
        if len(string) < index:
            # TODO: (Atami) [2014/10/28]
            raise StandardError()

* Tue 28 Oct 2014 02:27:13 AM JST
index
* Tue 28 Oct 2014 02:28:42 AM JST

* Tue 28 Oct 2014 02:28:42 AM JST

* Tue 28 Oct 2014 02:28:42 AM JST
            self._index -= other

* Tue 28 Oct 2014 02:29:18 AM JST

* Tue 28 Oct 2014 02:29:18 AM JST

* Tue 28 Oct 2014 02:29:18 AM JST
            self._index *= other

* Tue 28 Oct 2014 02:29:30 AM JST

* Tue 28 Oct 2014 02:29:30 AM JST

* Tue 28 Oct 2014 02:29:30 AM JST
            self._index /= other

* Tue 28 Oct 2014 02:29:52 AM JST
self._index -= other
* Tue 28 Oct 2014 02:30:00 AM JST
self._index += other
* Tue 28 Oct 2014 02:35:54 AM JST
        if len(self) < self._index:
            raise StopIteration()

* Tue 28 Oct 2014 02:37:59 AM JST
scanner
* Tue 28 Oct 2014 02:38:16 AM JST
StringPointer
* Tue 28 Oct 2014 02:40:44 AM JST
self
* Tue 28 Oct 2014 02:45:12 AM JST
    
* Tue 28 Oct 2014 02:52:39 AM JST
not (
* Tue 28 Oct 2014 02:52:45 AM JST
_index
* Tue 28 Oct 2014 02:52:46 AM JST
self._index
* Tue 28 Oct 2014 02:52:56 AM JST
len(self._string)
* Tue 28 Oct 2014 02:54:48 AM JST
len(self._string)
* Tue 28 Oct 2014 02:54:52 AM JST
self._index
* Tue 28 Oct 2014 03:02:19 AM JST
StringPointer
* Tue 28 Oct 2014 03:02:34 AM JST

* Tue 28 Oct 2014 03:02:35 AM JST

* Tue 28 Oct 2014 03:02:35 AM JST
        self._index = 0

* Tue 28 Oct 2014 03:03:04 AM JST
self._line[self._index]
* Tue 28 Oct 2014 03:03:37 AM JST
_index
* Tue 28 Oct 2014 03:04:33 AM JST
len
* Tue 28 Oct 2014 03:06:14 AM JST
len(self._string) <= self._index + 1
* Tue 28 Oct 2014 03:06:28 AM JST
self._index
* Tue 28 Oct 2014 03:06:32 AM JST
len(self._string)
* Tue 28 Oct 2014 03:08:33 AM JST
self._index + 1
* Tue 28 Oct 2014 03:08:36 AM JST
len(self._string)
* Tue 28 Oct 2014 03:09:15 AM JST
bool(
* Tue 28 Oct 2014 03:16:17 AM JST
tokentype
* Tue 28 Oct 2014 03:16:49 AM JST
TokenType.char
* Tue 28 Oct 2014 03:17:53 AM JST
self.
* Tue 28 Oct 2014 03:19:48 AM JST
other.
* Tue 28 Oct 2014 03:19:48 AM JST
self. == other.
* Tue 28 Oct 2014 03:21:20 AM JST
bool(
* Tue 28 Oct 2014 03:21:52 AM JST

* Tue 28 Oct 2014 03:21:52 AM JST

* Tue 28 Oct 2014 03:21:52 AM JST
        self._value = None

* Tue 28 Oct 2014 03:22:10 AM JST

* Tue 28 Oct 2014 03:22:10 AM JST

* Tue 28 Oct 2014 03:22:11 AM JST
        self._value = mod

* Tue 28 Oct 2014 03:22:25 AM JST

* Tue 28 Oct 2014 03:22:25 AM JST

* Tue 28 Oct 2014 03:22:25 AM JST
        self._value = button

* Tue 28 Oct 2014 03:22:35 AM JST

* Tue 28 Oct 2014 03:22:35 AM JST

* Tue 28 Oct 2014 03:22:35 AM JST
        self._

* Tue 28 Oct 2014 03:22:37 AM JST
TokenType.behave
* Tue 28 Oct 2014 03:22:48 AM JST

* Tue 28 Oct 2014 03:22:48 AM JST

* Tue 28 Oct 2014 03:22:48 AM JST
        self._value = behave

* Tue 28 Oct 2014 03:22:57 AM JST

* Tue 28 Oct 2014 03:22:57 AM JST

* Tue 28 Oct 2014 03:22:57 AM JST
        self._value = times

* Tue 28 Oct 2014 03:23:04 AM JST
TokenType.char
* Tue 28 Oct 2014 03:23:11 AM JST

* Tue 28 Oct 2014 03:23:11 AM JST

* Tue 28 Oct 2014 03:23:11 AM JST
        self._value = char

* Tue 28 Oct 2014 03:23:28 AM JST
self._token = Token(TokenType.char, char)
* Tue 28 Oct 2014 03:23:35 AM JST
self._line.getpoint()
* Tue 28 Oct 2014 03:23:38 AM JST

* Tue 28 Oct 2014 03:23:38 AM JST

* Tue 28 Oct 2014 03:23:38 AM JST
            self._setchar()

* Tue 28 Oct 2014 03:23:51 AM JST
self._token = Token(TokenType.repeat, times)
* Tue 28 Oct 2014 03:24:05 AM JST
int(value)
* Tue 28 Oct 2014 03:24:08 AM JST

* Tue 28 Oct 2014 03:24:08 AM JST

* Tue 28 Oct 2014 03:24:08 AM JST
                    self._setrepeat()

* Tue 28 Oct 2014 03:25:11 AM JST
self._token = Token(TokenType.behave, behave)
* Tue 28 Oct 2014 03:25:34 AM JST
BEHAVE[value.lower()]
* Tue 28 Oct 2014 03:25:37 AM JST

* Tue 28 Oct 2014 03:25:37 AM JST

* Tue 28 Oct 2014 03:25:37 AM JST
                self._setbehave()

* Tue 28 Oct 2014 03:25:50 AM JST
self._token = Token(TokenType.button, button)
* Tue 28 Oct 2014 03:26:07 AM JST
value
* Tue 28 Oct 2014 03:26:10 AM JST

* Tue 28 Oct 2014 03:26:10 AM JST

* Tue 28 Oct 2014 03:26:10 AM JST
                self._setbutton(value)

* Tue 28 Oct 2014 03:26:18 AM JST
self._token = Token(TokenType.modifier, mod)
* Tue 28 Oct 2014 03:26:30 AM JST
MODMAP[self._line.getpoint()]
* Tue 28 Oct 2014 03:26:34 AM JST

* Tue 28 Oct 2014 03:26:34 AM JST

* Tue 28 Oct 2014 03:26:35 AM JST
            self._setmodifier()

* Tue 28 Oct 2014 03:26:47 AM JST

* Tue 28 Oct 2014 03:26:47 AM JST

* Tue 28 Oct 2014 03:26:47 AM JST
        self._value = None

* Tue 28 Oct 2014 03:30:10 AM JST
class Token(object):
    r"""Token

    Token is a object.
    Responsibility:
    """
    def __init__(self, tokentype, value=None):
        r"""

        @Arguments:
        - `tokentype`:
        - `value`:
        """
        self._tokentype = TokenType(tokentype)
        self._value = value

    def getvalue(self, ):
        r"""SUMMARY

        getvalue()

        @Return:

        @Error:
        """
        return self._value

    def gettype(self, ):
        r"""SUMMARY

        gettype()

        @Return:

        @Error:
        """
        return self._tokentype

    def hasvalue(self, ):
        r"""SUMMARY

        hasvalue()

        @Return:

        @Error:
        """
        return self._value is not None

    def __contains__(self, elm):
        return elm in TokenType

    def __eq__(self, other):
        return self._tokentype == other

    def __ne__(self, other):
        return not self == other

    def __nonzero__(self):
        return self.hasvalue()

    def __repr__(self):
        return ('{0.__class__.__name__}(type={0._type}, value={0._value})'
                .format(self))

* Tue 28 Oct 2014 05:22:49 AM JST
None
* Tue 28 Oct 2014 05:25:31 AM JST

* Tue 28 Oct 2014 05:25:31 AM JST

* Tue 28 Oct 2014 05:25:31 AM JST
        self._incurly = False

* Tue 28 Oct 2014 05:25:32 AM JST
        self._incurly = False

* Tue 28 Oct 2014 05:25:32 AM JST
        self._incurly = False
        self._curlysleft = None

* Tue 28 Oct 2014 05:25:55 AM JST

* Tue 28 Oct 2014 05:25:55 AM JST

* Tue 28 Oct 2014 05:25:55 AM JST
        self._incurly = False

* Tue 28 Oct 2014 05:27:37 AM JST
        if 'incurly' in self._state:
            self._state.remove('incurly')

* Tue 28 Oct 2014 05:28:01 AM JST
_incurly
* Tue 28 Oct 2014 05:28:01 AM JST
self._incurly
* Tue 28 Oct 2014 07:19:28 AM JST
D 
* Tue 28 Oct 2014 08:10:23 AM JST
StringPointer
* Tue 28 Oct 2014 08:11:13 AM JST
    def _skip_whitespace(self, ):
        r"""SUMMARY

        _skip_whitespace()

        @Return:

        @Error:
        """
        while self._line.getpoint() in whitespace:
            self._line += 1

* Tue 28 Oct 2014 09:29:23 AM JST
_state = {}
* Tue 28 Oct 2014 09:32:08 AM JST

* Tue 28 Oct 2014 09:32:08 AM JST

* Tue 28 Oct 2014 09:32:08 AM JST
        bool(hello)

* Tue 28 Oct 2014 09:32:46 AM JST

* Tue 28 Oct 2014 09:32:46 AM JST

* Tue 28 Oct 2014 09:32:46 AM JST
        bool(hello}

* Tue 28 Oct 2014 09:33:33 AM JST
x}
* Tue 28 Oct 2014 09:33:33 AM JST
bool(x}
* Tue 28 Oct 2014 09:37:59 AM JST
(looking-at-p "\_<")
* Tue 28 Oct 2014 09:38:47 AM JST
(looking-at-p "\\_<")
* Tue 28 Oct 2014 09:41:03 AM JST
# condition: (and (not (py:at-string|comment-p)) (not (equal (this-command-keys-vector) [32])))
* Tue 28 Oct 2014 09:41:09 AM JST
# 32 = ` '
* Tue 28 Oct 2014 09:42:06 AM JST
(looking-at-p "\\_<")
* Tue 28 Oct 2014 09:42:43 AM JST
`(progn (end-of-line) (skip-chars-backward " \t") (unless (eq (char-before) 58) (insert ":")))`
* Tue 28 Oct 2014 09:45:14 AM JST
booll()
* Tue 28 Oct 2014 09:45:50 AM JST
    
* Tue 28 Oct 2014 09:48:29 AM JST
`(progn (end-of-line) (skip-chars-backward " \t") (unless (eq (char-before) 58) (insert ":")))`
* Tue 28 Oct 2014 09:48:49 AM JST
(insert ")")
* Tue 28 Oct 2014 09:49:37 AM JST
x)
* Tue 28 Oct 2014 09:49:38 AM JST
bool(x)
* Tue 28 Oct 2014 09:49:56 AM JST
x)
* Tue 28 Oct 2014 09:49:57 AM JST
bool(x)
* Tue 28 Oct 2014 09:50:08 AM JST
bool()
* Tue 28 Oct 2014 09:51:13 AM JST
hello))
* Tue 28 Oct 2014 09:51:13 AM JST
bool(hello))
* Tue 28 Oct 2014 09:51:14 AM JST
bool(bool(hello))
* Tue 28 Oct 2014 09:54:49 AM JST

* Tue 28 Oct 2014 09:54:49 AM JST

* Tue 28 Oct 2014 09:54:49 AM JST
        bool(${2:)}

* Tue 28 Oct 2014 09:55:13 AM JST
bool(
* Tue 28 Oct 2014 10:41:37 AM JST
        # closed curly
        if self._line.getpoint() == '}':
            self._incurly = False
            self._curlysleft = None

* Tue 28 Oct 2014 10:41:40 AM JST
        # closed curly
        if self._line.getpoint() == '}':
            self._incurly = False
            self._curlysleft = None

* Tue 28 Oct 2014 10:44:36 AM JST

* Tue 28 Oct 2014 10:44:36 AM JST

* Tue 28 Oct 2014 10:44:36 AM JST
                self._curlysleft = None

* Tue 28 Oct 2014 10:44:52 AM JST

* Tue 28 Oct 2014 10:44:52 AM JST

* Tue 28 Oct 2014 10:44:52 AM JST
                self._curlysleft = value

* Tue 28 Oct 2014 10:45:44 AM JST

* Tue 28 Oct 2014 10:45:44 AM JST

* Tue 28 Oct 2014 10:45:44 AM JST
                else:

* Wed 29 Oct 2014 02:11:29 AM JST
        if not self._line.hasright():
            raise StopIteration()

* Wed 29 Oct 2014 02:11:58 AM JST
        if self._line.getpoint() in MODMAP:
            self._token = Token(
                TokenType.modifier, MODMAP[self._line.getpoint()])

* Wed 29 Oct 2014 02:12:06 AM JST
self._token =
* Wed 29 Oct 2014 02:12:09 AM JST
                
* Wed 29 Oct 2014 02:12:56 AM JST
self._line.getpoint()
* Wed 29 Oct 2014 02:13:24 AM JST
# Modifier
* Wed 29 Oct 2014 02:13:37 AM JST
        # Curly brace {}
        elif self._line.getpoint() == '{' or self.isincurly():
            self._incurly = True
            self._skip_whitespace()
            value = self._parse_curly()
            # closed curly
            if self._line.getpoint() == '}':
                self._incurly = False
            # button
            if value.lower() in ('lbutton', 'lclick', 'rbutton', 'rclick',
                                 'mbutton', 'mclick', 'wheeldown', 'wheelup'):
                self._token = Token(TokenType.button, value)
            # behave
            elif value.lower() in BEHAVE:
                self._token = Token(TokenType.behave, BEHAVE[value.lower()])
            # repeat
            elif value.isdigit():
                # keycode
                # curly brace right as repeat
                self._token = Token(TokenType.repeat, int(value))
            # unicode
            elif value.startswith('uni'):
                pass
            else:
                namesym = Namesym(value)
                if not namesym.isdefined():
                    # TODO: (Atami) [2014/10/28]
                    raise SyntaxError()
                self._token = Token(TokenType.symname, namesym)

* Wed 29 Oct 2014 02:23:27 AM JST
self._skip_whitespace()
* Wed 29 Oct 2014 02:23:45 AM JST

* Wed 29 Oct 2014 02:23:45 AM JST

* Wed 29 Oct 2014 02:23:46 AM JST
            self._incurly = True

* Wed 29 Oct 2014 02:25:33 AM JST
'lbutton', 'lclick', 'rbutton', 'rclick',
                                 'mbutton', 'mclick', 'wheeldown', 'wheelup'
* Wed 29 Oct 2014 02:26:38 AM JST
BUTTON
* Wed 29 Oct 2014 02:26:41 AM JST
BUTTON
* Wed 29 Oct 2014 02:27:12 AM JST
self._token = 
* Wed 29 Oct 2014 02:28:07 AM JST
value.
* Wed 29 Oct 2014 02:28:12 AM JST
value.
* Wed 29 Oct 2014 02:28:15 AM JST
value.
* Wed 29 Oct 2014 02:28:19 AM JST
self._token = 
* Wed 29 Oct 2014 02:29:57 AM JST
self._token = 
* Wed 29 Oct 2014 02:30:18 AM JST
pass
* Wed 29 Oct 2014 02:32:08 AM JST

* Wed 29 Oct 2014 02:32:08 AM JST

* Wed 29 Oct 2014 02:32:08 AM JST
            else:

* Wed 29 Oct 2014 02:33:48 AM JST
self._token = 
* Wed 29 Oct 2014 03:21:31 AM JST
            if lower in BUTTON:
                return Token(TokenType.button, BUTTON[value]), idx
            # behave
            if lower in BEHAVE:
                return Token(TokenType.behave, BEHAVE[lower]), idx
            # repeat or keycode or geometry
            if value.isdigit():
                # keycode
                if not self.hasleft():
                    return Token(TokenType.keycode, int(value)), idx
                # curly brace right as repeat
                return Token(TokenType.repeat, int(value)), idx
            # unicode
            if value.startswith('uni'):
                # TODO: (Atami) [2014/10/29]
                return Token(TokenType.unichar, value.replace('uni', ''))
            namesym = Namesym(value)
            if not namesym.isdefined():
                # TODO: (Atami) [2014/10/28]
                raise SyntaxError('"{}" not defined symbol name'.format(value))
            return Token(TokenType.symname, namesym), idx

* Wed 29 Oct 2014 03:21:45 AM JST
idx
* Wed 29 Oct 2014 03:26:30 AM JST
        # SyntaxError
        elif self._line.getpoint() == '}' and not self.isincurly():
            # TODO: (Atami) [2014/10/26]
            raise SyntaxError()
        # Char
        else:
            self._token = Token(TokenType.char, self._line.getpoint())

* Wed 29 Oct 2014 03:26:46 AM JST

* Wed 29 Oct 2014 03:26:46 AM JST

* Wed 29 Oct 2014 03:26:46 AM JST
        else:

* Wed 29 Oct 2014 03:26:49 AM JST
self._token = 
* Wed 29 Oct 2014 04:06:21 AM JST

* Wed 29 Oct 2014 04:06:21 AM JST

* Wed 29 Oct 2014 04:06:21 AM JST
        self._token = None

* Wed 29 Oct 2014 04:18:45 AM JST
pass
* Wed 29 Oct 2014 04:19:32 AM JST
        # Modifier
        if char in MODMAP:
            idx = self._line.getindex() + 1
            return Token(TokenType.modifier, MODMAP[char]), idx

* Wed 29 Oct 2014 04:23:04 AM JST
        if '{' == char or self.isincurly():
            value, idx = self._parse_curly(self._skip_whitespace())
            return self.get_curly_token(value), idx

* Wed 29 Oct 2014 04:30:59 AM JST
value, 
* Wed 29 Oct 2014 04:31:01 AM JST

* Wed 29 Oct 2014 04:31:01 AM JST

* Wed 29 Oct 2014 04:31:01 AM JST
        value = ''

* Wed 29 Oct 2014 04:36:07 AM JST
value, 
* Wed 29 Oct 2014 04:36:37 AM JST

* Wed 29 Oct 2014 04:36:37 AM JST

* Wed 29 Oct 2014 04:36:37 AM JST
        indx = index

* Wed 29 Oct 2014 04:36:53 AM JST
idx = 
* Wed 29 Oct 2014 04:36:55 AM JST

* Wed 29 Oct 2014 04:36:55 AM JST

* Wed 29 Oct 2014 04:36:56 AM JST
            return self.get_curly_token(value), idx

* Wed 29 Oct 2014 04:37:04 AM JST

* Wed 29 Oct 2014 04:37:04 AM JST

* Wed 29 Oct 2014 04:37:04 AM JST
        # Modifier

* Wed 29 Oct 2014 04:41:55 AM JST
False
* Wed 29 Oct 2014 05:40:04 AM JST
char
* Wed 29 Oct 2014 05:40:50 AM JST
next
* Wed 29 Oct 2014 05:40:52 AM JST
start
* Wed 29 Oct 2014 05:40:55 AM JST

* Wed 29 Oct 2014 05:40:55 AM JST

* Wed 29 Oct 2014 05:40:55 AM JST
        end = self.next_index(start)

* Wed 29 Oct 2014 05:40:59 AM JST

* Wed 29 Oct 2014 05:40:59 AM JST

* Wed 29 Oct 2014 05:41:00 AM JST
        token = self._line[start:end].replace('{', '').replace('}', '')

* Wed 29 Oct 2014 05:41:19 AM JST
char
* Wed 29 Oct 2014 05:41:22 AM JST
idx
* Wed 29 Oct 2014 05:42:11 AM JST
value
* Wed 29 Oct 2014 05:43:38 AM JST
word
* Wed 29 Oct 2014 05:48:34 AM JST
        # SyntaxError
        if '}' == char and not self.isincurly():
            # TODO: (Atami) [2014/10/26]
            raise SyntaxError()

* Wed 29 Oct 2014 05:49:10 AM JST

* Wed 29 Oct 2014 05:49:10 AM JST

* Wed 29 Oct 2014 05:49:10 AM JST
            value, idx = self._parse_curly(self._skip_whitespace())

* Wed 29 Oct 2014 05:49:12 AM JST
value
* Wed 29 Oct 2014 05:49:13 AM JST
idx
* Wed 29 Oct 2014 05:49:15 AM JST
idx
* Wed 29 Oct 2014 05:49:19 AM JST
char
* Wed 29 Oct 2014 05:49:24 AM JST
        # Curly brace {
        if incurly:
            return self.get_curly_token(token)

* Wed 29 Oct 2014 05:54:06 AM JST
    def get_curly_token(self, phrase):
        r"""SUMMARY

        get_curly_token(value)

        @Arguments:
        - `value`:

        @Return:

        @Error:
        """
        if not isinstance(phrase, str):
            # TODO: (Atami) [2014/10/29]
            raise TypeError()
        lower = phrase.lower()
        # button
        if lower in BUTTON:
            return Token(TokenType.button, BUTTON[phrase])
        # behave
        if lower in BEHAVE:
            return Token(TokenType.behave, BEHAVE[lower])
        # repeat or keycode or geometry
        if phrase.isdigit():
            # keycode
            # TODO: (Atami) [2014/10/29]
            if not True:
                return Token(TokenType.keycode, int(phrase))
            # curly brace right as repeat
            return Token(TokenType.repeat, int(phrase))
        # unicode
        if phrase.startswith('uni'):
            # TODO: (Atami) [2014/10/29]
            return Token(TokenType.unichar, phrase.replace('uni', ''))
        # symbol name
        namesym = Namesym(phrase)
        if not namesym.isdefined():
            # TODO: (Atami) [2014/10/28]
            raise SyntaxError('"{}" not defined symbol name'.format(phrase))
        return Token(TokenType.symname, namesym)


* Wed 29 Oct 2014 05:54:22 AM JST
self, 
* Wed 29 Oct 2014 05:54:34 AM JST
self.
* Wed 29 Oct 2014 05:55:03 AM JST
    def get_token(self, token, incurly=False):
        r"""SUMMARY

        next_token()

        @Return:

        @Error:
        """
        # Curly brace {
        if incurly:
            return get_curly_token(token)
        # Modifier
        if token in MODMAP:
            return Token(TokenType.modifier, MODMAP[token])
        # Char
        return Token(TokenType.char, token)


* Wed 29 Oct 2014 05:55:14 AM JST
self, 
* Wed 29 Oct 2014 05:55:47 AM JST
token
* Wed 29 Oct 2014 05:55:54 AM JST
token
* Wed 29 Oct 2014 05:55:59 AM JST
token
* Wed 29 Oct 2014 05:56:03 AM JST
token
* Wed 29 Oct 2014 05:56:16 AM JST
    return Token(TokenType.char, token)
* Wed 29 Oct 2014 05:56:18 AM JST
token
* Wed 29 Oct 2014 05:57:36 AM JST
    # Modifier
    if phrase in MODMAP:
        return Token(TokenType.modifier, MODMAP[phrase])
    # Char
    return Token(TokenType.char, phrase)

* Wed 29 Oct 2014 05:58:02 AM JST
phrase
* Wed 29 Oct 2014 05:58:05 AM JST
phrase
* Wed 29 Oct 2014 05:58:09 AM JST
phrase
* Wed 29 Oct 2014 05:58:31 AM JST
MODMAP
* Wed 29 Oct 2014 05:58:52 AM JST

* Wed 29 Oct 2014 05:58:52 AM JST

* Wed 29 Oct 2014 05:58:52 AM JST
    if char in MODMAP:

* Wed 29 Oct 2014 06:07:05 AM JST
    def _skip_whitespace(self, index):
        r"""SUMMARY

        _skip_whitespace()

        @Return:

        @Error:
        """
        indx = index
        while self._line[indx] in whitespace:
            indx += 1
        return indx

    def _parse_curly(self, index):
        r"""SUMMARY

        _parse_curly()

        @Return:

        @Error:
        """
        indx = index
        while self._line[indx] not in ('}', ' '):
            indx += 1
        return indx


* Wed 29 Oct 2014 06:10:44 AM JST
    def __iter__(self):
        self._line.setindex(0)
        self._incurly = False
        return self


* Wed 29 Oct 2014 06:13:40 AM JST
_next_i
* Wed 29 Oct 2014 06:17:01 AM JST
indx
* Wed 29 Oct 2014 06:17:03 AM JST
next_
* Wed 29 Oct 2014 06:17:06 AM JST
indx
* Wed 29 Oct 2014 06:17:10 AM JST
next_
* Wed 29 Oct 2014 06:17:13 AM JST
next_
* Wed 29 Oct 2014 06:17:16 AM JST
indx
* Wed 29 Oct 2014 06:19:31 AM JST
next_
* Wed 29 Oct 2014 06:19:34 AM JST
indx
* Wed 29 Oct 2014 06:19:45 AM JST

* Wed 29 Oct 2014 06:19:46 AM JST

* Wed 29 Oct 2014 06:19:46 AM JST
        increment = end - start

* Wed 29 Oct 2014 06:22:15 AM JST
char
* Wed 29 Oct 2014 06:22:54 AM JST
('}', '')
* Wed 29 Oct 2014 06:22:57 AM JST
('{', '')
* Wed 29 Oct 2014 06:24:10 AM JST
phrase = phrase.replace('{', '')
* Wed 29 Oct 2014 06:26:20 AM JST

* Wed 29 Oct 2014 06:26:20 AM JST

* Wed 29 Oct 2014 06:26:20 AM JST
        return self

* Wed 29 Oct 2014 06:26:42 AM JST
self._line += increment
* Wed 29 Oct 2014 07:11:31 AM JST
MODMAP = {'+': Modifier(1), # shift
          '^': Modifier(4), # control
          '!': Modifier(8), # alt
          '#': Modifier(32), # hiper
          }

BEHAVE = {'press': 1,
          'down': 1,
          'release': 2,
          'up': 2,}

# TODO: (Atami) [2014/10/29]
BUTTON = {'lbutton': 0,
          'lclick': 0,
          'rbutton': 1,
          'rclick': 1,
          'mbutton': 2,
          'mclick': 2,
          'wheeldown': 3,
          'wheelup': 4,}

* Wed 29 Oct 2014 07:12:10 AM JST
def get_curly_token(phrase):
    r"""SUMMARY

    get_curly_token(value)

    @Arguments:
    - `value`:

    @Return:

    @Error:
    """
    if not isinstance(phrase, str):
        # TODO: (Atami) [2014/10/29]
        raise TypeError()
    lower = phrase.lower()
    # button
    if lower in BUTTON:
        return Token(TokenType.button, BUTTON[phrase])
    # behave
    if lower in BEHAVE:
        return Token(TokenType.behave, BEHAVE[lower])
    # repeat or keycode or geometry
    if phrase.isdigit():
        # keycode
        # TODO: (Atami) [2014/10/29]
        if not True:
            return Token(TokenType.keycode, int(phrase))
        # curly brace right as repeat
        return Token(TokenType.repeat, int(phrase))
    # unicode
    if phrase.startswith('uni'):
        # TODO: (Atami) [2014/10/29]
        return Token(TokenType.unichar, phrase.replace('uni', ''))
    # symbol name
    namesym = Namesym(phrase)
    if not namesym.isdefined():
        # TODO: (Atami) [2014/10/28]
        raise SyntaxError('"{}" not defined symbol name'.format(phrase))
    return Token(TokenType.symname, namesym)

* Wed 29 Oct 2014 07:13:12 AM JST
def get_char_token(char):
    r"""SUMMARY

    get_char_token(char)

    @Arguments:
    - `char`:

    @Return:

    @Error:
    """
    # Modifier
    token = MODMAP.get(char, None)
    if token is not None:
        return Token(TokenType.modifier, token)
    # Char
    return Token(TokenType.char, char)

* Wed 29 Oct 2014 07:13:46 AM JST
def get_char_token(char):
    r"""SUMMARY

    get_char_token(char)

    @Arguments:
    - `char`:

    @Return:

    @Error:
    """
    # Modifier
    token = MODMAP.get(char, None)
    if token is not None:
        return Token(TokenType.modifier, token)
    # Char
    return Token(TokenType.char, char)

* Wed 29 Oct 2014 07:13:52 AM JST
def get_token(phrase, incurly=False):
    r"""SUMMARY

    next_token()

    @Return:

    @Error:
    """
    # Curly brace {
    if incurly:
        return get_curly_token(phrase)
    return get_char_token(phrase)

* Wed 29 Oct 2014 07:24:34 AM JST

* Wed 29 Oct 2014 07:24:34 AM JST

* Wed 29 Oct 2014 07:24:34 AM JST
        self._incurly = False

* Wed 29 Oct 2014 07:25:25 AM JST

* Wed 29 Oct 2014 07:25:25 AM JST

* Wed 29 Oct 2014 07:25:26 AM JST
        self._incurly = False

* Wed 29 Oct 2014 08:00:47 AM JST
Token(TokenType.button, self.button[phrase])
* Wed 29 Oct 2014 08:14:13 AM JST
    behave = {'press': 1,
              'down': 1,
              'release': 2,
              'up': 2,}

    # TODO: (Atami) [2014/10/29]
    button = {'lbutton': 0,
              'lclick': 0,
              'rbutton': 1,
              'rclick': 1,
              'mbutton': 2,
              'mclick': 2,
              'wheeldown': 3,
              'wheelup': 4,}

* Wed 29 Oct 2014 08:31:53 AM JST
    def _skip_whitespace(self, index):
        r"""SUMMARY

        _skip_whitespace()

        @Return:

        @Error:
        """
        indx = index
        while self._line[indx] in whitespace:
            indx += 1
        return indx

    def _parse_curly(self, index):
        r"""SUMMARY

        _parse_curly()

        @Return:

        @Error:
        """
        indx = index
        while self._line[indx] not in ('}', ' '):
            indx += 1
        return indx

* Wed 29 Oct 2014 08:32:50 AM JST
StringPointer(self._replacer.replace(line))
* Wed 29 Oct 2014 08:32:58 AM JST
line
* Wed 29 Oct 2014 09:00:34 AM JST

* Wed 29 Oct 2014 09:00:36 AM JST
_parse_curly
* Wed 29 Oct 2014 09:20:42 AM JST
        if not isinstance(phrase, str):
            # TODO: (Atami) [2014/10/29]
            raise TypeError()
        lower = phrase.lower()
        # button
        if lower in self.button:
            return Token(TokenType.button, self.button[phrase])
        # behave
        if lower in self.behave:
            return Token(TokenType.behave, self.behave[lower])
        # repeat or keycode or geometry
        if phrase.isdigit():
            # keycode
            # TODO: (Atami) [2014/10/29]
            if not True:
                return Token(TokenType.keycode, int(phrase))
            # curly brace right as repeat
            return Token(TokenType.repeat, int(phrase))
        # unicode
        if phrase.startswith('uni'):
            # TODO: (Atami) [2014/10/29]
            return Token(TokenType.unichar, phrase.replace('uni', ''))
        # symbol name
        namesym = Namesym(phrase)
        if not namesym.isdefined():
            # TODO: (Atami) [2014/10/28]
            raise SyntaxError('"{}" not defined symbol name'.format(phrase))
        return Token(TokenType.symname, namesym)

* Wed 29 Oct 2014 10:30:41 AM JST
    def next_index(self, index):
        r"""SUMMARY

        _parse_curly()

        @Return:

        @Error:
        """
        indx = index
        while self._line[indx] not in ('}', ' '):
            indx += 1
        return indx

* Wed 29 Oct 2014 10:32:17 AM JST
None
* Wed 29 Oct 2014 04:28:19 PM JST
.split(' ')
* Wed 29 Oct 2014 04:28:20 PM JST

* Wed 29 Oct 2014 04:28:21 PM JST

* Wed 29 Oct 2014 04:28:21 PM JST
        self._line.remove('')

* Wed 29 Oct 2014 04:48:54 PM JST
Curly
* Wed 29 Oct 2014 11:45:32 PM JST
len(self._list) == 1
* Wed 29 Oct 2014 11:45:43 PM JST
 == 1
* Wed 29 Oct 2014 11:56:57 PM JST
self._list[self._index]
* Thu 30 Oct 2014 12:00:12 AM JST
_
* Thu 30 Oct 2014 12:12:34 AM JST
BEHAVE
* Thu 30 Oct 2014 12:16:48 AM JST
self.
* Thu 30 Oct 2014 12:17:08 AM JST
get_token
* Thu 30 Oct 2014 12:17:09 AM JST
self.get_token
* Thu 30 Oct 2014 12:36:52 AM JST
_tokentype
* Thu 30 Oct 2014 12:39:32 AM JST
from xsendkey.scanner import ButtonToken
b=ButtonToken(['10'])
b.get_token()

* Thu 30 Oct 2014 12:41:08 AM JST
b=ButtonToken(['10'])
* Thu 30 Oct 2014 12:43:10 AM JST
b=ButtonToken(['10'])
* Thu 30 Oct 2014 12:57:45 AM JST
    def hasnext(self, ):
        r"""SUMMARY

        hasnext()

        @Return:

        @Error:
        """
        return self._index <= len(self._list) - 1


* Thu 30 Oct 2014 12:58:17 AM JST
    def get_token(self, ):
        r"""SUMMARY

        get_token()

        @Return:

        @Error:
        """
        length = len(self._list)
        if 1 == length:
            return self.get_token1()
        if 2 == length:
            return self.get_token2()
        if 3 == length:
            return self.get_token3()
        raise StandardError()

    def __iter__(self):
        self._index = 0
        return self

    def next(self, ):
        if not self.hasnext():
            raise StopIteration()
        token = self.get_token()
        self._index += 1
        return token

* Thu 30 Oct 2014 12:59:04 AM JST
        token = self._list[self._index]
        if token in BEHAVE:
            return Token(TokenType.behave, BEHAVE[token])
        if token.isdigit():
            return Token(TokenType.repeat, int(token))

* Thu 30 Oct 2014 12:59:54 AM JST
from xsendkey.scanner import ButtonToken
* Thu 30 Oct 2014 01:00:07 AM JST
ButtonToken
* Thu 30 Oct 2014 01:00:20 AM JST
KeyCombination
* Thu 30 Oct 2014 01:26:20 AM JST
index
* Thu 30 Oct 2014 01:48:44 AM JST
line
* Thu 30 Oct 2014 01:51:06 AM JST
butto
* Thu 30 Oct 2014 01:51:17 AM JST
phrase
* Thu 30 Oct 2014 01:52:30 AM JST
button
* Thu 30 Oct 2014 01:52:31 AM JST
self.button
* Thu 30 Oct 2014 01:56:24 AM JST
self.
* Thu 30 Oct 2014 02:03:47 AM JST
phrase
* Thu 30 Oct 2014 02:05:43 AM JST
'')
* Thu 30 Oct 2014 02:05:49 AM JST
['', '', '']
* Thu 30 Oct 2014 02:09:35 AM JST
Code100
* Thu 30 Oct 2014 02:10:58 AM JST
.replace('Code', '')
* Thu 30 Oct 2014 02:11:01 AM JST

* Thu 30 Oct 2014 02:11:01 AM JST

* Thu 30 Oct 2014 02:11:01 AM JST
            val.replace('Code', '')

* Thu 30 Oct 2014 02:15:11 AM JST
class ButtonSubscan(object):
    r"""ButtonCombination

    ButtonToken is a object.
    Responsibility:
    """
    def __init__(self, list_, index=0):
        r"""

        @Arguments:
        - `list_`:
        - `index`:
        """
        self._list = list_
        self._index = index

    def hasnext(self, ):
        r"""SUMMARY

        hasnext()

        @Return:

        @Error:
        """
        return self._index <= len(self._list) - 1

    def get_token1(self, ):
        r"""SUMMARY

        get_token1()

        @Return:

        @Error:
        """

        token = self._list[self._index]
        if token in BEHAVE:
            return Token(TokenType.behave, BEHAVE[token])
        if token.isdigit():
            return Token(TokenType.repeat, int(token))
        # TODO: (Atami) [2014/10/30]
        raise StandardError()

    def get_token2(self, ):
        r"""SUMMARY

        get_token2()

        @Return:

        @Error:
        """
        if 0 == self._index:
            return Token(TokenType.geox, self._list[self._index])
        if 1 == self._index:
            return Token(TokenType.geoy, self._list[self._index])
        # TODO: (Atami) [2014/10/30]
        raise StandardError()

    def get_token3(self, ):
        r"""SUMMARY

        get_token3()

        @Return:

        @Error:
        """
        if self._index in (0, 1):
            return self.get_token2()
        if 2 == self._index:
            return self.get_token1()
        # TODO: (Atami) [2014/10/30]
        raise StandardError()

    def get_token(self, ):
        r"""SUMMARY

        get_token()

        @Return:

        @Error:
        """
        length = len(self._list)
        if 1 == length:
            return self.get_token1()
        if 2 == length:
            return self.get_token2()
        if 3 == length:
            return self.get_token3()
        raise StandardError()

    def __iter__(self):
        self._index = 0
        return self

    def next(self, ):
        if not self.hasnext():
            raise StopIteration()
        token = self.get_token()
        self._index += 1
        return token


class KeySubscan(object):
    r"""KeyCombination

    KeyCombination is a object.
    Responsibility:
    """
    def __init__(self, list_, index=0):
        r"""

        @Arguments:
        - `list_`:
        - `index`:
        """
        self._list = list_
        self._index = index

    def hasnext(self, ):
        r"""SUMMARY

        hasnext()

        @Return:

        @Error:
        """
        return self._index <= len(self._list) - 1

    def get_token1(self, ):
        r"""SUMMARY

        get_token1()

        @Return:

        @Error:
        """
        token = self._list[self._index]
        if token in BEHAVE:
            return Token(TokenType.behave, BEHAVE[token])
        if token.isdigit():
            return Token(TokenType.repeat, int(token))
        raise StandardError()

    def get_token(self, ):
        r"""SUMMARY

        get_token()

        @Return:

        @Error:
        """
        length = len(self._list)
        if 1 == length:
            return self.get_token1()
        raise StandardError()

    def __iter__(self):
        self._index = 0
        return self

    def next(self, ):
        if not self.hasnext():
            raise StopIteration()
        token = self.get_token()
        self._index += 1
        return token


class Subscanner(object):
    r"""CurlyScanner

    CurlyScanner is a object.
    Responsibility:
    """
    # TODO: (Atami) [2014/10/29]
    button = {'lbutton': 0,
              'lclick': 0,
              'rbutton': 1,
              'rclick': 1,
              'mbutton': 2,
              'mclick': 2,
              'wheeldown': 3,
              'wheelup': 4,}

    def __init__(self, line):
        r"""

        @Arguments:
        - `line`:
        """
        self._line = line
        self._sub = None

    def list_phrase(self, ):
        r"""SUMMARY

        list_phrase()

        @Return:

        @Error:
        """
        phrases = self._line.split(' ')
        while '' in phrases:
            phrases.remove('')
        return phrases

    def get_token(self, phrase):
        r"""SUMMARY

        get_token(phrase)

        @Arguments:
        - `phrase`:

        @Return:

        @Error:
        """
        lower = phrase.lower()
        # button
        if lower in self.button:
            return Token(TokenType.button, self.button[lower])
        # Code
        if phrase.startswith('Code'):
            val = phrase.replace('Code', '')
            if not val.isdigit():
                # TODO: (Atami) [2014/10/30]
                raise StandardError(val)
            return Token(TokenType.keycode, int(val))
        # unicode
        if phrase.startswith('Uni'):
            # TODO: (Atami) [2014/10/29]
            return Token(TokenType.unichar, phrase.replace('uni', ''))
        # symbol name
        namesym = Namesym(phrase)
        if not namesym.isdefined():
            # TODO: (Atami) [2014/10/28]
            raise SyntaxError('"{}" not defined symbol name'.format(phrase))
        return Token(TokenType.symname, namesym)

    def get_sub_token(self, type_, list_):
        r"""SUMMARY

        get_sub_token(type_)

        @Arguments:
        - `type_`:

        @Return:

        @Error:
        """
        if type_ == TokenType.button:
            return ButtonSubscan(list_)
        if type_ in (TokenType.char, TokenType.keycode, TokenType.symname,
                     TokenType.unichar, TokenType.unicode):
            return KeySubscan(list_)
        raise StandardError()

    def __iter__(self):
        self._sub = None
        return self

    def next(self, ):
        if not self._sub is None:
            return self._sub.next()
        lis = self.list_phrase()
        token = self.get_token(lis[0])
        self._sub = self.get_sub_token(token, lis[1:])
        return token



* Thu 30 Oct 2014 02:15:45 AM JST
BEHAVE = {'press': 1,
          'down': 1,
          'release': 2,
          'up': 2,}

# TODO: (Atami) [2014/10/29]
BUTTON = {'lbutton': 0,
          'lclick': 0,
          'rbutton': 1,
          'rclick': 1,
          'mbutton': 2,
          'mclick': 2,
          'wheeldown': 3,
          'wheelup': 4,}

* Thu 30 Oct 2014 02:16:21 AM JST
from xcb2.xobj.key import Modifier, Namesym
* Thu 30 Oct 2014 02:16:27 AM JST
Modifier, 
* Thu 30 Oct 2014 02:31:02 AM JST
class StringPointer(object):
    r"""StringPointer

    StringPointer is a object.
    Responsibility:
    """
    def __init__(self, string, index=0):
        r"""

        @Arguments:
        - `string`:
        - `index`:
        """
        self._string = string
        self._index = None
        self.setindex(index)

    def getpoint(self, ):
        r"""SUMMARY

        getpoint()

        @Return:

        @Error:
        """
        return self._string[self._index]

    def getremain(self, ):
        r"""SUMMARY

        getremain()

        @Return:

        @Error:
        """
        return self._string[self._index:]

    def getindex(self, ):
        r"""SUMMARY

        getindex()

        @Return:

        @Error:
        """
        return self._index

    def hasright(self, ):
        r"""SUMMARY

        hasright()

        @Return:

        @Error:
        """
        return self._index + 1 < len(self._string)

    def setindex(self, index):
        r"""SUMMARY

        setindex(index)

        @Arguments:
        - `index`:

        @Return:

        @Error:
        """
        if not isinstance(index, int):
            # TODO: (Atami) [2014/10/28]
            raise TypeError()
        if len(self._string) <= index or index < 0:
            # TODO: (Atami) [2014/10/28]
            raise StandardError()
        self._index = index

    def __nonzero__(self):
        return len(self._string) <= self._index + 1

    def __add__(self, other):
        if isinstance(other, int):
            return self.__class__(self._string, self._index + other)
        if isinstance(other, str):
            return self.__class__(self._string + other, self._index)
        # TODO: (Atami) [2014/10/28]
        raise TypeError()

    def __iadd__(self, other):
        if isinstance(other, int):
            self.setindex(self._index + other)
            return self
        if isinstance(other, str):
            self._string += other
            return self
        raise TypeError()

    def __sub__(self, other):
        if isinstance(other, int):
            return self.__class__(self._string, self._index - other)
        raise TypeError()

    def __isub__(self, other):
        if isinstance(other, int):
            self.setindex(self._index - other)
            return self
        raise TypeError()

    def __mul__(self, other):
        if isinstance(other, int):
            return self.__class__(self._string, self._index * other)
        raise TypeError()

    def __imul__(self, other):
        if isinstance(other, int):
            self.setindex(self._index * other)
            return self
        raise TypeError()

    def __div__(self, other):
        if isinstance(other, int):
            return self.__class__(self._string, self._index / other)
        raise TypeError()

    def __idiv__(self, other):
        if isinstance(other, int):
            self.setindex(self._index / other)
            return self

    def __lshift__(self, other):
        return self - other

    def __rshift__(self, other):
        return self + other

    def __ilshift__(self, other):
        self.setindex(self._index - other)
        return self

    def __irshift__(self, other):
        self.setindex(self._index + other)
        return self

    def __int__(self):
        return self._index

    def __long__(self):
        return long(int(self))

    def __len__(self):
        return len(self._string)

    def __getitem__(self, key):
        return self._string[key]

    def __setitem__(self, key, val):
        self._string[key] = val

    def __delitem__(self, key):
        del self._string[key]
        if len(self) < self._index:
            self._index -= 1

    def __contains__(self, elm):
        return elm in self._string

    def __iter__(self):
        return self

    def __repr__(self):
        return (
            '{0.__class__.__name__}("{0._string}", index={0._index}, on="{1}")'
            .format(self, self.getpoint()))

    def next(self, ):
        if len(self) < self._index:
            raise StopIteration()
        char = self._string[self._index]
        self._index += 1
        return char



* Thu 30 Oct 2014 02:31:41 AM JST
strpointer
* Thu 30 Oct 2014 06:33:54 AM JST
    def next_index(self, index):
        r"""SUMMARY

        _parse_curly()

        @Return:

        @Error:
        """
        indx = index
        while self._line[indx] not in ('}', ' '):
            indx += 1
        return indx


* Thu 30 Oct 2014 06:43:48 AM JST
return 
* Thu 30 Oct 2014 06:43:59 AM JST
if 
* Thu 30 Oct 2014 06:50:03 AM JST
start
* Thu 30 Oct 2014 06:52:01 AM JST
self.next_index(start)
* Thu 30 Oct 2014 06:52:04 AM JST

* Thu 30 Oct 2014 06:52:04 AM JST

* Thu 30 Oct 2014 06:52:04 AM JST
        end = 

* Thu 30 Oct 2014 06:55:26 AM JST
and
* Thu 30 Oct 2014 07:01:37 AM JST
subscanner.Subscanner(phrase)
* Thu 30 Oct 2014 07:02:14 AM JST

* Thu 30 Oct 2014 07:02:14 AM JST

* Thu 30 Oct 2014 07:02:14 AM JST
            increment += 1

* Thu 30 Oct 2014 07:03:08 AM JST
get_nex
* Thu 30 Oct 2014 07:03:24 AM JST
        start = self._line.getpoint()
        end = self.next_index(start)
        if end is None:
            raise SyntaxError()
        increment = end - start
        phrase = self._line[start:end]

* Thu 30 Oct 2014 07:08:19 AM JST
        if '{' in phrase:
            phrase = phrase.replace('{', '').replace('}', '')
            self._subscanner = iter(subscanner.Subscanner(phrase))
            self._line += increment + 1
            return self._subscanner.next()
        return self.get_char_token(phrase)

* Thu 30 Oct 2014 07:09:04 AM JST
from xsendkey import scanner
s=scanner.Scanner('hello')
list(iter(s))

* Thu 30 Oct 2014 07:09:20 AM JST
list(iter(s))
* Thu 30 Oct 2014 07:10:00 AM JST

* Thu 30 Oct 2014 07:10:00 AM JST

* Thu 30 Oct 2014 07:10:00 AM JST
        self._left = None

* Thu 30 Oct 2014 07:13:18 AM JST
list(iter(s))
* Thu 30 Oct 2014 07:21:55 AM JST
not 
* Thu 30 Oct 2014 07:22:11 AM JST
and 
* Thu 30 Oct 2014 07:22:13 AM JST
self._subscanner.hasnext()
* Thu 30 Oct 2014 07:25:30 AM JST
self.get_char_token(phrase)
* Thu 30 Oct 2014 07:39:33 AM JST
from xsendkey import scanner
s=scanner.Scanner('hello{k 100}world')
ss=iter(s)

* Thu 30 Oct 2014 07:40:14 AM JST

* Thu 30 Oct 2014 07:40:14 AM JST

* Thu 30 Oct 2014 07:40:14 AM JST
            yield self.get_char_token(self._line.getpoint())

* Thu 30 Oct 2014 07:46:02 AM JST
        start = index
        char = self._line[start]
        if '{' == char:
            while self._line[start] != '}':
                start += 1
            return start

* Thu 30 Oct 2014 07:46:18 AM JST

* Thu 30 Oct 2014 07:46:18 AM JST

* Thu 30 Oct 2014 07:46:18 AM JST
        if '{' == char:

* Thu 30 Oct 2014 07:46:24 AM JST

* Thu 30 Oct 2014 07:46:24 AM JST

* Thu 30 Oct 2014 07:46:24 AM JST
        char = self._line[start]

* Thu 30 Oct 2014 07:46:47 AM JST
start
* Thu 30 Oct 2014 07:46:51 AM JST
start
* Thu 30 Oct 2014 07:46:56 AM JST
start
* Thu 30 Oct 2014 07:46:59 AM JST
start
* Thu 30 Oct 2014 07:48:15 AM JST
start
* Thu 30 Oct 2014 08:00:51 AM JST
self.
* Thu 30 Oct 2014 08:01:17 AM JST
        if not self._line.hasright():
            raise StopIteration()

* Thu 30 Oct 2014 09:07:01 AM JST
        if len(self._string) <= index or index < 0:
            # TODO: (Atami) [2014/10/28]
            raise StandardError()

* Thu 30 Oct 2014 09:07:25 AM JST

* Thu 30 Oct 2014 09:07:25 AM JST

* Thu 30 Oct 2014 09:07:25 AM JST
            # TODO: (Atami) [2014/10/28]

* Thu 30 Oct 2014 09:07:28 AM JST
raise StandardError()
* Thu 30 Oct 2014 09:11:36 AM JST
from xsendkey import scanner
s=scanner.Scanner('he{k 100}wod')
ss=iter(s)

* Thu 30 Oct 2014 09:13:50 AM JST
s=scanner.Scanner('he{k 100}wod')
ss=iter(s)

* Thu 30 Oct 2014 09:18:43 AM JST

* Thu 30 Oct 2014 09:18:43 AM JST

* Thu 30 Oct 2014 09:18:43 AM JST
from string import whitespace

* Thu 30 Oct 2014 09:34:14 AM JST
Charsym
* Thu 30 Oct 2014 09:34:45 AM JST
from xcb2.xobj.key import Modifier, Namesym, Charsym
* Thu 30 Oct 2014 09:35:27 AM JST
Charsym(char).to_sym().to_key()
* Thu 30 Oct 2014 09:35:30 AM JST

* Thu 30 Oct 2014 09:35:30 AM JST

* Thu 30 Oct 2014 09:35:30 AM JST
        sym = 

* Thu 30 Oct 2014 09:37:02 AM JST
char
* Thu 30 Oct 2014 09:37:44 AM JST
from xsendkey import scanner
s=scanner.Scanner('he{k 100}wod')

* Thu 30 Oct 2014 09:37:54 AM JST
s=scanner.Scanner('he{k 100}wod')
* Thu 30 Oct 2014 09:39:06 AM JST
list(
* Thu 30 Oct 2014 09:40:08 AM JST
Charsym(char).to_sym().to_key()
* Thu 30 Oct 2014 09:42:02 AM JST
None # should raise NotImplementedError()
* Thu 30 Oct 2014 09:42:15 AM JST
Charsym(char).to_sym().to_key()
* Thu 30 Oct 2014 09:44:26 AM JST
self._list[self._index]
* Thu 30 Oct 2014 09:44:37 AM JST
self._list[self._index]
* Thu 30 Oct 2014 09:49:10 AM JST
Keycode
* Thu 30 Oct 2014 09:49:19 AM JST
unichar
* Thu 30 Oct 2014 09:49:24 AM JST
symname
* Thu 30 Oct 2014 09:49:30 AM JST
namesym
* Thu 30 Oct 2014 09:50:26 AM JST
char
* Thu 30 Oct 2014 09:54:41 AM JST
None # should raise NotImplementedError()
* Thu 30 Oct 2014 09:55:25 AM JST
keysym.Keysym.getmapping.get(display)
* Thu 30 Oct 2014 09:58:35 AM JST
index += 2
* Thu 30 Oct 2014 09:59:12 AM JST
1 << 3
* Thu 30 Oct 2014 10:00:32 AM JST
list(iter(scanner.Scanner('he+wod')))
* Thu 30 Oct 2014 10:01:02 AM JST

* Thu 30 Oct 2014 10:01:03 AM JST
modifier
* Thu 30 Oct 2014 10:01:17 AM JST

* Thu 30 Oct 2014 10:01:19 AM JST
modifier
* Thu 30 Oct 2014 10:01:24 AM JST
Modifier
* Thu 30 Oct 2014 10:01:55 AM JST
from xcb2.xobj.key import *
* Thu 30 Oct 2014 10:04:19 AM JST
int(val)
* Thu 30 Oct 2014 10:06:32 AM JST
None # should raise NotImplementedError()
* Thu 30 Oct 2014 10:07:16 AM JST

* Thu 30 Oct 2014 10:07:17 AM JST
xcode
* Thu 30 Oct 2014 10:07:22 AM JST

* Thu 30 Oct 2014 10:07:23 AM JST
KeyCode
* Thu 30 Oct 2014 10:07:25 AM JST
xcode
* Thu 30 Oct 2014 10:08:09 AM JST
Keysym, 
* Thu 30 Oct 2014 10:11:49 AM JST
underscore
* Thu 30 Oct 2014 10:23:13 AM JST
from xsendkey.scanner import Scanner

* Thu 30 Oct 2014 10:23:23 AM JST
list(iter(Scanner('h+e+{underscore 2}wo')))
* Thu 30 Oct 2014 10:23:32 AM JST
from xsendkey.scanner import Scanner
* Thu 30 Oct 2014 10:23:35 AM JST
list(iter(Scanner('h+e+{underscore 2}wo')))
* Fri 31 Oct 2014 02:16:35 AM JST

class Send:
    """Class Send
    """
    # Attributes:
    
    # Operations
    def send(self, param):
        """function send
        
        param: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def setbehave(self, behave):
        """function setbehave
        
        behave: int
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def setmodifier(self, modifier):
        """function setmodifier
        
        modifier: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Fri 31 Oct 2014 02:17:32 AM JST
return None # should 
* Fri 31 Oct 2014 02:17:37 AM JST
return None # should raise 
* Fri 31 Oct 2014 02:17:46 AM JST
return None # should 
* Fri 31 Oct 2014 02:18:42 AM JST
raise StandardError()
* Fri 31 Oct 2014 02:18:50 AM JST
raise 
* Fri 31 Oct 2014 02:19:20 AM JST
    """Class KeySend
    """
    # Attributes:
    __key = None  # () 
    
    # Operations
    def send(self, param):
        """function send
        
        param: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def setbehave(self, behave):
        """function setbehave
        
        behave: int
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def setmodifier(self, modifier):
        """function setmodifier
        
        modifier: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Fri 31 Oct 2014 02:19:22 AM JST
class KeySend(Send):
    """Class KeySend
    """
    # Attributes:
    __key = None  # () 
    
    # Operations
    def send(self, param):
        """function send
        
        param: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def setbehave(self, behave):
        """function setbehave
        
        behave: int
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def setmodifier(self, modifier):
        """function setmodifier
        
        modifier: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Fri 31 Oct 2014 02:19:46 AM JST
class ButtonSend(Send):
    """Class ButtonSend
    """
    # Attributes:
    __button = None  # () 
    
    # Operations
    def send(self, param):
        """function send
        
        param: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def setbehave(self, behave):
        """function setbehave
        
        behave: int
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def setmodifier(self, modifier):
        """function setmodifier
        
        modifier: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Fri 31 Oct 2014 02:20:09 AM JST
class SendRepeater(Send):
    """Class SendRepeater
    """
    # Attributes:
    __sender = None  # () 
    __times = None  # (int) 
    
    # Operations
    def send(self, param):
        """function send
        
        param: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def setbehave(self, behave):
        """function setbehave
        
        behave: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    
    def setmodifier(self, modifier):
        """function setmodifier
        
        modifier: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Fri 31 Oct 2014 02:40:41 AM JST

* Fri 31 Oct 2014 02:40:42 AM JST

* Fri 31 Oct 2014 02:40:42 AM JST
    __key = None  # ()

* Fri 31 Oct 2014 02:48:42 AM JST
Enum
* Fri 31 Oct 2014 02:52:19 AM JST
return None # should raise NotImplementedError()
* Fri 31 Oct 2014 03:42:47 AM JST
Sequence
* Fri 31 Oct 2014 03:44:13 AM JST
display[]
* Fri 31 Oct 2014 03:46:00 AM JST
                
* Fri 31 Oct 2014 03:46:47 AM JST
propagate, window, sequence_number, time, child, rootx, rooty,
                eventx, eventy, state, samescreen, display
* Fri 31 Oct 2014 03:47:06 AM JST
None
* Fri 31 Oct 2014 03:47:06 AM JST
return None
* Fri 31 Oct 2014 03:47:07 AM JST
return None # should raise NotImplementedError()
* Fri 31 Oct 2014 03:47:17 AM JST
return None # should raise NotImplementedError()
* Fri 31 Oct 2014 03:52:20 AM JST
Charsym(char).to_sym().to_key()
* Fri 31 Oct 2014 03:54:31 AM JST
Namesym(namesym).to_sym().to_key()
* Fri 31 Oct 2014 03:58:07 AM JST
return None # should raise NotImplementedError()
* Fri 31 Oct 2014 03:58:20 AM JST
return None # should raise NotImplementedError()
* Fri 31 Oct 2014 04:17:36 AM JST

* Fri 31 Oct 2014 04:17:36 AM JST

* Fri 31 Oct 2014 04:17:36 AM JST
    modifier  = ()

* Fri 31 Oct 2014 04:18:01 AM JST
4)
* Fri 31 Oct 2014 04:18:02 AM JST
T
* Fri 31 Oct 2014 04:18:03 AM JST
Modifier(T
* Fri 31 Oct 2014 04:18:10 AM JST
8)
* Fri 31 Oct 2014 04:18:10 AM JST
Modifier(8)
* Fri 31 Oct 2014 04:18:16 AM JST
32)
* Fri 31 Oct 2014 04:18:16 AM JST
Modifier(32)
* Fri 31 Oct 2014 04:18:28 AM JST
modifier
* Fri 31 Oct 2014 04:19:18 AM JST
TokenType.,
* Fri 31 Oct 2014 04:20:22 AM JST
from xsendkey.scanner import Scanner
list(iter(Scanner('h+e+{underscore 2}wo')))

* Fri 31 Oct 2014 04:21:31 AM JST
behave
* Fri 31 Oct 2014 04:22:30 AM JST
behave, 
* Fri 31 Oct 2014 04:22:31 AM JST
TokenType.behave, 
* Fri 31 Oct 2014 04:25:43 AM JST
from xsendkey.scanner import Scanner

* Fri 31 Oct 2014 04:25:44 AM JST
from xsendkey.scanner import Scanner
list(iter(Scanner('h+e+{underscore 2}wo')))

* Fri 31 Oct 2014 04:40:52 AM JST
list(iter(Scanner('h+e+{underscore 2}wo')))
* Fri 31 Oct 2014 04:40:59 AM JST
list(iter(
* Fri 31 Oct 2014 04:46:51 AM JST
Scanner
* Fri 31 Oct 2014 04:52:01 AM JST
sentinel
* Fri 31 Oct 2014 04:52:02 AM JST
iter((),
* Fri 31 Oct 2014 04:53:11 AM JST
None
* Fri 31 Oct 2014 04:53:12 AM JST
text=None
* Fri 31 Oct 2014 04:53:19 AM JST
iter()scanner.Scanner(text)
* Fri 31 Oct 2014 04:57:55 AM JST
class Expression:
    """Abstract class Expression
    """
    # Attributes:
    
    # Operations
    def interpret(self, context):
        """function interpret
        
        context: 
        
        returns 
        """
        raise NotImplementedError()
    


* Fri 31 Oct 2014 04:58:01 AM JST
a
* Fri 31 Oct 2014 04:58:01 AM JST
form a
* Fri 31 Oct 2014 04:58:15 AM JST
Attributes:
* Fri 31 Oct 2014 04:58:15 AM JST
Expression
    """
    # Attributes:
* Fri 31 Oct 2014 04:58:57 AM JST
class LeafExpression(Expression):
    """Class LeafExpression
    """
    # Attributes:
    __value = None  # () 
    
    # Operations


* Fri 31 Oct 2014 04:59:28 AM JST
class ButtonExpression(LeafExpression):
    """Class ButtonExpression
    """
    # Attributes:
    
    # Operations
    def interpret(self, context):
        """function interpret
        
        context: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Fri 31 Oct 2014 04:59:46 AM JST
class KeyExpression(LeafExpression):
    """Class KeyExpression
    """
    # Attributes:
    
    # Operations
    def interpret(self, context):
        """function interpret
        
        context: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Fri 31 Oct 2014 05:00:00 AM JST
None # should raise NotImplementedError()
* Fri 31 Oct 2014 05:00:11 AM JST
None # should raise NotImplementedError()
* Fri 31 Oct 2014 05:00:22 AM JST
class ButtonExpression(LeafExpression):
    """Class ButtonExpression
    """
    # Attributes:

    # Operations
    def interpret(self, context):
        """function interpret

        context:

        returns
        """
        return self._value


class KeyExpression(LeafExpression):
    """Class KeyExpression
    """
    # Operations
    def interpret(self, context):
        """function interpret

        context:

        returns
        """
        return self._value




* Fri 31 Oct 2014 05:00:54 AM JST
    def interpret(self, context):
        """function interpret

        context:

        returns
        """
        return self._value

* Fri 31 Oct 2014 05:01:17 AM JST
class NumExpression(LeafExpression):
    """Class NumExpression
    """
    # Attributes:
    
    # Operations
    def interpret(self, context):
        """function interpret
        
        context: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Fri 31 Oct 2014 05:05:11 AM JST
value
* Fri 31 Oct 2014 05:12:25 AM JST
return
* Fri 31 Oct 2014 05:13:42 AM JST
expression
* Fri 31 Oct 2014 05:17:52 AM JST
class NonTerminalExpression(Expression):
    """Class NonTerminalExpression
    """
    # Attributes:
    
    # Operations


* Fri 31 Oct 2014 05:18:33 AM JST
class ModifierExpression(NonTerminalExpression):
    """Class ModifierExpression
    """
    # Attributes:
    __keybutton = None  # () 
    
    # Operations


* Fri 31 Oct 2014 05:19:04 AM JST
class ShiftModifierExpression(ModifierExpression):
    """Class ShiftModifierExpression
    """
    # Attributes:
    
    # Operations
    def interpret(self, context):
        """function interpret
        
        context: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Fri 31 Oct 2014 05:19:14 AM JST

* Fri 31 Oct 2014 05:19:14 AM JST

* Fri 31 Oct 2014 05:19:14 AM JST
    # Attributes:

* Fri 31 Oct 2014 05:23:31 AM JST
None # should raise NotImplementedError()
* Fri 31 Oct 2014 05:24:53 AM JST
setcontrol()
* Fri 31 Oct 2014 05:25:48 AM JST
class HiperModifierExpression(ModifierExpression):
    """Class HiperModifierExpression
    """
    # Attributes:
    
    # Operations
    def interpret(self, context):
        """function interpret
        
        context: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Fri 31 Oct 2014 05:26:09 AM JST
        self._keybutton.setmodifier(1 << 2)
        return self._keybutton

* Fri 31 Oct 2014 05:27:50 AM JST
class AltModifierExpression(ModifierExpression):
    """Class AltModifierExpression
    """
    # Attributes:
    
    # Operations
    def interpret(self, context):
        """function interpret
        
        context: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Fri 31 Oct 2014 05:27:54 AM JST
        self._keybutton.setmodifier(1 << 5)
        return self._keybutton

* Fri 31 Oct 2014 05:28:24 AM JST
class AltModifierExpression(ModifierExpression):
    """Class AltModifierExpression
    """
    # Attributes:
    
    # Operations
    def interpret(self, context):
        """function interpret
        
        context: 
        
        returns 
        """
        self._keybutton.setmodifier(1 << 3)
        return self._keybutton
    

* Fri 31 Oct 2014 05:28:59 AM JST
class BehaveExpression(NonTerminalExpression):
    """Class BehaveExpression
    """
    # Attributes:
    __keybutton = None  # () 
    
    # Operations


* Fri 31 Oct 2014 05:29:37 AM JST
class PressBehaviorExpression(BehaveExpression):
    """Class PressBehaviorExpression
    """
    # Attributes:
    
    # Operations
    def interpret(self, context):
        """function interpret
        
        context: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Fri 31 Oct 2014 05:30:05 AM JST
None # should raise NotImplementedError()
* Fri 31 Oct 2014 05:30:13 AM JST
setbehave
* Fri 31 Oct 2014 05:30:27 AM JST
class ReleaseBehaviorExpression(BehaveExpression):
    """Class ReleaseBehaviorExpression
    """
    # Attributes:
    
    # Operations
    def interpret(self, context):
        """function interpret
        
        context: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Fri 31 Oct 2014 05:30:47 AM JST
None # should raise NotImplementedError()
* Fri 31 Oct 2014 05:31:05 AM JST
class MultiplyExpression(NonTerminalExpression):
    """Class MultiplyExpression
    """
    # Attributes:
    __keybutton = None  # () 
    __num = None  # () 
    
    # Operations
    def interpret(self, context):
        """function interpret
        
        context: 
        
        returns 
        """
        return None # should raise NotImplementedError()
    


* Fri 31 Oct 2014 05:32:03 AM JST
None # should raise NotImplementedError()
* Fri 31 Oct 2014 05:34:25 AM JST
push
* Fri 31 Oct 2014 05:35:01 AM JST
deque()
* Fri 31 Oct 2014 05:35:04 AM JST

* Fri 31 Oct 2014 05:35:04 AM JST

* Fri 31 Oct 2014 05:35:04 AM JST
from collections import deque

* Fri 31 Oct 2014 05:35:26 AM JST
clear()
* Fri 31 Oct 2014 05:39:28 AM JST
self._stack.append(exp.ShiftModifierExpression(self.term()))